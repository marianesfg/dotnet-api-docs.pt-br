<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="53185-101">Implementa a funcionalidade básica necessária por controles de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-101">Implements the basic functionality required by text controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-102">Essa classe implementa os principais recursos dos controles de manipulação de texto, como <xref:System.Windows.Forms.TextBox> e <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="53185-103">Isso inclui a seleção de texto, **área de transferência** funcionalidade, suporte a controle de várias linhas de texto e muitos eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-104">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar um multiline derivada <xref:System.Windows.Forms.TextBox> controle com barras de rolagem vertical.</span><span class="sxs-lookup"><span data-stu-id="53185-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="53185-105">Este exemplo também usa o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propriedades para tornar o controle de caixa de texto de várias linhas útil para criar documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="53185-106">Você normalmente não herda de <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="53185-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="53185-107">Para criar sua própria classe de controle de texto, herdam <see cref="T:System.Windows.Forms.TextBox" /> ou <see cref="T:System.Windows.Forms.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="53185-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span></span></para>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-108">Obtém ou define um valor que indica se pressionar a tecla TAB em um controle de caixa de texto multilinha digita um caractere TAB no controle em vez de mover o foco para o próximo controle na ordem de tabulação.</span><span class="sxs-lookup"><span data-stu-id="53185-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span></span></summary>
        <value>
          <span data-ttu-id="53185-109"><see langword="true" /> se os usuários puderem inserir tabulações em uma caixa de texto multilinha usando a tecla TAB; <see langword="false" /> se pressionar a tecla TAB mover o foco.</span><span class="sxs-lookup"><span data-stu-id="53185-109"><see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span></span> <span data-ttu-id="53185-110">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-110">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-111">O <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propriedade também deve ser `true` para obter um caractere de tabulação no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="53185-112">Se o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> está definida como `true`, o usuário deve pressionar CTRL + TAB para mover o foco para o próximo controle na ordem de tabulação.</span><span class="sxs-lookup"><span data-stu-id="53185-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-113">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar um multiline derivada <xref:System.Windows.Forms.TextBox> controle com barras de rolagem vertical.</span><span class="sxs-lookup"><span data-stu-id="53185-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="53185-114">Este exemplo também usa o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propriedades para tornar o controle de caixa de texto de várias linhas útil para criar documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-115">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-116">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-116">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-117">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-118">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="53185-119">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-120">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-121">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-122">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="53185-123">O texto a ser acrescentado ao conteúdo atual da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-123">The text to append to the current contents of the text box.</span></span></param>
        <summary><span data-ttu-id="53185-124">Acrescenta texto ao texto atual de uma caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-124">Appends text to the current text of a text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-125">Você pode usar esse método para adicionar o texto para o texto existente no controle em vez de usar o operador de concatenação (+) para concatenação de texto para o <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-126">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> método e o <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> para copiar o texto de um <xref:System.Windows.Forms.TextBox> para outro.</span><span class="sxs-lookup"><span data-stu-id="53185-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="53185-127">Este exemplo requer que dois <xref:System.Windows.Forms.TextBox> controles denominados `textBox1` e `textBox2`, foram adicionados a um formulário e que `textBox1` tem o texto atribuído à sua <xref:System.Windows.Forms.Control.Text%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-128">Obtém ou define um valor que indica se a altura do controle é ajustada automaticamente quando a fonte atribuída ao controle é alterada.</span><span class="sxs-lookup"><span data-stu-id="53185-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span></span></summary>
        <value>
          <span data-ttu-id="53185-129"><see langword="true" /> se a altura do controle é ajustada automaticamente quando a fonte é alterada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-129"><see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53185-130">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="53185-130">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-131">Quando você define o <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> propriedade para `true` para um <xref:System.Windows.Forms.TextBox>, quando o <xref:System.Windows.Forms.Control.Font%2A> alterações, o <xref:System.Windows.Forms.TextBox> expande ou contratos de <xref:System.Windows.Forms.Control.Height%2A> para acomodar o texto maior ou menor.</span><span class="sxs-lookup"><span data-stu-id="53185-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="53185-132">O <xref:System.Windows.Forms.Control.Width%2A> do <xref:System.Windows.Forms.TextBox> não é alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="53185-133">Se você quiser alterar o tamanho do controle, como o usuário insere o texto, você pode usar um <xref:System.Windows.Forms.RichTextBox> controlar e usar seu <xref:System.Windows.Forms.RichTextBox.ContentsResized> evento para alterar seu tamanho.</span><span class="sxs-lookup"><span data-stu-id="53185-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-134">Este exemplo presume que você tenha um formulário com duas caixas de texto, botões de dois e clique em eventos para cada um dos botões.</span><span class="sxs-lookup"><span data-stu-id="53185-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="53185-135">O exemplo demonstra o <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> propriedade definindo-a como `true` para uma caixa de texto e `false` para os outros.</span><span class="sxs-lookup"><span data-stu-id="53185-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="53185-136">Quando você clica em um botão de caixas de texto são preenchidas com um texto menor e, quando você clicar no botão outro caixas de texto são preenchidas com texto maior.</span><span class="sxs-lookup"><span data-stu-id="53185-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="53185-137">A caixa de texto que tem <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> definida como `true` expande de altura para acomodar o texto maior.</span><span class="sxs-lookup"><span data-stu-id="53185-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="53185-138">A largura não é alterada.</span><span class="sxs-lookup"><span data-stu-id="53185-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-139">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-139">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-140">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-141">Obtém ou define a cor da tela de fundo do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-141">Gets or sets the background color of the control.</span></span></summary>
        <value><span data-ttu-id="53185-142">Um <see cref="T:System.Drawing.Color" /> que representa a cor da tela de fundo do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-143">Você pode usar o <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propriedade para alterar a cor de plano de fundo do controle de texto são mescladas com o esquema de cores de formulários.</span><span class="sxs-lookup"><span data-stu-id="53185-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="53185-144">Para alterar a cor do texto dentro do controle, use o <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="53185-145">Ao definir o <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propriedade de seu controle de texto, certifique-se de que a cor escolhida não faz com que o texto do controle desapareça.</span><span class="sxs-lookup"><span data-stu-id="53185-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="53185-146">Por exemplo, se o <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> e <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propriedades são definidas como `Color.Black`, o texto dentro de seu controle de caixa de texto não será visível.</span><span class="sxs-lookup"><span data-stu-id="53185-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="53185-147">Essa propriedade pode ser sobre ridden se o <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> propriedade o <xref:System.Windows.Forms.TextBoxBase> é definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-148">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-148">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="53185-149">A imagem de plano de fundo para o objeto.</span><span class="sxs-lookup"><span data-stu-id="53185-149">The background image for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-150">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-151">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> muda.</span><span class="sxs-lookup"><span data-stu-id="53185-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span></span> <span data-ttu-id="53185-152">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-152">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-153">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-154">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-154">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="53185-155">Um dos valores de <see cref="T:System.Windows.Forms.ImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="53185-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-156">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-157">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> muda.</span><span class="sxs-lookup"><span data-stu-id="53185-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span></span> <span data-ttu-id="53185-158">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-158">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-159">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-160">Obtém ou define o tipo de borda do controle da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-160">Gets or sets the border type of the text box control.</span></span></summary>
        <value><span data-ttu-id="53185-161">Um <see cref="T:System.Windows.Forms.BorderStyle" /> que representa o tipo de borda do controle da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span></span> <span data-ttu-id="53185-162">O padrão é <see langword="Fixed3D" />.</span><span class="sxs-lookup"><span data-stu-id="53185-162">The default is <see langword="Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-163">Você pode usar o <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> propriedade para criar controles de estilo simples e sem borda, além de controle padrão tridimensional.</span><span class="sxs-lookup"><span data-stu-id="53185-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-164">A classe derivada, <xref:System.Windows.Forms.RichTextBox>, não oferece suporte a `BorderStyle.FixedSingle` estilo.</span><span class="sxs-lookup"><span data-stu-id="53185-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="53185-165">Esse estilo fará com que o <xref:System.Windows.Forms.BorderStyle> para usar o `BorderStyle.Fixed3D` de estilo em vez disso.</span><span class="sxs-lookup"><span data-stu-id="53185-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-166">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar uma caixa de texto que pode exibir texto usando 20 pontos com uma única borda corretamente derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="53185-167">Este exemplo usa o <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> propriedade para determinar a altura apropriada do controle depois da fonte e <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> foram atribuídos ao controle.</span><span class="sxs-lookup"><span data-stu-id="53185-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="53185-168">Um valor que não está dentro do intervalo de valores válidos para a enumeração foi atribuído à propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-169">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-170">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-170">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-171">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-172">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="53185-173">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-174">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-175">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-176">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-177">Obtém um valor que indica se a propriedade <see cref="P:System.Windows.Forms.Control.ImeMode" /> pode ser definida para um valor ativo para habilitar o suporte ao IME.</span><span class="sxs-lookup"><span data-stu-id="53185-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value>
          <span data-ttu-id="53185-178"><see langword="false" /> Se o <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> é de propriedade <see langword="true" /> ou se esse <see cref="T:System.Windows.Forms.TextBoxBase" /> classe está definida para usar uma máscara de senha caractere; caso contrário, <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="53185-178"><see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-179">Obtém um valor que indica se o usuário pode desfazer a operação anterior em um controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span></span></summary>
        <value>
          <span data-ttu-id="53185-180"><see langword="true" /> se o usuário puder desfazer a operação anterior executada em um controle de caixa de texto; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-180"><see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-181">Se esse método retornar `true`, você pode chamar o <xref:System.Windows.Forms.TextBoxBase.Undo%2A> método para desfazer a última operação em uma caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="53185-182">Você pode usar este método no <xref:System.Windows.Forms.MenuItem.Popup> eventos de um <xref:System.Windows.Forms.MenuItem>, ou no código que gerencia o estado dos botões em uma <xref:System.Windows.Forms.ToolBar> para habilitar ou desabilitar a capacidade de desfazer a operação anterior em um controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-183">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-184">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-185">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-186">Limpa todo o texto do controle da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-186">Clears all text from the text box control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-187">Você pode usar esse método para limpar o conteúdo do controle em vez de atribuir o <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="53185-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-188">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, um derivado da classe para criar um manipulador de eventos para o <xref:System.Windows.Forms.Control.TextChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="53185-189">O código no manipulador de eventos restringe os dados para números.</span><span class="sxs-lookup"><span data-stu-id="53185-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="53185-190">Depois que o texto tenha sido inserido no controle, o código determina se o texto inserido é um número.</span><span class="sxs-lookup"><span data-stu-id="53185-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="53185-191">Se o texto não é um número, o código apaga o texto do controle e um <xref:System.Windows.Forms.MessageBox> é exibido para alertar o usuário que apenas números são aceitos.</span><span class="sxs-lookup"><span data-stu-id="53185-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="53185-192">O exemplo requer que um `Boolean` variável chamada `flag` e um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` forem definidas fora desse método.</span><span class="sxs-lookup"><span data-stu-id="53185-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="53185-193">Este exemplo demonstra como usar uma variável de sinalizador para evitar um evento em cascata no <xref:System.Windows.Forms.Control.TextChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-194">Limpa as informações sobre a operação mais recente do buffer de desfazer da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-194">Clears information about the most recent operation from the undo buffer of the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-195">Você pode usar esse método para impedir que uma operação desfazer de repetição, com base no estado do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="53185-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-196">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-197">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-198">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-199">Ocorre ao clicar na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-199">Occurs when the text box is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-200">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-200">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-201">O exemplo de código a seguir demonstra como tratar o <xref:System.Windows.Forms.TextBoxBase.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="53185-202">Para executar o exemplo, cole o seguinte código em um formulário que contém um <xref:System.Windows.Forms.TextBox> controle denominado TextBox1.</span><span class="sxs-lookup"><span data-stu-id="53185-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="53185-203">Este exemplo requer que o método de manipulação de eventos foi associado a <xref:System.Windows.Forms.TextBoxBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-204">Copia a seleção atual na caixa de texto para a **Área de Transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-204">Copies the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-205">Você pode usar esse método, em vez de usar o <xref:System.Windows.Forms.Clipboard> classe, para copiar o texto na caixa de texto e colocá-lo a **área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-206">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-207">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-208">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-209">Cria um identificador para o controle.</span><span class="sxs-lookup"><span data-stu-id="53185-209">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="53185-210">para a operação com código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="53185-210">for operating with unmanaged code.</span></span> <span data-ttu-id="53185-211">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="53185-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-212">Obtém os parâmetros de criação necessários quando a alça de controle é criada.</span><span class="sxs-lookup"><span data-stu-id="53185-212">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="53185-213">Um <see cref="T:System.Windows.Forms.CreateParams" /> que contém os parâmetros de criação necessários quando a alça de controle é criada.</span><span class="sxs-lookup"><span data-stu-id="53185-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-214">Move a seleção atual na caixa de texto para a **Área de Transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-214">Moves the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-215">Esse método só recortar texto da caixa de texto se o texto é selecionado no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="53185-216">Você pode usar esse método, em vez de usar o <xref:System.Windows.Forms.Clipboard> classe, para copiar o texto na caixa de texto e movê-la para o **área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-217">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-218">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-219">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-220">Obtém ou define o cursor padrão para o controle.</span><span class="sxs-lookup"><span data-stu-id="53185-220">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="53185-221">Um objeto do tipo <see cref="T:System.Windows.Forms.Cursor" /> que representa o cursor padrão atual.</span><span class="sxs-lookup"><span data-stu-id="53185-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-222">Substituir <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> para configurar um cursor padrão para o seu controle.</span><span class="sxs-lookup"><span data-stu-id="53185-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="53185-223">Isso é mais eficiente do que a definição do cursor no construtor do controle e dá suporte automático para determinadas funções de designer relacionados ao cursor.</span><span class="sxs-lookup"><span data-stu-id="53185-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-224">Obtém o tamanho padrão do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-224">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="53185-225">O <see cref="T:System.Drawing.Size" /> padrão do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-226">Especifica que o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> é zero, para que nenhum caractere seja selecionado no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-227">Obtém ou define um valor que indica se o desenho de controle é feito em um buffer antes que o controle seja exibido.</span><span class="sxs-lookup"><span data-stu-id="53185-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span></span> <span data-ttu-id="53185-228">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-228">This property is not relevant for this class.</span></span></summary>
        <value>
          <span data-ttu-id="53185-229"><see langword="true" /> para implementar o buffer duplo no controle; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-229"><see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-230">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-231">Obtém ou define a cor de primeiro plano do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-231">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="53185-232">Um <see cref="T:System.Drawing.Color" /> que representa a cor de primeiro plano do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-233">Você pode usar o <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propriedade para alterar a cor do texto dentro do controle para coincidir com o texto de outros controles no formulário.</span><span class="sxs-lookup"><span data-stu-id="53185-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="53185-234">Você também pode usar essa propriedade para realçar uma caixa de texto específico que contém um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="53185-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="53185-235">Para alterar a cor de plano de fundo do controle, use o <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="53185-236">Ao definir o <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> propriedade de seu controle de texto, certifique-se de que a cor escolhida não faz com que o texto do controle desapareça.</span><span class="sxs-lookup"><span data-stu-id="53185-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="53185-237">Por exemplo, se o <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> e <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> propriedades são definidas como `Color.Black`, o texto dentro de seu controle de caixa de texto não será visível.</span><span class="sxs-lookup"><span data-stu-id="53185-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="53185-238">Essa propriedade pode ser sobre ridden se o <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> propriedade o <xref:System.Windows.Forms.TextBoxBase> é definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="53185-239">O local do qual o caractere mais próximo é buscado.</span><span class="sxs-lookup"><span data-stu-id="53185-239">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="53185-240">Recupera o caractere que está mais próximo do local especificado no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-240">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="53185-241">O caractere no local especificado.</span><span class="sxs-lookup"><span data-stu-id="53185-241">The character at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-242">Se o local especificado no `pt` parâmetro está fora da área cliente do controle, o primeiro caractere da cadeia de caracteres mais próximo para o ponto especificado em `pt` é retornado.</span><span class="sxs-lookup"><span data-stu-id="53185-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="53185-243">Você pode usar esse método para determinar quais caracteres estiverem próximos a um ponto específico dentro do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="53185-244">Você pode usar esse valor para executar operações no texto nesse local.</span><span class="sxs-lookup"><span data-stu-id="53185-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-245">Se o local especificado no `pt` parâmetro está localizado no lado direito da área cliente do controle, o último caractere da cadeia de caracteres mais próximo para o ponto especificado em `pt` é retornado.</span><span class="sxs-lookup"><span data-stu-id="53185-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="53185-246">O local a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="53185-246">The location to search.</span></span></param>
        <summary><span data-ttu-id="53185-247">Recupera o índice do caractere mais próximo ao local especificado.</span><span class="sxs-lookup"><span data-stu-id="53185-247">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="53185-248">O índice de caracteres baseado em zero no local especificado.</span><span class="sxs-lookup"><span data-stu-id="53185-248">The zero-based character index at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-249">Esse método retorna o índice do caractere mais próximo à posição especificada no `pt` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="53185-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="53185-250">O índice de caracteres é um índice com base em zero do texto no controle, incluindo espaços.</span><span class="sxs-lookup"><span data-stu-id="53185-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="53185-251">Você pode usar esse método para determinar onde o texto o usuário tem o mouse por passar o mouse coordenadas para esse método.</span><span class="sxs-lookup"><span data-stu-id="53185-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="53185-252">Isso pode ser útil se você quiser executar tarefas quando o usuário posicionar o ponteiro do mouse sobre uma palavra no texto do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="53185-253">Se o local especificado não está dentro do retângulo de cliente do controle, ou está além do último caractere no controle, o valor de retorno é o índice do último caractere.</span><span class="sxs-lookup"><span data-stu-id="53185-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="53185-254">A linha para a qual o índice de seu primeiro caractere deve ser obtido.</span><span class="sxs-lookup"><span data-stu-id="53185-254">The line for which to get the index of its first character.</span></span></param>
        <summary><span data-ttu-id="53185-255">Recupera o índice do primeiro caractere de uma determinada linha.</span><span class="sxs-lookup"><span data-stu-id="53185-255">Retrieves the index of the first character of a given line.</span></span></summary>
        <returns><span data-ttu-id="53185-256">O índice baseado em zero do primeiro caractere na linha especificada.</span><span class="sxs-lookup"><span data-stu-id="53185-256">The zero-based index of the first character in the specified line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-257">Numeração de linhas na caixa de texto começa em zero.</span><span class="sxs-lookup"><span data-stu-id="53185-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="53185-258">Se o `lineNumber` parâmetro for maior que a última linha na caixa de texto, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> retornará -1.</span><span class="sxs-lookup"><span data-stu-id="53185-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="53185-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> Retorna o primeiro índice de caracteres de uma linha física.</span><span class="sxs-lookup"><span data-stu-id="53185-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="53185-260">A linha física é a linha exibida, não na linha atribuída.</span><span class="sxs-lookup"><span data-stu-id="53185-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="53185-261">O número de linhas exibidas pode ser maior que o número de linhas atribuídas devido a quebra automática de linha.</span><span class="sxs-lookup"><span data-stu-id="53185-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="53185-262">Por exemplo, se você atribuir duas linhas longas para um <xref:System.Windows.Forms.RichTextBox> controle e defina <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> para `true`, as duas linhas de tempo atribuídas resultam em quatro físico (ou exibidas linhas).</span><span class="sxs-lookup"><span data-stu-id="53185-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="53185-263">O valor do parâmetro <paramref name="lineNumber" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="53185-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-264">Recupera o índice do primeiro caractere da linha atual.</span><span class="sxs-lookup"><span data-stu-id="53185-264">Retrieves the index of the first character of the current line.</span></span></summary>
        <returns><span data-ttu-id="53185-265">O índice de caracteres baseado em zero na linha atual.</span><span class="sxs-lookup"><span data-stu-id="53185-265">The zero-based character index in the current line.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="53185-266">A posição de índice do caractere a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="53185-266">The character index position to search.</span></span></param>
        <summary><span data-ttu-id="53185-267">Recupera o número de linha da posição de caractere especificada no texto do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-267">Retrieves the line number from the specified character position within the text of the control.</span></span></summary>
        <returns><span data-ttu-id="53185-268">O número de linha de base zero no qual o índice do caractere está localizado.</span><span class="sxs-lookup"><span data-stu-id="53185-268">The zero-based line number in which the character index is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-269">Esse método permite que você determine o número de linha com base no índice de caractere especificado no `index` parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="53185-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="53185-270">A primeira linha do texto no controle retorna o valor zero.</span><span class="sxs-lookup"><span data-stu-id="53185-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="53185-271">O <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> método retorna o número de linha física em que o caractere indexado está localizado dentro do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="53185-272">Por exemplo, se uma parte da primeira linha do texto na lógica de controle envolve para a próxima linha, o <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> método retornará 1 se o caractere no índice de caractere especificado foi quebrada para a segunda linha física.</span><span class="sxs-lookup"><span data-stu-id="53185-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="53185-273">Se <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> é definido como `false`, nenhuma parte da linha é quebrada para a próxima, e o método retorna 0 para o índice do caractere especificado.</span><span class="sxs-lookup"><span data-stu-id="53185-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="53185-274">Você pode usar esse método para determinar qual linha um índice de caracteres específica está localizado em.</span><span class="sxs-lookup"><span data-stu-id="53185-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="53185-275">Por exemplo, depois de chamar o <xref:System.Windows.Forms.RichTextBox.Find%2A> método para pesquisar texto, você pode obter o índice de caracteres onde os resultados da pesquisa são encontrados.</span><span class="sxs-lookup"><span data-stu-id="53185-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="53185-276">Você pode chamar esse método com o índice de caracteres retornado pelo <xref:System.Windows.Forms.RichTextBox.Find%2A> método para determinar qual linha o word foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="53185-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-277">Se o índice do caractere especificado no `index` parâmetro está além do número disponível de linhas contidas dentro do controle, o último número de linha é retornado.</span><span class="sxs-lookup"><span data-stu-id="53185-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="53185-278">O índice do caractere para o qual o local deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="53185-278">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="53185-279">Recupera o local dentro do controle no índice de caractere especificado.</span><span class="sxs-lookup"><span data-stu-id="53185-279">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="53185-280">O local do caractere especificado dentro do retângulo de cliente do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-280">The location of the specified character within the client rectangle of the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-281">Esse método permite que você determine onde um índice de caracteres específica está localizado no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="53185-282">Você pode usar esse método para executar tarefas como exibir informações de itens ou a Ajuda de menu de atalho para uma palavra no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="53185-283">Por exemplo, se você quiser exibir um menu de opções para o usuário quando o usuário clica em uma palavra de controle, você pode usar esse método para determinar a posição do word para exibir corretamente um <xref:System.Windows.Forms.ContextMenu> controle.</span><span class="sxs-lookup"><span data-stu-id="53185-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-284">Obtém ou define um valor que indica se o texto selecionado no controle de caixa de texto permanece realçado quando o controle perde o foco.</span><span class="sxs-lookup"><span data-stu-id="53185-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span></span></summary>
        <value>
          <span data-ttu-id="53185-285"><see langword="true" /> se o texto selecionado não aparecer realçado quando o controle de caixa de texto perde o foco. <see langword="false" /> se o texto selecionado permanecer realçado quando o controle de caixa de texto perde o foco.</span><span class="sxs-lookup"><span data-stu-id="53185-285"><see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span></span> <span data-ttu-id="53185-286">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="53185-286">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-287">Você pode usar essa propriedade para manter o texto realçado em um controle de caixa de texto enquanto outro formulário ou uma caixa de diálogo tem foco, como uma caixa de diálogo verificador ortográfico.</span><span class="sxs-lookup"><span data-stu-id="53185-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-288">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="53185-289">Para executar o exemplo, cole o código a seguir em um formulário.</span><span class="sxs-lookup"><span data-stu-id="53185-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="53185-290">Chamar o `InitializeTextBox` método no construtor do formulário ou `Load` método.</span><span class="sxs-lookup"><span data-stu-id="53185-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-291">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-292">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-292">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-293">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-294">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="53185-295">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-296">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-297">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-298">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-299">Obtém ou define o modo IME de um controle.</span><span class="sxs-lookup"><span data-stu-id="53185-299">Gets or sets the Input Method Editor (IME) mode of a control.</span></span></summary>
        <value><span data-ttu-id="53185-300">O modo do IME do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-300">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="53185-301">Um dos valores de Keys.</span><span class="sxs-lookup"><span data-stu-id="53185-301">One of the Keys value.</span></span></param>
        <summary><span data-ttu-id="53185-302">Determina se a chave especificada é uma chave de entrada ou uma chave especial que exige o pré-processamento.</span><span class="sxs-lookup"><span data-stu-id="53185-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns>
          <span data-ttu-id="53185-303"><see langword="true" /> se a chave especificada for uma chave de entrada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-303"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-304">O <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> método retorna `true` quando o `keyData` parâmetro inclui o <xref:System.Windows.Forms.Keys.Tab> valor e o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="53185-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Retorna `false` se `keyData` contém <xref:System.Windows.Forms.Keys.Tab> e <xref:System.Windows.Forms.Keys.Control>.</span><span class="sxs-lookup"><span data-stu-id="53185-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-306">Obtém ou define as linhas de texto em um controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-306">Gets or sets the lines of text in a text box control.</span></span></summary>
        <value><span data-ttu-id="53185-307">Uma matriz de cadeias de caracteres que contém o texto em um controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-307">An array of strings that contains the text in a text box control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-308">Cada elemento da matriz se torna uma linha de texto no controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="53185-309">Se o <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propriedade da caixa de texto está definida como `true` e um caractere de nova linha aparece no texto, o texto após o caractere de nova linha é adicionado a um novo elemento na matriz e exibido em uma linha separada.</span><span class="sxs-lookup"><span data-stu-id="53185-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-310">Por padrão, a coleção de linhas é uma cópia somente leitura das linhas de <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="53185-311">Para obter uma coleção gravável de linhas, use um código semelhante ao seguinte: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="53185-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-312">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, um derivado da classe para extrair todas as cadeias de caracteres de texto de um controle de caixa de texto de várias linhas e exibe-as usando o <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="53185-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="53185-313">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle tiver sido criado, nomeado `textBox1`, e que ele tenha sido preenchido com linhas de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-314">Obtém ou define o número máximo de caracteres que o usuário pode digitar ou colar no controle de caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span></summary>
        <value><span data-ttu-id="53185-315">O número de caracteres que podem ser inseridos no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-315">The number of characters that can be entered into the control.</span></span> <span data-ttu-id="53185-316">O padrão é 32767.</span><span class="sxs-lookup"><span data-stu-id="53185-316">The default is 32767.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-317">Você pode usar essa propriedade para restringir o comprimento do texto inserido no controle de valores como códigos postais e números de telefone ou restringir o comprimento do texto inserido quando os dados sejam inseridos em um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="53185-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="53185-318">Você pode limitar o texto inserido no controle para o comprimento máximo do campo correspondente no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="53185-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-319">No código, você pode definir o valor da <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade para um valor que tem um comprimento maior que o valor especificado pelo <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="53185-320">Essa propriedade afeta apenas o texto inserido no controle em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="53185-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-321">O exemplo de código a seguir usa a classe derivada, <xref:System.Windows.Forms.TextBox>, para criar uma caixa de texto que é usada para aceitar uma senha.</span><span class="sxs-lookup"><span data-stu-id="53185-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="53185-322">Este exemplo usa o <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> propriedade para alterar todos os caracteres digitados em maiusculas e <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> propriedade para restringir o comprimento da senha de oito caracteres.</span><span class="sxs-lookup"><span data-stu-id="53185-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="53185-323">Este exemplo também usa o <xref:System.Windows.Forms.TextBox.TextAlign%2A> propriedade para centralizar a senha na <xref:System.Windows.Forms.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="53185-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="53185-324">O valor atribuído à propriedade é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="53185-324">The value assigned to the property is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-325">Obtém ou define um valor que indica que o controle da caixa de texto foi modificado pelo usuário desde que o controle foi criado ou que seu conteúdo foi definido pela última vez.</span><span class="sxs-lookup"><span data-stu-id="53185-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span></span></summary>
        <value>
          <span data-ttu-id="53185-326"><see langword="true" /> se o conteúdo do controle foi modificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-326"><see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53185-327">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-327">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-328">Você pode usar essa propriedade para determinar se o usuário modificou o conteúdo da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="53185-329">Você também pode definir essa propriedade no código para indicar que foram feitas alterações para o controle de caixa de texto pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="53185-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="53185-330">Essa propriedade pode ser usada por métodos de salvamento de dados e de validação para determinar se foram feitas alterações em um controle de caixa de texto para que o conteúdo alterado pode ser validado ou salva.</span><span class="sxs-lookup"><span data-stu-id="53185-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="53185-331">Se você alterar o <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade programaticamente, o <xref:System.Windows.Forms.TextBoxBase.Modified%2A> propriedade reverte para `false`.</span><span class="sxs-lookup"><span data-stu-id="53185-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="53185-332">Isso não gera o <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-333">O seguinte exemplo de código usa o <xref:System.Windows.Forms.Control.TextChanged> evento para um <xref:System.Windows.Forms.TextBox>, um derivado da classe para determinar se o conteúdo do <xref:System.Windows.Forms.TextBox> controle foram alteradas desde que o controle foi preenchido com dados.</span><span class="sxs-lookup"><span data-stu-id="53185-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="53185-334">O exemplo usa uma cadeia de caracteres para armazenar o conteúdo original do controle e o compara com o conteúdo do <xref:System.Windows.Forms.TextBox> para determinar se o conteúdo foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="53185-335">Se o conteúdo foi alterado, o <xref:System.Windows.Forms.TextBoxBase.Modified%2A> está definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="53185-336">Caso contrário, ele será redefinido para `false`.</span><span class="sxs-lookup"><span data-stu-id="53185-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="53185-337">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado e que um `String` variável chamada `originalText` foi criado para armazenar o texto original para o <xref:System.Windows.Forms.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="53185-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-338">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-339">Se você alterar o <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade programaticamente, o <xref:System.Windows.Forms.TextBoxBase.Modified%2A> propriedade reverte para `false`.</span><span class="sxs-lookup"><span data-stu-id="53185-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="53185-340">Isso não gera o <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="53185-341">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-341">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-342">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-343">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="53185-344">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-345">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-346">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-347">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-348">Ocorre quando o usuário clica no controle com o mouse.</span><span class="sxs-lookup"><span data-stu-id="53185-348">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-349">O <xref:System.Windows.Forms.RichTextBox> controle não gera um <xref:System.Windows.Forms.TextBoxBase.Click> evento clica.</span><span class="sxs-lookup"><span data-stu-id="53185-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="53185-350">O <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento fornece o equivalente funcional.</span><span class="sxs-lookup"><span data-stu-id="53185-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="53185-351">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-351">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-352">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-353">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="53185-354">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-355">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-356">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-357">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.MouseClick> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-358">Obtém ou define um valor que indica se este é um controle de caixa de texto de várias linhas.</span><span class="sxs-lookup"><span data-stu-id="53185-358">Gets or sets a value indicating whether this is a multiline text box control.</span></span></summary>
        <value>
          <span data-ttu-id="53185-359"><see langword="true" /> se o controle for um controle de caixa de texto de várias linhas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-359"><see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53185-360">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-361">Uma caixa de texto de várias linhas permite exibir mais de uma linha de texto no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="53185-362">Se o <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> está definida como `true`, inserido na caixa de texto de várias linhas de texto é empacotado para a próxima linha no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="53185-363">Se o <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> está definida como `false`, inserido no controle da caixa de texto de várias linhas de texto será exibido na mesma linha até que um caractere de nova linha é inserido.</span><span class="sxs-lookup"><span data-stu-id="53185-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="53185-364">O exemplo a seguir pode ser usado como caracteres de nova linha:</span><span class="sxs-lookup"><span data-stu-id="53185-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="53185-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="53185-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="53185-366">vbCrLf (somente no Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="53185-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="53185-367">Você pode adicionar barras de rolagem para uma caixa de texto usando o <xref:System.Windows.Forms.TextBox.ScrollBars%2A> propriedade para exibir as barras de rolagem vertical e/ou horizontal.</span><span class="sxs-lookup"><span data-stu-id="53185-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="53185-368">Isso permite que o usuário rolar o texto que exceda as dimensões do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-369">Porque o valor padrão a <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> é de propriedade `false`, o tamanho padrão de um <xref:System.Windows.Forms.TextBox> estará de acordo com o tamanho da fonte mesmo que você redimensione o <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="53185-370">Para obter um tamanho consistente para o <xref:System.Windows.Forms.TextBox>, defina seu <xref:System.Windows.Forms.TextBox.Multiline%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-371">Em japonês sistemas operacionais, se o <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> está definida como `true`, a definição de <xref:System.Windows.Forms.TextBox.PasswordChar%2A> propriedade exibirá o texto da senha, assim, comprometer a segurança do sistema.</span><span class="sxs-lookup"><span data-stu-id="53185-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="53185-372">Portanto, em sistemas operacionais japonês, definir o <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propriedade `false` se você definir o <xref:System.Windows.Forms.TextBox.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-373">Essa propriedade é definida como `false` por padrão para todas as classes derivadas, com exceção do <xref:System.Windows.Forms.RichTextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="53185-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="53185-374">Para uma <xref:System.Windows.Forms.RichTextBox> controle, o <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> propriedade afeta se ou não o controle será redimensionado automaticamente, da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="53185-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="53185-375">Se <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> é definido como `true` e <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> é definido como `true`, <xref:System.Windows.Forms.RichTextBox> não será redimensionado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="53185-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="53185-376">Se <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> é definido como `true` e <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> é definido como `false`, <xref:System.Windows.Forms.RichTextBox> será redimensionado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="53185-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-377">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar um multiline derivada <xref:System.Windows.Forms.TextBox> controle com barras de rolagem vertical.</span><span class="sxs-lookup"><span data-stu-id="53185-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="53185-378">Este exemplo também usa o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propriedades para tornar o controle de caixa de texto de várias linhas útil para criar documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-379">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-380">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-380">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-381">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-382">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="53185-383">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-384">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-385">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-386">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-387">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-388">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-389">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-390">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-391">O <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-392">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-393">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-394">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-394">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-395">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-396">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-397">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-398">O <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-398">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-399">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-399">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-400">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-400">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-401">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-402">Aciona o evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-402">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-403">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-404">Aciona o evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</span><span class="sxs-lookup"><span data-stu-id="53185-404">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-405">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-406">Aciona o evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</span><span class="sxs-lookup"><span data-stu-id="53185-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-407">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-408">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-408">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-409">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-409">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-410">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-410">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-411">O <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-411">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-412">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-412">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-413">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-413">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-414">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-414">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-415">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-415">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-416">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-417">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-418">O <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-418">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-419">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-419">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-420">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-420">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="53185-421">Os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-421">The event data.</span></span></param>
        <summary><span data-ttu-id="53185-422">Aciona o evento <see cref="E:System.Windows.Forms.Control.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="53185-422">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-423">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-423">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-424">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-424">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-425">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-425">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-426">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-426">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-427">O <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-427">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-428">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-428">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-429">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-429">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-430">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-430">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-431">Esse método não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-431">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-432">Esse método não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-432">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-433">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-433">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-434">Aciona o evento <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-434">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-435">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="53185-435">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53185-436">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="53185-436">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="53185-437">O <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="53185-437">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53185-438">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-438">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-439">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span><span class="sxs-lookup"><span data-stu-id="53185-439">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53185-440">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="53185-440">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="53185-441">Aciona o evento <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="53185-441">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-442">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-442">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="53185-443">Um valor <see cref="T:System.Windows.Forms.Padding" />.</span><span class="sxs-lookup"><span data-stu-id="53185-443">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-444">Essa propriedade não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-444">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-445">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-445">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-446">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-446">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-447">Ocorre quando o controle é redesenhado.</span><span class="sxs-lookup"><span data-stu-id="53185-447">Occurs when the control is redrawn.</span></span> <span data-ttu-id="53185-448">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-448">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-449">Esse evento não é relevante para essa classe.</span><span class="sxs-lookup"><span data-stu-id="53185-449">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-450">Substitui a seleção atual na caixa de texto com o conteúdo da **Área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-450">Replaces the current selection in the text box with the contents of the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-451">O <xref:System.Windows.Forms.TextBoxBase.Paste%2A> método só será colar texto no controle se o texto atualmente armazenado na **área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-451">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-452">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-452">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-453">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-453">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-454">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-454">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="53185-455">para ler o **área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-455">for reading from the **Clipboard**.</span></span> <span data-ttu-id="53185-456">Enumeração associada: o <see langword="AllClipboard" /> valor <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span><span class="sxs-lookup"><span data-stu-id="53185-456">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-457">Obtém a altura preferencial de uma caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-457">Gets the preferred height for a text box.</span></span></summary>
        <value><span data-ttu-id="53185-458">A altura preferencial de uma caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-458">The preferred height of a text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-459">O tamanho retornado por essa propriedade é baseado no estilo de borda e a altura de fonte da caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-459">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="53185-460">Você pode usar essa propriedade para determinar o tamanho apropriado da caixa de texto para garantir que o texto seja exibido corretamente no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-460">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="53185-461">O valor retornado por essa propriedade é em pixels.</span><span class="sxs-lookup"><span data-stu-id="53185-461">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="53185-462">O valor de <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> representa a altura mínima da caixa de texto deve ter para exibir uma única linha de texto sem recorte o texto na parte superior ou inferior.</span><span class="sxs-lookup"><span data-stu-id="53185-462">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="53185-463">Esse valor é o mesmo se o <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> está definida como `true` ou `false`.</span><span class="sxs-lookup"><span data-stu-id="53185-463">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="53185-464">Um <see cref="T:System.Windows.Forms.Message" />, passado por referência, que representa a mensagem de janela a ser processada.</span><span class="sxs-lookup"><span data-stu-id="53185-464">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="53185-465">Um dos valores <see cref="T:System.Windows.Forms.Keys" /> que representa a tecla de atalho a ser processada.</span><span class="sxs-lookup"><span data-stu-id="53185-465">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="53185-466">Processa uma chave de comando.</span><span class="sxs-lookup"><span data-stu-id="53185-466">Processes a command key.</span></span></summary>
        <returns>
          <span data-ttu-id="53185-467"><see langword="true" /> se a chave de comando foi processada pelo controle; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-467"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="53185-468">para a operação com código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="53185-468">for operating with unmanaged code.</span></span> <span data-ttu-id="53185-469">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="53185-469">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="53185-470">Um dos valores <see cref="T:System.Windows.Forms.Keys" /> que representa a chave a ser processada.</span><span class="sxs-lookup"><span data-stu-id="53185-470">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="53185-471">Processa uma chave de caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="53185-471">Processes a dialog key.</span></span></summary>
        <returns>
          <span data-ttu-id="53185-472"><see langword="true" /> se a chave foi processada pelo controle; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-472"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-473">Obtém ou define um valor que indica se o texto na caixa de texto é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="53185-473">Gets or sets a value indicating whether text in the text box is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="53185-474"><see langword="true" /> se a caixa de texto for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-474"><see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53185-475">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-475">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-476">Quando essa propriedade é definida como `true`, o conteúdo do controle não pode ser alterado pelo usuário em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="53185-476">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="53185-477">Com essa propriedade definida como `true`, você ainda pode definir o valor de <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade no código.</span><span class="sxs-lookup"><span data-stu-id="53185-477">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="53185-478">Você pode usar esse recurso em vez de desabilitar o controle com o <xref:System.Windows.Forms.Control.Enabled%2A> propriedade para permitir que o conteúdo a ser copiado e dicas de ferramenta a ser mostrado.</span><span class="sxs-lookup"><span data-stu-id="53185-478">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-479">Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="53185-479">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-480">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="53185-480">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-481">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="53185-481">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="53185-482">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-482">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="53185-483">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="53185-483">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="53185-484">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="53185-484">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="53185-485">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.TextBoxBase>, como um <xref:System.Windows.Forms.TextBox> ou <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="53185-485">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="53185-486">Em seguida, nomear a instância `TextBoxBase1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="53185-486">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-487">Rola o conteúdo do controle para a posição atual do cursor.</span><span class="sxs-lookup"><span data-stu-id="53185-487">Scrolls the contents of the control to the current caret position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-488">Esse método permite rolar o conteúdo do controle até que o cursor está dentro da região visível do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-488">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="53185-489">Se o cursor estiver posicionado abaixo da região visível do controle, o <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> método irá rolar o conteúdo do controle até que o cursor está visível na parte inferior do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-489">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="53185-490">Se o cursor estiver posicionado acima a região visível do controle, esse método rola o conteúdo do controle até que o cursor está visível na parte superior do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-490">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="53185-491">Você pode usar esse método em uma caixa de texto de várias linhas para garantir que o ponto de entrada de texto atual está dentro da região visível do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-491">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-492">Este método não tem efeito se o controle não tem foco ou se o cursor já é posicionado na área visível do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-492">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-493">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Keys> enumeração e <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> método para garantir que o ponto de inserção de texto, representado pelo cursor, está sempre visível na tela após foi pressionada a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="53185-493">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="53185-494">Para executar o exemplo, cole o seguinte código em um formulário que contém um <xref:System.Windows.Forms.TextBox> controle chamado `TextBox1` e um <xref:System.Windows.Forms.RichTextBox> controle chamado `RichTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="53185-494">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="53185-495">Este exemplo requer que o método de manipulação de eventos foi associado a <xref:System.Windows.Forms.Control.KeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-495">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="53185-496">A posição do primeiro caractere na seleção de texto atual na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-496">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="53185-497">O número de caracteres a serem selecionados.</span><span class="sxs-lookup"><span data-stu-id="53185-497">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="53185-498">Seleciona um intervalo de texto na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-498">Selects a range of text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-499">Se você deseja definir a posição inicial para o primeiro caractere no texto do controle, defina o `start` parâmetro como 0.</span><span class="sxs-lookup"><span data-stu-id="53185-499">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="53185-500">Você pode usar esse método para selecionar uma subcadeia de caracteres de texto, por exemplo, ao pesquisar o texto do controle e informações de substituição.</span><span class="sxs-lookup"><span data-stu-id="53185-500">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-501">Programaticamente você pode mover o cursor dentro da caixa de texto, definindo o `start` parâmetro para a posição dentro da caixa de texto onde você deseja que o cursor para mover para e definir o `length` parâmetro para um valor de zero (0).</span><span class="sxs-lookup"><span data-stu-id="53185-501">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="53185-502">A caixa de texto deve ter o foco para que o cursor a ser movido.</span><span class="sxs-lookup"><span data-stu-id="53185-502">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-503">Se esse método for chamado sem parâmetros, um método alternativo é usado.</span><span class="sxs-lookup"><span data-stu-id="53185-503">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="53185-504">Esse método alternativo herda o <xref:System.Windows.Forms.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="53185-504">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="53185-505">Quando chamado, ele define o foco de entrada para o controle e seleciona o conteúdo do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-505">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="53185-506">Para obter mais informações, consulte o método <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="53185-506">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-507">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe, para pesquisar o conteúdo do controle para a instância da palavra "raposa" derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-507">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="53185-508">Se encontrado, o código seleciona a palavra de controle usando o <xref:System.Windows.Forms.TextBoxBase.Select%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53185-508">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="53185-509">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> chamado `textBox1` foi criado e seu <xref:System.Windows.Forms.TextBoxBase.Text%2A> propriedade contém a frase "a raposa marrom pula sobre o cão preguiçoso."</span><span class="sxs-lookup"><span data-stu-id="53185-509">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="53185-510">O valor do parâmetro <paramref name="start" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="53185-510">The value of the <paramref name="start" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-511">Seleciona todo o texto na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-511">Selects all text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-512">Esse método permite que você selecione todo o texto dentro do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-512">This method enables you to select all text within the control.</span></span> <span data-ttu-id="53185-513">Você pode usar esse método em conjunto com o <xref:System.Windows.Forms.TextBoxBase.Cut%2A> método, que exige o texto a ser selecionado no controle, para todo o conteúdo do controle de recortar e colá-los para o **na área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-513">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-514">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para determinar se o texto é selecionado no controle derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-514">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="53185-515">Se nenhum texto for selecionado, é feita uma chamada para o <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> método antes de copiar o conteúdo do controle para o **área de transferência**.</span><span class="sxs-lookup"><span data-stu-id="53185-515">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="53185-516">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> foi criado nomeada `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="53185-516">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-517">Obtém ou define um valor que indica o texto selecionado atualmente no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-517">Gets or sets a value indicating the currently selected text in the control.</span></span></summary>
        <value><span data-ttu-id="53185-518">Uma cadeia de caracteres que representa o texto selecionado no momento na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-518">A string that represents the currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-519">Você pode atribuir o texto para esta propriedade para alterar o texto atualmente selecionado na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-519">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="53185-520">Se nenhum texto atualmente selecionado na caixa de texto, essa propriedade retorna uma cadeia de caracteres de comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="53185-520">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-521">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-521">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-522">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-522">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-523">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-523">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-524">Obtém ou define o número de caracteres selecionados na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-524">Gets or sets the number of characters selected in the text box.</span></span></summary>
        <value><span data-ttu-id="53185-525">O número de caracteres selecionados na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-525">The number of characters selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-526">Você pode usar essa propriedade para determinar se todos os caracteres estão selecionados atualmente no controle de caixa de texto antes de executar operações no texto selecionado.</span><span class="sxs-lookup"><span data-stu-id="53185-526">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="53185-527">Quando o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade é definida como um valor maior que o número de caracteres dentro do texto do controle, o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade é definida para toda a duração do texto dentro do controle menos o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade (se nenhum valor for especificado para o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade).</span><span class="sxs-lookup"><span data-stu-id="53185-527">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-528">Programaticamente você pode mover o cursor dentro da caixa de texto, definindo o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> para a posição dentro da caixa de texto onde você deseja que o cursor para mover para e definir o <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade para um valor de zero (0).</span><span class="sxs-lookup"><span data-stu-id="53185-528">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="53185-529">A caixa de texto deve ter o foco para que o cursor a ser movido.</span><span class="sxs-lookup"><span data-stu-id="53185-529">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-530">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-530">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-531">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-531">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-532">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-532">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="53185-533">O valor atribuído é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="53185-533">The assigned value is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-534">Obtém ou define o ponto inicial do texto selecionado na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-534">Gets or sets the starting point of text selected in the text box.</span></span></summary>
        <value><span data-ttu-id="53185-535">A posição inicial do texto selecionado na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-535">The starting position of text selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-536">Se nenhum texto selecionado no controle, essa propriedade indica o ponto de inserção ou cursor para o novo texto.</span><span class="sxs-lookup"><span data-stu-id="53185-536">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="53185-537">Se você definir essa propriedade para um local além do comprimento do texto no controle, a posição inicial da seleção será colocada após o último caractere.</span><span class="sxs-lookup"><span data-stu-id="53185-537">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="53185-538">Quando o texto selecionado no controle de caixa de texto, a alteração dessa propriedade pode diminuir o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-538">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="53185-539">Se o texto restante no controle após a posição indicada pelo <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade é menor que o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade, o valor da <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade é reduzida automaticamente.</span><span class="sxs-lookup"><span data-stu-id="53185-539">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="53185-540">O valor de <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade nunca faz com que um aumento no <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-540">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="53185-541">Você pode mover programaticamente a seleção na caixa de texto, definindo o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> e <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="53185-541">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="53185-542">Programaticamente você pode mover o cursor dentro da caixa de texto, definindo o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> para a posição dentro da caixa de texto onde você deseja que o cursor para mover para e definir o <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> propriedade para um valor de zero (0).</span><span class="sxs-lookup"><span data-stu-id="53185-542">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="53185-543">O <xref:System.Windows.Forms.TextBox> devem ter o foco na ordem para a seleção ou o cursor a ser movido.</span><span class="sxs-lookup"><span data-stu-id="53185-543">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="53185-544">Você pode definir o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade de um <xref:System.Windows.Forms.TextBox> que é <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> , dando a ele o <xref:System.Windows.Forms.Control.Focus%2A> primeiro.</span><span class="sxs-lookup"><span data-stu-id="53185-544">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-545">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="53185-545">**Example 1**</span></span>  
  
 <span data-ttu-id="53185-546">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-546">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-547">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-547">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-548">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-548">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="53185-549">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="53185-549">**Example 2**</span></span>  
  
 <span data-ttu-id="53185-550">O exemplo a seguir define o <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> propriedade de um <xref:System.Windows.Forms.TextBox> que é <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> , dando a ele o <xref:System.Windows.Forms.Control.Focus%2A> primeiro.</span><span class="sxs-lookup"><span data-stu-id="53185-550">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="53185-551">O valor atribuído é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="53185-551">The assigned value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="53185-552">O novo valor da propriedade <see cref="P:System.Windows.Forms.Control.Left" /> do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-552">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="53185-553">O novo valor da propriedade <see cref="P:System.Windows.Forms.Control.Top" /> do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-553">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="53185-554">O novo valor da propriedade <see cref="P:System.Windows.Forms.Control.Width" /> do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-554">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="53185-555">Não usado.</span><span class="sxs-lookup"><span data-stu-id="53185-555">Not used.</span></span></param>
        <param name="specified"><span data-ttu-id="53185-556">Uma combinação bit a bit dos valores <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span><span class="sxs-lookup"><span data-stu-id="53185-556">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="53185-557">Define os limites especificados do controle <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="53185-557">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-558">O <xref:System.Windows.Forms.TextBoxBase> controlar usa o <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> propriedade para definir os limites se o <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> é de propriedade `true` e <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="53185-558">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="53185-559">Normalmente, os parâmetros que correspondem dos limites não são incluídos no `specified` parâmetro são transmitidas com seus valores atuais.</span><span class="sxs-lookup"><span data-stu-id="53185-559">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="53185-560">Por exemplo, o <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, ou o <xref:System.Drawing.Point.X%2A> ou <xref:System.Drawing.Point.Y%2A> propriedades do <xref:System.Windows.Forms.Control.Location%2A> propriedade pode ser passada com uma referência para a instância atual do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-560">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="53185-561">Contudo, todos os valores passados são mantidos e aplicados ao controle.</span><span class="sxs-lookup"><span data-stu-id="53185-561">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="53185-562">O `specified` parâmetro representa os elementos dos controles <xref:System.Windows.Forms.Control.Bounds%2A> alterado pelo seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="53185-562">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="53185-563">Por exemplo, se você alterar o <xref:System.Windows.Forms.Control.Size%2A> do controle, o `specified` valor do parâmetro é o `Size` valor <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="53185-563">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="53185-564">No entanto, se o <xref:System.Windows.Forms.Control.Size%2A> é ajustada em resposta ao <xref:System.Windows.Forms.Control.Dock%2A> propriedade sendo definida, o `specified` valor do parâmetro é o `None` valor <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="53185-564">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="53185-565">Ao substituir <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método para forçar os limites do controle para alterar.</span><span class="sxs-lookup"><span data-stu-id="53185-565">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="53185-566">Classes derivadas podem adicionar restrições de tamanho para o <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método.</span><span class="sxs-lookup"><span data-stu-id="53185-566">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-567">Obtém ou define um valor que indica se os atalhos definidos estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="53185-567">Gets or sets a value indicating whether the defined shortcuts are enabled.</span></span></summary>
        <value>
          <span data-ttu-id="53185-568"><see langword="true" /> para habilitar os atalhos, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53185-568"><see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-569">Use o <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> propriedade para habilitar ou desabilitar as seguintes combinações de teclas de atalho e o menu de atalho do controle:</span><span class="sxs-lookup"><span data-stu-id="53185-569">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</span></span>  
  
-   <span data-ttu-id="53185-570">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="53185-570">CTRL+Z</span></span>  
  
-   <span data-ttu-id="53185-571">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="53185-571">CTRL+E</span></span>  
  
-   <span data-ttu-id="53185-572">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="53185-572">CTRL+C</span></span>  
  
-   <span data-ttu-id="53185-573">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="53185-573">CTRL+Y</span></span>  
  
-   <span data-ttu-id="53185-574">CTRL+X</span><span class="sxs-lookup"><span data-stu-id="53185-574">CTRL+X</span></span>  
  
-   <span data-ttu-id="53185-575">CTRL+BACKSPACE</span><span class="sxs-lookup"><span data-stu-id="53185-575">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="53185-576">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="53185-576">CTRL+V</span></span>  
  
-   <span data-ttu-id="53185-577">CTRL + DELETE</span><span class="sxs-lookup"><span data-stu-id="53185-577">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="53185-578">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="53185-578">CTRL+A</span></span>  
  
-   <span data-ttu-id="53185-579">SHIFT + DELETE</span><span class="sxs-lookup"><span data-stu-id="53185-579">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="53185-580">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="53185-580">CTRL+L</span></span>  
  
-   <span data-ttu-id="53185-581">SHIFT + INSERT</span><span class="sxs-lookup"><span data-stu-id="53185-581">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="53185-582">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="53185-582">CTRL+R</span></span>  
  
 <span data-ttu-id="53185-583">Você pode substituir essa propriedade para especificar outras teclas de atalho.</span><span class="sxs-lookup"><span data-stu-id="53185-583">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-584">Obtém ou define o texto atual na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-584">Gets or sets the current text in the text box.</span></span></summary>
        <value><span data-ttu-id="53185-585">O texto exibido no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-585">The text displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-586">Para exibir várias linhas de texto em uma caixa de texto, defina o <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-586">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="53185-587">Para ler ou definir o texto de uma caixa de texto de várias linhas, use o <xref:System.Windows.Forms.TextBoxBase.Lines%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-587">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="53185-588">A quantidade de texto que pode ser inserido o <xref:System.Windows.Forms.RichTextBox> controle é limitado apenas pela memória disponível no sistema.</span><span class="sxs-lookup"><span data-stu-id="53185-588">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-589">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar um multiline derivada <xref:System.Windows.Forms.TextBox> controle com barras de rolagem vertical.</span><span class="sxs-lookup"><span data-stu-id="53185-589">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="53185-590">Este exemplo também usa o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propriedades para tornar o controle de caixa de texto de várias linhas útil para criar documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-590">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-591">Obtém o comprimento do texto no controle.</span><span class="sxs-lookup"><span data-stu-id="53185-591">Gets the length of text in the control.</span></span></summary>
        <value><span data-ttu-id="53185-592">O número de caracteres contidos no texto do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-592">The number of characters contained in the text of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-593">Você pode usar essa propriedade para determinar o número de caracteres em uma cadeia de caracteres para tarefas, como pesquisar cadeias de caracteres específicas do texto dentro do texto do controle, onde os dados de conhecimento do número total de caracteres é necessária.</span><span class="sxs-lookup"><span data-stu-id="53185-593">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-594">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> método e o <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> para copiar o texto de um <xref:System.Windows.Forms.TextBox> para outro.</span><span class="sxs-lookup"><span data-stu-id="53185-594">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="53185-595">Este exemplo requer que dois <xref:System.Windows.Forms.TextBox> controles denominados `textBox1` e `textBox2`, foram adicionados a um formulário e que `textBox1` tem o texto atribuído à sua <xref:System.Windows.Forms.Control.Text%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-595">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-596">Retorna uma cadeia de caracteres que representa o controle <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="53185-596">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <returns><span data-ttu-id="53185-597">Uma cadeia de caracteres que representa o <see cref="T:System.Windows.Forms.TextBoxBase" /> atual.</span><span class="sxs-lookup"><span data-stu-id="53185-597">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="53185-598">A cadeia de caracteres inclui o tipo e a propriedade <see cref="T:System.Windows.Forms.TextBoxBase" /> do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-598">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53185-599">Desfaz a última operação de edição na caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-599">Undoes the last edit operation in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-600">Esse método irá desfazer a última **área de transferência** ou texto alterar operação executada no controle de caixa de texto, se o <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> propriedade retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="53185-600">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-601">O <xref:System.Windows.Forms.TextBoxBase.Undo%2A> método não funciona com o <xref:System.Windows.Forms.Control.KeyPress> ou <xref:System.Windows.Forms.Control.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="53185-601">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-602">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="53185-602">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="53185-603">Ele fornece <xref:System.Windows.Forms.MenuItem.Click> manipuladores de eventos para <xref:System.Windows.Forms.MenuItem> objetos executarem recortar, copiar, colar e operações de desfazer.</span><span class="sxs-lookup"><span data-stu-id="53185-603">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="53185-604">Este exemplo requer que um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1` foi criado.</span><span class="sxs-lookup"><span data-stu-id="53185-604">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="53185-605">O <see cref="T:System.Windows.Forms.Message" /> do Windows a ser processado.</span><span class="sxs-lookup"><span data-stu-id="53185-605">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="53185-606">Processa mensagens do Windows.</span><span class="sxs-lookup"><span data-stu-id="53185-606">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53185-607">Indica se um controle de caixa de texto de várias linhas automaticamente quebra o texto para o início da próxima linha, quando necessário.</span><span class="sxs-lookup"><span data-stu-id="53185-607">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span></span></summary>
        <value>
          <span data-ttu-id="53185-608"><see langword="true" /> se o controle de caixa de texto de várias linhas quebra o texto; <see langword="false" /> se o controle de caixa de texto automaticamente rolar horizontalmente quando o usuário digitar além da borda direita do controle.</span><span class="sxs-lookup"><span data-stu-id="53185-608"><see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span></span> <span data-ttu-id="53185-609">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="53185-609">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53185-610">Se essa propriedade é definida como `true`, barras de rolagem horizontal não são exibidas, independentemente do <xref:System.Windows.Forms.TextBox.ScrollBars%2A> configuração de propriedade.</span><span class="sxs-lookup"><span data-stu-id="53185-610">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="53185-611">Na classe derivada, <xref:System.Windows.Forms.TextBox>, texto dentro do controle será ajustado sempre, independentemente da configuração de propriedade dessa propriedade, a menos que o <xref:System.Windows.Forms.TextBox.TextAlign%2A> está definida como `HorizontalAlignment.Left`.</span><span class="sxs-lookup"><span data-stu-id="53185-611">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53185-612">O seguinte exemplo de código usa <xref:System.Windows.Forms.TextBox>, uma classe para criar um multiline derivada <xref:System.Windows.Forms.TextBox> controle com barras de rolagem vertical.</span><span class="sxs-lookup"><span data-stu-id="53185-612">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="53185-613">Este exemplo também usa o <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, e <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> propriedades para tornar o controle de caixa de texto de várias linhas útil para criar documentos de texto.</span><span class="sxs-lookup"><span data-stu-id="53185-613">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>