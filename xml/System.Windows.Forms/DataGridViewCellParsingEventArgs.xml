<Type Name="DataGridViewCellParsingEventArgs" FullName="System.Windows.Forms.DataGridViewCellParsingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a00f2b86e7e4b8dd869ee91f12c740fec5431a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellParsingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellParsingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellParsingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8c0a8-101">Fornece dados para o evento <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> de um controle <see cref="T:System.Windows.Forms.DataGridView" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c0a8-101">Provides data for the <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> event of a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c0a8-102">Manipular o <xref:System.Windows.Forms.DataGridView.CellParsing> eventos para fornecer conversão de valor personalizado de um valor especificado pelo usuário para um valor no tipo especificado pela célula <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-102">Handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event to provide custom value conversion from a user-specified value to a value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="8c0a8-103">Quando você processa o <xref:System.Windows.Forms.DataGridView.CellParsing> eventos, você pode converter o valor ou você pode personalizar a conversão padrão.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-103">When you handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event, you can convert the value yourself or you can customize the default conversion.</span></span> <span data-ttu-id="8c0a8-104">Por exemplo, você pode converter o valor por conta própria usando a célula <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> método com conversores de tipo de sua escolha.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-104">For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing.</span></span> <span data-ttu-id="8c0a8-105">Como alternativa, você pode permitir que o tipo de padrão conversores de analisar o valor, mas modificar o <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, e <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propriedades do objeto retornado pelo <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> propriedade, que é inicializada usando a célula <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-105">Alternately, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.</span></span>  
  
 <span data-ttu-id="8c0a8-106">Quando você converte o valor por conta própria, substitua o valor inicial, formatado do <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> propriedade com o valor convertido no tipo especificado pela célula <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-106">When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span> <span data-ttu-id="8c0a8-107">Para indicar que nenhuma outra análise é necessário, defina o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-107">To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="8c0a8-108">Quando o manipulador de eventos é concluída, se o <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> é `null` ou não é do tipo correto, ou o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> é de propriedade `false`, o <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> é analisado usando a célula <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> método com conversores de tipo padrão.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-108">When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters.</span></span> <span data-ttu-id="8c0a8-109">A implementação padrão desse método analisa o valor usando o <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, e <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propriedades do estilo de célula passado.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-109">The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in.</span></span> <span data-ttu-id="8c0a8-110">Se o valor não é igual a <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, o valor é analisado usando o <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propriedade e conversores de tipo transmitido.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-110">If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.</span></span>  
  
 <span data-ttu-id="8c0a8-111">Para personalizar a conversão de um valor de célula em um valor formatado para exibição, manipular o <xref:System.Windows.Forms.DataGridView.CellFormatting> evento.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-111">To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.</span></span>  
  
 <span data-ttu-id="8c0a8-112">Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="8c0a8-112">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c0a8-113">O exemplo de código a seguir demonstra como usar <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> para verificar a validade de entradas de data.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-113">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> to check the validity of date entries.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 rowIndex, int32 columnIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rowIndex As Integer, columnIndex As Integer, value As Object, desiredType As Type, inheritedCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellParsingEventArgs(int rowIndex, int columnIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="8c0a8-114">O índice da linha da célula que foi alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-114">The row index of the cell that was changed.</span>
          </span>
        </param>
        <param name="columnIndex">
          <span data-ttu-id="8c0a8-115">O índice da coluna da célula que foi alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-115">The column index of the cell that was changed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8c0a8-116">O novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-116">The new value.</span>
          </span>
        </param>
        <param name="desiredType">
          <span data-ttu-id="8c0a8-117">O tipo do novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-117">The type of the new value.</span>
          </span>
        </param>
        <param name="inheritedCellStyle">
          <span data-ttu-id="8c0a8-118">O estilo aplicado à célula que foi alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-118">The style applied to the cell that was changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c0a8-119">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c0a8-120">Obtém o índice da coluna dos dados de célula que requerem análise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-120">Gets the column index of the cell data that requires parsing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c0a8-121">O índice da coluna da célula que foi alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-121">The column index of the cell that was changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c0a8-122">Use o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> propriedade para obter um índice para o <xref:System.Windows.Forms.DataGridView.Columns%2A> propriedade de um <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-122">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c0a8-123">O exemplo de código a seguir demonstra como usar <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> para descobrir se a célula alterada está na coluna de data.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-123">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> to discover if the changed cell is in the date column.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
    <Member MemberName="InheritedCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritedCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c0a8-124">Obtém ou define o estilo aplicado à célula editada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-124">Gets or sets the style applied to the edited cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c0a8-125">Um <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> que representa o estilo atual da célula que está sendo editado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-125">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the current style of the cell being edited.</span>
          </span>
          <span data-ttu-id="8c0a8-126">O valor padrão é o valor da célula <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-126">The default value is the value of the cell <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c0a8-127">Você pode usar essa propriedade para determinar a formatação em vigor para a célula.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-127">You can use this property to determine the formatting in effect for the cell.</span></span> <span data-ttu-id="8c0a8-128">A definição dessa propriedade ou alterar as propriedades do objeto retornado por essa propriedade não tem nenhum efeito a menos que o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> é `false` quando o manipulador de eventos será encerrado.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-128">Setting this property or changing the properties of the object that this property returns has no effect unless the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> is `false` when the event handler exits.</span></span> <span data-ttu-id="8c0a8-129">Nesse caso, o <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, e <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> propriedades do estilo de célula são usadas para analisar o valor da célula.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-129">In this case, the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style are used to parse the cell value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c0a8-130">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-130">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8c0a8-131">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-131">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8c0a8-132">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-132">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8c0a8-133">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-133">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8c0a8-134">Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.DataGridView> chamado `DataGridView1`.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-134">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="8c0a8-135">Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-135">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ParsingApplied">
      <MemberSignature Language="C#" Value="public bool ParsingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParsingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ParsingApplied { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c0a8-136">Obtém ou define um valor que indica se o valor da célula foi analisado com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-136">Gets or sets a value indicating whether a cell's value has been successfully parsed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c0a8-137">
            <see langword="true" /> Se o valor da célula foi analisado com êxito. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-137">
              <see langword="true" /> if the cell's value has been successfully parsed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8c0a8-138">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c0a8-139">Um <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> define o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> propriedade para indicar se o novo valor de célula foi analisado com êxito e nenhuma conversão adicional é necessária.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-139">A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> sets the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property to indicate whether the new cell value was successfully parsed and no further conversion is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c0a8-140">O seguinte exemplo de código define <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> para `true` quando o valor da célula é analisado com êxito.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-140">The following code example sets <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> to `true` when the cell's value is successfully parsed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8c0a8-141">Obtém o índice da linha da célula que requer análise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-141">Gets the row index of the cell that requires parsing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8c0a8-142">O índice da linha da célula que foi alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c0a8-142">The row index of the cell that was changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c0a8-143">Use o <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> propriedade para obter um índice para o <xref:System.Windows.Forms.DataGridView.Rows%2A> propriedade de um <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-143">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Rows%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c0a8-144">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8c0a8-145">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8c0a8-146">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-146">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8c0a8-147">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8c0a8-148">Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.DataGridView> chamado `DataGridView1`.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-148">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="8c0a8-149">Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="8c0a8-149">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
  </Members>
</Type>