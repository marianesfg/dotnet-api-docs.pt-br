<Type Name="Button" FullName="System.Windows.Forms.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aaf37d1cd7db9426c24f3a80683816254b7d419b" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659166" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Forms.ButtonBase, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Windows.Forms.ButtonBase implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Forms::ButtonBase, System::Windows::Forms::IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5e4f2-101">Representa um controle de botão do Windows.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e4f2-101">Represents a Windows button control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-102">Um <xref:System.Windows.Forms.Button> pode ser clicado, usando o mouse, a tecla ENTER ou a barra de espaços, se o botão tem foco.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-102">A <xref:System.Windows.Forms.Button> can be clicked by using the mouse, ENTER key, or SPACEBAR if the button has focus.</span></span>  
  
 <span data-ttu-id="5e4f2-103">Definir o <xref:System.Windows.Forms.Form.AcceptButton%2A> ou <xref:System.Windows.Forms.Form.CancelButton%2A> propriedade de um <xref:System.Windows.Forms.Form> para permitir que os usuários cliquem em um botão pressionando as teclas ENTER ou ESC, mesmo se o botão não tem o foco.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-103">Set the <xref:System.Windows.Forms.Form.AcceptButton%2A> or <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form> to allow users to click a button by pressing the ENTER or ESC keys even if the button does not have focus.</span></span> <span data-ttu-id="5e4f2-104">Isso permite que o formulário o comportamento de uma caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-104">This gives the form the behavior of a dialog box.</span></span>  
  
 <span data-ttu-id="5e4f2-105">Quando você exibe um formulário usando o <xref:System.Windows.Forms.Form.ShowDialog%2A> método, você pode usar o <xref:System.Windows.Forms.Button.DialogResult%2A> propriedade de um botão para especificar o valor de retorno <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-105">When you display a form using the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, you can use the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a button to specify the return value of <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="5e4f2-106">Você pode alterar a aparência do botão.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-106">You can change the button's appearance.</span></span> <span data-ttu-id="5e4f2-107">Por exemplo, para que ela simples para uma aparência da Web, defina o <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> propriedade <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-107">For example, to make it appear flat for a Web look, set the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property to <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e4f2-108">O <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> propriedade também pode ser definida como <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, que aparece simples até que o ponteiro do mouse passa sobre o botão; em seguida, no botão assume a aparência de botão padrão do Windows.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-108">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property can also be set to <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, which appears flat until the mouse pointer passes over the button; then the button takes on the standard Windows button appearance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e4f2-109">Se o controle que tem foco aceita e processa o pressionamento da tecla ENTER, o <xref:System.Windows.Forms.Button> não processá-la.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-109">If the control that has focus accepts and processes the ENTER key press, the <xref:System.Windows.Forms.Button> does not process it.</span></span> <span data-ttu-id="5e4f2-110">Por exemplo, se um multiline <xref:System.Windows.Forms.TextBox> ou outro botão tem foco, que o controle processe o pressionamento da tecla ENTER, em vez de no botão aceitar.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-110">For example, if a multiline <xref:System.Windows.Forms.TextBox> or another button has focus, that control processes the ENTER key press instead of the accept button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-111">O exemplo de código a seguir cria um <xref:System.Windows.Forms.Button>, define seu <xref:System.Windows.Forms.Button.DialogResult%2A> propriedade <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>e adiciona-o a um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-111">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.IButtonControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-112">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Button" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-113">Por padrão o <xref:System.Windows.Forms.Button> não exibe nenhuma legenda.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-113">By default the <xref:System.Windows.Forms.Button> displays no caption.</span></span> <span data-ttu-id="5e4f2-114">Para especificar o texto da legenda, defina o <xref:System.Windows.Forms.Control.Text%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-114">To specify the caption text, set the <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-115">O exemplo de código a seguir cria um <xref:System.Windows.Forms.Button>, define seu <xref:System.Windows.Forms.Button.DialogResult%2A> propriedade para o `OK` valor <xref:System.Windows.Forms.DialogResult>e adiciona-o a um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-115">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to the `OK` value of <xref:System.Windows.Forms.DialogResult>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-116">Obtém ou define o modo pelo qual o <see cref="T:System.Windows.Forms.Button" /> é redimensionado automaticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-116">Gets or sets the mode by which the <see cref="T:System.Windows.Forms.Button" /> automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e4f2-117">Um dos valores de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-117">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span>
          </span>
          <span data-ttu-id="5e4f2-118">O valor padrão é <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-118">The default value is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-119">Obtém um <see cref="T:System.Windows.Forms.CreateParams" /> na classe base ao criar uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-119">Gets a <see cref="T:System.Windows.Forms.CreateParams" /> on the base class when creating a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e4f2-120">Um <see cref="T:System.Windows.Forms.CreateParams" /> objeto na classe base ao criar uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-120">A <see cref="T:System.Windows.Forms.CreateParams" /> object on the base class when creating a window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-121">Classes de herança pode substituir essa propriedade para adicionar funcionalidade extra, mas deve primeiro chamar o <xref:System.Windows.Forms.CreateParams> construtor na classe base para verificar se o controle continua a funcionar corretamente.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-121">Inheriting classes can override this property to add extra functionality, but must first call the <xref:System.Windows.Forms.CreateParams> constructor on the base class to verify that the control continues to work correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-122">Obtém ou define um valor que é retornado ao formulário pai quando o botão é clicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-122">Gets or sets a value that is returned to the parent form when the button is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e4f2-123">Um dos valores de <see cref="T:System.Windows.Forms.DialogResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-123">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
          <span data-ttu-id="5e4f2-124">O valor padrão é <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-124">The default value is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-125">Se o <xref:System.Windows.Forms.DialogResult> para essa propriedade é definida como algo diferente de `None`, e se o formulário pai foi exibido por meio de <xref:System.Windows.Forms.Form.ShowDialog%2A> método, clicando no botão fecha o formulário pai sem precisar conectar todos os eventos.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-125">If the <xref:System.Windows.Forms.DialogResult> for this property is set to anything other than `None`, and if the parent form was displayed through the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, clicking the button closes the parent form without your having to hook up any events.</span></span> <span data-ttu-id="5e4f2-126">O formulário <xref:System.Windows.Forms.Form.DialogResult%2A> propriedade é definida como o <xref:System.Windows.Forms.DialogResult> do botão quando o botão é clicado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-126">The form's <xref:System.Windows.Forms.Form.DialogResult%2A> property is then set to the <xref:System.Windows.Forms.DialogResult> of the button when the button is clicked.</span></span>  
  
 <span data-ttu-id="5e4f2-127">Por exemplo, para criar uma caixa de diálogo "Sim/Não/Cancelar", simplesmente adicione três botões e defina seus <xref:System.Windows.Forms.DialogResult> propriedades `Yes`, `No`, e `Cancel`.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-127">For example, to create a "Yes/No/Cancel" dialog box, simply add three buttons and set their <xref:System.Windows.Forms.DialogResult> properties to `Yes`, `No`, and `Cancel`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-128">O exemplo de código a seguir cria um <xref:System.Windows.Forms.Button>, define seu <xref:System.Windows.Forms.DialogResult> propriedade `OK`e adiciona-o a um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-128">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.DialogResult> property to `OK`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="5e4f2-129">O valor atribuído não é um dos valores <see cref="T:System.Windows.Forms.DialogResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-130">Ocorre quando o usuário clica duas vezes no controle <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-130">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-131">Por padrão, o <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> e <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> bits de estilo são definidos como `false` para o <xref:System.Windows.Forms.Button> controle e o <xref:System.Windows.Forms.Button.DoubleClick> não é gerado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-131">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="5e4f2-132">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e4f2-132">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-133">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5e4f2-134">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Button.DoubleClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span> <span data-ttu-id="5e4f2-135">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5e4f2-136">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5e4f2-137">Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.Button> chamado `Button1`.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="5e4f2-138">Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Button.DoubleClick> evento.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#137)]
 [!code-vb[System.Windows.Forms.EventExamples#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-139">Ocorre quando o usuário clica duas vezes no controle <see cref="T:System.Windows.Forms.Button" /> com o mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-139">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control with the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-140">Por padrão, o <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> e <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> bits de estilo são definidos como `false` para o <xref:System.Windows.Forms.Button> controle e o <xref:System.Windows.Forms.Button.MouseDoubleClick> não é gerado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-140">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="5e4f2-141">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e4f2-141">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-142">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-142">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5e4f2-143">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Button.MouseDoubleClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-143">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span> <span data-ttu-id="5e4f2-144">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-144">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5e4f2-145">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-145">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5e4f2-146">Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.Button> chamado `Button1`.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-146">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="5e4f2-147">Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Button.MouseDoubleClick> evento.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-147">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#138)]
 [!code-vb[System.Windows.Forms.EventExamples#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public virtual void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyDefault(bool value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5e4f2-148">
            <see langword="true" /> se o botão precisar ter a aparência do botão padrão, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-148">
              <see langword="true" /> if the button is to have the appearance of the default button; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-149">Notifica o <see cref="T:System.Windows.Forms.Button" /> se ele é o botão padrão para que ele possa ajustar sua aparência adequadamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-149">Notifies the <see cref="T:System.Windows.Forms.Button" /> whether it is the default button so that it can adjust its appearance accordingly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-150">Este método é chamado pelo formulário pai para notificar o <xref:System.Windows.Forms.Button> que ele deve ser definido como o botão padrão e para permitir que ele para ajustar sua aparência adequadamente.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-150">This method is called by the parent form to notify the <xref:System.Windows.Forms.Button> that it should be set as the default button and to allow it to adjust its appearance accordingly.</span></span> <span data-ttu-id="5e4f2-151">Normalmente, um botão que é o botão padrão para um formulário tem uma borda mais espessa que outros botões no formulário.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-151">Typically, a button that is the default button for a form has a thicker border than other buttons on the form.</span></span>  
  
 <span data-ttu-id="5e4f2-152">Chamar o <xref:System.Windows.Forms.Button.NotifyDefault%2A> método desenha somente o botão como botão padrão; isso não altera seu comportamento.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-152">Calling the <xref:System.Windows.Forms.Button.NotifyDefault%2A> method only draws the button as a default button; it does not change its behavior.</span></span> <span data-ttu-id="5e4f2-153">Para fazer com que o botão se comportam como um botão padrão, ele deve ser atribuído ao <xref:System.Windows.Forms.Form.AcceptButton%2A> propriedade o <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-153">To make the button behave like a default button, it must be assigned to the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the <xref:System.Windows.Forms.Form>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5e4f2-154">Ao substituir <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5e4f2-154">When overriding <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5e4f2-155">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-155">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-156">Aciona o evento <see cref="E:System.Windows.Forms.Control.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-156">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5e4f2-157">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-157">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-158">Aciona o evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-158">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-159">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-159">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5e4f2-160">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e4f2-160">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5e4f2-161">O <xref:System.Windows.Forms.Button.OnFontChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-161">The <xref:System.Windows.Forms.Button.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5e4f2-162">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-162">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5e4f2-163">Ao substituir <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5e4f2-163">When overriding <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5e4f2-164">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-164">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-165">Aciona o evento <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-165">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5e4f2-166">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-166">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-167">Aciona o evento <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-167">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="5e4f2-168">Um <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-168">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-169">Aciona o evento <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-169">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-170">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-170">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5e4f2-171">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e4f2-171">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5e4f2-172">O <xref:System.Windows.Forms.Button.OnMouseUp%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-172">The <xref:System.Windows.Forms.Button.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5e4f2-173">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-173">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5e4f2-174">Ao substituir <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> método para que registrado delegados receber o evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5e4f2-174">When overriding <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="5e4f2-175">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-176">Aciona o evento <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-176">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-177">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-177">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="5e4f2-178">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="5e4f2-178">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5e4f2-179">O <xref:System.Windows.Forms.Button.OnTextChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-179">The <xref:System.Windows.Forms.Button.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="5e4f2-180">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-180">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5e4f2-181">Ao substituir <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="5e4f2-181">When overriding <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformClick();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-182">Gera um evento <see cref="E:System.Windows.Forms.Control.Click" /> para um botão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-182">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for a button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-183">Esse método pode ser chamado para gerar o <xref:System.Windows.Forms.Control.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-183">This method can be called to raise the <xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e4f2-184">O exemplo de código a seguir gera um <xref:System.Windows.Forms.Control.Click> eventos de um <xref:System.Windows.Forms.Button> em alternando <xref:System.Windows.Forms.Control.Click> eventos de outro botão.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-184">The following code example generates a <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> on alternating <xref:System.Windows.Forms.Control.Click> events of another button.</span></span> <span data-ttu-id="5e4f2-185">Esse código supõe que dois <xref:System.Windows.Forms.Button> controles tenham sido criados em um formulário e uma variável de membro chamado `myVar` foi declarado como um inteiro assinado de 32 bits dentro da classe.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-185">This code assumes that two <xref:System.Windows.Forms.Button> controls have been instantiated on a form and that a member variable named `myVar` has been declared as a 32-bit signed integer within the class.</span></span>  
  
 [!code-cpp[Classic Button.PerformClick Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.PerformClick Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CS/source.cs#1)]
 [!code-vb[Classic Button.PerformClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.PerformClick Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="5e4f2-186">O caractere mnemônico inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-186">The mnemonic character entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-187">Processa um caractere mnemônico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-187">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e4f2-188">
            <see langword="true" /> se o mnemônico tiver sido processado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-188">
              <see langword="true" /> if the mnemonic was processed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e4f2-189">Ao substituir <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> em uma classe derivada, certifique-se de chamar a classe base <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> para garantir que a funcionalidade básica permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="5e4f2-189">When overriding <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> in a derived class, be sure to call the base class's <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> to ensure that basic functionality remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e4f2-190">Retorna um <see cref="T:System.String" /> que contém o nome do <see cref="T:System.ComponentModel.Component" />, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-190">Returns a <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any.</span>
          </span>
          <span data-ttu-id="5e4f2-191">Esse método não deve ser substituído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-191">This method should not be overridden.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e4f2-192">Um <see cref="T:System.String" /> contendo o nome do <see cref="T:System.ComponentModel.Component" />, se houver, ou <see langword="null" /> se o <see cref="T:System.ComponentModel.Component" /> estiver sem nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-192">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any, or <see langword="null" /> if the <see cref="T:System.ComponentModel.Component" /> is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="5e4f2-193">O <see cref="T:System.Windows.Forms.Message" /> do Windows a ser processado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-193">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e4f2-194">Processa mensagens do Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e4f2-194">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>