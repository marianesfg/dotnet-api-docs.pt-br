<Type Name="ValidationConstraints" FullName="System.Windows.Forms.ValidationConstraints">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28bb699888665bab206ba455b2bfbcb1df95d888" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37505760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ValidationConstraints" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidationConstraints extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ValidationConstraints" />
  <TypeSignature Language="VB.NET" Value="Public Enum ValidationConstraints" />
  <TypeSignature Language="C++ CLI" Value="public enum class ValidationConstraints" />
  <TypeSignature Language="F#" Value="type ValidationConstraints = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define constantes que informam o <see cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" /> de como ele deve validar os controles filho de um contêiner.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> validará habilitados todos os controles em um contêiner, como um formulário. Use esta enumeração para restringir os tipos de controles cujos <xref:System.Windows.Forms.Control.Validating> é gerado.  
  
 Você pode combinar esses valores enumerados junto com uma operação OR bit a bit. Combinação de parâmetros com um operador OR bit a bit resulta em uma operação AND lógica. Por exemplo, chamar `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` só irá gerar o <xref:System.Windows.Forms.Control.Validating> eventos em controles que são filhos imediatos do contêiner e estão habilitados.  
  
 Se você não especificar ImmediateChildren quando você chama <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, o método exigirá que você valide todos os controles filho na hierarquia de controle.  
  
   
  
## Examples  
 Somente fará com que o exemplo de código a seguir a <xref:System.Windows.Forms.Control.Validating> evento seja gerado para os filhos imediatos do formulário cuja <xref:System.Windows.Forms.Control.Enabled%2A> é de propriedade `true`.  
  
 [!code-csharp[ValidateChildrenWithConstraints#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidateChildrenWithConstraints/CS/Form1.cs#1)]
 [!code-vb[ValidateChildrenWithConstraints#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidateChildrenWithConstraints/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="Enabled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Enabled = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Enabled" />
      <MemberSignature Language="VB.NET" Value="Enabled" />
      <MemberSignature Language="C++ CLI" Value="Enabled" />
      <MemberSignature Language="F#" Value="Enabled = 2" Usage="System.Windows.Forms.ValidationConstraints.Enabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Valida os controles filho cuja propriedade <see cref="P:System.Windows.Forms.Control.Enabled" /> está definida como <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="ImmediateChildren">
      <MemberSignature Language="C#" Value="ImmediateChildren" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints ImmediateChildren = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" />
      <MemberSignature Language="VB.NET" Value="ImmediateChildren" />
      <MemberSignature Language="C++ CLI" Value="ImmediateChildren" />
      <MemberSignature Language="F#" Value="ImmediateChildren = 16" Usage="System.Windows.Forms.ValidationConstraints.ImmediateChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Valida os controles filho que são hospedados diretamente no contêiner. Não valida nenhum filho desses filhos. Por exemplo, se você tiver um <see cref="T:System.Windows.Forms.Form" /> que contém um <see cref="T:System.Windows.Forms.UserControl" /> personalizado e o <see cref="T:System.Windows.Forms.UserControl" /> contiver um <see cref="T:System.Windows.Forms.Button" />, o uso de <see cref="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" /> fará com que o evento <see cref="E:System.Windows.Forms.Control.Validating" /> do <see cref="T:System.Windows.Forms.UserControl" /> ocorra, mas não o evento <see cref="E:System.Windows.Forms.Control.Validating" /> do <see cref="T:System.Windows.Forms.Button" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Windows.Forms.ValidationConstraints.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Valida todos os controles filho e todos os filhos desses controles filho, independentemente de suas definições de propriedade.</summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Selectable = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberSignature Language="F#" Value="Selectable = 1" Usage="System.Windows.Forms.ValidationConstraints.Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Valida os controles filho que podem ser selecionados.</summary>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="TabStop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints TabStop = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.TabStop" />
      <MemberSignature Language="VB.NET" Value="TabStop" />
      <MemberSignature Language="C++ CLI" Value="TabStop" />
      <MemberSignature Language="F#" Value="TabStop = 8" Usage="System.Windows.Forms.ValidationConstraints.TabStop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Valida os controles filho que têm um conjunto de valores <see cref="P:System.Windows.Forms.Control.TabStop" />, o que significa que o usuário pode navegar para o controle usando a tecla TAB.</summary>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="Visible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Visible = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Visible" />
      <MemberSignature Language="VB.NET" Value="Visible" />
      <MemberSignature Language="C++ CLI" Value="Visible" />
      <MemberSignature Language="F#" Value="Visible = 4" Usage="System.Windows.Forms.ValidationConstraints.Visible" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Valida os controles filho cuja propriedade <see cref="P:System.Windows.Forms.Control.Visible" /> está definida como <see langword="true" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>