<Type Name="ValidationConstraints" FullName="System.Windows.Forms.ValidationConstraints">
  <TypeSignature Language="C#" Value="public enum ValidationConstraints" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidationConstraints extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ValidationConstraints" />
  <TypeSignature Language="VB.NET" Value="Public Enum ValidationConstraints" />
  <TypeSignature Language="C++ CLI" Value="public enum class ValidationConstraints" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b02a4-101">Define constantes que informam o <see cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" /> de como ele deve validar os controles filho de um contêiner.</span><span class="sxs-lookup"><span data-stu-id="b02a4-101">Defines constants that inform <see cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" /> about how it should validate a container's child controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b02a4-102">Por padrão, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> validará habilitados todos os controles em um contêiner, como um formulário.</span><span class="sxs-lookup"><span data-stu-id="b02a4-102">By default, <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A> will validate all enabled controls in a container, such as a form.</span></span> <span data-ttu-id="b02a4-103">Use esta enumeração para restringir os tipos de controles cujo <xref:System.Windows.Forms.Control.Validating> é gerado.</span><span class="sxs-lookup"><span data-stu-id="b02a4-103">Use this enumeration to restrict the types of controls whose <xref:System.Windows.Forms.Control.Validating> event is raised.</span></span>  
  
 <span data-ttu-id="b02a4-104">Você pode combinar esses valores enumerados junto com uma operação OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="b02a4-104">You can combine these enumerated values together with a bitwise OR operation.</span></span> <span data-ttu-id="b02a4-105">Combinação de parâmetros com um operador OR bit a bit resultará em uma operação AND lógica.</span><span class="sxs-lookup"><span data-stu-id="b02a4-105">Combining parameters with a bitwise OR operator will result in a logical AND operation.</span></span> <span data-ttu-id="b02a4-106">Por exemplo, chamar `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` gerará somente o <xref:System.Windows.Forms.Control.Validating> evento em controles que são filhos imediatos do contêiner e estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="b02a4-106">For example, calling `ValidateChildren(ValidationConstraints.ImmediateChildren | ValidationConstraints.Enabled)` will only raise the <xref:System.Windows.Forms.Control.Validating> event on controls that are both immediate children of the container AND are enabled.</span></span>  
  
 <span data-ttu-id="b02a4-107">Se você não especificar ImmediateChildren ao chamar <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, o método exigirá que você valide todos os controles filho na hierarquia do controle.</span><span class="sxs-lookup"><span data-stu-id="b02a4-107">If you do not specify ImmediateChildren when you call <xref:System.Windows.Forms.ContainerControl.ValidateChildren%2A>, the method will require that you validate all child controls in the control hierarchy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b02a4-108">O exemplo de código a seguir só fará com que o <xref:System.Windows.Forms.Control.Validating> evento a ser gerado para os filhos imediatos do formulário cujo <xref:System.Windows.Forms.Control.Enabled%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="b02a4-108">The following code example will only cause the <xref:System.Windows.Forms.Control.Validating> event to be raised for immediate children of the form whose <xref:System.Windows.Forms.Control.Enabled%2A> property is `true`.</span></span>  
  
 [!code-csharp[ValidateChildrenWithConstraints#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidateChildrenWithConstraints/CS/Form1.cs#1)]
 [!code-vb[ValidateChildrenWithConstraints#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidateChildrenWithConstraints/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="Enabled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Enabled = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Enabled" />
      <MemberSignature Language="VB.NET" Value="Enabled" />
      <MemberSignature Language="C++ CLI" Value="Enabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-109">Valida os controles filho cuja propriedade <see cref="P:System.Windows.Forms.Control.Enabled" /> está definida como <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b02a4-109">Validates child controls whose <see cref="P:System.Windows.Forms.Control.Enabled" /> property is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ImmediateChildren">
      <MemberSignature Language="C#" Value="ImmediateChildren" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints ImmediateChildren = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" />
      <MemberSignature Language="VB.NET" Value="ImmediateChildren" />
      <MemberSignature Language="C++ CLI" Value="ImmediateChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-110">Valida os controles filho que são hospedados diretamente no contêiner.</span><span class="sxs-lookup"><span data-stu-id="b02a4-110">Validates child controls that are directly hosted within the container.</span></span> <span data-ttu-id="b02a4-111">Não valida nenhum filho desses filhos.</span><span class="sxs-lookup"><span data-stu-id="b02a4-111">Does not validate any of the children of these children.</span></span> <span data-ttu-id="b02a4-112">Por exemplo, se você tiver um <see cref="T:System.Windows.Forms.Form" /> que contém um <see cref="T:System.Windows.Forms.UserControl" /> personalizado e o <see cref="T:System.Windows.Forms.UserControl" /> contiver um <see cref="T:System.Windows.Forms.Button" />, o uso de <see cref="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" /> fará com que o evento <see cref="E:System.Windows.Forms.Control.Validating" /> do <see cref="T:System.Windows.Forms.UserControl" /> ocorra, mas não o evento <see cref="E:System.Windows.Forms.Control.Validating" /> do <see cref="T:System.Windows.Forms.Button" />.</span><span class="sxs-lookup"><span data-stu-id="b02a4-112">For example, if you have a <see cref="T:System.Windows.Forms.Form" /> that contains a custom <see cref="T:System.Windows.Forms.UserControl" />, and the <see cref="T:System.Windows.Forms.UserControl" /> contains a <see cref="T:System.Windows.Forms.Button" />, using <see cref="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" /> will cause the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.UserControl" /> to occur, but not the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.Button" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-113">Valida todos os controles filho e todos os filhos desses controles filho, independentemente de suas definições de propriedade.</span><span class="sxs-lookup"><span data-stu-id="b02a4-113">Validates all child controls, and all children of these child controls, regardless of their property settings.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Selectable = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-114">Valida os controles filho que podem ser selecionados.</span><span class="sxs-lookup"><span data-stu-id="b02a4-114">Validates child controls that can be selected.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="TabStop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints TabStop = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.TabStop" />
      <MemberSignature Language="VB.NET" Value="TabStop" />
      <MemberSignature Language="C++ CLI" Value="TabStop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-115">Valida os controles filho que têm um conjunto de valores <see cref="P:System.Windows.Forms.Control.TabStop" />, o que significa que o usuário pode navegar para o controle usando a tecla TAB.</span><span class="sxs-lookup"><span data-stu-id="b02a4-115">Validates child controls that have a <see cref="P:System.Windows.Forms.Control.TabStop" /> value set, which means that the user can navigate to the control using the TAB key.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="Visible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ValidationConstraints Visible = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ValidationConstraints.Visible" />
      <MemberSignature Language="VB.NET" Value="Visible" />
      <MemberSignature Language="C++ CLI" Value="Visible" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ValidationConstraints</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b02a4-116">Valida os controles filho cuja propriedade <see cref="P:System.Windows.Forms.Control.Visible" /> está definida como <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b02a4-116">Validates child controls whose <see cref="P:System.Windows.Forms.Control.Visible" /> property is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>