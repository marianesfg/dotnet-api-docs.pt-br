<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5a961-101">Representa uma coleção de inteiros em um <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> é uma coleção classificada para que os itens são anexados usando o <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> e <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5a961-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="5a961-103">Valores duplicados são removidos.</span><span class="sxs-lookup"><span data-stu-id="5a961-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="5a961-104">O <xref:System.Windows.Forms.ListBox.IntegerCollection> é usado principalmente pelo <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5a961-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="5a961-105">O <see cref="T:System.Windows.Forms.ListBox" /> que é o proprietário da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="5a961-106">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-107">Não é possível criar uma instância do <xref:System.Windows.Forms.ListBox.IntegerCollection> classe sem associá-lo com um <xref:System.Windows.Forms.ListBox> controle.</span><span class="sxs-lookup"><span data-stu-id="5a961-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-108">O inteiro a ser adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-108">The integer to add to the collection.</span></span></param>
        <summary><span data-ttu-id="5a961-109">Adiciona um inteiro exclusivo à coleção em ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="5a961-109">Adds a unique integer to the collection in sorted order.</span></span></summary>
        <returns><span data-ttu-id="5a961-110">O índice do item adicionado.</span><span class="sxs-lookup"><span data-stu-id="5a961-110">The index of the added item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="5a961-111">Não há espaço suficiente disponível para armazenar o novo item.</span><span class="sxs-lookup"><span data-stu-id="5a961-111">There is insufficient space available to store the new item.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5a961-112">Adiciona um grupo de inteiros à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-112">Adds a group of integers to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="5a961-113">A matriz de inteiros a ser adicionada à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-113">The array of integers to add to the collection.</span></span></param>
        <summary><span data-ttu-id="5a961-114">Adiciona uma matriz de inteiros à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-114">Adds an array of integers to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-115">A matriz de inteiros é acrescentada à coleção e duplicatas são removidas da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5a961-116">O <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> a ser adicionado a outra coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span></span></param>
        <summary><span data-ttu-id="5a961-117">Adiciona o conteúdo de um <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> existente a outra coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-118">O conteúdo existente <xref:System.Windows.Forms.ListBox.IntegerCollection> são acrescentados à coleção atual, e as duplicatas são removidas da coleção combinada.</span><span class="sxs-lookup"><span data-stu-id="5a961-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a961-119">Remove todos os inteiros do <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-120">O inteiro pelo qual pesquisar na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-120">The integer to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="5a961-121">Determina se o inteiro especificado está na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-121">Determines whether the specified integer is in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="5a961-122"><see langword="true" /> se o inteiro especificado estiver na coleção; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-122"><see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-123">Use o <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> método para determinar se um número inteiro é um membro do <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="5a961-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="5a961-124">Quando você souber que o item está localizado dentro da coleção, você pode usar o <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> método para determinar onde o item está localizado dentro da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="5a961-125">A matriz para dentro da qual a <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> é copiada.</span><span class="sxs-lookup"><span data-stu-id="5a961-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span></span></param>
        <param name="index"><span data-ttu-id="5a961-126">O local da matriz de destino no qual copiar a <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-127">Copia toda a <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> para uma matriz de inteiros existente, em um local especificado na matriz.</span><span class="sxs-lookup"><span data-stu-id="5a961-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-128">Use o <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> método para combinar os inteiros de várias coleções em uma única matriz.</span><span class="sxs-lookup"><span data-stu-id="5a961-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="5a961-129">Você pode usar essa matriz para popular o conteúdo de outra <xref:System.Windows.Forms.ListBox> controlar usando o <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5a961-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a961-130">Obtém o número de itens selecionados no <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="5a961-131">O número de itens selecionados no <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-132">Use o <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> propriedade para determinar o número de itens selecionados no <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="5a961-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="5a961-133">Você pode usar esse valor quando são percorrer os itens e você precisa fornecer um número de iterações para executar o loop.</span><span class="sxs-lookup"><span data-stu-id="5a961-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-134">O inteiro cujo índice você deseja recuperar.</span><span class="sxs-lookup"><span data-stu-id="5a961-134">The integer for which to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="5a961-135">Recupera o índice dentro da <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> do inteiro especificado.</span><span class="sxs-lookup"><span data-stu-id="5a961-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span></span></summary>
        <returns><span data-ttu-id="5a961-136">O índice de base zero do inteiro no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; caso contrário, um negativo (-1).</span><span class="sxs-lookup"><span data-stu-id="5a961-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-137">Use o <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> método para determinar onde um item está localizado dentro da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="5a961-138">Para determinar se um item está localizado dentro da coleção antes de chamar esse método, use o <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5a961-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5a961-139">A posição do <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="5a961-140">Obtém ou define o <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> tendo o índice especificado.</span><span class="sxs-lookup"><span data-stu-id="5a961-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span></span></summary>
        <value><span data-ttu-id="5a961-141">Selecionado <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="5a961-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-142">O inteiro a ser removido da <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-143">Remove o inteiro especificado da <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-144">Quando você remove um número inteiro do <xref:System.Windows.Forms.ListBox.IntegerCollection>, alterar os índices para inteiros subsequentes na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="5a961-145">Todas as informações sobre o inteiro removido são excluídas.</span><span class="sxs-lookup"><span data-stu-id="5a961-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="5a961-146">Você pode usar o <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> método para remover um item específico da lista especificando o item real para remover da lista.</span><span class="sxs-lookup"><span data-stu-id="5a961-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="5a961-147">Para especificar o índice de inteiro a ser removido em vez do inteiro em si, use o <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5a961-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="5a961-148">Se o número inteiro não está no <xref:System.Windows.Forms.ListBox.IntegerCollection>, esse método não fará nada.</span><span class="sxs-lookup"><span data-stu-id="5a961-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5a961-149">O índice de base zero do inteiro a ser removido.</span><span class="sxs-lookup"><span data-stu-id="5a961-149">The zero-based index of the integer to remove.</span></span></param>
        <summary><span data-ttu-id="5a961-150">Remove o inteiro no índice especificado do <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-151">Quando você remove um número inteiro do <xref:System.Windows.Forms.ListBox.IntegerCollection>, alterar os índices para inteiros subsequentes na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="5a961-152">Todas as informações sobre o inteiro removido são excluídas.</span><span class="sxs-lookup"><span data-stu-id="5a961-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="5a961-153">Você pode usar o <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> método para remover um inteiro específico da lista especificando o índice de inteiro para remover da lista.</span><span class="sxs-lookup"><span data-stu-id="5a961-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="5a961-154">Para especificar o item a ser removido em vez de índice para o item, use o <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5a961-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a961-155">Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="5a961-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="5a961-156"><see langword="true" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="5a961-156"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-157">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-158">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="5a961-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a961-159">Obtém um objeto que pode ser usado para sincronizar o acesso à coleção de controels.</span><span class="sxs-lookup"><span data-stu-id="5a961-159">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="5a961-160">O objeto usado para sincronizar-se à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-160">The object used to synchronize to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-161">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-162">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="5a961-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a961-163">Recupera uma enumeração de todos os inteiros no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <returns><span data-ttu-id="5a961-164">Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-165">Esse método cria um enumerador que contém um instantâneo da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="5a961-166">Você pode alterar a coleção alterando o enumerador; No entanto, vários enumeradores possam acessar simultaneamente a mesma coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="5a961-167">A alteração de coleção (diretamente ou por meio de outro enumerador), portanto, pode causar <xref:System.Collections.IEnumerator.Current%2A> ou <xref:System.Collections.IEnumerator.MoveNext%2A> para lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="5a961-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="5a961-168">Dois enumeradores criados da mesma coleção ao mesmo tempo podem conter instantâneos diferentes.</span><span class="sxs-lookup"><span data-stu-id="5a961-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="5a961-169">Removendo objetos do enumerador também remove da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-170">A parada de tabulação a ser adicionada ao <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-171">Adiciona uma parada de tabulação à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-171">Adds a tab stop to the collection.</span></span></summary>
        <returns><span data-ttu-id="5a961-172">O índice no qual o inteiro foi adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-172">The index at which the integer was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-173">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-174">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a961-175"><paramref name="item" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-175"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5a961-176"><paramref name="item" /> não é um inteiro com sinal de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="5a961-176"><paramref name="item" /> is not an 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="5a961-177">Não há espaço suficiente disponível para armazenar o novo item na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-177">There is insufficient space to store the new item in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a961-178">Limpa todas as paradas de tabulação da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-178">Clears all the tab stops from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-179">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-180">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-181">A parada de tabulação a ser localizada no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-182">Determina se a parada de tabulação especificada está na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-182">Determines whether the specified tab stop is in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="5a961-183"><see langword="true" /> se item for um número inteiro localizado na IntegerCollection; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-183"><see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-184">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-185">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5a961-186">A parada de tabulação a ser localizada no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-187">Retorna o índice da parada de tabulação especificada na coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-187">Returns the index of the specified tab stop in the collection.</span></span></summary>
        <returns><span data-ttu-id="5a961-188">O índice de base zero do item se ele foi encontrado no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="5a961-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-189">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-190">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5a961-191">O índice baseado em zero no qual o valor deve ser inserido.</span><span class="sxs-lookup"><span data-stu-id="5a961-191">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="5a961-192">O objeto a ser inserido no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-193">Insere um item na coleção em um índice especificado.</span><span class="sxs-lookup"><span data-stu-id="5a961-193">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-194">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-195">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5a961-196">Sempre lançada.</span><span class="sxs-lookup"><span data-stu-id="5a961-196">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a961-197">Obtém um valor que indica se a coleção tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="5a961-197">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="5a961-198"><see langword="true" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="5a961-198"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-199">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-200">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a961-201">Obtém um valor que indica se a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="5a961-201">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="5a961-202"><see langword="false" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="5a961-202"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-203">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-204">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5a961-205">O índice de base zero que especifica qual parada de tabulação obter.</span><span class="sxs-lookup"><span data-stu-id="5a961-205">The zero-based index that specifies which tab stop to get.</span></span></param>
        <summary><span data-ttu-id="5a961-206">Obtém ou define a parada de tabulação no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="5a961-206">Gets or sets the tab stop at the specified index.</span></span></summary>
        <value><span data-ttu-id="5a961-207">A parada de tabulação é armazenada no local especificado no <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-208">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-209">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a961-210">O objeto não é um inteiro.</span><span class="sxs-lookup"><span data-stu-id="5a961-210">The object is not an integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5a961-211">O objeto a ser adicionado ao <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5a961-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="5a961-212">Remove a primeira ocorrência de um item da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a961-212">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-213">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-214">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5a961-215">Sempre lançada.</span><span class="sxs-lookup"><span data-stu-id="5a961-215">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5a961-216">O índice do item a ser removido.</span><span class="sxs-lookup"><span data-stu-id="5a961-216">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="5a961-217">Remove o item em um índice especificado.</span><span class="sxs-lookup"><span data-stu-id="5a961-217">Removes the item at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a961-218">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="5a961-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a961-219">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.ListBox.IntegerCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a961-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5a961-220">Sempre lançada.</span><span class="sxs-lookup"><span data-stu-id="5a961-220">Always thrown.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>