<Type Name="GridColumnStylesCollection" FullName="System.Windows.Forms.GridColumnStylesCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a780e7462671a31c0235191943942def4f0a9560" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GridColumnStylesCollection : System.Windows.Forms.BaseCollection, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridColumnStylesCollection extends System.Windows.Forms.BaseCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GridColumnStylesCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class GridColumnStylesCollection&#xA;Inherits BaseCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridColumnStylesCollection : System::Windows::Forms::BaseCollection, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type GridColumnStylesCollection = class&#xA;    inherit BaseCollection&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BaseCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> objects in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No <xref:System.Windows.Forms.DataGridTableStyle>, você acessar o <xref:System.Windows.Forms.GridColumnStylesCollection> por meio de <xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A> propriedade.  
  
 O <xref:System.Windows.Forms.GridColumnStylesCollection> usa padrão <xref:System.Windows.Forms.GridColumnStylesCollection.Add%2A> e <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> métodos para manipular a coleção.  
  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se existe um valor de propriedade específica na coleção. Além disso, use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método para determinar o índice de qualquer <xref:System.Windows.Forms.DataGridColumnStyle> objeto dentro da coleção.  
  
> [!CAUTION]
>  Sempre criar <xref:System.Windows.Forms.DataGridColumnStyle> objetos e adicioná-los para o <xref:System.Windows.Forms.GridColumnStylesCollection> antes de adicionar <xref:System.Windows.Forms.DataGridTableStyle> objetos para o <xref:System.Windows.Forms.GridTableStylesCollection>. Quando você adiciona um vazio <xref:System.Windows.Forms.DataGridTableStyle> com uma validade <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> valor à coleção, <xref:System.Windows.Forms.DataGridColumnStyle> objetos são gerados automaticamente para você. Consequentemente, uma exceção será lançada se você tentar adicionar uma nova <xref:System.Windows.Forms.DataGridColumnStyle> objetos com duplicata <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> valores para o <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
   
  
## Examples  
 O exemplo de código a seguir imprime as informações sobre cada <xref:System.Windows.Forms.DataGridColumnStyle> em um <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
 [!code-cpp[Classic GridColumnStylesCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic GridColumnStylesCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic GridColumnStylesCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic GridColumnStylesCollection Example/CS/Source.cs#1)]
 [!code-vb[Classic GridColumnStylesCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Add(System.Windows.Forms.DataGridColumnStyle)" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Windows.Forms.DataGridBoolColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
    <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
    <altmember cref="T:System.Windows.Forms.DataGridTextBoxColumn" />
    <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.DataGridColumnStyle column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.DataGridColumnStyle column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Add(System.Windows.Forms.DataGridColumnStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (column As DataGridColumnStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::DataGridColumnStyle ^ column);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.DataGridColumnStyle -&gt; int&#xA;override this.Add : System.Windows.Forms.DataGridColumnStyle -&gt; int" Usage="gridColumnStylesCollection.Add column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Windows.Forms.DataGridColumnStyle" />
      </Parameters>
      <Docs>
        <param name="column">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to add.</param>
        <summary>Adds a column style to the collection.</summary>
        <returns>The index of the new <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria várias <xref:System.Windows.Forms.DataGridColumnStyle> objetos e adiciona cada para o <xref:System.Windows.Forms.GridColumnStylesCollection> de dois <xref:System.Windows.Forms.DataGridTableStyle> objetos.  
  
 [!code-cpp[GridTableStylesCollectionExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CPP/gridtablestylescollectionexamples.cpp#1)]
 [!code-csharp[GridTableStylesCollectionExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GridTableStylesCollectionExamples/CS/gridtablestylescollectionexamples.cs#1)]
 [!code-vb[GridTableStylesCollectionExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridTableStylesCollectionExamples/VB/gridtablestylescollectionexamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.DataGridColumnStyle[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.DataGridColumnStyle[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.AddRange(System.Windows.Forms.DataGridColumnStyle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (columns As DataGridColumnStyle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::DataGridColumnStyle ^&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.DataGridColumnStyle[] -&gt; unit" Usage="gridColumnStylesCollection.AddRange columns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columns" Type="System.Windows.Forms.DataGridColumnStyle[]" />
      </Parameters>
      <Docs>
        <param name="columns">An array of <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> objects to add to the collection.</param>
        <summary>Adds an array of column style objects to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria uma matriz de <xref:System.Windows.Forms.DataGridColumnStyle> objetos e usa o <xref:System.Windows.Forms.GridColumnStylesCollection.AddRange%2A> método para adicionar a matriz de <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
 [!code-cpp[Classic GridColumnStylesCollection.AddRange Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic GridColumnStylesCollection.AddRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic GridColumnStylesCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic GridColumnStylesCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic GridColumnStylesCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="gridColumnStylesCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the collection of <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro.  
  
 [!code-cpp[GridColumnStylesCollection_Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GridColumnStylesCollection_Members/CPP/gridcolumnstylescollection_members.cpp#1)]
 [!code-csharp[GridColumnStylesCollection_Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GridColumnStylesCollection_Members/CS/gridcolumnstylescollection_members.cs#1)]
 [!code-vb[GridColumnStylesCollection_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridColumnStylesCollection_Members/VB/gridcolumnstylescollection_members.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Add(System.Windows.Forms.DataGridColumnStyle)" />
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.GridColumnStylesCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a change is made to the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir adiciona um manipulador para o <xref:System.Windows.Forms.GridColumnStylesCollection.CollectionChanged> evento.  
  
 [!code-cpp[Classic GridColumnStylesCollection.CollectionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic GridColumnStylesCollection.CollectionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic GridColumnStylesCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic GridColumnStylesCollection.CollectionChanged Example/CS/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> contains a specific <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.PropertyDescriptor propertyDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.PropertyDescriptor propertyDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Contains(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::ComponentModel::PropertyDescriptor ^ propertyDescriptor);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.ComponentModel.PropertyDescriptor -&gt; bool" Usage="gridColumnStylesCollection.Contains propertyDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="propertyDescriptor">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> associated with the desired <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> contains a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> associated with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
        <returns>
          <see langword="true" /> if the collection contains the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter um <xref:System.ComponentModel.PropertyDescriptorCollection>, use o <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> método o <xref:System.Windows.Forms.BindingManagerBase> classe. Passar o <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> do <xref:System.Windows.Forms.DataGridColumnStyle> para o <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> propriedade o <xref:System.ComponentModel.PropertyDescriptorCollection> para retornar o <xref:System.ComponentModel.PropertyDescriptor> para uma coluna específica.  
  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe antes de chamar o <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> método para remover o item. Se você precisa saber o índice de um determinado <xref:System.Windows.Forms.DataGridColumnStyle>, use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um <xref:System.Windows.Forms.GridColumnStylesCollection> contém um <xref:System.Windows.Forms.DataGridColumnStyle> associado a um <xref:System.ComponentModel.PropertyDescriptor>.  
  
 [!code-vb[Classic GridColumnStylesCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.IndexOf(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="gridColumnStylesCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> of the desired <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> contains the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified name.</summary>
        <returns>
          <see langword="true" /> if the collection contains the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A legenda de um <xref:System.Windows.Forms.DataGridColumnStyle> é definido com o <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> propriedade.  
  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe antes de chamar o <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> método para remover o item. Se você precisa saber o índice de um determinado <xref:System.Windows.Forms.DataGridColumnStyle>, use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um <xref:System.Windows.Forms.DataGridColumnStyle> com um determinado <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> existe no <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
 [!code-vb[Classic GridColumnStylesCollection.Contains2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.Contains2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.IndexOf(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.DataGridColumnStyle column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.DataGridColumnStyle column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Contains(System.Windows.Forms.DataGridColumnStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (column As DataGridColumnStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::DataGridColumnStyle ^ column);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.DataGridColumnStyle -&gt; bool" Usage="gridColumnStylesCollection.Contains column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Windows.Forms.DataGridColumnStyle" />
      </Parameters>
      <Docs>
        <param name="column">The desired <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> contains the specified <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
        <returns>
          <see langword="true" /> if the collection contains the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe antes de chamar o <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> método para remover o item. Se você precisa saber o índice de um determinado <xref:System.Windows.Forms.DataGridColumnStyle>, use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um <xref:System.Windows.Forms.GridColumnStylesCollection> contém um determinado <xref:System.Windows.Forms.DataGridColumnStyle>.  
  
 [!code-vb[Classic GridColumnStylesCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.IndexOf(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.DataGridColumnStyle element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.DataGridColumnStyle element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.IndexOf(System.Windows.Forms.DataGridColumnStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (element As DataGridColumnStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::DataGridColumnStyle ^ element);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.DataGridColumnStyle -&gt; int" Usage="gridColumnStylesCollection.IndexOf element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Forms.DataGridColumnStyle" />
      </Parameters>
      <Docs>
        <param name="element">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to find.</param>
        <summary>Gets the index of a specified <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
        <returns>The zero-based index of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> within the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> or -1 if no corresponding <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe. Nesse caso, e é necessário o índice do elemento na coleção, use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe em um <xref:System.Windows.Forms.GridColumnStylesCollection>. Nesse caso, o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método retorna o índice do <xref:System.Windows.Forms.DataGridColumnStyle>e o <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> método é invocado com o índice para remover o elemento da coleção.  
  
 [!code-vb[Classic GridColumnStylesCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Contains(System.ComponentModel.PropertyDescriptor)" />
        <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets a specified <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> in the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridColumnStyle this[System.ComponentModel.PropertyDescriptor propertyDesciptor] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridColumnStyle Item(class System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(propertyDesciptor As PropertyDescriptor) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridColumnStyle ^ default[System::ComponentModel::PropertyDescriptor ^] { System::Windows::Forms::DataGridColumnStyle ^ get(System::ComponentModel::PropertyDescriptor ^ propertyDesciptor); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ComponentModel.PropertyDescriptor) : System.Windows.Forms.DataGridColumnStyle" Usage="System.Windows.Forms.GridColumnStylesCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDesciptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="propertyDesciptor">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> associated with the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</param>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> associated with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
        <value>O <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> associado especificado <see cref="T:System.ComponentModel.PropertyDescriptor" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Windows.Forms.DataGridColumnStyle> é criado usando um <xref:System.ComponentModel.PropertyDescriptor>. O <xref:System.ComponentModel.PropertyDescriptor> podem ser retornadas usando o <xref:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor%2A> propriedade.  
  
 Para obter o <xref:System.ComponentModel.PropertyDescriptorCollection> para uma fonte de dados específicos, use o <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> método o <xref:System.Windows.Forms.BindingManagerBase> classe. Passar o <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> para o <xref:System.ComponentModel.PropertyDescriptorCollection.Item%2A> propriedade o <xref:System.ComponentModel.PropertyDescriptorCollection> para retornar um <xref:System.ComponentModel.PropertyDescriptor> para uma coluna específica.  
  
   
  
## Examples  
 O seguinte código de exemplo obtém uma <xref:System.Data.DataColumn> de um <xref:System.Data.DataTable> em uma <xref:System.Data.DataSet>e, em seguida, passa-lo como um argumento para o <xref:System.Windows.Forms.GridColumnStylesCollection.Add%2A> método.  
  
 [!code-vb[Classic GridColumnStylesCollection.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridColumnStyle this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridColumnStyle Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridColumnStyle ^ default[int] { System::Windows::Forms::DataGridColumnStyle ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.DataGridColumnStyle" Usage="System.Windows.Forms.GridColumnStylesCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to return.</param>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> at a specified index.</summary>
        <value>O <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método para determinar o índice de qualquer elemento na coleção.  
  
   
  
## Examples  
 O código a seguir exemplo obtém o <xref:System.Windows.Forms.DataGridColumnStyle> usando o <xref:System.Windows.Forms.GridColumnStylesCollection.Item%2A> propriedade.  
  
 [!code-vb[Classic GridColumnStylesCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridColumnStyle this[string columnName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridColumnStyle Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridColumnStyle ^ default[System::String ^] { System::Windows::Forms::DataGridColumnStyle ^ get(System::String ^ columnName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.DataGridColumnStyle" Usage="System.Windows.Forms.GridColumnStylesCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">The <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to retrieve.</param>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified name.</summary>
        <value>O <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> com o cabeçalho de coluna especificada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O cabeçalho da coluna de uma <xref:System.Windows.Forms.DataGridColumnStyle> pode ser definido explicitamente, definindo o <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> propriedade. Por padrão, o <xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A> é definido usando usa <xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A> valor da propriedade.  
  
 A comparação entre o valor para procurar e cabeçalhos de coluna não diferencia maiusculas de minúsculas.  
  
   
  
## Examples  
 O código a seguir exemplo retorna o <xref:System.Windows.Forms.DataGridColumnStyle> nomeado no <xref:System.Windows.Forms.GridColumnStylesCollection.Item%2A> propriedade.  
  
 [!code-vb[Classic GridColumnStylesCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Windows.Forms.GridColumnStylesCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of items in the collection.</summary>
        <value>Um <see cref="T:System.Collections.ArrayList" /> que contém os itens da coleção.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCollectionChanged (e As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="gridColumnStylesCollection.OnCollectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data event.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.GridColumnStylesCollection.CollectionChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.GridColumnStylesCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.GridColumnStylesCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.DataGridColumnStyle column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.DataGridColumnStyle column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.Remove(System.Windows.Forms.DataGridColumnStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (column As DataGridColumnStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::DataGridColumnStyle ^ column);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.DataGridColumnStyle -&gt; unit" Usage="gridColumnStylesCollection.Remove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Windows.Forms.DataGridColumnStyle" />
      </Parameters>
      <Docs>
        <param name="column">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> from the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se o <xref:System.Windows.Forms.DataGridColumnStyle> existe na coleção.  
  
   
  
## Examples  
 O código a seguir exemplo remove uma <xref:System.Windows.Forms.DataGridColumnStyle> de um <xref:System.Windows.Forms.GridColumnStylesCollection>.  
  
 [!code-cpp[GridColumnStylesCollection_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GridColumnStylesCollection_RemoveAt/CPP/gridcolumnstylescollection_removeat.cpp#1)]
 [!code-csharp[GridColumnStylesCollection_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GridColumnStylesCollection_RemoveAt/CS/gridcolumnstylescollection_removeat.cs#1)]
 [!code-vb[GridColumnStylesCollection_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridColumnStylesCollection_RemoveAt/VB/gridcolumnstylescollection_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Add(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="gridColumnStylesCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to remove.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified index from the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se o <xref:System.Windows.Forms.DataGridColumnStyle> existe na coleção.  
  
 Use o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método para determinar o índice de qualquer elemento na coleção.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.GridColumnStylesCollection.Contains%2A> método para determinar se um determinado <xref:System.Windows.Forms.DataGridColumnStyle> existe em um <xref:System.Windows.Forms.GridColumnStylesCollection>. Nesse caso, o <xref:System.Windows.Forms.GridColumnStylesCollection.IndexOf%2A> método retorna o índice do <xref:System.Windows.Forms.DataGridColumnStyle>e o <xref:System.Windows.Forms.GridColumnStylesCollection.Remove%2A> método é invocado com o índice para remover o elemento da coleção.  
  
 [!code-vb[Classic GridColumnStylesCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic GridColumnStylesCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.Add(System.Windows.Forms.DataGridColumnStyle)" />
        <altmember cref="M:System.Windows.Forms.GridColumnStylesCollection.IndexOf(System.Windows.Forms.DataGridColumnStyle)" />
      </Docs>
    </Member>
    <Member MemberName="ResetPropertyDescriptors">
      <MemberSignature Language="C#" Value="public void ResetPropertyDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPropertyDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.ResetPropertyDescriptors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPropertyDescriptors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPropertyDescriptors();" />
      <MemberSignature Language="F#" Value="member this.ResetPropertyDescriptors : unit -&gt; unit" Usage="gridColumnStylesCollection.ResetPropertyDescriptors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for each column style in the collection to <see langword="null" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro.  
  
 [!code-cpp[GridColumnStylesCollection_ResetPropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GridColumnStylesCollection_ResetPropertyDescriptor/CPP/resetpropertydescriptor.cpp#1)]
 [!code-csharp[GridColumnStylesCollection_ResetPropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GridColumnStylesCollection_ResetPropertyDescriptor/CS/gridcolumnstylescollection_resetpropertydescriptor.cs#1)]
 [!code-vb[GridColumnStylesCollection_ResetPropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GridColumnStylesCollection_ResetPropertyDescriptor/VB/gridcolumnstylescollection_resetpropertydescriptor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from collection. The array must have zero-based indexing.</param>
        <param name="index">The zero-based index in the array at which copying begins.</param>
        <summary>Copies the collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.  -or-  The number of elements in the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">The type of the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> cannot be cast automatically to the type of <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements contained in the collection.</summary>
        <value>O número de elementos contidos na coleção.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> is synchronized (thread safe).</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <value>O objeto usado para sincronizar o acesso à coleção.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator for the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be added to the collection. The value can be <see langword="null" />.</param>
        <summary>Adds an object to the collection.</summary>
        <returns>The index at which the value has been added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> cannot be cast to a <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the collection of <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> objects.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to locate in the collection. The value can be <see langword="null" />.</param>
        <summary>Determines whether an element is in the collection.</summary>
        <returns>
          <see langword="true" /> if the element is in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to locate in the collection. The value can be <see langword="null" />.</param>
        <summary>Returns the zero-based index of the first occurrence of the specified object in the collection.</summary>
        <returns>The zero-based index of the first occurrence of the <paramref name="value" /> parameter within the collection, if found; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which <c>value</c> should be inserted.</param>
        <param name="value">The object to insert into the collection.</param>
        <summary>This method is not supported by this control.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Always thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection has a fixed size.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is read-only.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.GridColumnStylesCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to get.</param>
        <summary>Gets the element at the specified index.</summary>
        <value>O elemento no índice especificado.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">An operation attempts to set this property.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> from the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> cannot be cast to a <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GridColumnStylesCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to remove.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> at the specified index from the <see cref="T:System.Windows.Forms.GridColumnStylesCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>