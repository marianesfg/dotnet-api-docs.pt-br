<Type Name="DomainUpDown+DomainUpDownItemCollection" FullName="System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b48bb852011befac25942991df022b0f5385938" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39999571" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DomainUpDown.DomainUpDownItemCollection : System.Collections.ArrayList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DomainUpDown/DomainUpDownItemCollection extends System.Collections.ArrayList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DomainUpDown.DomainUpDownItemCollection&#xA;Inherits ArrayList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class DomainUpDown::DomainUpDownItemCollection : System::Collections::ArrayList" />
  <TypeSignature Language="F#" Value="type DomainUpDown.DomainUpDownItemCollection = class&#xA;    inherit ArrayList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ArrayList</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Encapsula uma coleção de objetos para uso pela classe <see cref="T:System.Windows.Forms.DomainUpDown" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para criar uma coleção de objetos a serem exibidos na <xref:System.Windows.Forms.DomainUpDown> controle, você pode adicionar ou remover itens individualmente usando o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> e <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> métodos. A coleção é acessada a partir do controle pai, <xref:System.Windows.Forms.DomainUpDown>, pelo <xref:System.Windows.Forms.DomainUpDown.Items%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria e inicializa um <xref:System.Windows.Forms.DomainUpDown> controle. O exemplo permite que você defina algumas de suas propriedades e criar uma coleção de cadeias de caracteres para exibição no controle para cima para baixo. O código pressupõe que um <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> e um <xref:System.Windows.Forms.Button> tenham sido criadas em um formulário. O exemplo também pressupõe que você tenha uma variável de membro no nível da classe declarado como um inteiro com sinal de 32 bits chamado `myCounter`. Você pode inserir uma cadeia de caracteres na caixa de texto e adicione-o para o <xref:System.Windows.Forms.DomainUpDown.Items%2A> coleção quando o botão é clicado. Ao clicar na caixa de seleção, você pode alternar o <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> propriedade e observar a diferença na coleção de itens no controle para cima para baixo.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="domainUpDownItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Object" /> a ser adicionado ao final da coleção.</param>
        <summary>Adiciona o objeto especificado ao final da coleção.</summary>
        <returns>O valor de índice baseado em zero do <see cref="T:System.Object" /> adicionado à coleção.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você também pode adicionar um novo <xref:System.Object> à coleção usando o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> método.  
  
 Para remover uma <xref:System.Object> que você adicionou anteriormente, use o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> ou <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> métodos.  
  
   
  
## Examples  
 O exemplo a seguir cria e inicializa um <xref:System.Windows.Forms.DomainUpDown> controle. O exemplo permite que você defina algumas de suas propriedades e criar uma coleção de cadeias de caracteres para exibição no controle para cima para baixo. O código pressupõe que um <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> e um <xref:System.Windows.Forms.Button> tenham sido criadas em um formulário. O exemplo também pressupõe que você tenha uma variável de membro no nível da classe declarado como um inteiro com sinal de 32 bits chamado `myCounter`. Você pode inserir uma cadeia de caracteres na caixa de texto e adicione-o para o <xref:System.Windows.Forms.DomainUpDown.Items%2A> coleção quando o botão é clicado. Ao clicar na caixa de seleção, você pode alternar o <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> propriedade e observar a diferença na coleção de itens no controle para cima para baixo.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public override void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="domainUpDownItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">O local indexado dentro da coleção a ser inserida no <see cref="T:System.Object" />.</param>
        <param name="item">O <see cref="T:System.Object" /> a ser inserido.</param>
        <summary>Insere o objeto especificado na coleção no local indicado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você também pode adicionar um novo <xref:System.Object> à coleção usando o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> método.  
  
 Para remover uma <xref:System.Object> que você adicionou anteriormente, use o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> ou <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O local indexado do item na coleção.</param>
        <summary>Obtém ou define o item no local indexado especificado na coleção.</summary>
        <value>Um <see cref="T:System.Object" /> que representa o item no local indexado especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para atribuir itens a um local específico ou para recuperá-los da <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection>, você pode referenciar o objeto de coleção com um valor de índice específico. O valor de índice a <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection> é um índice baseado em zero.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="domainUpDownItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Object" /> a ser removido da coleção.</param>
        <summary>Remove o item especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você também pode remover uma <xref:System.Object> que você adicionou anteriormente usando o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> método.  
  
 Para adicionar uma nova <xref:System.Object> à coleção, use o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> ou <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="domainUpDownItemCollection.RemoveAt item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">O local indexado do <see cref="T:System.Object" /> na coleção.</param>
        <summary>Remove o item do local especificado na coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você também pode remover uma <xref:System.Object> que você adicionou anteriormente usando o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> método.  
  
 Para adicionar uma nova <xref:System.Object> à coleção, use o <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> ou <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>