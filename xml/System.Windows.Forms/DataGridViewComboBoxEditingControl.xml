<Type Name="DataGridViewComboBoxEditingControl" FullName="System.Windows.Forms.DataGridViewComboBoxEditingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b565de6c6930484d629ba4bbc04fdd2d8e6826b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36344221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewComboBoxEditingControl : System.Windows.Forms.ComboBox, System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewComboBoxEditingControl extends System.Windows.Forms.ComboBox implements class System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewComboBoxEditingControl&#xA;Inherits ComboBox&#xA;Implements IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewComboBoxEditingControl : System::Windows::Forms::ComboBox, System::Windows::Forms::IDataGridViewEditingControl" />
  <TypeSignature Language="F#" Value="type DataGridViewComboBoxEditingControl = class&#xA;    inherit ComboBox&#xA;    interface IDataGridViewEditingControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ComboBox</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridViewEditingControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eb685-101">Representa o controle de caixa de combinação hospedado em um <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb685-101">Represents the hosted combo box control in a <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-102">O <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> classe é um tipo especializado de <xref:System.Windows.Forms.ComboBox> que implementa o <xref:System.Windows.Forms.IDataGridViewEditingControl> interface, permitindo que ele seja hospedado em um <xref:System.Windows.Forms.DataGridViewComboBoxCell> quando a célula está em modo de edição.</span><span class="sxs-lookup"><span data-stu-id="eb685-102">The <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> class is a specialized type of <xref:System.Windows.Forms.ComboBox> that implements the <xref:System.Windows.Forms.IDataGridViewEditingControl> interface, allowing it to be hosted in a <xref:System.Windows.Forms.DataGridViewComboBoxCell> when the cell is in edit mode.</span></span> <span data-ttu-id="eb685-103">Quando um <xref:System.Windows.Forms.DataGridViewComboBoxCell> é no modo de edição, você pode recuperar o <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> por meio de <xref:System.Windows.Forms.DataGridView.EditingControl%2A> propriedade do <xref:System.Windows.Forms.DataGridView> controle.</span><span class="sxs-lookup"><span data-stu-id="eb685-103">When a <xref:System.Windows.Forms.DataGridViewComboBoxCell> is in edit mode, you can retrieve the <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> through the <xref:System.Windows.Forms.DataGridView.EditingControl%2A> property of the <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 <span data-ttu-id="eb685-104">Manipular o <xref:System.Windows.Forms.DataGridView.EditingControlShowing> evento para executar a inicialização personalizada do controle de edição quando uma célula entra em modo de edição.</span><span class="sxs-lookup"><span data-stu-id="eb685-104">Handle the <xref:System.Windows.Forms.DataGridView.EditingControlShowing> event to perform custom initialization of the editing control when a cell enters edit mode.</span></span> <span data-ttu-id="eb685-105">Para personalizar as características de exibição do controle, defina as propriedades do objeto retornado pelo <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType> propriedade em vez de definir as propriedades do controle retornado pelo <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="eb685-105">To customize the display characteristics of the control, set the properties of the object returned by the <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType> property rather than setting the properties of the control returned by the <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb685-106">O exemplo de código a seguir demonstra como usar um <xref:System.Windows.Forms.DataGridView.EditingControlShowing?displayProperty=nameWithType> manipulador de eventos para adicionar um manipulador para um <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> eventos.</span><span class="sxs-lookup"><span data-stu-id="eb685-106">The following code example demonstrates how to use an <xref:System.Windows.Forms.DataGridView.EditingControlShowing?displayProperty=nameWithType> event handler to add a handler for a <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> event.</span></span> <span data-ttu-id="eb685-107">No exemplo, o controle de edição é convertido em um <xref:System.Windows.Forms.ComboBox> para lidar com o <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="eb685-107">In the example, the editing control is cast to a <xref:System.Windows.Forms.ComboBox> to handle the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
    <altmember cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" />
    <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewComboBoxEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewComboBoxEditingControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb685-108">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-108">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-109">Este construtor padrão define o <xref:System.Windows.Forms.Control.TabStop%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="eb685-109">This default constructor sets the <xref:System.Windows.Forms.Control.TabStop%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="eb685-110">Código do aplicativo normalmente não criará explicitamente instâncias do <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> classe, porque isso é executado automaticamente quando o contendo <xref:System.Windows.Forms.DataGridViewComboBoxCell> é criado.</span><span class="sxs-lookup"><span data-stu-id="eb685-110">Application code typically will not explicitly create instances of the <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> class, because this is performed automatically when the containing <xref:System.Windows.Forms.DataGridViewComboBoxCell> is created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.ComboBox" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxColumn" />
      </Docs>
    </Member>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public virtual void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit&#xA;override this.ApplyCellStyleToEditingControl : System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="dataGridViewComboBoxEditingControl.ApplyCellStyleToEditingControl dataGridViewCellStyle" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">
          <span data-ttu-id="eb685-111">O <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> para usar como um padrão para a interface do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-111">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as a pattern for the UI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb685-112">Altera a IU (interface do usuário) do controle para ser consistente com o estilo da célula especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-112">Changes the control's user interface (UI) to be consistent with the specified cell style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-113">O <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, e <xref:System.Windows.Forms.Control.ForeColor%2A> propriedades do controle alinham com as propriedades correspondentes do `dataGridViewCellStyle` o valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="eb685-113">The <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, and <xref:System.Windows.Forms.Control.ForeColor%2A> properties of the control align with the corresponding properties of the `dataGridViewCellStyle` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewComboBoxEditingControl.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb685-114">Cria um novo <see cref="T:System.Windows.Forms.AccessibleObject" /> para essa instância <see cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-114">Creates a new <see cref="T:System.Windows.Forms.AccessibleObject" /> for this <see cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb685-115">Um novo objeto de acessibilidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-115">A new accessibility object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlDataGridView : System.Windows.Forms.DataGridView with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlDataGridView" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-116">Obtém ou define o <see cref="T:System.Windows.Forms.DataGridView" /> que contém o controle de caixa de combinação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-116">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the combo box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-117">O <see cref="T:System.Windows.Forms.DataGridView" /> que contém o <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" /> que contém este controle; caso contrário, <see langword="null" /> se não houver associado não <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-117">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" /> that contains this control; otherwise, <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-118">Essa propriedade é automaticamente definida quando um <xref:System.Windows.Forms.DataGridViewComboBoxColumn> ou <xref:System.Windows.Forms.DataGridViewComboBoxCell> é criado em uma <xref:System.Windows.Forms.DataGridView> ou adicionado a um <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="eb685-118">This property is automatically set when a <xref:System.Windows.Forms.DataGridViewComboBoxColumn> or <xref:System.Windows.Forms.DataGridViewComboBoxCell> is created within a <xref:System.Windows.Forms.DataGridView> or added to a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxColumn" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlFormattedValue : obj with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlFormattedValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-119">Obtém ou define a representação formatada do valor atual do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-119">Gets or sets the formatted representation of the current value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-120">Um objeto que representa o valor atual deste controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-120">An object representing the current value of this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-121">O <xref:System.Windows.Forms.ComboBox.Text%2A> propriedade contém os dados reais contidos no controle.</span><span class="sxs-lookup"><span data-stu-id="eb685-121">The <xref:System.Windows.Forms.ComboBox.Text%2A> property contains the actual data contained in the control.</span></span> <span data-ttu-id="eb685-122">Esses dados são a cadeia de caracteres mostrada na parte da caixa de texto do controle.</span><span class="sxs-lookup"><span data-stu-id="eb685-122">This data is the string shown in the text box portion of the control.</span></span> <span data-ttu-id="eb685-123">Em contraste, o <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl.GetEditingControlFormattedValue%2A> método retorna a representação formatada da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb685-123">In contrast, the <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl.GetEditingControlFormattedValue%2A> method returns the formatted representation of this string.</span></span> <span data-ttu-id="eb685-124">Como uma caixa de combinação usa cadeias de caracteres de texto sem formatação, essas duas propriedades são essencialmente as mesmas.</span><span class="sxs-lookup"><span data-stu-id="eb685-124">Because a combo box uses plain text strings, these two properties are essentially the same.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.ComboBox" />
        <altmember cref="P:System.Windows.Forms.ComboBox.Text" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxColumn" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public virtual int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlRowIndex : int with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlRowIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-125">Obtém ou define o índice da linha pai da célula proprietária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-125">Gets or sets the index of the owning cell's parent row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-126">O índice da linha que contém a célula proprietária; -1 se não houver nenhuma linha proprietária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-126">The index of the row that contains the owning cell; -1 if there is no owning row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-127">O índice de linha da linha de cabeçalhos de coluna é -1.</span><span class="sxs-lookup"><span data-stu-id="eb685-127">The row index of the column headers row is -1.</span></span>  
  
 <span data-ttu-id="eb685-128">O índice de linha de uma linha compartilhada também é -1.</span><span class="sxs-lookup"><span data-stu-id="eb685-128">The row index of a shared row is also -1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public virtual bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingControlValueChanged : bool with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlValueChanged" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-129">Obtém ou define um valor que indica se o valor atual do controle foi alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-129">Gets or sets a value indicating whether the current value of the control has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-130">
            <see langword="true" /> Se o valor do controle é alterado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-130">
              <see langword="true" /> if the value of the control has changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-131">O <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlValueChanged%2A> está definida como `true` para especificar que o valor da célula proprietário foi alterado e a célula pode precisar ser atualizado para refletir essa alteração.</span><span class="sxs-lookup"><span data-stu-id="eb685-131">The <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlValueChanged%2A> property is set to `true` to specify that the owning cell's value has changed, and the cell may need to be updated to reflect this change.</span></span> <span data-ttu-id="eb685-132">A célula ou tabela proprietária redefinirá a essa propriedade como `false` depois que ela foi atualizada em si.</span><span class="sxs-lookup"><span data-stu-id="eb685-132">The owning cell or table will reset this property to `false` after it has updated itself.</span></span>  
  
 <span data-ttu-id="eb685-133">Quando o controle é inicializado, essa propriedade é definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="eb685-133">When the control is initialized, this property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.ComboBox" />
        <altmember cref="P:System.Windows.Forms.ComboBox.Text" />
        <altmember cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public virtual bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="F#" Value="abstract member EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool&#xA;override this.EditingControlWantsInputKey : System.Windows.Forms.Keys * bool -&gt; bool" Usage="dataGridViewComboBoxEditingControl.EditingControlWantsInputKey (keyData, dataGridViewWantsInputKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="eb685-134">Uma combinação bit a bit de valores <see cref="T:System.Windows.Forms.Keys" /> que representa a tecla que foi pressionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-134">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key that was pressed.</span>
          </span>
        </param>
        <param name="dataGridViewWantsInputKey">
          <span data-ttu-id="eb685-135">
            <see langword="true" /> para indicar que o controle <see cref="T:System.Windows.Forms.DataGridView" /> pode processar a chave; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-135">
              <see langword="true" /> to indicate that the <see cref="T:System.Windows.Forms.DataGridView" /> control can process the key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb685-136">Determina se a chave especificada é uma chave de entrada regular que deve ser processada pelo controle de edição ou uma chave especial que deve ser processada pelo <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-136">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb685-137">
            <see langword="true" /> se a chave especificada for uma chave de entrada regular que deverá ser manipulada pelo controle de edição; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-137">
              <see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb685-138">O <xref:System.Windows.Forms.DataGridView> controle chama esse método para determinar se deve lidar com uma chave de entrada ou deixar que o controle de edição tratá-la.</span><span class="sxs-lookup"><span data-stu-id="eb685-138">The <xref:System.Windows.Forms.DataGridView> control calls this method to determine whether to handle an input key or let the editing control handle it.</span></span>  
  
 <span data-ttu-id="eb685-139">Este método retorna `true` se `keyData` inclui o <xref:System.Windows.Forms.Keys.Up> ou <xref:System.Windows.Forms.Keys.Down> valores ou se a lista suspensa é exibida e `keyData` inclui o <xref:System.Windows.Forms.Keys.Escape> ou <xref:System.Windows.Forms.Keys.Enter> valores.</span><span class="sxs-lookup"><span data-stu-id="eb685-139">This method returns `true` if `keyData` includes the <xref:System.Windows.Forms.Keys.Up> or <xref:System.Windows.Forms.Keys.Down> values or if the drop-down list is displayed and `keyData` includes the <xref:System.Windows.Forms.Keys.Escape> or <xref:System.Windows.Forms.Keys.Enter> values.</span></span> <span data-ttu-id="eb685-140">Esse método também retornará `true` se `dataGridViewWantsInputKey` for `false`.</span><span class="sxs-lookup"><span data-stu-id="eb685-140">This method also returns `true` if `dataGridViewWantsInputKey` is `false`.</span></span> <span data-ttu-id="eb685-141">Do contrário, esse método retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="eb685-141">Otherwise, this method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanelCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.EditingPanelCursor" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-142">Obtém o cursor usado durante a edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-142">Gets the cursor used during editing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-143">Um <see cref="T:System.Windows.Forms.Cursor" /> que representa a imagem de cursor usada pelo ponteiro de mouse durante a edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-143">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor image used by the mouse pointer during editing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj&#xA;override this.GetEditingControlFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewComboBoxEditingControl.GetEditingControlFormattedValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="eb685-144">Uma combinação bit a bit de valores <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> que especifica o contexto do erro de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-144">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the data error context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb685-145">Recupera o valor formatado da célula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-145">Retrieves the formatted value of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb685-146">Um <see cref="T:System.Object" /> que representa a versão formatada do conteúdo da célula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-146">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="dataGridViewComboBoxEditingControl.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eb685-147">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-147">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb685-148">Aciona o evento <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-148">Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public virtual void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingControlForEdit : bool -&gt; unit&#xA;override this.PrepareEditingControlForEdit : bool -&gt; unit" Usage="dataGridViewComboBoxEditingControl.PrepareEditingControlForEdit selectAll" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <span data-ttu-id="eb685-149">
            <see langword="true" /> para selecionar todo o conteúdo da célula; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-149">
              <see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb685-150">Prepara a célula selecionada atualmente para edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-150">Prepares the currently selected cell for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public virtual bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RepositionEditingControlOnValueChange : bool" Usage="System.Windows.Forms.DataGridViewComboBoxEditingControl.RepositionEditingControlOnValueChange" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb685-151">Obtém um valor que indica se o conteúdo da célula precisa ser reposicionado sempre que o valor é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-151">Gets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb685-152">
            <see langword="false" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb685-152">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>