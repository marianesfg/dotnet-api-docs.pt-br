<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3feaa7f754bd8aa1fb258d77a086432b711e3297" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39771063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type MouseEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece dados para os eventos <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> e <see cref="E:System.Windows.Forms.Control.MouseMove" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.Control.MouseDown> evento ocorre quando o usuário pressiona o botão do mouse enquanto o ponteiro está sobre um controle. O <xref:System.Windows.Forms.Control.MouseUp> evento ocorre quando o usuário libera o botão do mouse enquanto o ponteiro permanece sobre o controle. O <xref:System.Windows.Forms.Control.MouseMove> evento ocorre quando o usuário move o ponteiro do mouse sobre um controle. Um <xref:System.Windows.Forms.MouseEventArgs> Especifica qual botão do mouse é pressionado, quantas vezes o botão do mouse foi pressionado ou liberado, as coordenadas do mouse e o valor a roda do mouse é movida.  
  
 É possível receber um <xref:System.Windows.Forms.Control.MouseDown> eventos sem uma correspondente <xref:System.Windows.Forms.Control.MouseUp>, se o usuário alterna o foco para outro aplicativo antes de liberar o botão do mouse.  
  
 Esses três eventos existem para o <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, e <xref:System.Windows.Forms.NotifyIcon> classes.  
  
 Para obter informações sobre o modelo de evento, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Identificadores de exemplos de código a seguir a <xref:System.Windows.Forms.Control.MouseDown> evento em um <xref:System.Windows.Forms.TextBox> controlar de forma que clicar no botão direito do mouse seleciona todo o texto no controle. Este exemplo requer que você tenha um formulário que contém um <xref:System.Windows.Forms.TextBox> controle denominado `textBox1`.  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 O seguinte exemplo de código usa o `Location` propriedade para rastrear cliques do botão esquerdo do mouse e desenhar uma série de segmentos de linha reta em resposta à entrada do usuário. O exemplo não atualiza as linhas se você ocultar o formulário e, em seguida, exibi-lo novamente; Esse código foi omitido para manter a simplicidade.  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MouseEventArgs : System.Windows.Forms.MouseButtons * int * int * int * int -&gt; System.Windows.Forms.MouseEventArgs" Usage="new System.Windows.Forms.MouseEventArgs (button, clicks, x, y, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">Um dos valores <see cref="T:System.Windows.Forms.MouseButtons" /> que indicam qual botão do mouse for pressionado.</param>
        <param name="clicks">O número de vezes que um botão do mouse for pressionado.</param>
        <param name="x">A coordenada X de um clique do mouse, em pixels.</param>
        <param name="y">A coordenada Y de um clique do mouse, em pixels.</param>
        <param name="delta">Uma contagem com sinal do número de detentores que o botão de rolagem girou.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.MouseEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.Button : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.MouseEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o botão do mouse que foi pressionado.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.MouseButtons" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O seguinte código de exemplo manipula a <xref:System.Windows.Forms.Control.MouseDown> evento em um <xref:System.Windows.Forms.TextBox> controlar de forma que clicar no botão direito do mouse seleciona todo o texto no controle. Este exemplo requer que você tenha um formulário que contém um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1`.  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Clicks : int" Usage="System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de vezes que o botão do mouse foi pressionado ou liberado.</summary>
        <value>Um <see cref="T:System.Int32" /> que contém o número de vezes que o botão do mouse foi pressionado ou liberado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora a interface do Windows define standard como cliques únicos em eventos do mouse ou clica duas vezes, aplicativos individuais podem interpretar um grande número de cliques como um único evento.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos. Esse relatório ajuda a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como uma <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>. Em seguida, nomeie a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma contagem com sinal do número de detentores que a roda do mouse girou, multiplicado pela constante WHEEL_DELTA. Um detentor é um ponto da roda do mouse.</summary>
        <value>Uma contagem com sinal do número de detentores que a roda do mouse girou, multiplicado pela constante WHEEL_DELTA.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A roda do mouse combina os recursos de um botão de rolagem e um botão do mouse. O botão de rolagem tem cortes discretos, com espaçamento uniforme. Quando você gira a roda, uma mensagem de roda é enviada como cada ponto é encontrado. Um ponto de roda, um detentor é definido pela constante WHEEL_DELTA, windows, que é 120. Um valor positivo indica que a roda foi girada para frente (afastada de usuário); um valor negativo indica que o botão de rolagem foi girado para trás (em direção ao usuário).  
  
 Atualmente, um valor de 120 é o padrão para um detentor. Se mouses de resolução mais alta são introduzidos, a definição de WHEEL_DELTA pode se tornar menor. A maioria dos aplicativos deve verificar se há um valor positivo ou negativo em vez de um total agregado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos. Esse relatório ajuda a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como uma <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>. Em seguida, nomeie a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point" Usage="System.Windows.Forms.MouseEventArgs.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o local do mouse durante o evento de geração do mouse.</summary>
        <value>Um <see cref="T:System.Drawing.Point" /> que contém as coordenadas de x e y do mouse, em pixels, relativas ao canto superior esquerdo da tela.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.Location%2A> propriedade para acompanhar os cliques do mouse esquerdo e desenhar uma série de segmentos de linha reta em resposta à entrada do usuário. O exemplo não persiste as linhas desenhadas se você ocultar o formulário e, em seguida, exibi-lo novamente; Esse código foi omitido para manter a simplicidade.  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.MouseEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coordenada X do mouse durante o evento de mouse gerador.</summary>
        <value>A coordenada X do mouse, em pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As coordenadas do mouse variam de acordo com o evento sendo gerado. Por exemplo, quando o <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> evento é manipulado, os valores de coordenada do mouse estão em relação as coordenadas do controle que acionou o evento. Alguns eventos relacionados a operações de arrastar e soltar associou os valores de coordenada do mouse em relação à origem de formulário ou a origem da tela.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.MouseEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coordenada y do mouse durante o evento de mouse gerador.</summary>
        <value>A coordenada y do mouse, em pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As coordenadas do mouse variam de acordo com o evento sendo gerado. Por exemplo, quando o <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> evento é manipulado, os valores de coordenada do mouse estão em relação as coordenadas do controle que acionou o evento. Alguns eventos relacionados a operações de arrastar e soltar associou os valores de coordenadas do mouse que são relativas à origem do formulário ou a origem da tela.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela. Para usar esse código, chame `TrackCoordinates` do construtor de formulário.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>