<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d4a0d5b4dd091dfa102ec6610e94b063b3f1c45" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type MouseEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1987b-101">Fornece dados para os eventos <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> e <see cref="E:System.Windows.Forms.Control.MouseMove" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1987b-101">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1987b-102">O <xref:System.Windows.Forms.Control.MouseDown> evento ocorre quando o usuário pressiona o botão do mouse enquanto o ponteiro está sobre um controle.</span><span class="sxs-lookup"><span data-stu-id="1987b-102">The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control.</span></span> <span data-ttu-id="1987b-103">O <xref:System.Windows.Forms.Control.MouseUp> evento ocorre quando o usuário libera o botão do mouse enquanto o ponteiro permanece sobre o controle.</span><span class="sxs-lookup"><span data-stu-id="1987b-103">The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control.</span></span> <span data-ttu-id="1987b-104">O <xref:System.Windows.Forms.Control.MouseMove> evento ocorre quando o usuário move o ponteiro do mouse sobre um controle.</span><span class="sxs-lookup"><span data-stu-id="1987b-104">The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control.</span></span> <span data-ttu-id="1987b-105">Um <xref:System.Windows.Forms.MouseEventArgs> Especifica qual botão do mouse é pressionado, quantas vezes o botão do mouse foi pressionado e liberado, as coordenadas do mouse e o valor a roda do mouse é movida.</span><span class="sxs-lookup"><span data-stu-id="1987b-105">A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.</span></span>  
  
 <span data-ttu-id="1987b-106">É possível receber um <xref:System.Windows.Forms.Control.MouseDown> evento sem correspondente <xref:System.Windows.Forms.Control.MouseUp>, se o usuário alternar o foco para outro aplicativo antes de liberar o botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="1987b-106">It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.</span></span>  
  
 <span data-ttu-id="1987b-107">Esses três eventos existem para o <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, e <xref:System.Windows.Forms.NotifyIcon> classes.</span><span class="sxs-lookup"><span data-stu-id="1987b-107">These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.</span></span>  
  
 <span data-ttu-id="1987b-108">Para obter informações sobre o modelo de evento, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1987b-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1987b-109">Identificadores de exemplos de código a seguir a <xref:System.Windows.Forms.Control.MouseDown> evento em um <xref:System.Windows.Forms.TextBox> controlar de forma que clicar no botão direito do mouse seleciona todo o texto no controle.</span><span class="sxs-lookup"><span data-stu-id="1987b-109">The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="1987b-110">Este exemplo requer que você tenha um formulário que contém um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="1987b-110">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 <span data-ttu-id="1987b-111">O seguinte exemplo de código usa o `Location` propriedade para acompanhar clica do botão esquerdo do mouse e para desenhar uma série de segmentos de linha reta em resposta à entrada do usuário.</span><span class="sxs-lookup"><span data-stu-id="1987b-111">The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="1987b-112">O exemplo não atualiza as linhas se você ocultar o formulário e, em seguida, exibi-la novamente; Este código foi omitido para manter a simplicidade.</span><span class="sxs-lookup"><span data-stu-id="1987b-112">The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 <span data-ttu-id="1987b-113">O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela.</span><span class="sxs-lookup"><span data-stu-id="1987b-113">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MouseEventArgs : System.Windows.Forms.MouseButtons * int * int * int * int -&gt; System.Windows.Forms.MouseEventArgs" Usage="new System.Windows.Forms.MouseEventArgs (button, clicks, x, y, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">
          <span data-ttu-id="1987b-114">Um dos valores <see cref="T:System.Windows.Forms.MouseButtons" /> que indicam qual botão do mouse for pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-114">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed.</span>
          </span>
        </param>
        <param name="clicks">
          <span data-ttu-id="1987b-115">O número de vezes que um botão do mouse for pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-115">The number of times a mouse button was pressed.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="1987b-116">A coordenada X de um clique do mouse, em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-116">The x-coordinate of a mouse click, in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1987b-117">A coordenada Y de um clique do mouse, em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-117">The y-coordinate of a mouse click, in pixels.</span>
          </span>
        </param>
        <param name="delta">
          <span data-ttu-id="1987b-118">Uma contagem com sinal do número de detentores que o botão de rolagem girou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-118">A signed count of the number of detents the wheel has rotated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1987b-119">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.MouseEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.MouseEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.Button : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.MouseEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-120">Obtém o botão do mouse que foi pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-120">Gets which mouse button was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-121">Um dos valores de <see cref="T:System.Windows.Forms.MouseButtons" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-121">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1987b-122">O seguinte código exemplo manipula o <xref:System.Windows.Forms.Control.MouseDown> evento em um <xref:System.Windows.Forms.TextBox> controlar de forma que clicar no botão direito do mouse seleciona todo o texto no controle.</span><span class="sxs-lookup"><span data-stu-id="1987b-122">The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="1987b-123">Este exemplo requer que você tenha um formulário que contém um <xref:System.Windows.Forms.TextBox> controle chamado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="1987b-123">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Clicks : int" Usage="System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-124">Obtém o número de vezes que o botão do mouse foi pressionado ou liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-124">Gets the number of times the mouse button was pressed and released.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-125">Um <see cref="T:System.Int32" /> que contém o número de vezes que o botão do mouse foi pressionado ou liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-125">An <see cref="T:System.Int32" /> that contains the number of times the mouse button was pressed and released.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1987b-126">Embora define a interface do Windows padrão eventos do mouse como cliques único ou clicar duas vezes, aplicativos individuais podem interpretar um grande número de cliques como um único evento.</span><span class="sxs-lookup"><span data-stu-id="1987b-126">Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1987b-127">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="1987b-127">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1987b-128">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="1987b-128">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1987b-129">Esse relatório ajuda a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="1987b-129">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1987b-130">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1987b-130">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1987b-131">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como um <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="1987b-131">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="1987b-132">Em seguida, nomear a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="1987b-132">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-133">Obtém uma contagem com sinal do número de detentores que a roda do mouse girou, multiplicado pela constante WHEEL_DELTA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-133">Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span>
          </span>
          <span data-ttu-id="1987b-134">Um detentor é um ponto da roda do mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-134">A detent is one notch of the mouse wheel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-135">Uma contagem com sinal do número de detentores que a roda do mouse girou, multiplicado pela constante WHEEL_DELTA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-135">A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1987b-136">A roda do mouse combina os recursos de um disco e um botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="1987b-136">The mouse wheel combines the features of a wheel and a mouse button.</span></span> <span data-ttu-id="1987b-137">O disco tem cortes discretas, com espaçamento uniforme.</span><span class="sxs-lookup"><span data-stu-id="1987b-137">The wheel has discrete, evenly spaced notches.</span></span> <span data-ttu-id="1987b-138">Quando você gira a roda, uma mensagem de roda é enviada cada entalhe for encontrado.</span><span class="sxs-lookup"><span data-stu-id="1987b-138">When you rotate the wheel, a wheel message is sent as each notch is encountered.</span></span> <span data-ttu-id="1987b-139">Um ponto de roda, um detentor é definido pela constante de windows WHEEL_DELTA, que é 120.</span><span class="sxs-lookup"><span data-stu-id="1987b-139">One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120.</span></span> <span data-ttu-id="1987b-140">Um valor positivo indica que a roda foi girada para a frente (afastada de usuário); um valor negativo indica que o disco foi girado para trás (em direção ao usuário).</span><span class="sxs-lookup"><span data-stu-id="1987b-140">A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).</span></span>  
  
 <span data-ttu-id="1987b-141">Atualmente, um valor de 120 é o padrão para um detentor.</span><span class="sxs-lookup"><span data-stu-id="1987b-141">Currently, a value of 120 is the standard for one detent.</span></span> <span data-ttu-id="1987b-142">Se foram introduzidos mouses de resolução mais altas, a definição de WHEEL_DELTA pode se tornar menor.</span><span class="sxs-lookup"><span data-stu-id="1987b-142">If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller.</span></span> <span data-ttu-id="1987b-143">A maioria dos aplicativos deve verificar um valor positivo ou negativo, em vez de um total de agregação.</span><span class="sxs-lookup"><span data-stu-id="1987b-143">Most applications should check for a positive or negative value rather than an aggregate total.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1987b-144">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="1987b-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1987b-145">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="1987b-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="1987b-146">Esse relatório ajuda a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="1987b-146">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1987b-147">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1987b-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1987b-148">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como um <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="1987b-148">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="1987b-149">Em seguida, nomear a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="1987b-149">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point" Usage="System.Windows.Forms.MouseEventArgs.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-150">Obtém o local do mouse durante o evento de geração do mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-150">Gets the location of the mouse during the generating mouse event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-151">Um <see cref="T:System.Drawing.Point" /> que contém as coordenadas de x e y do mouse, em pixels, relativas ao canto superior esquerdo da tela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-151">A <see cref="T:System.Drawing.Point" /> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1987b-152">O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.Location%2A> propriedade controle de cliques do mouse esquerdo e desenhar uma série de segmentos de linha reta em resposta à entrada do usuário.</span><span class="sxs-lookup"><span data-stu-id="1987b-152">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.Location%2A> property to track left mouse clicks and draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="1987b-153">O exemplo não mantém as linhas desenhadas se você ocultar o formulário e, em seguida, exibi-la novamente; Este código foi omitido para manter a simplicidade.</span><span class="sxs-lookup"><span data-stu-id="1987b-153">The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.MouseEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-154">Obtém a coordenada X do mouse durante o evento de mouse gerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-154">Gets the x-coordinate of the mouse during the generating mouse event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-155">A coordenada X do mouse, em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-155">The x-coordinate of the mouse, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1987b-156">As coordenadas do mouse variam de acordo com o evento que está sendo gerado.</span><span class="sxs-lookup"><span data-stu-id="1987b-156">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="1987b-157">Por exemplo, quando o <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> evento é manipulado, os valores de coordenada de mouse são relativas às coordenadas do controle que disparou o evento.</span><span class="sxs-lookup"><span data-stu-id="1987b-157">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="1987b-158">Alguns eventos relacionados às operações de arrastar e soltar associou valores de coordenada do mouse em relação à origem de formulário ou a origem da tela.</span><span class="sxs-lookup"><span data-stu-id="1987b-158">Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1987b-159">O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela.</span><span class="sxs-lookup"><span data-stu-id="1987b-159">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.MouseEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1987b-160">Obtém a coordenada y do mouse durante o evento de mouse gerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-160">Gets the y-coordinate of the mouse during the generating mouse event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1987b-161">A coordenada y do mouse, em pixels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1987b-161">The y-coordinate of the mouse, in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1987b-162">As coordenadas do mouse variam de acordo com o evento que está sendo gerado.</span><span class="sxs-lookup"><span data-stu-id="1987b-162">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="1987b-163">Por exemplo, quando o <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> evento é manipulado, os valores de coordenada de mouse são relativas às coordenadas do controle que disparou o evento.</span><span class="sxs-lookup"><span data-stu-id="1987b-163">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="1987b-164">Alguns eventos relacionados às operações de arrastar e soltar associou valores de coordenada de mouse são relativas à origem de formulário ou a origem da tela.</span><span class="sxs-lookup"><span data-stu-id="1987b-164">Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1987b-165">O seguinte exemplo de código usa o <xref:System.Windows.Forms.MouseEventArgs.X%2A> e <xref:System.Windows.Forms.MouseEventArgs.Y%2A> propriedades para exibir a posição atual do ponteiro do mouse em um <xref:System.Windows.Forms.ToolTip> janela.</span><span class="sxs-lookup"><span data-stu-id="1987b-165">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span> <span data-ttu-id="1987b-166">Para usar esse código, chame `TrackCoordinates` do construtor de formulário.</span><span class="sxs-lookup"><span data-stu-id="1987b-166">To use this code, call `TrackCoordinates` from the form constructor.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>