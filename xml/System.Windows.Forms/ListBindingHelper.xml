<Type Name="ListBindingHelper" FullName="System.Windows.Forms.ListBindingHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f7ff5de55e274bd65cdc8470e83223c08c26ba" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37510079" /></Metadata><TypeSignature Language="C#" Value="public static class ListBindingHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ListBindingHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBindingHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBindingHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBindingHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type ListBindingHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece funcionalidades para descobrir uma lista vinculável e as propriedades dos itens contidos na lista quando elas diferem das propriedades públicas do objeto ao qual elas se associam.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada pelas classes como <xref:System.Windows.Forms.BindingSource>.  
  
 Observe que, para os aplicativos para Smartphone, essa classe requer software Windows Mobile versão 5.0 para Smartphones.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetList">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna uma lista associada a uma fonte de dados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (list As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetList : obj -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">A fonte de dados a ser examinada para obtenção de sua lista subjacente.</param>
        <summary>Retorna uma lista associada à fonte de dados especificada.</summary>
        <returns>Um <see cref="T:System.Object" /> que representará a lista subjacente se ela existir; caso contrário, a fonte de dados original especificada por <paramref name="list" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a fonte de dados especificado pela `list` parâmetro implementa o <xref:System.ComponentModel.IListSource> interface, em seguida, a <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> método retornará um objeto do tipo <xref:System.Collections.IList> que representa a lista associada. Caso contrário, esse método apenas retornar a fonte de dados especificado, pois não há nenhuma lista subjacente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (dataSource As Object, dataMember As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetList : obj * string -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados com base na qual localizar a lista.</param>
        <param name="dataMember">O nome da propriedade da fonte de dados que contém a lista. Ele pode ser <see langword="null" />.</param>
        <summary>Retorna um objeto, normalmente uma lista, da avaliação de uma fonte de dados e de um membro de dados opcional especificados.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa a lista subjacente se ela foi encontrada; caso contrário, <paramref name="dataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o membro de dados for `null` ou uma cadeia de caracteres vazia (""), o <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> retorno do método `dataSource`.  
  
 Se `dataSource` não é uma lista <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> retorna o valor da `dataSource` propriedade que corresponda a `dataMember` valor.  
  
 Se `dataSource` é uma lista, em que ele implementa as <xref:System.Windows.Forms.ICurrencyManagerProvider> ou <xref:System.Collections.IEnumerable> interfaces, e em seguida, a lista subjacente é obtida pela escolhendo um item na lista e consulta de item para o valor da propriedade nomeada pelo `dataMember`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O nome do membro de dados especificado não correspondeu a nenhuma das propriedades encontradas para a fonte de dados.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades dos itens contidos na lista ou a lista propriamente dita.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">A fonte de dados a examinar para obtenção de informações de propriedade.</param>
        <summary>Retorna o <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades de um tipo de item contido em uma fonte de dados especificada ou as propriedades da fonte de dados especificada.</summary>
        <returns>O <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades dos itens contidos em <paramref name="list" /> ou as propriedades de <paramref name="list." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método é usado para examinar a coleção de propriedades para uma fonte de dados. A ação desse método depende o tipo real do `list` parâmetro de acordo com a tabela a seguir:  
  
|Tipo de parâmetro|Ação|  
|--------------------|------------|  
|Um tipo que é uma lista ou uma coleção de itens.|Retorna um <xref:System.ComponentModel.PropertyDescriptorCollection> que descreve as propriedades do tipo de item contido na lista.|  
|Um tipo que não é uma lista ou coleção.|Retorna um <xref:System.ComponentModel.PropertyDescriptorCollection> que descreve as propriedades do tipo.|  
|`null`|Retorna um <xref:System.ComponentModel.PropertyDescriptorCollection> vazio.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">A fonte de dados a ser examinada para obtenção de informações de propriedade.</param>
        <param name="listAccessors">A matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> que descreve as propriedades da fonte de dados a ser examinada. Ele pode ser <see langword="null" />.</param>
        <summary>Retorna o <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades de um tipo de item contido em uma propriedade de coleção de uma fonte de dados. Usa a matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificada para indicar quais propriedades examinar.</summary>
        <returns>O <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades do tipo de item contido em uma propriedade de coleção da fonte de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método é útil quando a fonte de dados tem propriedades que são uma coleção de itens e você precisa saber as propriedades do tipo de item na coleção, não as propriedades do tipo de coleção.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object dataSource, string dataMember, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object dataSource, string dataMember, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.String,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (dataSource As Object, dataMember As String, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ dataSource, System::String ^ dataMember, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * string * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (dataSource, dataMember, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados a ser examinada para obtenção de informações de propriedade.</param>
        <param name="dataMember">O membro de dados opcional a ser examinado para obtenção de informações de propriedade. Ele pode ser <see langword="null" />.</param>
        <param name="listAccessors">A matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> que descreve as propriedades do membro de dados a ser examinado. Ele pode ser <see langword="null" />.</param>
        <summary>Retorna o <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades de um tipo de item contido no membro de dados especificado de uma fonte de dados. Usa a matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificada para indicar quais propriedades examinar.</summary>
        <returns>O <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que descreve as propriedades de um tipo de item contido em uma propriedade de coleção da fonte de dados especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `dataMember` parâmetro pode ser `null`, caso em que o <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> método retornará as descrições de propriedade usando a fonte de dados e o <xref:System.ComponentModel.PropertyDescriptor> matriz.  
  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> é útil quando o membro de dados tem propriedades que são uma coleção de itens e você precisa saber as propriedades do tipo de item na coleção, não as propriedades do tipo de coleção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O membro de dados especificado não pôde ser encontrado na fonte de dados especificada.</exception>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemType">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna o tipo de um item contido em uma lista ou coleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (list As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">A lista a ser examinada para obtenção de informações de tipo.</param>
        <summary>Retorna o tipo de dados dos itens na lista especificada.</summary>
        <returns>O <see cref="T:System.Type" /> dos itens contidos na lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `list` parâmetro não é uma lista ou matriz, o tipo retornado será do `list` parâmetro em si.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (dataSource As Object, dataMember As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj * string -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados a ser examinada para obtenção de itens.</param>
        <param name="dataMember">O nome opcional da propriedade na fonte de dados a ser usada como o membro de dados. Ele pode ser <see langword="null" />.</param>
        <summary>Retorna o tipo de dados dos itens na fonte de dados especificada.</summary>
        <returns>Para associação de dados complexos, o <see cref="T:System.Type" /> dos itens representados pelo <paramref name="dataMember" /> na fonte de dados; caso contrário, o <see cref="T:System.Type" /> do item na lista propriamente dita.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta versão do <xref:System.Windows.Forms.ListBindingHelper.GetListItemType%2A> método é usado para determinar o tipo de itens usados em esquemas de associação de dados simples ou complexas. Esse método estático pode ser útil para determinar se um esquema de vinculação de dados proposto é apropriado antes de tentar a ele.  
  
 Se `dataSource` está `null`, os descritores de propriedade não podem ser encontrados para os itens da lista de membro de dados especificado ou o descritor de propriedade do item de lista é um <xref:System.ComponentModel.ICustomTypeDescriptor>, em seguida, esse método retorna o tipo da <xref:System.Object> classe.  
  
 Se `dataMember` está `null` ou vazio, em seguida, esse método retorna o <xref:System.Type> dos itens na fonte de dados, se for uma lista; caso contrário, esse método retornará o <xref:System.Type> dos dados de origem em si.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public static string GetListName (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetListName(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListName(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListName (list As Object, listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetListName(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListName : obj * System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="System.Windows.Forms.ListBindingHelper.GetListName (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">A fonte de dados a ser examinada para obtenção do nome da lista.</param>
        <param name="listAccessors">Uma matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> a ser localizada na fonte de dados. Ele pode ser <see langword="null" />.</param>
        <summary>Retorna o nome de uma lista subjacente, dados uma fonte de dados e uma matriz <see cref="T:System.ComponentModel.PropertyDescriptor" /> opcional.</summary>
        <returns>O nome da lista na fonte de dados, conforme descrito pelo <paramref name="listAccessors" /> ou então o nome do tipo da fonte de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `listAccessors` está `null` ou vazio, o <xref:System.Windows.Forms.ListBindingHelper.GetListName%2A> método retorna o nome do tipo de fonte de dados.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
  </Members>
</Type>