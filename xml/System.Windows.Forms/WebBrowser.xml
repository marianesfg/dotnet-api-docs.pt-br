<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45a5e2c644ddcfc5fa210e25521c812cbf3fce0c" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33660079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("DocumentCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Url")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite ao usuário navegar em páginas da Web dentro do seu formulário.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> control permite host páginas da Web e outros documentos habilitados para navegador em seus aplicativos de formulários do Windows. Você pode usar o <xref:System.Windows.Forms.WebBrowser> controlar, por exemplo, para fornecer assistência ao usuário integrado baseado em HTML ou recursos de navegação em seu aplicativo de Web. Além disso, você pode usar o <xref:System.Windows.Forms.WebBrowser> controle para adicionar controles existentes baseado na Web para seus aplicativos de cliente de formulários do Windows.  
  
> [!IMPORTANT]
>  O <xref:System.Windows.Forms.WebBrowser> controle está com uso intensivo de recursos. Certifique-se de chamar o <xref:System.ComponentModel.Component.Dispose> método quando tiver terminado de usar o controle para garantir que todos os recursos são liberados de forma oportuna. Você deve chamar o <xref:System.ComponentModel.Component.Dispose> método no mesmo thread de eventos, que devem ser sempre a mensagem anexados ou thread da interface do usuário (IU).  
  
 O <xref:System.Windows.Forms.WebBrowser> controle não pode ser usado por código parcialmente confiável. Para obter mais informações, consulte [usando bibliotecas de código parcialmente confiável](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 O <xref:System.Windows.Forms.WebBrowser> controle tem várias propriedades, métodos e eventos relacionados a navegação. Os membros a seguir permitem que você navegue o controle para uma URL específica, retroceder e Avançar pela lista de histórico de navegação e carregar a página inicial e a página de pesquisa do usuário atual:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Se o painel de navegação não for bem-sucedida, uma página indicando que o problema será exibida. Navegação com qualquer uma das causas membros o <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, e <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos para ocorrer em diferentes estágios de navegação.  
  
 Esses e outros membros, como o <xref:System.Windows.Forms.WebBrowser.Stop%2A> e <xref:System.Windows.Forms.WebBrowser.Refresh%2A> métodos, permitem implementar controles de interface do usuário em seu aplicativo semelhante no Internet Explorer. Alguns membros são úteis, mesmo quando você não deseja exibir o <xref:System.Windows.Forms.WebBrowser> controle do formulário. Por exemplo, você pode usar o <xref:System.Windows.Forms.WebBrowser.Print%2A> método para imprimir a versão mais recente de uma página da Web sem exibir a página para o usuário.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle também lhe permite exibir o conteúdo que você cria no seu aplicativo ou recuperar de um arquivo de banco de dados ou de recursos. Use o <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedade para obter ou definir o conteúdo do documento atual como um fluxo de dados ou de cadeia de caracteres.  
  
 Você também pode manipular o conteúdo de uma página da Web por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade, que contém um <xref:System.Windows.Forms.HtmlDocument> objeto que fornece acesso gerenciado para o modelo de objeto de documento (DOM) HTML da página atual. Esta propriedade é útil quando usado em combinação com o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade, para implementar a comunicação bidirecional entre o código de aplicativo e o código DHTML (HTML) dinâmico em uma página da Web, permitindo que você combine controles baseado na Web e controles de formulários do Windows em uma interface de usuário único. Você pode usar o <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade para chamar os métodos de código de script do seu aplicativo. O código de script pode acessar o aplicativo por meio de `window.external` objeto, que é um objeto DOM interno fornecido para acesso ao host, e que é mapeado para o objeto que você especificar para o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle é um wrapper gerenciado para o ActiveX [controle WebBrowser](http://go.microsoft.com/fwlink/?LinkId=198812)e usa a versão do controle está instalado no computador do usuário.  
  
> [!NOTE]
>  Essa classe faz com que as demandas de segurança no nível de classe. Um <xref:System.Security.SecurityException> é gerada quando uma classe derivada ou qualquer chamador na pilha de chamadas não tem permissão de confiança total. Para obter detalhes sobre as exigências de segurança, consulte [demandas de Link](~/docs/framework/misc/link-demands.md) e [demandas de herança](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
> [!NOTE]
>  O <xref:System.Windows.Forms.WebBrowser> classe só pode ser usada em threads configurados para o modo single thread apartment (STA). Para usar essa classe, certifique-se de que seu `Main` método está marcado com o <xref:System.STAThreadAttribute> atributo.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como implementar uma barra de endereços para uso com o <xref:System.Windows.Forms.WebBrowser> controle. Este exemplo requer que você tenha um formulário que contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`, um <xref:System.Windows.Forms.TextBox> controle chamado `TextBoxAddress`e um <xref:System.Windows.Forms.Button> controle chamado `ButtonGo`. Quando você digitar uma URL na caixa de texto e pressione ENTER ou clique no **vá** botão, o <xref:System.Windows.Forms.WebBrowser> controle navega para a URL especificada. Quando você navegar clicando em um hiperlink, a caixa de texto será atualizado automaticamente para exibir a URL atual.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para classes derivadas herdar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o <xref:System.Windows.Forms.WebBrowser> controle está vazio. Para navegar por ele em um documento inicial, defina o <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O controle <see cref="T:System.Windows.Forms.WebBrowser" /> é hospedado dentro do Internet Explorer.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle pode navegar para outra página após o carregamento da página inicial.</summary>
        <value>
          <see langword="true" /> se o controle puder navegar para outra página; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não impede que você carregar uma página inicial, definindo o <xref:System.Windows.Forms.WebBrowser.Url%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedade, mas impedirá que toda a navegação subsequente.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o controle <see cref="T:System.Windows.Forms.WebBrowser" /> navega para documentos soltos nele.</summary>
        <value>
          <see langword="true" /> se o controle aceitar documentos colocados nele; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o <xref:System.Windows.Forms.WebBrowser> controle automaticamente navega para documentos que são soltos nele. Esse comportamento é útil quando você usar o controle como um navegador genérico. Se você usar o controle para exibir o conteúdo projetado especificamente para o aplicativo, como usuário com base em HTML assistência, defina o <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propriedade `false` para impedir a exibição de outros tipos de conteúdo. Isso é particularmente útil quando você deseja ocultar o fato de que você está usando o <xref:System.Windows.Forms.WebBrowser> controle, por exemplo, para criar uma interface de usuário que combina perfeitamente controles baseados na Web com controles de formulários do Windows.  
  
 Você pode desabilitar outros recursos de navegador padrão, definindo o <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> e <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriedades `false`.  
  
> [!NOTE]
>  Essa propriedade não está relacionada ao <xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType> propriedade e não faz com que os eventos de arrastar e soltar, como o <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> evento ocorrer para o controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">Um objeto que representa o controle ActiveX subjacente.</param>
        <summary>Chamado pelo controle quando o controle ActiveX subjacente é criado.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Classes derivadas podem substituir este método para converter o objeto ActiveX subjacente para uma interface apropriada e armazene em cache em uma variável de membro. Esse valor deve ser liberado, em seguida, em uma substituição do <see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se uma página anterior no histórico de navegação está disponível, que permite que o método <see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> tenha êxito.</summary>
        <value>
          <see langword="true" /> se o controle puder navegar de forma regressiva; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. O <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método navega a <xref:System.Windows.Forms.WebBrowser> controlar para a página anterior nesse histórico, se houver um disponível. Use o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriedade para determinar se o histórico de navegação está disponível e contém uma página anterior. Se essa propriedade for `true`, o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método terá êxito. Caso contrário, chamando o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método retornará um valor de `false` e não ocorrerá nenhuma navegação.  
  
 Você também pode manipular o <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> alterações de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **novamente** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o início do histórico de navegação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriedade para implementar um **novamente** botão para o <xref:System.Windows.Forms.WebBrowser> controle que é semelhante ao **novamente** botão no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `backButton`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. O <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método navega a <xref:System.Windows.Forms.WebBrowser> controlar para a página anterior nesse histórico, se houver um disponível. O <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriedade indica se o histórico de navegação está disponível e contém uma página anterior. Manipular o <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> alterações de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **novamente** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o início do histórico de navegação.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> eventos para implementar um **novamente** botão para o <xref:System.Windows.Forms.WebBrowser> controle que é semelhante ao **novamente** botão na Internet Pesquisador de objetos. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `backButton`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se uma próxima página no histórico de navegação está disponível, o que permite que o método <see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> tenha êxito.</summary>
        <value>
          <see langword="true" /> Se o controle puder navegar para a frente; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. O <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método navega a <xref:System.Windows.Forms.WebBrowser> controlar para a próxima página esse histórico, se houver um disponível como resultado de uma navegação regressiva anterior. Se essa propriedade for `true`, o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método terá êxito. Caso contrário, chamando o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método retornará um valor de `false` e não ocorrerá nenhuma navegação.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriedade para determinar se o histórico de navegação está disponível e contém uma página localizada depois do atual, permitindo que o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método tenha êxito.  
  
 Você também pode manipular o <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> alterações de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **Forward** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o final do histórico de navegação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> eventos para implementar um **Forward** botão para o <xref:System.Windows.Forms.WebBrowser> controle que é semelhante ao **Forward** no botão Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonForward`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. O <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método navega a <xref:System.Windows.Forms.WebBrowser> controlar para a próxima página esse histórico, se houver um disponível como resultado de uma navegação regressiva anterior. O <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriedade indica se o histórico de navegação está disponível e contém uma página localizada depois do atual, permitindo que o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método tenha êxito. Manipular o <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> alterações de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **Forward** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o final do histórico de navegação.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar um **Forward** botão para o <xref:System.Windows.Forms.WebBrowser> controle que é semelhante ao **Forward** botão na Internet Pesquisador de objetos. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonForward`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa o controle ActiveX subjacente a um cliente que pode manipular eventos de controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil se você estiver familiarizado com o desenvolvimento de OLE com não gerenciado `WebBrowser` controle ActiveX e você deseja estender a funcionalidade do Windows Forms <xref:System.Windows.Forms.WebBrowser> controle, que é um wrapper gerenciado para o controle ActiveX. Você pode usar essa extensão para implementar eventos do controle ActiveX que não são fornecidos pelo controle de wrapper.  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra o uso deste método em uma classe derivada de <xref:System.Windows.Forms.WebBrowser> que complementa o normal <xref:System.Windows.Forms.WebBrowser> eventos com o `NavigateError` evento a partir do OLE `DWebBrowserEvents2` interface.  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma referência a um site do controle ActiveX <see langword="WebBrowser" /> não gerenciado que você pode estender para personalizar o controle <see cref="T:System.Windows.Forms.WebBrowser" /> gerenciado.</summary>
        <returns>Um <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> que representa o site do controle ActiveX <see langword="WebBrowser" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil se você estiver familiarizado com o desenvolvimento de OLE com não gerenciado `WebBrowser` controle ActiveX e você deseja estender a funcionalidade do Windows Forms <xref:System.Windows.Forms.WebBrowser> controle, que é um wrapper gerenciado para o controle ActiveX. Você pode usar essa extensão, por exemplo, para personalizar os menu e atalhos teclas de atalho do navegador ou para fornecer uma configuração de segurança personalizada para documentos hospedados.  
  
 Para usar esse recurso, implementar classes que herdam o <xref:System.Windows.Forms.WebBrowser> e <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classes. Não gerenciado `WebBrowser` controle ActiveX usa protegido <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> método para recuperar as interfaces de extensibilidade implementadas pelo <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe. Substituir o <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> método para retornar uma instância de sua própria classe que herde de <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe. O <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe fornece implementações padrão de OLE `IDocHostUIHandler` interface. Você pode fornecer sua própria implementação desta interface ou implementar qualquer outro `WebBrowser` interface de controle ActiveX para personalizar o comportamento do controle.  
  
> [!NOTE]
>  Se você fornecer sua própria implementação de qualquer `IDocHostUIHandler` membros, você deve implementar todos os membros da interface.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tamanho padrão do controle.</summary>
        <value>Obtém o tamanho padrão do controle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chamado pelo controle quando o controle ActiveX subjacente é descartado.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Classes derivadas podem substituir este método para liberar uma referência ao objeto base do ActiveX que foi armazenado em cache em uma substituição do <see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera o cliente de manipulação de eventos anexado no método <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> do controle ActiveX subjacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é útil se você estiver familiarizado com o desenvolvimento de OLE com não gerenciado `WebBrowser` controle ActiveX e você deseja estender a funcionalidade do Windows Forms <xref:System.Windows.Forms.WebBrowser> controle, que é um wrapper gerenciado para o controle ActiveX. Você pode usar essa extensão para implementar eventos do controle ActiveX que não são fornecidos pelo controle de wrapper.  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra o uso deste método em uma classe derivada de <xref:System.Windows.Forms.WebBrowser> que complementa o padrão <xref:System.Windows.Forms.WebBrowser> eventos com o `NavigateError` evento a partir do OLE `DWebBrowserEvents2` interface.  
  
 Para o exemplo de código completo, consulte <xref:System.Windows.Forms.WebBrowser.CreateSink%2A>.  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.Windows.Forms.WebBrowser" /> e opcionalmente libera os recursos gerenciados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Windows.Forms.HtmlDocument" /> que representa a página da Web exibida atualmente no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Um <see cref="T:System.Windows.Forms.HtmlDocument" /> que representa a página atual, ou <see langword="null" />, se nenhuma página for carregada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade quando você deseja acessar o conteúdo de uma página da Web exibida no <xref:System.Windows.Forms.WebBrowser> controle por meio do modelo de objeto de documento HTML (DOM). Isso é útil, por exemplo, quando você deseja usar controles da Web em seu aplicativo de formulários do Windows.  
  
 Você pode usar essa propriedade, em combinação com o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade, para implementar a comunicação bidirecional entre uma página da Web exibida no <xref:System.Windows.Forms.WebBrowser> controle e o seu aplicativo. Use o <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> método para chamar os métodos de script implementados em uma página da Web do seu código do aplicativo cliente. O código de script pode acessar o aplicativo por meio de `window.external` objeto, que é um objeto DOM interno fornecido para acesso ao host, e que é mapeado para um objeto que você especificar para o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade.  
  
 Para acessar o conteúdo de uma página da Web como uma cadeia de caracteres, use o <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriedade. Para acessar o conteúdo de uma página da Web como um <xref:System.IO.Stream>, use o <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade em um manipulador para o <xref:System.Windows.Forms.WebBrowser.Navigating> evento para determinar se um formulário da Web tiver sido preenchido. Se o campo de entrada não contém um valor, a navegação é cancelada.  
  
 Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Windows.Forms.WebBrowser" /> termina de carregar um documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle navega para um novo documento, sempre que uma das propriedades a seguir está definida ou métodos é chamado:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Manipular o <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> evento para receber notificações quando o carregamento for concluído o novo documento. Quando o <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> evento ocorrer, o novo documento totalmente é carregado, o que significa que você pode acessar seu conteúdo por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedade.  
  
 Para receber notificação antes do início da navegação, manipule o <xref:System.Windows.Forms.WebBrowser.Navigating> evento. O evento permite cancelar a navegação se determinadas condições não foram atendidas, por exemplo, quando o usuário não tenha sido completamente preenchido um formulário. Manipular o <xref:System.Windows.Forms.WebBrowser.Navigated> evento para receber notificações quando o <xref:System.Windows.Forms.WebBrowser> controle termina de navegação e começou a carregar o documento no novo local.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse evento para imprimir um documento depois que ela foi totalmente carregada.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um fluxo que contém o conteúdo da página da Web exibida no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Um <see cref="T:System.IO.Stream" /> com o conteúdo da página da Web atual ou <see langword="null" /> se nenhuma página for carregada. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade ao carregar uma página da Web para o <xref:System.Windows.Forms.WebBrowser> de controle de um <xref:System.IO.Stream> objeto. Você pode usar essa propriedade, por exemplo, para carregar páginas da Web de um arquivo de banco de dados ou de recursos. Quando você definir essa propriedade, o <xref:System.Windows.Forms.WebBrowser> controle automaticamente navega para o sobre: em branco URL antes de carregar o texto especificado. Isso significa que o <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, e <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos ocorrem quando você definir essa propriedade e o valor da <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade não é mais significativa.  
  
> [!NOTE]
>  Esta propriedade contém o conteúdo do documento atual, mesmo se outro documento foi solicitado. Se você definir o valor dessa propriedade e, em seguida, imediatamente obtê-lo novamente, o valor recuperado pode ser diferente do valor definido se o <xref:System.Windows.Forms.WebBrowser> controle não tenha tido tempo para carregar o novo conteúdo. Você pode recuperar o novo valor em uma <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> manipulador de eventos.  
  
 Para acessar o conteúdo de uma página da Web como uma cadeia de caracteres, use o <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriedade. Você também pode acessar o conteúdo da página usando o modelo de objeto de documento (DOM) HTML por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo HTML da página exibida no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>O texto HTML da página exibida ou cadeia de caracteres vazia ("") se nenhum documento for carregado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade quando você deseja manipular o conteúdo de uma página HTML exibido no <xref:System.Windows.Forms.WebBrowser> usando as ferramentas de processamento de cadeia de caracteres de controle. Você pode usar essa propriedade, por exemplo, para carregar as páginas de um banco de dados ou para analisar páginas usando expressões regulares. Quando você definir essa propriedade, o <xref:System.Windows.Forms.WebBrowser> controle automaticamente navega para o sobre: em branco URL antes de carregar o texto especificado. Isso significa que o <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, e <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos ocorrem quando você definir essa propriedade e o valor da <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade não é mais significativa.  
  
> [!NOTE]
>  Esta propriedade contém o texto do documento atual, mesmo se outro documento foi solicitado. Se você definir o valor dessa propriedade e, em seguida, imediatamente obtê-lo novamente, o valor recuperado pode ser diferente do valor definido se o <xref:System.Windows.Forms.WebBrowser> controle não tenha tido tempo para carregar o novo conteúdo. Você pode recuperar o novo valor em uma <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> manipulador de eventos. Como alternativa, você pode bloquear o thread até que o documento é carregado chamando o <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método em um loop até que o <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriedade retorna o valor que originalmente definido como.  
  
 Para acessar o conteúdo de uma página da Web como um <xref:System.IO.Stream>, use o <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedade. Você também pode acessar o conteúdo da página usando o modelo de objeto de documento (DOM) HTML por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriedade para exibir o conteúdo do documento de sua escolha programaticamente. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o título do documento exibido no momento no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>O título do documento atual ou a cadeia de caracteres vazia ("") se nenhum documento for carregado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é útil, por exemplo, quando você deseja exibir o título do documento na barra de título do aplicativo. Se nenhum título foi definido para o documento atual, essa propriedade é definida para o local do documento e o nome de arquivo.  
  
 Manipular o <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> barra de evento para o título no título da atualização quando o <xref:System.Windows.Forms.WebBrowser> controle navega para um novo documento.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propriedade para atualizar a barra de título do formulário com o título do documento atual. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode manipular esse evento para atualizar a barra de título do seu aplicativo com o valor atual de <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> evento para atualizar a barra de título do formulário com o título do documento atual. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do documento exibido atualmente no controle de <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>O tipo de documento atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor dessa propriedade corresponde ao tipo Multipurpose Internet Mail Extensions MIME () do documento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica o método de criptografia usado pelo documento exibido atualmente no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar essa propriedade com o <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> evento para implementar um indicador na interface do usuário do seu aplicativo semelhante para o ícone de bloqueio no Internet Explorer. Quando o documento atual não é criptografado, o valor dessa propriedade é <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType>. Quando o <xref:System.Windows.Forms.WebBrowser> controle exibe uma página da Web que contém várias estruturas com conteúdo de níveis de criptografia diferente, o valor dessa propriedade é <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType>. Quando o nível de criptografia é desconhecido, o valor dessa propriedade é <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType>. Outros valores indicam o tipo de criptografia presente. Para simular o comportamento do ícone de bloqueio no Internet Explorer, exiba o tipo de criptografia em uma dica de ferramenta que aparece quando o ponteiro do mouse passa sobre o indicador.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Windows.Forms.WebBrowser" /> navega de/para um site que usa criptografia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse evento com o <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propriedade para implementar um indicador na interface do usuário do seu aplicativo semelhante para o ícone de bloqueio no Internet Explorer. Em um manipulador para esse evento, verifique o valor da <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propriedade para determinar se deve ocultar ou exibir o indicador. Para simular o comportamento do ícone de bloqueio no Internet Explorer, você também pode fornecer uma dica de ferramenta que mostra o nível de criptografia quando o ponteiro do mouse passa sobre o indicador.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração. Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.WebBrowser> chamado `WebBrowser1`. Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando controle <see cref="T:System.Windows.Forms.WebBrowser" /> baixa um arquivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.WebBrowser.FileDownload> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração. Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.WebBrowser> chamado `WebBrowser1`. Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.WebBrowser.FileDownload> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o controle ou uma de suas janelas filho tem o foco de entrada.</summary>
        <value>
          <see langword="true" /> se o controle ou uma de suas janelas filho tiver o foco de entrada; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir o <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propriedade em uma classe derivada, use a classe base <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propriedade para estender a implementação base. Caso contrário, você deve fornecer todos os a implementação.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navega o controle <see cref="T:System.Windows.Forms.WebBrowser" /> até a página anterior do histórico de navegação, caso haja uma disponível.</summary>
        <returns>
          <see langword="true" /> se a navegação for bem-sucedida; <see langword="false" /> se não houver uma página anterior disponível no histórico de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Você pode usar o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para implementar um **novamente** botão semelhante do Internet Explorer, que permitirá que os usuários retornar à página anterior no histórico de navegação.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriedade para determinar se o histórico de navegação está disponível e contém uma página anterior. Manipular o <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> alterações de valor de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **novamente** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o início do histórico de navegação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para implementar um **novamente** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `backButton`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navega o controle <see cref="T:System.Windows.Forms.WebBrowser" /> para a próxima página do histórico de navegação, caso haja uma disponível.</summary>
        <returns>
          <see langword="true" /> se a navegação for bem-sucedida; <see langword="false" /> se não houver uma próxima página disponível no histórico de navegação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Você pode usar o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar um **Forward** botão semelhante do Internet Explorer, permitindo que seus usuários retornar para a próxima página no histórico de navegação depois de navegar para trás.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriedade para determinar se o histórico de navegação está disponível e contém uma página localizada depois do atual. Manipular o <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> evento para receber uma notificação quando o <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> alterações de valor de propriedade. O evento é útil, por exemplo, para alterar o estado habilitado de um **Forward** quando o <xref:System.Windows.Forms.WebBrowser> controle navega para ou deixa o final do histórico de navegação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para implementar um **Forward** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonForward`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navega o controle <see cref="T:System.Windows.Forms.WebBrowser" /> para a home page do usuário atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **início** botão semelhante no Internet Explorer. O usuário pode especificar uma home page no **opções da Internet** caixa de diálogo, que está disponível no painel de controle ou do **ferramentas** menu no Internet Explorer.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.GoHome%2A> método para implementar um **início** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonHome`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navega o controle <see cref="T:System.Windows.Forms.WebBrowser" /> para a página de pesquisa padrão do usuário atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um recurso de pesquisa semelhante no Internet Explorer. Dependendo da versão do Internet Explorer instalado, o usuário pode especificar uma página de pesquisa padrão no **opções da Internet** caixa de diálogo, que está disponível no painel de controle ou do **ferramentas** menu no Internet Explorer.  
  
 A página de pesquisa padrão é armazenada no registro, o `HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page` chave do registro. Com versões posteriores do Internet Explorer, essa chave do registro deve ser modificada para alterar a página de pesquisa padrão usada por este método. Para usar uma página de pesquisa diferente do padrão, chame o <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método ou especifique o <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.GoSearch%2A> método para implementar um **pesquisa** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonSearch`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o controle <see cref="T:System.Windows.Forms.WebBrowser" /> atualmente está carregando um novo documento.</summary>
        <value>
          <see langword="true" /> se o controle estiver ocupado com o carregamento de um documento; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se essa propriedade for `true`, você pode usar o <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para interromper a navegação atual antes do novo documento está totalmente carregado. Use o <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propriedade para determinar o estado exato de navegação do <xref:System.Windows.Forms.WebBrowser> controle. O <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> o valor da propriedade é false quando o <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> é o valor da propriedade <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o controle <see cref="T:System.Windows.Forms.WebBrowser" /> está no modo offline.</summary>
        <value>
          <see langword="true" /> se o controle <see cref="T:System.Windows.Forms.WebBrowser" /> estiver no modo offline; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No modo offline, o <xref:System.Windows.Forms.WebBrowser> forçados para carregar páginas da Web do cache local em vez de baixá-los.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o menu de atalho do controle <see cref="T:System.Windows.Forms.WebBrowser" /> está habilitado.</summary>
        <value>
          <see langword="true" /> se menu de atalho do controle <see cref="T:System.Windows.Forms.WebBrowser" /> estiver habilitado; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o <xref:System.Windows.Forms.WebBrowser> controle exibe um menu de atalho quando um usuário clica-lo. Esse comportamento é útil quando você usar o controle como um navegador genérico. Se você deseja ocultar o fato de que você está usando o <xref:System.Windows.Forms.WebBrowser> controle, por exemplo, para criar uma interface de usuário que combina perfeitamente controles baseados na Web com controles de formulários do Windows, defina o <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> a propriedade como false.  
  
 Você pode desabilitar outros recursos de navegador padrão, definindo o <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> e <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propriedades como false.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carrega o documento no local especificado para o controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">A URL do documento a ser carregada.</param>
        <summary>Carrega o documento da URL (Uniform Resource Locator) especificada no controle <see cref="T:System.Windows.Forms.WebBrowser" />, substituindo o documento anterior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle navega para o URI especificado e o adiciona ao final da lista de histórico. Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 Você pode usar o <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar uma barra de endereços semelhante no Internet Explorer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">Um <see cref="T:System.Uri" /> que representa a URL do documento a carregar.</param>
        <summary>Carrega o documento no local indicado pelo GUID <see cref="T:System.Uri" /> no controle <see cref="T:System.Windows.Forms.WebBrowser" />, substituindo o documento anterior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle navega para o URI especificado e o adiciona ao final da lista de histórico. Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 Você pode usar o <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar uma barra de endereços semelhante no Internet Explorer.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método para implementar uma barra de endereços para o <xref:System.Windows.Forms.WebBrowser> controle. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`, um <xref:System.Windows.Forms.TextBox> controle chamado `TextBoxAddress`e um <xref:System.Windows.Forms.Button> controle chamado `ButtonGo`. Quando você digitar uma URL na caixa de texto e pressione ENTER ou clique no **vá** botão, o <xref:System.Windows.Forms.WebBrowser> controle navega para a URL especificada. Quando você navegar clicando em um hiperlink, a caixa de texto será atualizado automaticamente para exibir a URL atual.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <exception cref="T:System.ArgumentException">O valor do parâmetro <paramref name="url" /> não representa um URI absoluto. Para obter mais informações, consulte <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">A URL do documento a ser carregada.</param>
        <param name="newWindow">
          <see langword="true" /> para carregar o documento em uma nova janela do navegador; <see langword="false" /> para carregar o documento no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Carrega o documento na URL (Uniform Resource Locator) especificada em uma nova janela do navegador ou no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga com um `newWindow` valor de parâmetro de `false`, o controle navega para o URI especificado normalmente e adiciona o URI para o final da lista de histórico. Quando você chamar essa sobrecarga com um `newWindow` valor de parâmetro de `true`, o <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado em uma nova janela do Internet Explorer, que mantém seu próprio histórico de navegação. Você pode manipular o <xref:System.Windows.Forms.WebBrowser.NewWindow> evento para receber notificação antes de uma nova janela do navegador é aberta, permitindo que você cancelar a ação, se necessário.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página ou carrega uma página em uma janela separada do navegador, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente. Quando uma página for carregada em uma janela separada do Internet Explorer, o usuário pode recuperar a versão mais recente clicando o **atualização** botão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">A URL do documento a ser carregada.</param>
        <param name="targetFrameName">O nome do quadro no qual o documento será carregado.</param>
        <summary>Carrega o documento na URL (Uniform Resource Locator) especificada para o controle <see cref="T:System.Windows.Forms.WebBrowser" />, substituindo o conteúdo do quadro de página da Web pelo nome especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado para o quadro de página da Web com o nome especificado e adiciona o URI para o final da lista de histórico. Se o nome do quadro especificado é inválido, o documento é carregado em uma nova janela do Internet Explorer.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">Um <see cref="T:System.Uri" /> que representa a URL do documento a carregar.</param>
        <param name="newWindow">
          <see langword="true" /> para carregar o documento em uma nova janela do navegador; <see langword="false" /> para carregar o documento no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Carrega o documento no local indicado pelo <see cref="T:System.Uri" /> especificado no controle <see cref="T:System.Windows.Forms.WebBrowser" /> ou em uma nova janela do navegador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga com um `newWindow` valor de parâmetro de `false`, o controle navega para o URI especificado normalmente e adiciona o URI para o final da lista de histórico. Quando você chamar essa sobrecarga com um `newWindow` valor de parâmetro de `true`, o <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado em uma nova janela do Internet Explorer, que mantém seu próprio histórico de navegação. Você pode manipular o <xref:System.Windows.Forms.WebBrowser.NewWindow> evento para receber notificação antes de uma nova janela do navegador é aberta, permitindo que você cancelar a ação, se necessário.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página ou carrega uma página em uma janela separada do navegador, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente. Quando uma página for carregada em uma janela separada do Internet Explorer, o usuário pode recuperar a versão mais recente clicando o **atualização** botão.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <exception cref="T:System.ArgumentException">O valor do parâmetro <paramref name="url" /> não representa um URI absoluto. Para obter mais informações, consulte <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Um <see cref="T:System.Uri" /> que representa a URL do documento a carregar.</param>
        <param name="targetFrameName">O nome do quadro no qual o documento será carregado.</param>
        <summary>Carrega o documento no local indicado pelo <see cref="T:System.Uri" /> especificado no controle <see cref="T:System.Windows.Forms.WebBrowser" />, substituindo o conteúdo do quadro de página da Web pelo nome especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado para o quadro de página da Web com o nome especificado e adiciona o URI para o final da lista de histórico. Se o nome do quadro especificado é inválido, o documento é carregado em uma nova janela do Internet Explorer.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <exception cref="T:System.ArgumentException">O valor do parâmetro <paramref name="url" /> não representa um URI absoluto. Para obter mais informações, consulte <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">A URL do documento a ser carregada.</param>
        <param name="targetFrameName">O nome do quadro no qual o documento será carregado.</param>
        <param name="postData">Dados de POST HTTP como dados de formulário.</param>
        <param name="additionalHeaders">Cabeçalhos HTTP a serem adicionados aos cabeçalhos padrão.</param>
        <summary>Carrega o documento da URL especificada no controle <see cref="T:System.Windows.Forms.WebBrowser" />, solicitando-o usando os dados HTTP especificados e substituindo os conteúdos do quadro de página da Web com o nome especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado para o quadro de página da Web com o nome especificado e adiciona o URI para o final da lista de histórico. Se o nome do quadro especificado é inválido, o documento é carregado em uma nova janela do Internet Explorer.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Um <see cref="T:System.Uri" /> que representa a URL do documento a carregar.</param>
        <param name="targetFrameName">O nome do quadro no qual o documento será carregado.</param>
        <param name="postData">Dados de POST HTTP como dados de formulário.</param>
        <param name="additionalHeaders">Cabeçalhos HTTP a serem adicionados aos cabeçalhos padrão.</param>
        <summary>Carrega o documento no local indicado pelo <see cref="T:System.Uri" /> especificado no controle <see cref="T:System.Windows.Forms.WebBrowser" />, solicitando-o usando os dados HTTP especificados e substituindo o conteúdo do quadro de página da Web pelo nome especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você chamar essa sobrecarga de <xref:System.Windows.Forms.WebBrowser> controle carrega o documento no URI especificado para o quadro de página da Web com o nome especificado e adiciona o URI para o final da lista de histórico. Se o nome do quadro especificado é inválido, o documento é carregado em uma nova janela do Internet Explorer.  
  
 Use o <xref:System.Windows.Forms.WebBrowser.GoBack%2A> método para retornar o controle a uma página anterior no histórico de navegação. Use o <xref:System.Windows.Forms.WebBrowser.GoForward%2A> método para retornar a uma página mais tarde no histórico de navegação depois de navegar para trás.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <exception cref="T:System.ArgumentException">O valor do parâmetro <paramref name="url" /> não representa um URI absoluto. Para obter mais informações, consulte <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Windows.Forms.WebBrowser" /> navegou para um novo documento e começou a carregá-lo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle navega para um novo documento, sempre que uma das propriedades a seguir está definida ou métodos é chamado:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Manipular o <xref:System.Windows.Forms.WebBrowser.Navigated> evento para receber notificações quando o <xref:System.Windows.Forms.WebBrowser> controle navegou para um novo documento. Quando o <xref:System.Windows.Forms.WebBrowser.Navigated> evento ocorrer, o novo documento iniciou o carregamento, o que significa que você pode acessar o conteúdo carregado por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, e <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriedades. Manipular o <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> evento para receber notificações quando o <xref:System.Windows.Forms.WebBrowser> controle termina de carregar o novo documento.  
  
 Você também pode receber notificação antes do início de navegação ao manipular o <xref:System.Windows.Forms.WebBrowser.Navigating> evento. O evento lhe permite cancelar a navegação se determinadas condições não forem atendidas, por exemplo, o usuário não foi completamente preenchido um formulário.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.Navigated> eventos para implementar uma barra de endereços para o <xref:System.Windows.Forms.WebBrowser> controle. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`, um <xref:System.Windows.Forms.TextBox> controle chamado `TextBoxAddress`e um <xref:System.Windows.Forms.Button> controle chamado `ButtonGo`. Quando você digitar uma URL na caixa de texto e pressione ENTER ou clique no **vá** botão, o <xref:System.Windows.Forms.WebBrowser> controle navega para a URL especificada. Quando você navegar clicando em um hiperlink, a caixa de texto será atualizado automaticamente para exibir a URL atual.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes que o controle <see cref="T:System.Windows.Forms.WebBrowser" /> navegue para um novo documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle navega para um novo documento, sempre que uma das propriedades a seguir está definida ou métodos é chamado:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Você pode manipular o <xref:System.Windows.Forms.WebBrowser.Navigating> evento para cancelar a navegação se determinadas condições não foram atendidas, por exemplo, quando o usuário não tenha sido completamente preenchido um formulário. Para cancelar a navegação, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs> objeto passado para o manipulador de eventos para `true`. Você também pode usar esse objeto para recuperar a URL do novo documento por meio de <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType> propriedade. Se o novo documento será exibido em um quadro de página da Web, você pode recuperar o nome do quadro por meio de <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType> propriedade.  
  
 Manipular o <xref:System.Windows.Forms.WebBrowser.Navigated> evento para receber notificações quando o <xref:System.Windows.Forms.WebBrowser> controle termina de navegação e começou a carregar o documento no novo local. Manipular o <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> evento para receber notificações quando o <xref:System.Windows.Forms.WebBrowser> controle termina de carregar o novo documento.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.Navigating> evento para cancelar a navegação quando um formulário da Web não foi preenchido. O <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade é usada para determinar se o campo de formulário de entrada contém um valor.  
  
 Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e sua classe de formulário com um <xref:System.Runtime.InteropServices.ComVisibleAttribute> tornando acessível ao COM.  
  
 Para obter um exemplo de código completo que você pode colar o código a seguir em, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes que uma nova janela do navegador seja aberta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle abre uma janela separada do navegador quando a sobrecarga apropriada do <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método é chamado ou quando o usuário clica o **abrir em nova janela** opção no menu de atalho do navegador quando o ponteiro do mouse passa sobre um hiperlink. Você pode desativar o menu de atalho, definindo o <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> a propriedade como false.  
  
 O <xref:System.Windows.Forms.WebBrowser.NewWindow> evento ocorre antes que a nova janela do navegador é aberta. Você pode manipular esse evento, por exemplo, para impedir que a janela de abertura quando determinadas condições não forem atendidas.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.WebBrowser.NewWindow> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração. Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.WebBrowser> chamado `WebBrowser1`. Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.WebBrowser.NewWindow> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que pode ser acessado com o código de script que está contido em uma página da Web exibida no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>O objeto que está sendo disponibilizado para o código de script.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade para habilitar a comunicação entre uma página da Web hospedada pelo <xref:System.Windows.Forms.WebBrowser> controle e o aplicativo que contém o <xref:System.Windows.Forms.WebBrowser> controle. Essa propriedade permite integrar o código HTML dinâmico (DHTML) com o código do aplicativo cliente. O objeto especificado para esta propriedade está disponível para o script de página da Web como o `window.external` objeto, que é um objeto DOM interno fornecido para acesso ao host.  
  
 Você pode definir essa propriedade para qualquer objeto COM visível para o qual você deseja que suas propriedades públicas e os métodos disponíveis para o código de script. Você pode tornar uma classe COM visível marcá-lo com o <xref:System.Runtime.InteropServices.ComVisibleAttribute>.  
  
 Para chamar funções definidas na página da Web do seu código do aplicativo cliente, use o <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> método o <xref:System.Windows.Forms.HtmlDocument> objeto, você pode recuperar do <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade. No exemplo, o <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriedade é definida para o formulário atual.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor especificado ao definir esta propriedade é uma instância de tipo não público.  
  
 - ou -  
  
 O valor especificado ao definir esta propriedade é uma instância do tipo não visível por COM. Para obter mais informações, consulte <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.ComponentModel.CancelEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.Navigated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.Navigating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.ComponentModel.CancelEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esta propriedade não é significativa para esse controle.</summary>
        <value>
          <see cref="F:System.Windows.Forms.Padding.Empty" />
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.WebBrowser.Padding" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora você possa obter ou definir o valor de <xref:System.Windows.Forms.WebBrowser.Padding%2A> propriedade e responder às alterações de evento, a propriedade de preenchimento não é significativa para esse controle.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imprime o documento exibido no momento no controle <see cref="T:System.Windows.Forms.WebBrowser" /> usando as configurações de impressão e página atuais.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **impressão** botão semelhante no Internet Explorer. Esse método imprime o documento atual sem a necessidade de obter entrada do usuário. Para exibir o **impressão** caixa de diálogo antes de impressão, use o <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método. Para exibir o **Configurar página** caixa de diálogo que permite aos usuários especificar valores de rodapé e cabeçalho e outras configurações de página, use o <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para exibir o **Visualizar impressão** caixa de diálogo, use o <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Print%2A> método para implementar um **impressão** botão para o <xref:System.Windows.Forms.WebBrowser> controle que é semelhante do **impressão** botão no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonPrint`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">para acessar a impressora por esse método. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeração associada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o controle <see cref="T:System.Windows.Forms.WebBrowser" /> tem informações atualizadas sobre o andamento do download de um documento para o qual está navegando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar um manipulador para esse evento para implementar uma barra de progresso de navegação semelhante no Internet Explorer. Use o <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType> para determinar o número de bytes que foram baixados com êxito. Use o <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType> para determinar o número total de bytes disponíveis para download.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.WebBrowser.ProgressChanged> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração. Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o código de exemplo, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.WebBrowser> chamado `WebBrowser1`. Certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.WebBrowser.ProgressChanged> evento.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica o estado atual do controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.WebBrowserReadyState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propriedade para recuperar o estado específico do <xref:System.Windows.Forms.WebBrowser> controlar quando precisar de mais informações que o <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> propriedade fornece.  
  
 Quando o <xref:System.Windows.Forms.WebBrowser> controle não contém um documento, o valor dessa propriedade é <xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType>. Outros valores indicam o estado do controle quando ele navega para um novo documento. Estes valores incluem <xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType>, e <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recarrega o documento exibido atualmente no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recarrega o documento exibido no momento no controle <see cref="T:System.Windows.Forms.WebBrowser" />, verificando se há uma versão atualizada para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. O <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método força a <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente. Você pode usar esse método para implementar um **atualização** botão semelhante no Internet Explorer.  
  
> [!NOTE]
>  Uma atualização de documento simplesmente recarrega a página atual, portanto, o <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, e <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos não ocorrem quando você chamar o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para implementar um **atualizar** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonRefresh`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt">Um dos valores de <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" />.</param>
        <summary>Recarrega o documento exibido no momento no controle <see cref="T:System.Windows.Forms.WebBrowser" /> usando as opções de atualização especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas visitadas recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. O <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método força a <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual. O tipo de recarregar depende de <xref:System.Windows.Forms.WebBrowserRefreshOption> valor especificado. Se você chamar o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método com o <xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType> valor, a versão mais recente do documento é baixado. Se você usar o <xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType> valor, a versão mais recente é baixada somente se o documento atual tiver expirado. Se você usar o <xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType> valor, o servidor envia uma cópia do documento armazenado no seu próprio cache.  
  
> [!NOTE]
>  Uma atualização de documento simplesmente recarrega a página atual, portanto, o <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, e <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> eventos não ocorrem quando você chamar o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.WebBrowser" /> exibe caixas de diálogo como mensagens de erro de script.</summary>
        <value>
          <see langword="true" /> se o controle não exibir suas caixas de diálogo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como `false` para depurar páginas da Web que você exibir no <xref:System.Windows.Forms.WebBrowser> controle. Isso é útil quando você usa o controle para adicionar controles baseado na Web e o código de script ao seu aplicativo. É menos úteis quando você usa o controle como um navegador genérico. Quando tiver terminado de depurar seu aplicativo, defina essa propriedade como `true` para suprimir os erros de script.  
  
> [!NOTE]
>  Quando <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> é definido como `true`, o <xref:System.Windows.Forms.WebBrowser> controle oculta todas as suas caixas de diálogo que se originam do controle ActiveX subjacente, não apenas os erros de script. Ocasionalmente, talvez seja necessário suprimir erros de script ao exibir caixas de diálogo, como aqueles usados para configurações de segurança do navegador e o logon do usuário. Nesse caso, defina <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> para `false` e suprimir erros de script em um manipulador para o <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> evento. Para obter mais informações, consulte o exemplo de código neste tópico.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como suprimir erros de script sem suprimindo outras caixas de diálogo. No exemplo, o <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> está definida como `false` para garantir que as caixas de diálogo são exibidas. Um manipulador para o <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> evento suprime o erro. Esse evento é acessível apenas quando um documento é concluído carregamento, de modo que o manipulador é anexado em uma <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> manipulador de eventos.  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da [interface IWebBrowser2](http://go.microsoft.com/fwlink/?LinkId=151479) não pôde ser recuperada do [controle WebBrowser](http://go.microsoft.com/fwlink/?LinkId=151478) do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se barras de rolagem são exibidas no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>
          <see langword="true" /> se as barras de rolagem são exibidas no controle; caso contrário, <see langword="false" />. O padrão é true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o valor dessa propriedade é `true`, barras de rolagem são exibidas apenas quando o conteúdo da página é maior do que a janela do navegador.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre a caixa de diálogo **Configuração de Página** do Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **Configurar página** item de menu semelhante do Internet Explorer **arquivo** menu. Esse método exibe o **Configurar página** caixa de diálogo que permite aos usuários especificar valores de cabeçalho e rodapé e outras configurações de página antes da impressão. Para imprimir o documento atual, use o <xref:System.Windows.Forms.WebBrowser.Print%2A> método ou o <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método. Para exibir o **Visualizar impressão** caixa de diálogo, use o <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método para implementar um **Configurar página** opção de menu que é semelhante do Internet Explorer **arquivo** menu. Este exemplo requer que o formulário contém um menu com um item de menu chamado `MenuItemFilePageSetup` e um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">para acessar a impressora por esse método. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeração associada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre a caixa de diálogo **Imprimir** do Internet Explorer sem definir os valores de cabeçalho e rodapé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **impressão** item de menu semelhante do Internet Explorer **arquivo** menu. Esse método exibe o **imprimir** caixa de diálogo, permitindo que os usuários modificar as configurações de impressão antes da impressão. Para permitir que os usuários a especificar configurações de página antes da impressão, use o <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para exibir o **Visualizar impressão** caixa de diálogo, use o <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método para implementar um **impressão** opção de menu que é semelhante do Internet Explorer **arquivo** menu. Este exemplo requer que o formulário contém um menu com um item de menu chamado `MenuItemFilePrint` e um <xref:System.Windows.Forms.WebBrowser> chamado de controle `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">para acessar a impressora por esse método. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeração associada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre a caixa de diálogo **Visualização de Impressão** do Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **Visualizar impressão** item de menu semelhante do Internet Explorer **arquivo** menu. Esse método exibe o **Visualizar impressão** caixa de diálogo, permitindo que os usuários ver como o documento atual será exibido se for impresso. Para permitir que os usuários a especificar configurações de página antes da impressão, use o <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> método. Para imprimir o documento atual, use o <xref:System.Windows.Forms.WebBrowser.Print%2A> método ou o <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> método para implementar um **Visualizar impressão** opção de menu semelhante do Internet Explorer **arquivo** menu. Este exemplo requer que o formulário contém um menu com um item de menu chamado `MenuItemFilePrintPreview`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">para acessar a impressora por esse método. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeração associada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre a caixa de diálogo **Propriedades** do Internet Explorer para o documento atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **propriedades** opção de menu semelhante do Internet Explorer **arquivo** menu. Esse método exibe o **propriedades** caixa de diálogo que contém informações sobre o documento atual como seu tipo, URL, tamanho e datas de criação e modificação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A> método para implementar um **propriedades** opção de menu que é semelhante do Internet Explorer **arquivo** menu. Este exemplo requer que o formulário contém um menu com um item de menu chamado `MenuItemFileProperties` e um <xref:System.Windows.Forms.WebBrowser> chamado de controle `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre a caixa de diálogo **Salvar Página da Web** do Internet Explorer ou a caixa de diálogo **Salvar** do documento hospedado se não for uma página HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para implementar um **Salvar como** item de menu semelhante do Internet Explorer **arquivo** menu. A caixa de diálogo que aparece quando este método é chamado depende do tipo de documento atualmente carregado.  
  
> [!NOTE]
>  Esse método permite que os usuários salvem somente o conteúdo do documento como ele foi originalmente carregado. Todas as modificações feitas para o documento em tempo de execução por meio de <xref:System.Windows.Forms.WebBrowser.Document%2A> propriedade não são mantidas. Para obter informações sobre como recuperar as modificações de tempo de execução, consulte [como: acessar a fonte HTML no modelo de objeto de documento HTML gerenciado](~/docs/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> método para implementar um **Salvar como** opção de menu que é semelhante do Internet Explorer **arquivo** menu. Este exemplo requer que o formulário contém um menu com um item de menu chamado `MenuItemFileSaveAs` e um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">para acessar a impressora por esse método. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Enumeração associada: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o texto de status do controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>O texto de status.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar essa propriedade para exibir o status de <xref:System.Windows.Forms.WebBrowser> controle em uma barra de status. O texto de status é uma mensagem que contém informações como a URL do hiperlink quando o ponteiro do mouse passa sobre ele e a URL do documento que está sendo carregado no momento. Manipular o <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> evento para atualizar o status barra quando o valor da <xref:System.Windows.Forms.WebBrowser.StatusText%2A> alterações de propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.StatusText%2A> propriedade para implementar uma barra de status para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.StatusBar> controle chamado `StatusBar1`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o valor da propriedade <see cref="P:System.Windows.Forms.WebBrowser.StatusText" /> muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificador para esse evento para atualizar o status de um barra quando o valor da <xref:System.Windows.Forms.WebBrowser.StatusText%2A> alterações de propriedade.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um manipulador para o <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> eventos para implementar uma barra de status para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.StatusBar> controle chamado `StatusBar1`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela qualquer navegação pendente e interrompe elementos de página dinâmica, como sons de tela de fundo e animações.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para implementar um **parar** botão semelhante no Internet Explorer.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Stop%2A> método para implementar um **parar** botão para o <xref:System.Windows.Forms.WebBrowser> controle semelhante no Internet Explorer. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1` e um <xref:System.Windows.Forms.Button> controle chamado `ButtonStop`.  
  
 Para o exemplo de código completo, consulte [como: adicionar recursos do navegador da Web para um aplicativo do Windows Forms](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a URL do documento atual.</summary>
        <value>Um <see cref="T:System.Uri" /> que representa a URL do documento atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A definição dessa propriedade é equivalente a chamar o <xref:System.Windows.Forms.WebBrowser.Navigate%2A> método e passando a URL especificada.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle mantém uma lista de histórico de todas as páginas da Web visitadas durante uma sessão de navegação. Quando você define o <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade, o <xref:System.Windows.Forms.WebBrowser> controle navega para a URL especificada e o adiciona ao final da lista de histórico.  
  
 O <xref:System.Windows.Forms.WebBrowser> controle armazena páginas da Web de sites visitados recentemente em um cache no disco rígido local. Cada página pode especificar uma data de expiração que indica quanto tempo ele permanecerá no cache. Quando o controle navega para uma página, ele economiza tempo ao exibir uma versão em cache, se disponível, em vez de baixar a página novamente. Use o <xref:System.Windows.Forms.WebBrowser.Refresh%2A> método para forçar o <xref:System.Windows.Forms.WebBrowser> controle para recarregar a página atual, baixando, garantindo que o controle exibe a versão mais recente.  
  
> [!NOTE]
>  Esta propriedade contém a URL do documento atual, mesmo se outro documento foi solicitado. Se você definir o valor dessa propriedade e, em seguida, imediatamente obtê-lo novamente, o valor recuperado pode ser diferente do valor definido se o <xref:System.Windows.Forms.WebBrowser> controle não tenha tido tempo para carregar o novo documento. Você pode recuperar o novo valor em uma <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> manipulador de eventos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.Url%2A> propriedade para implementar uma barra de endereços para o <xref:System.Windows.Forms.WebBrowser> controle. Este exemplo requer que o formulário contém um <xref:System.Windows.Forms.WebBrowser> controle chamado `webBrowser1`, um <xref:System.Windows.Forms.TextBox> controle chamado `TextBoxAddress`e um <xref:System.Windows.Forms.Button> controle chamado `ButtonGo`. Quando você digitar uma URL na caixa de texto e pressione ENTER ou clique no **vá** botão, o <xref:System.Windows.Forms.WebBrowser> controle navega para a URL especificada. Quando você navegar clicando em um hiperlink, a caixa de texto será atualizado automaticamente para exibir a URL atual.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Essa instância <see cref="T:System.Windows.Forms.WebBrowser" /> não é mais válida.</exception>
        <exception cref="T:System.InvalidOperationException">Uma referência a uma implementação da interface <see langword="IWebBrowser2" /> não pôde ser recuperada do controle <see langword="WebBrowser" /> do ActiveX subjacente.</exception>
        <exception cref="T:System.ArgumentException">O valor especificado ao definir essa propriedade não é um URI absoluto. Para obter mais informações, consulte <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a versão do Internet Explorer instalado.</summary>
        <value>Um objeto <see cref="T:System.Version" /> que representa a versão do Internet Explorer instalada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.WebBrowser> controle é um wrapper gerenciado em um componente instalado com o Internet Explorer. Use essa propriedade para determinar qual versão do Internet Explorer está instalada. Isso é útil quando seu aplicativo usa um recurso do Internet Explorer que está presente somente em determinadas versões. Se a versão necessária não está presente no computador local, você pode fornecer funcionalidade alternativa ou solicitar ao usuário para atualizar.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se os atalhos de teclado estão habilitados no controle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>
          <see langword="true" /> se os atalhos de teclado estiverem habilitados no controle; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina essa propriedade como false para impedir que os usuários usando atalhos de teclado do Internet Explorer com o <xref:System.Windows.Forms.WebBrowser> controle. Isso é útil quando você deseja ocultar o fato de que você está usando o <xref:System.Windows.Forms.WebBrowser> controle, por exemplo, para criar uma interface de usuário que combina perfeitamente controles DHTML com controles de formulários do Windows.  
  
 Você pode desabilitar outros recursos de navegador padrão, definindo o <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> e <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriedades `false`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propriedade.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamadores imediatos usar este controle. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: conjuntos de permissões nomeadas](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">O <see cref="T:System.Windows.Forms.Message" /> do Windows a ser processado.</param>
        <summary>Processa mensagens do Windows.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>