<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18e249c0dd124f71453f47d1cab943dc0f4e46ee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513499" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a0984-101">Implementa um temporizador que aciona um evento em intervalos definidos pelo usuário.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0984-101">Implements a timer that raises an event at user-defined intervals.</span>
      </span>
      <span data-ttu-id="a0984-102">Esse temporizador é otimizado para uso em aplicativos do Windows Forms e deve ser usado em uma janela.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0984-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-103">Um <xref:System.Windows.Forms.Timer> é usado para gerar um evento em intervalos definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="a0984-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="a0984-104">O temporizador do Windows foi projetado para um ambiente de thread único em que os threads de interface do usuário são usadas para executar o processamento.</span><span class="sxs-lookup"><span data-stu-id="a0984-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="a0984-105">Ele requer que o código de usuário tem uma bomba de mensagem da interface do usuário disponível e sempre funcionam do mesmo thread ou realizar marshaling da chamada em outro thread.</span><span class="sxs-lookup"><span data-stu-id="a0984-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="a0984-106">Quando você usa o temporizador, use o <xref:System.Windows.Forms.Timer.Tick> evento para executar uma operação de pesquisa ou para exibir uma tela inicial de um período de tempo especificado.</span><span class="sxs-lookup"><span data-stu-id="a0984-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="a0984-107">Sempre que o <xref:System.Windows.Forms.Timer.Enabled%2A> está definida como `true` e o <xref:System.Windows.Forms.Timer.Interval%2A> propriedade é maior que zero, o <xref:System.Windows.Forms.Timer.Tick> é gerado em intervalos com base no <xref:System.Windows.Forms.Timer.Interval%2A> configuração de propriedade.</span><span class="sxs-lookup"><span data-stu-id="a0984-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="a0984-108">Essa classe fornece métodos para definir o intervalo e para iniciar e parar o timer.</span><span class="sxs-lookup"><span data-stu-id="a0984-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0984-109">O componente de temporizador de formulários do Windows é de thread único e é limitado a uma precisão de 55 milissegundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="a0984-110">Se você precisar de um timer multithread com maior precisão, use o <xref:System.Timers.Timer> classe no <xref:System.Timers> namespace.</span><span class="sxs-lookup"><span data-stu-id="a0984-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-111">O exemplo a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-112">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita ao usuário se o timer deve continuar a execução.</span><span class="sxs-lookup"><span data-stu-id="a0984-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0984-113">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0984-114">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-115">Quando um novo temporizador é criado, ele é desabilitado; ou seja, <xref:System.Windows.Forms.Timer.Enabled%2A> é definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="a0984-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="a0984-116">Para habilitar o temporizador, chame o <xref:System.Windows.Forms.Timer.Start%2A> método ou conjunto <xref:System.Windows.Forms.Timer.Enabled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="a0984-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="a0984-117">Se o timer será desabilitado e o timer está fora do escopo, o timer será descartado quando ocorre a coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="a0984-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="a0984-118">Se o timer está ativado, mesmo se ele está fora do escopo, não é sujeitas à coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="a0984-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="a0984-119">Um <see cref="T:System.ComponentModel.IContainer" /> que representa o contêiner do temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0984-120">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.Timer" /> em conjunto com o contêiner especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-121">O <xref:System.Windows.Forms.Timer> construtor permite que você associe um <xref:System.Windows.Forms.Timer> com qualquer <xref:System.ComponentModel.Container> objeto.</span><span class="sxs-lookup"><span data-stu-id="a0984-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="a0984-122">Associando a <xref:System.Windows.Forms.Timer> como esta, você fornece controle de tempo de vida do <xref:System.Windows.Forms.Timer> para o <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="a0984-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="a0984-123">Isso pode ser útil se você usar um número de componentes em seu aplicativo e deseja descartar todos eles simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="a0984-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="a0984-124">Por exemplo, se você associar um <xref:System.Windows.Forms.ToolTip>, uma <xref:System.Windows.Forms.ImageList>e um <xref:System.Windows.Forms.Timer> com um <xref:System.ComponentModel.Container>, chamar <xref:System.ComponentModel.Container.Dispose%2A> no <xref:System.ComponentModel.Container> forçará o descarte de todos esses componentes também.</span><span class="sxs-lookup"><span data-stu-id="a0984-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="a0984-125">Quando um novo temporizador é criado, ele é desabilitado; ou seja, <xref:System.Windows.Forms.Timer.Enabled%2A> é definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="a0984-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="a0984-126">Para habilitar o temporizador, chame o <xref:System.Windows.Forms.Timer.Start%2A> método ou conjunto <xref:System.Windows.Forms.Timer.Enabled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="a0984-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="a0984-127">Esta instância existirá até que seu contêiner libera para coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="a0984-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a0984-128">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-128">
              <see langword="true" /> to release both managed and unmanaged resources.</span>
          </span>
          <span data-ttu-id="a0984-129">
            <see langword="false" /> para liberar apenas os recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-129">
              <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0984-130">Descarta os recursos, exceto a memória, usados pelo temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-130">Disposes of the resources, other than memory, used by the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-131">Chamar <xref:System.Windows.Forms.Timer.Dispose%2A> quando terminar de usar o timer.</span><span class="sxs-lookup"><span data-stu-id="a0984-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="a0984-132">O <xref:System.Windows.Forms.Timer.Dispose%2A> método deixa o timer em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="a0984-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="a0984-133">Depois de chamar <xref:System.Windows.Forms.Timer.Dispose%2A>, você deve liberar todas as referências para o temporizador para a memória estava ocupando pode ser recuperada pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="a0984-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0984-134">Sempre chamar <xref:System.Windows.Forms.Timer.Dispose%2A> antes de liberar sua última referência para o temporizador.</span><span class="sxs-lookup"><span data-stu-id="a0984-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="a0984-135">Caso contrário, os recursos que o timer está usando não serão liberados até que a coleta de lixo chama o destruidor do objeto de timer.</span><span class="sxs-lookup"><span data-stu-id="a0984-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0984-136">Obtém ou define se o temporizador está em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-136">Gets or sets whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0984-137">
            <see langword="true" /> se o temporizador estiver habilitado no momento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-137">
              <see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a0984-138">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-139">O timer não está sujeita à coleta de lixo quando o valor é `true`.</span><span class="sxs-lookup"><span data-stu-id="a0984-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="a0984-140">Chamando o <xref:System.Windows.Forms.Timer.Start%2A> método é a mesma configuração <xref:System.Windows.Forms.Timer.Enabled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="a0984-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="a0984-141">Da mesma forma, ao chamar o <xref:System.Windows.Forms.Timer.Stop%2A> método é a mesma configuração <xref:System.Windows.Forms.Timer.Enabled%2A> para `false`.</span><span class="sxs-lookup"><span data-stu-id="a0984-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-142">O exemplo a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-143">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita que o usuário se o timer deve continuar a executar.</span><span class="sxs-lookup"><span data-stu-id="a0984-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0984-144">Obtém ou define o tempo, em milissegundos, antes que o evento <see cref="E:System.Windows.Forms.Timer.Tick" /> seja gerado em relação à última ocorrência do evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0984-145">Um <see cref="T:System.Int32" /> que especifica o número de milissegundos antes que o evento <see cref="E:System.Windows.Forms.Timer.Tick" /> seja gerado em relação à última ocorrência do evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
          <span data-ttu-id="a0984-146">O valor não pode ser menor que um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-146">The value cannot be less than one.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-147">Para obter o número de segundos durante o intervalo, divida esse número por 1.000.</span><span class="sxs-lookup"><span data-stu-id="a0984-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-148">O exemplo de código a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-149">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita que o usuário se o timer deve continuar a executar.</span><span class="sxs-lookup"><span data-stu-id="a0984-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a0984-150">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="a0984-151">Isso sempre é <see cref="F:System.EventArgs.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-151">This is always <see cref="F:System.EventArgs.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0984-152">Aciona o evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-153">Esse método é chamado para cada escala timer.</span><span class="sxs-lookup"><span data-stu-id="a0984-153">This method is called for each timer tick.</span></span> <span data-ttu-id="a0984-154">Ele chama os métodos que são adicionados por meio de <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="a0984-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="a0984-155">Se você herdando <xref:System.Windows.Forms.Timer>, você pode substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="a0984-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="a0984-156">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="a0984-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a0984-157">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a0984-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a0984-158">
            <para>Ao substituir <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> em uma classe derivada, certifique-se de que você chamar a classe base <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-158">
              <para>When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0984-159">Inicia o temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-159">Starts the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-160">Você também pode iniciar o timer, definindo o <xref:System.Windows.Forms.Timer.Enabled%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="a0984-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-161">O exemplo de código a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-162">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita que o usuário se o timer deve continuar a executar.</span><span class="sxs-lookup"><span data-stu-id="a0984-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0984-163">Interrompe o temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-163">Stops the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-164">Você também pode parar o timer definindo o <xref:System.Windows.Forms.Timer.Enabled%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="a0984-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="a0984-165">Um <xref:System.Windows.Forms.Timer> objeto pode ser habilitado e desabilitado várias vezes dentro da mesma sessão do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a0984-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="a0984-166">Chamando <xref:System.Windows.Forms.Timer.Start%2A> depois que você desabilitou um <xref:System.Windows.Forms.Timer> chamando <xref:System.Windows.Forms.Timer.Stop%2A> fará com que o <xref:System.Windows.Forms.Timer> para reiniciar o intervalo interrompido.</span><span class="sxs-lookup"><span data-stu-id="a0984-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="a0984-167">Se seu <xref:System.Windows.Forms.Timer> está definido para um intervalo de milissegundo 5000, e você chamar <xref:System.Windows.Forms.Timer.Stop%2A> em aproximadamente 3.000 milissegundos, chamando <xref:System.Windows.Forms.Timer.Start%2A> fará com que o <xref:System.Windows.Forms.Timer> aguardar 5000 milissegundos antes de acionar o <xref:System.Windows.Forms.Timer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="a0984-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0984-168">Chamando parar em qualquer <xref:System.Windows.Forms.Timer> dentro de um Windows Forms aplicativo pode fazer com que as mensagens de outros <xref:System.Windows.Forms.Timer> componentes do aplicativo para ser processado imediatamente, porque todos os <xref:System.Windows.Forms.Timer> componentes operam no thread principal do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="a0984-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="a0984-169">Se você tiver dois <xref:System.Windows.Forms.Timer> componentes, definidas como 700 milissegundos e um conjunto para 500 milissegundos, e você chamar <xref:System.Windows.Forms.Timer.Stop%2A> na primeira <xref:System.Windows.Forms.Timer>, seu aplicativo pode receber um retorno de chamada de evento para o segundo componente primeiro.</span><span class="sxs-lookup"><span data-stu-id="a0984-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="a0984-170">Se isso comprova problemático, considere o uso de <xref:System.Threading.Timer> classe no <xref:System.Threading> namespace em vez disso.</span><span class="sxs-lookup"><span data-stu-id="a0984-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-171">O exemplo de código a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-172">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita que o usuário se o timer deve continuar a executar.</span><span class="sxs-lookup"><span data-stu-id="a0984-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0984-173">Obtém ou define uma cadeia de caracteres arbitrária que representa algum tipo de estado do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-173">Gets or sets an arbitrary string representing some type of user state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0984-174">Uma cadeia de caracteres arbitrária que representa algum tipo de estado do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-174">An arbitrary string representing some type of user state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0984-175">Ocorre quando o intervalo especificado tiver terminado e o temporizador estiver habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-176">Chamando o <xref:System.Diagnostics.Debug.Assert%2A> método no <xref:System.Diagnostics.Debug> classe de dentro de <xref:System.Windows.Forms.Timer.Tick> eventos podem não se comportar conforme o esperado, como exibir a caixa de diálogo de asserção caixa pode fazer com que o Windows para gerar o <xref:System.Windows.Forms.Timer.Tick> evento repetidamente.</span><span class="sxs-lookup"><span data-stu-id="a0984-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="a0984-177">É recomendável que você evite teste asserções dentro desse evento e use o <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, ou <xref:System.Diagnostics.Debug.WriteLineIf%2A> métodos em vez disso.</span><span class="sxs-lookup"><span data-stu-id="a0984-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="a0984-178">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a0984-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0984-179">O exemplo de código a seguir implementa um temporizador de intervalo simples, o que desativa um alarme a cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="a0984-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="a0984-180">Quando o alarme ocorre, um <xref:System.Windows.Forms.MessageBox> exibe uma contagem do número de vezes que o alarme foi iniciado e solicita que o usuário se o timer deve continuar a executar.</span><span class="sxs-lookup"><span data-stu-id="a0984-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0984-181">Retorna uma cadeia de caracteres que representa o <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0984-182">Uma cadeia de caracteres que representa o <see cref="T:System.Windows.Forms.Timer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0984-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0984-183">O <xref:System.Windows.Forms.Timer.ToString%2A> método retorna uma cadeia de caracteres que contém o valor de <xref:System.Windows.Forms.Timer.Interval%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a0984-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>