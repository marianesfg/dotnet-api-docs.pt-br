<Type Name="MenuStrip" FullName="System.Windows.Forms.MenuStrip">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18d0b3cb957c8189096e20c17e94dc14c8d4d9e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39933196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuStrip : System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuStrip extends System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuStrip" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuStrip&#xA;Inherits ToolStrip" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuStrip : System::Windows::Forms::ToolStrip" />
  <TypeSignature Language="F#" Value="type MenuStrip = class&#xA;    inherit ToolStrip" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece um sistema de menus para um formulário.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MenuStrip> é o contêiner de nível superior que substitui <xref:System.Windows.Forms.MainMenu>. Ele também oferece os recursos de manipulação de chaves e MDI (interface de múltiplos documentos). Funcionalmente, <xref:System.Windows.Forms.ToolStripDropDownItem> e <xref:System.Windows.Forms.ToolStripMenuItem> funcionam junto com <xref:System.Windows.Forms.MenuStrip>, embora eles sejam derivados de <xref:System.Windows.Forms.ToolStripItem>.  
  
 Os itens a seguir são projetados especificamente para funcionar perfeitamente com ambos <xref:System.Windows.Forms.ToolStripSystemRenderer> e <xref:System.Windows.Forms.ToolStripProfessionalRenderer> em todas as orientações. Eles estão disponíveis por padrão em tempo de design para o <xref:System.Windows.Forms.MenuStrip> controle:  
  
-   <xref:System.Windows.Forms.ToolStripMenuItem>  
  
-   <xref:System.Windows.Forms.ToolStripTextBox>  
  
-   <xref:System.Windows.Forms.ToolStripComboBox>  
  
 O <xref:System.Windows.Forms.MenuStrip> controle representa o contêiner para a estrutura do menu de um formulário. Você pode adicionar <xref:System.Windows.Forms.ToolStripMenuItem> objetos para o <xref:System.Windows.Forms.MenuStrip> que representam os comandos de menu individuais na estrutura do menu. Cada <xref:System.Windows.Forms.ToolStripMenuItem> pode ser um comando para o seu aplicativo ou do menu pai para outros itens de submenu.  
  
 Embora <xref:System.Windows.Forms.MenuStrip> substitua e adicione funcionalidade ao controle <xref:System.Windows.Forms.MainMenu> de versões anteriores, <xref:System.Windows.Forms.MainMenu> é mantido para compatibilidade com versões anteriores e uso futuro, se desejado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.MenuStrip> em um cenário de interface de documentos múltiplos (MDI).  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripMenuItem" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuStrip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuStrip();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.MenuStrip" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse construtor para criar uma <xref:System.Windows.Forms.MenuStrip> para que você pode adicionar <xref:System.Windows.Forms.ToolStripMenuItem> objetos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.MenuStrip.%23ctor%2A> construtor. Este exemplo é parte de um exemplo maior fornecido para o <xref:System.Windows.Forms.ToolStripPanel> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanOverflow">
      <MemberSignature Language="C#" Value="public bool CanOverflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.CanOverflow" />
      <MemberSignature Language="VB.NET" Value="Public Property CanOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanOverflow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanOverflow : bool with get, set" Usage="System.Windows.Forms.MenuStrip.CanOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.MenuStrip" /> dá suporte à funcionalidade de estouro.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Windows.Forms.MenuStrip" /> dá suporte à funcionalidade de estouro; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O recurso de estouro move itens de menu a um menu suspenso quando não há espaço suficiente para exibi-los em um <xref:System.Windows.Forms.MenuStrip>. Quando você define o <xref:System.Windows.Forms.MenuStrip.CanOverflow%2A> propriedade para `true`, você também deve habilitar o estouro de itens de menu específicos definindo o <xref:System.Windows.Forms.ToolStripMenuItem.Overflow%2A?displayProperty=nameWithType> propriedade. Por padrão, os itens de menu não são exibidos se eles não podem se ajustar no espaço disponível.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="menuStrip.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo objeto de acessibilidade para o controle.</summary>
        <returns>Um novo <see cref="T:System.Windows.Forms.AccessibleObject" /> para o controle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você não chamar explicitamente o <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A> método, ele será chamado quando o <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=nameWithType> propriedade é referenciada.  
  
> [!NOTE]
>  Para obter ou definir a <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=nameWithType> propriedade, você deve adicionar uma referência para o `Accessibility` assembly instalado com o .NET Framework.  
  
 Para obter um exemplo de código de uso <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A>, consulte <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultItem">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Forms.ToolStripItem CreateDefaultItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.Forms.ToolStripItem CreateDefaultItem(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::Forms::ToolStripItem ^ CreateDefaultItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="override this.CreateDefaultItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem" Usage="menuStrip.CreateDefaultItem (text, image, onClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser usado para o <see cref="T:System.Windows.Forms.ToolStripMenuItem" />. Se o parâmetro <c>text</c> for um hífen (-), esse método criará um <see cref="T:System.Windows.Forms.ToolStripSeparator" />.</param>
        <param name="image">O <see cref="T:System.Drawing.Image" /> a ser exibido no <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</param>
        <param name="onClick">Um manipulador de eventos que aciona o evento <see cref="E:System.Windows.Forms.Control.Click" /> quando o <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> recebe um clique.</param>
        <summary>Cria um <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> com o texto, a imagem e o manipulador de eventos especificados em um novo <see cref="T:System.Windows.Forms.MenuStrip" />.</summary>
        <returns>Um <see cref="M:System.Windows.Forms.ToolStripMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)" /> ou um <see cref="T:System.Windows.Forms.ToolStripSeparator" /> se o parâmetro <paramref name="text" /> for um hífen (-).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.MenuStrip.CreateDefaultItem%2A> método para adicionar um <xref:System.Windows.Forms.ToolStripMenuItem> com comumente usados características para uma <xref:System.Windows.Forms.MenuStrip>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGripMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultGripMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultGripMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultGripMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultGripMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultGripMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultGripMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.MenuStrip.DefaultGripMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o espaçamento padrão, em pixels, entre a alça de dimensionamento e as bordas do <see cref="T:System.Windows.Forms.MenuStrip" />.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> valores que representa o espaçamento, em pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.MenuStrip.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o espaçamento, em pixels, entre as bordas esquerda, direita, superior e inferior do <see cref="T:System.Windows.Forms.MenuStrip" /> e as bordas do formulário.</summary>
        <value>Um <see cref="T:System.Windows.Forms.Padding" /> que representa o espaçamento. O padrão é <c>{esquerda = 6, superior = 2, direita = 0, a parte inferior = 2}</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.MenuStrip.DefaultPadding%2A> propriedade para definir o espaço interno entre controles. Quando um controle é um contêiner de itens, o preenchimento representa o espaço da borda do contêiner.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShowItemToolTips">
      <MemberSignature Language="C#" Value="protected override bool DefaultShowItemToolTips { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DefaultShowItemToolTips { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultShowItemToolTips : bool" Usage="System.Windows.Forms.MenuStrip.DefaultShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se as dicas de ferramenta são mostradas para o <see cref="T:System.Windows.Forms.MenuStrip" /> por padrão.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips%2A?displayProperty=nameWithType> propriedade sempre retorna `false` porque normalmente, as dicas de ferramentas não são usadas para menus ou itens de menu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.MenuStrip.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as dimensões horizontal e vertical, em pixels, do <see cref="T:System.Windows.Forms.MenuStrip" /> quando ele é criado.</summary>
        <value>Um <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> valor que representa o <see cref="T:System.Windows.Forms.MenuStrip" /> dimensões horizontais e verticais, em pixels. O padrão é 21 x 200 pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripGripStyle GripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripGripStyle GripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.GripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GripStyle As ToolStripGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripGripStyle GripStyle { System::Windows::Forms::ToolStripGripStyle get(); void set(System::Windows::Forms::ToolStripGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GripStyle : System.Windows.Forms.ToolStripGripStyle with get, set" Usage="System.Windows.Forms.MenuStrip.GripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a visibilidade da alça usada para reposicionar o controle.</summary>
        <value>Um dos valores de <see cref="T:System.Windows.Forms.ToolStripGripStyle" />. O padrão é <see cref="F:System.Windows.Forms.ToolStripGripStyle.Hidden" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiWindowListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripMenuItem MdiWindowListItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripMenuItem MdiWindowListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.MdiWindowListItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiWindowListItem As ToolStripMenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripMenuItem ^ MdiWindowListItem { System::Windows::Forms::ToolStripMenuItem ^ get(); void set(System::Windows::Forms::ToolStripMenuItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiWindowListItem : System.Windows.Forms.ToolStripMenuItem with get, set" Usage="System.Windows.Forms.MenuStrip.MdiWindowListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.MdiWindowListItemConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripMenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> usado para exibir uma lista de formulários filho da interface MDI.</summary>
        <value>Um <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> que representa o item de menu que exibe uma lista dos formulários filho MDI abertos no aplicativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> propriedade designar ou descobrir qual <xref:System.Windows.Forms.ToolStripMenuItem> exibe os filhos MDI.  
  
 Use o <xref:System.Windows.Forms.MenuStrip.MenuActivate> e <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> eventos nos menus filho para refletir as alterações ao valor de <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> propriedade. Este exemplo é parte de um exemplo maior fornecido para o <xref:System.Windows.Forms.ToolStripPanel> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuActivate;" />
      <MemberSignature Language="F#" Value="member this.MenuActivate : EventHandler " Usage="member this.MenuActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário acessa o menu com o teclado ou mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando ativado pela tecla ALT, o <xref:System.Windows.Forms.MenuStrip> ou <xref:System.Windows.Forms.ToolStrip> normalmente não toma nem remove o foco do controle que tem o foco no momento. Se houver um controle hospedado dentro de <xref:System.Windows.Forms.MenuStrip> ou uma lista suspensa do <xref:System.Windows.Forms.MenuStrip>, o controle receberá foco quando o usuário pressiona a tecla TAB. Em geral, o <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Enter>, e <xref:System.Windows.Forms.Control.Leave> eventos de <xref:System.Windows.Forms.MenuStrip> pode não ser gerado quando são ativados pelo teclado. Nesses casos, use o <xref:System.Windows.Forms.MenuStrip.MenuActivate> e <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> eventos em vez disso.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.MenuStrip.MenuActivate> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.MenuStrip> chamado `MenuStrip1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.MenuStrip.MenuActivate> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#489](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#489)]
 [!code-vb[System.Windows.Forms.EventExamples#489](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#489)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuDeactivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuDeactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuDeactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuDeactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuDeactivate;" />
      <MemberSignature Language="F#" Value="member this.MenuDeactivate : EventHandler " Usage="member this.MenuDeactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a <see cref="T:System.Windows.Forms.MenuStrip" /> é desativada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando ativado pela tecla ALT, o <xref:System.Windows.Forms.MenuStrip> ou <xref:System.Windows.Forms.ToolStrip> normalmente não toma nem remove o foco do controle que tem o foco no momento. Se houver um controle hospedado dentro de <xref:System.Windows.Forms.MenuStrip> ou uma lista suspensa do <xref:System.Windows.Forms.MenuStrip>, o controle receberá foco quando o usuário pressiona a tecla TAB. Em geral, o <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Enter>, e <xref:System.Windows.Forms.Control.Leave> eventos de <xref:System.Windows.Forms.MenuStrip> pode não ser gerado quando são ativados pelo teclado. Nesses casos, use o <xref:System.Windows.Forms.MenuStrip.MenuActivate> e <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> eventos em vez disso.  
  
 Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso desse membro. No exemplo, um manipulador de eventos relata a ocorrência da <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> eventos. Este relatório ajuda você a saber quando o evento ocorre e pode ajudar na depuração. Para relatar em vários eventos ou em eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou acrescentar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.  
  
 Para executar o exemplo de código, cole-o em um projeto que contém uma instância do tipo <xref:System.Windows.Forms.MenuStrip> chamado `MenuStrip1`. Em seguida, certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> eventos.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#490](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#490)]
 [!code-vb[System.Windows.Forms.EventExamples#490](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#490)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMenuActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuActivate : EventArgs -&gt; unit&#xA;override this.OnMenuActivate : EventArgs -&gt; unit" Usage="menuStrip.OnMenuActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.MenuStrip.MenuActivate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.MenuStrip.OnMenuActivate%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuDeactivate : EventArgs -&gt; unit&#xA;override this.OnMenuDeactivate : EventArgs -&gt; unit" Usage="menuStrip.OnMenuDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Windows.Forms.MenuStrip.MenuDeactivate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Windows.Forms.MenuStrip.OnMenuDeactivate%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> , de modo que delegados registrados recebam o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="menuStrip.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">Um <see cref="T:System.Windows.Forms.Message" />, passado por referência, que representa a mensagem de janela a ser processada.</param>
        <param name="keyData">Um dos valores <see cref="T:System.Windows.Forms.Keys" /> que representa a chave a ser processada.</param>
        <summary>Processa uma chave de comando.</summary>
        <returns>
          <see langword="true" /> se o caractere foi processado pelo controle; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para o chamador imediato chamar código não gerenciado. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.MenuStrip.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as Dicas de Ferramenta serão mostradas para <see cref="T:System.Windows.Forms.MenuStrip" />.</summary>
        <value>
          <see langword="true" /> se as Dicas de Ferramentas forem mostradas para o <see cref="T:System.Windows.Forms.MenuStrip" />; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Forms.MenuStrip.ShowItemToolTips%2A?displayProperty=nameWithType> propriedade retorna `false` por padrão porque geralmente, as dicas de ferramentas não são usadas para menus ou itens de menu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public bool Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.Stretch" />
      <MemberSignature Language="VB.NET" Value="Public Property Stretch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Stretch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Stretch : bool with get, set" Usage="System.Windows.Forms.MenuStrip.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o <see cref="T:System.Windows.Forms.MenuStrip" /> se estende de ponta a ponta em seu contêiner.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Windows.Forms.MenuStrip" /> estende de ponta a ponta de seu contêiner; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="menuStrip.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">O <see cref="T:System.Windows.Forms.Message" /> do Windows a ser processado.</param>
        <summary>Processa mensagens do Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todas as mensagens são enviadas para o <xref:System.Windows.Forms.Control.WndProc%2A> método após ser filtrado por meio de <xref:System.Windows.Forms.Control.PreProcessMessage%2A> método.  
  
 O <xref:System.Windows.Forms.Control.WndProc%2A> método corresponde exatamente de acordo com o Windows `WindowProc` função. Para obter mais informações sobre o processamento de mensagens do Windows, consulte o `WindowProc` documentação da função na referência do SDK da plataforma Windows localizado na biblioteca MSDN em http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra substituindo o <xref:System.Windows.Forms.Control.WndProc%2A> método para lidar com mensagens de sistema operacional identificadas no <xref:System.Windows.Forms.Message> estrutura. A mensagem de sistema operacional WM_ACTIVATEAPP é tratada neste exemplo para saber quando outro aplicativo está se tornando Active Directory. Consulte a referência de documentação do Platform SDK localizada na biblioteca MSDN em http://msdn.microsoft.com/library para entender o disponíveis <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, e <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> valores. Valores de constante reais podem ser encontrados no arquivo de cabeçalho Windows. h incluído no download do SDK da plataforma (seção SDK do Core), que também está disponível no MSDN.  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para o chamador imediato chamar código não gerenciado. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Controles herdeiros devem chamar a classe base <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> método para processar todas as mensagens que não tratam.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>