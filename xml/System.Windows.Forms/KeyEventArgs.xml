<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7677a8abed6de6921dd7137d79eb3ed66213093" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2c3e0-101">Fornece dados para o evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c3e0-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3e0-102">Um <xref:System.Windows.Forms.KeyEventArgs>, que especifica a chave que o usuário pressionou e se qualquer tecla modificadora (CTRL, ALT e SHIFT) foram pressionada ao mesmo tempo, é passado com cada <xref:System.Windows.Forms.Control.KeyDown> ou <xref:System.Windows.Forms.Control.KeyUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="2c3e0-103">O <xref:System.Windows.Forms.Control.KeyDown> evento ocorre quando o usuário pressionar qualquer tecla.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="2c3e0-104">O <xref:System.Windows.Forms.Control.KeyUp> evento ocorre quando o usuário libera a chave.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="2c3e0-105">Duplicar <xref:System.Windows.Forms.Control.KeyDown> eventos ocorrerem sempre que se repete a chave, se a chave é mantida, mas somente um <xref:System.Windows.Forms.Control.KeyUp> evento é gerado quando o usuário libera a chave.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="2c3e0-106">O <xref:System.Windows.Forms.Control.KeyPress> evento também ocorre quando uma tecla é pressionada.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="2c3e0-107">Um <xref:System.Windows.Forms.KeyPressEventArgs> é passado com cada <xref:System.Windows.Forms.Control.KeyPress> evento e especifica o caractere composto como resultado de cada pressionamento de tecla.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="2c3e0-108">Para obter informações sobre o modelo de evento, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2c3e0-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3e0-109">Os exemplos de código a seguir demonstram como detectar o estado de um pressionamento de tecla.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="2c3e0-110">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-110">**Example 1**</span></span>  
  
 <span data-ttu-id="2c3e0-111">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Control.KeyDown> evento com o <xref:System.Windows.Forms.Help> classe para exibir a Ajuda para o usuário do aplicativo de estilo pop-up.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="2c3e0-112">O exemplo usa o <xref:System.Windows.Forms.KeyEventArgs> propriedades passadas para o método de manipulador de eventos para filtrar todas as variações de pressionar a tecla F1 com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="2c3e0-113">Quando o usuário pressiona qualquer variação de F1 que inclui qualquer modificador de teclado, o <xref:System.Windows.Forms.Help> classe exibe uma janela pop-up, semelhante a um <xref:System.Windows.Forms.ToolTip>, perto do controle.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="2c3e0-114">Se o usuário pressionar ALT + F2, um pop-up Ajuda diferente será exibido com informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="2c3e0-115">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-115">**Example 2**</span></span>  
  
 <span data-ttu-id="2c3e0-116">O exemplo a seguir determina se o usuário pressionou ALT + E e se o ponteiro do mouse está sobre uma <xref:System.Windows.Forms.TreeNode>, permite que o usuário edite que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="2c3e0-117">**Exemplo 3**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-117">**Example 3**</span></span>  
  
 <span data-ttu-id="2c3e0-118">O exemplo a seguir determina se o usuário pressionou uma chave não numérico e nesse caso, cancela a <xref:System.Windows.Forms.Control.KeyPress> evento usando o <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="2c3e0-119">Um <see cref="T:System.Windows.Forms.Keys" /> que representa a tecla que foi pressionada, combinada com os sinalizadores do modificador que indicam quais teclas CTRL, SHIFT e ALT foram pressionadas ao mesmo tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="2c3e0-120">Os valores possíveis são obtidos aplicando o operador OR (|) bit a bit para constantes da enumeração <see cref="T:System.Windows.Forms.Keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c3e0-121">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.KeyEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-122">Obtém um valor que indica se a tecla ALT foi pressionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-123">
            <see langword="true" /> se tiver sido pressionada a tecla ALT; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c3e0-124">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-124">**Example 1**</span></span>  
  
 <span data-ttu-id="2c3e0-125">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Control.KeyDown> evento com o <xref:System.Windows.Forms.Help> classe para exibir a Ajuda para o usuário do aplicativo de estilo pop-up.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="2c3e0-126">O exemplo usa o <xref:System.Windows.Forms.KeyEventArgs> propriedades passadas para o método de manipulador de eventos para filtrar todas as variações de pressionar a tecla F1 com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="2c3e0-127">Quando o usuário pressiona qualquer variação de F1 que inclui qualquer modificador de teclado, o <xref:System.Windows.Forms.Help> classe exibe uma janela pop-up, semelhante a um <xref:System.Windows.Forms.ToolTip>, perto do controle.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="2c3e0-128">Se o usuário pressionar ALT + F2, um pop-up Ajuda diferente será exibido com informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="2c3e0-129">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-129">**Example 2**</span></span>  
  
 <span data-ttu-id="2c3e0-130">O exemplo a seguir determina se o usuário pressionou ALT + E e se o ponteiro do mouse está sobre <xref:System.Windows.Forms.TreeNode>, permite que o usuário edite que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-131">Obtém um valor que indica se a tecla CTRL foi pressionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-132">
            <see langword="true" /> se tiver sido pressionada a tecla CTRL; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c3e0-133">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Control.KeyDown> evento com o <xref:System.Windows.Forms.Help> classe para exibir a Ajuda para o usuário do aplicativo de estilo pop-up.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="2c3e0-134">O exemplo usa o <xref:System.Windows.Forms.KeyEventArgs> propriedades passadas para o método de manipulador de eventos para filtrar todas as variações de pressionar a tecla F1 com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="2c3e0-135">Quando o usuário pressiona qualquer variação de F1 que inclui qualquer modificador de teclado, o <xref:System.Windows.Forms.Help> classe exibe uma janela pop-up, semelhante a um <xref:System.Windows.Forms.ToolTip>, perto do controle.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="2c3e0-136">Se o usuário pressionar ALT + F2, um pop-up Ajuda diferente será exibido com informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-137">Obtém ou define um valor que indica se o evento foi tratado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-138">
            <see langword="true" /> para fazer bypass do tratamento padrão do controle; caso contrário, <see langword="false" /> também passa o evento para o manipulador de controle padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3e0-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> é implementado de forma diferente por diferentes controles no Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="2c3e0-140">Para controles como <xref:System.Windows.Forms.TextBox> quais subclasse controla Win32 nativo, ele é interpretado como a mensagem da chave não deve ser passada para o controle nativo subjacente.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="2c3e0-141">Se você definir `Handled` como true em uma <xref:System.Windows.Forms.TextBox>, que o controle não passará o pressionamento da tecla `events` o controle de caixa de texto de Win32 subjacente, mas ainda irá exibir caracteres que o usuário inseriu.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="2c3e0-142">Se você quiser impedir que o controle atual receba um pressionamento de tecla, use o <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3e0-143">O exemplo a seguir determina se o usuário pressionou uma chave não numérico e nesse caso, cancela a <xref:System.Windows.Forms.Control.KeyPress> evento usando o <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-144">Obtém o código de teclado de um evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-145">Um valor <see cref="T:System.Windows.Forms.Keys" /> que é o código de tecla do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c3e0-146">Os exemplos de código a seguir mostram como usar o <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> para determinar qual tecla foi pressionada.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="2c3e0-147">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-147">**Example 1**</span></span>  
  
 <span data-ttu-id="2c3e0-148">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.Control.KeyDown> evento com o <xref:System.Windows.Forms.Help> classe para exibir a Ajuda para o usuário do aplicativo de estilo pop-up.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="2c3e0-149">O exemplo usa o <xref:System.Windows.Forms.KeyEventArgs> propriedades passadas para o método de manipulador de eventos para filtrar todas as variações de pressionar a tecla F1 com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="2c3e0-150">Quando o usuário pressiona qualquer variação de F1 que inclui qualquer modificador de teclado, o <xref:System.Windows.Forms.Help> classe exibe uma janela pop-up, semelhante a um <xref:System.Windows.Forms.ToolTip>, perto do controle.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="2c3e0-151">Se o usuário pressionar ALT + F2, um pop-up Ajuda diferente será exibido com informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="2c3e0-152">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-152">**Example 2**</span></span>  
  
 <span data-ttu-id="2c3e0-153">O exemplo a seguir determina se o usuário pressionou ALT + E e se o ponteiro do mouse está sobre uma <xref:System.Windows.Forms.TreeNode>, permite que o usuário edite que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="2c3e0-154">**Exemplo 3**</span><span class="sxs-lookup"><span data-stu-id="2c3e0-154">**Example 3**</span></span>  
  
 <span data-ttu-id="2c3e0-155">O exemplo a seguir determina se o usuário pressionou uma chave não numérico e nesse caso, cancela a <xref:System.Windows.Forms.Control.KeyPress> evento usando o <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-156">Obtém os dados da chave de um evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-157">Um <see cref="T:System.Windows.Forms.Keys" /> que representa o código da chave que foi pressionada, combinado com sinalizadores de modificador que indicam qual combinação das teclas CTRL, SHIFT e ALT foi pressionada ao mesmo tempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3e0-158">Você pode usar constantes de <xref:System.Windows.Forms.Keys> para extrair as informações do <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="2c3e0-159">Use o operador AND bit a bit para comparar dados retornados por <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> com constantes <xref:System.Windows.Forms.Keys> para obter informações sobre as teclas que o usuário pressionou.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="2c3e0-160">Para determinar se uma tecla modificadora específico foi pressionada, use o <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, e <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3e0-161">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2c3e0-162">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="2c3e0-163">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2c3e0-164">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2c3e0-165">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como um <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="2c3e0-166">Em seguida, nomear a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-167">Obtém o valor de teclado para um evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-168">A representação de inteiro da propriedade <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c3e0-169">O exemplo de código a seguir demonstra o uso desse membro.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2c3e0-170">No exemplo, um manipulador de eventos relatórios sobre a ocorrência da <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="2c3e0-171">Este relatório ajuda você a saber quando o evento ocorre e pode ajudá-lo na depuração.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2c3e0-172">Para gerar relatórios sobre vários eventos ou eventos que ocorrem com frequência, considere substituir <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> com <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou anexar a mensagem como um multiline <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2c3e0-173">Para executar o código de exemplo, cole-o em um projeto que contém uma instância de um tipo que herda de <xref:System.Windows.Forms.Control>, como um <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="2c3e0-174">Em seguida, nomear a instância `Control1` e certifique-se de que o manipulador de eventos está associado com o <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> evento.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-175">Obtém os sinalizadores de modificador para um evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="2c3e0-176">Os sinalizadores indicam qual combinação de teclas CTRL, SHIFT e ALT foi pressionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-177">Um valor <see cref="T:System.Windows.Forms.Keys" /> que representa um ou mais sinalizadores de modificador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3e0-178">Para determinar se uma tecla modificadora específico foi pressionada, use o <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, e <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="2c3e0-179">Sinalizadores de modificador podem ser combinados com OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3e0-180">O exemplo de código a seguir mostra como usar o <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> para determinar quais teclas modificadoras foram pressionadas junto com a chave primária.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-181">Obtém um valor que indica se a tecla SHIFT foi pressionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-182">
            <see langword="true" /> Se a tecla SHIFT foi pressionada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c3e0-183">O exemplo a seguir determina se o usuário pressionou a tecla Shift com a tecla F1, e se assim, exibe a Ajuda.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c3e0-184">Obtém ou define um valor que indica se o evento de chave deve ser passado para o controle subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c3e0-185">
            <see langword="true" /> caso o evento chave não deva ser enviado ao controle; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c3e0-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c3e0-186">Você pode atribuir `true` para essa propriedade em um manipulador de eventos, como <xref:System.Windows.Forms.Control.KeyDown> para impedir a entrada do usuário.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="2c3e0-187">Configuração <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> para `true` também define <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c3e0-188">O exemplo de código a seguir impede que os pressionamentos de teclas numéricos atinjam o <xref:System.Windows.Forms.TextBox> controle chamado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="2c3e0-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>