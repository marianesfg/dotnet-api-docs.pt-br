<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec1972d01d8198e7e5f0b6895a06d1b49a11860a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39752141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9e639-101">Fornece dados para os eventos de <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> e de <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e639-101">Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> and <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e639-102">O <xref:System.Windows.Forms.TreeView.AfterLabelEdit> evento ocorre quando o usuário termina de editar o texto para um nó de árvore.</span><span class="sxs-lookup"><span data-stu-id="9e639-102">The <xref:System.Windows.Forms.TreeView.AfterLabelEdit> event occurs when the user finishes editing the text for a tree node.</span></span> <span data-ttu-id="9e639-103">O <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> evento ocorre quando o usuário começa a editar o texto para um nó de árvore.</span><span class="sxs-lookup"><span data-stu-id="9e639-103">The <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> event occurs when the user begins editing the text for a tree node.</span></span> <span data-ttu-id="9e639-104">Um <xref:System.Windows.Forms.NodeLabelEditEventArgs> objeto Especifica o novo texto a ser associado ao nó de árvore, o nó de árvore que contém o rótulo a ser editado, e se a operação de edição foi cancelada.</span><span class="sxs-lookup"><span data-stu-id="9e639-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> object specifies the new text to associate with the tree node, the tree node that contains the label to edit, and whether the edit operation has been canceled.</span></span>  
  
 <span data-ttu-id="9e639-105">Para obter mais informações sobre como manipular eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="9e639-105">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e639-106">O exemplo a seguir permite que o usuário editar nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="9e639-106">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="9e639-107">Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="9e639-107">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="9e639-108">Se um nó de árvore não-raiz foi selecionado, ele será colocado em um estado editável, permitindo que o usuário edite o rótulo do nó.</span><span class="sxs-lookup"><span data-stu-id="9e639-108">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="9e639-109">Depois que o usuário para editar o rótulo do nó de árvore, o novo texto do rótulo é avaliado e salvo.</span><span class="sxs-lookup"><span data-stu-id="9e639-109">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="9e639-110">Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-110">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="9e639-111">Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado para o seu texto anterior.</span><span class="sxs-lookup"><span data-stu-id="9e639-111">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e639-112">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="9e639-113">O nó de árvore que contém o texto a ser editado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-113">The tree node containing the text to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e639-114">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> para o <see cref="T:System.Windows.Forms.TreeNode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e639-115">O <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> propriedade é atribuída a `node` valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="9e639-115">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="9e639-116">O nó de árvore que contém o texto a ser editado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-116">The tree node containing the text to edit.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="9e639-117">O novo texto a ser associado ao nó de árvore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-117">The new text to associate with the tree node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e639-118">Inicializa uma nova instância da classe <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> para o <see cref="T:System.Windows.Forms.TreeNode" /> especificado e o texto especificado com o qual atualizar o rótulo do nó de árvore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" /> and the specified text with which to update the tree node label.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e639-119">O <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> propriedade é atribuída a `node` valor de parâmetro e o <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> propriedade é atribuída a `label` valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="9e639-119">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value, and the <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> property is assigned the `label` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e639-120">Obtém ou define um valor que indica se a edição foi cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-120">Gets or sets a value indicating whether the edit has been canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e639-121">
            <see langword="true" /> Se a edição foi cancelada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-121">
              <see langword="true" /> if the edit has been canceled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e639-122">O exemplo a seguir permite que o usuário editar nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="9e639-122">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="9e639-123">Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="9e639-123">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="9e639-124">Se um nó de árvore não-raiz foi selecionado, ele será colocado em um estado editável, permitindo que o usuário edite o rótulo do nó.</span><span class="sxs-lookup"><span data-stu-id="9e639-124">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="9e639-125">Depois que o usuário para editar o rótulo do nó de árvore, o novo texto do rótulo é avaliado e salvo.</span><span class="sxs-lookup"><span data-stu-id="9e639-125">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="9e639-126">Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-126">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="9e639-127">Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado para o seu texto anterior.</span><span class="sxs-lookup"><span data-stu-id="9e639-127">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e639-128">Obtém o novo texto a ser associado ao nó de árvore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-128">Gets the new text to associate with the tree node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e639-129">O valor de cadeia de caracteres que representa o novo <see cref="T:System.Windows.Forms.TreeNode" /> rótulo ou <see langword="null" /> se o usuário cancela a edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-129">The string value that represents the new <see cref="T:System.Windows.Forms.TreeNode" /> label or <see langword="null" /> if the user cancels the edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e639-130">O valor dessa propriedade é `null` se o usuário pressiona ESC para cancelar a edição ou pressiona ENTER sem modificar o texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-130">The value of this property is `null` if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.</span></span> <span data-ttu-id="9e639-131">Se o usuário edita o texto do rótulo, o valor dessa propriedade é o novo texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-131">If the user edits the label text, the value of this property is the new label text.</span></span> <span data-ttu-id="9e639-132">Isso é verdadeiro mesmo se o valor final do texto do rótulo editado é o mesmo que seu valor original.</span><span class="sxs-lookup"><span data-stu-id="9e639-132">This is true even if the final value of edited label text is the same as its original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e639-133">O exemplo a seguir permite que o usuário editar nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="9e639-133">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="9e639-134">Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="9e639-134">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="9e639-135">Se um nó de árvore não-raiz foi selecionado, ele será colocado em um estado editável, permitindo que o usuário edite o rótulo do nó.</span><span class="sxs-lookup"><span data-stu-id="9e639-135">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="9e639-136">Depois que o usuário para editar o rótulo do nó de árvore, o novo texto do rótulo é avaliado e salvo.</span><span class="sxs-lookup"><span data-stu-id="9e639-136">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="9e639-137">Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-137">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="9e639-138">Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado para o seu texto anterior.</span><span class="sxs-lookup"><span data-stu-id="9e639-138">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e639-139">Obtém o nó de árvore que contém o texto a ser editado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-139">Gets the tree node containing the text to edit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e639-140">Um <see cref="T:System.Windows.Forms.TreeNode" /> que representa o nó de árvore que contém o texto a ser editado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e639-140">A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node containing the text to edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e639-141">O exemplo a seguir permite que o usuário editar nós de árvore de não-raiz usando um <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="9e639-141">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="9e639-142">Quando o usuário clica o mouse, o <xref:System.Windows.Forms.TreeNode> em que a posição é determinada e armazenada em uma variável chamada `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="9e639-142">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="9e639-143">Se um nó de árvore não-raiz foi selecionado, ele será colocado em um estado editável, permitindo que o usuário edite o rótulo do nó.</span><span class="sxs-lookup"><span data-stu-id="9e639-143">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="9e639-144">Depois que o usuário para editar o rótulo do nó de árvore, o novo texto do rótulo é avaliado e salvo.</span><span class="sxs-lookup"><span data-stu-id="9e639-144">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="9e639-145">Neste exemplo, vários caracteres são considerados não válidos no texto do rótulo.</span><span class="sxs-lookup"><span data-stu-id="9e639-145">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="9e639-146">Se um dos caracteres inválidos está na cadeia de caracteres de rótulo, ou a cadeia de caracteres está vazia, o usuário é notificado sobre o erro e o rótulo é retornado para o seu texto anterior.</span><span class="sxs-lookup"><span data-stu-id="9e639-146">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>