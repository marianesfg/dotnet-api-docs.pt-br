<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d59eb470995743a585c3bb381b5f75e5d9df277" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36348968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingList, IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitialize, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface IBindingList&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fe08d-101">Encapsulates the data source for a form.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe08d-101">Encapsulates the data source for a form.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-102">O <xref:System.Windows.Forms.BindingSource> componente serve a muitos propósitos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="fe08d-103">Primeiro, ele simplifica a controles de associação em um formulário de dados, fornecendo gerenciamento de moeda, notificação de alteração e outros serviços entre fontes de dados e controles de formulários do Windows.</span><span class="sxs-lookup"><span data-stu-id="fe08d-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="fe08d-104">Isso é feito por meio da anexação de <xref:System.Windows.Forms.BindingSource> componente à sua fonte de dados usando o <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="fe08d-105">Para cenários de ligação complexas, opcionalmente, você pode definir o <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriedade para uma coluna específica ou a lista de fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="fe08d-106">Em seguida, você associa os controles para o <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="fe08d-107">Toda a interação adicional com os dados é feita com chamadas para o <xref:System.Windows.Forms.BindingSource> componente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="fe08d-108">Para obter exemplos de como o <xref:System.Windows.Forms.BindingSource> pode simplificar o processo de associação, consulte [como: associar controles dos Windows Forms a valores de banco de dados DBNull](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) e [como: manipular erros e exceções que ocorrem com Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="fe08d-109">Navegação e a atualização da fonte de dados é realizada por meio de métodos como <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, e <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="fe08d-110">Operações como classificação e filtragem são manipuladas por meio de <xref:System.Windows.Forms.BindingSource.Sort%2A> e <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe08d-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="fe08d-111">Para obter mais informações sobre como usar a classificação e filtragem com o <xref:System.Windows.Forms.BindingSource>, consulte [como: Classificar e filtrar dados do ADO.NET com o componente BindingSource dos Windows Forms](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="fe08d-112">Além disso, o <xref:System.Windows.Forms.BindingSource> componente pode agir como uma fonte de dados fortemente tipados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="fe08d-113">Normalmente, o tipo de fonte de dados subjacente é corrigido por meio de um dos seguintes mecanismos:</span><span class="sxs-lookup"><span data-stu-id="fe08d-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="fe08d-114">Use o <xref:System.Windows.Forms.BindingSource.Add%2A> método para adicionar um item para o <xref:System.Windows.Forms.BindingSource> componente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="fe08d-115">Definir o <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriedade a uma lista, um único objeto ou um tipo.</span><span class="sxs-lookup"><span data-stu-id="fe08d-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="fe08d-116">Ambos esses mecanismos de criam uma lista fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="fe08d-117">Para obter mais informações sobre como usar o <xref:System.Windows.Forms.BindingSource> para associar a um tipo, consulte [como: associar um controle Windows Forms a um tipo](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="fe08d-118">Você também pode usar o <xref:System.Windows.Forms.BindingSource> para associar os controles a um objeto de fábrica.</span><span class="sxs-lookup"><span data-stu-id="fe08d-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="fe08d-119">Para obter mais informações sobre como fazer isso, consulte [como: associar um controle Windows Forms a um objeto de fábrica](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe08d-120">Porque um <xref:System.Windows.Forms.BindingSource> identificadores de ambas as fontes de dados simples e complexas, terminologia é problemático.</span><span class="sxs-lookup"><span data-stu-id="fe08d-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="fe08d-121">Nesta documentação da classe, o termo *lista* refere-se a uma coleção de dados na fonte de dados hospedado, e *item* indica um único elemento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="fe08d-122">Ao discutir funcionalidade associado fontes de dados complexas, os termos equivalentes *tabela* e *linha* são usados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="fe08d-123"><xref:System.Windows.Forms.BindingSource> fornece membros para acessar os dados subjacentes.</span><span class="sxs-lookup"><span data-stu-id="fe08d-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="fe08d-124">O item atual pode ser recuperado por meio do <xref:System.Windows.Forms.BindingSource.Current%2A> propriedade e a lista inteira podem ser recuperados por meio de <xref:System.Windows.Forms.BindingSource.List%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="fe08d-125">Operações de edição há suporte para o item atual por meio de <xref:System.Windows.Forms.BindingSource.Current%2A> e <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> e <xref:System.Windows.Forms.BindingSource.Add%2A> e <xref:System.Windows.Forms.BindingSource.AddNew%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="fe08d-126">Embora o gerenciamento de moeda é tratado automaticamente para todos os tipos de fonte de dados subjacente, essa classe expõe um número de eventos, como <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> e <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, que permitem de personalização.</span><span class="sxs-lookup"><span data-stu-id="fe08d-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="fe08d-127">Fontes de dados que estão associados a um <xref:System.Windows.Forms.BindingSource> componentes também podem ser navegados e gerenciados com o <xref:System.Windows.Forms.BindingNavigator> classe, que fornece uma interface de usuário como VCR (UI) para navegar pelos itens em uma lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="fe08d-128">Embora <xref:System.Windows.Forms.BindingNavigator> pode ser vinculado a qualquer fonte de dados, ele foi projetado para integrar um <xref:System.Windows.Forms.BindingSource> componente por meio de seu <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="fe08d-129">A propriedade padrão para o <xref:System.Windows.Forms.BindingSource> classe é <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="fe08d-130">O evento padrão é <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fe08d-131">Muitos dos membros a <xref:System.Windows.Forms.BindingSource> classe operar na lista subjacente representada pelo <xref:System.Windows.Forms.BindingSource.List%2A> propriedade e simplesmente referir-se a operação para a lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="fe08d-132">Portanto, quando o <xref:System.Windows.Forms.BindingSource> está associada a uma implementação personalizada de <xref:System.Collections.IList>, o comportamento exato desses membros pode diferir o comportamento descrito na documentação da classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="fe08d-133">Por exemplo, o <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> chamadas de método <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe08d-134">O <xref:System.Windows.Forms.BindingSource> documentação descreve a <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> método sabendo que o <xref:System.Collections.IList.RemoveAt%2A> método subjacente <xref:System.Collections.IList> é implementado corretamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-135">O exemplo de código a seguir demonstra um <xref:System.Windows.Forms.ListBox> associado a um <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="fe08d-136">O <xref:System.Windows.Forms.BindingSource> está associado a um <xref:System.ComponentModel.BindingList%601> que contém uma lista de fontes.</span><span class="sxs-lookup"><span data-stu-id="fe08d-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-139">A tabela a seguir mostra o padrão <xref:System.Windows.Forms.BindingSource> valores de propriedade inicializados por este construtor.</span><span class="sxs-lookup"><span data-stu-id="fe08d-139">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="fe08d-140">Propriedade</span><span class="sxs-lookup"><span data-stu-id="fe08d-140">Property</span></span>|<span data-ttu-id="fe08d-141">Valor padrão</span><span class="sxs-lookup"><span data-stu-id="fe08d-141">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="fe08d-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-144">Este construtor chama o construtor padrão e, em seguida, adiciona atual <xref:System.Windows.Forms.BindingSource> para o contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-144">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="fe08d-145">Ele geralmente não é usado pelo programador soluções, mas por autores de ambientes de tempo de design.</span><span class="sxs-lookup"><span data-stu-id="fe08d-145">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : obj * string -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource (dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="fe08d-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="fe08d-147">The specific column or list name within the data source to bind to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-147">The specific column or list name within the data source to bind to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="bindingSource.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fe08d-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-150">Adds an existing item to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-150">Adds an existing item to the internal list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-152">O <xref:System.Windows.Forms.BindingSource.Add%2A> método refere-se a chamada para a lista subjacente `Add` método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-152">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="fe08d-153">A lista interna deve conter tipos homogêneos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-153">The internal list must contain homogenous types.</span></span> <span data-ttu-id="fe08d-154">Se o <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriedade já não foi definida, o primeiro objeto adicionado à lista define o tipo da lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-154">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="fe08d-155">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-155">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-156">Exemplo de código a seguir como usar o <xref:System.Windows.Forms.BindingSource.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-156">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="fe08d-157">Para executar este exemplo, cole o código em um formulário do Windows e chame o `PopulateBindingSourceWithFonts` método de construtor do formulário.</span><span class="sxs-lookup"><span data-stu-id="fe08d-157">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-158">
            <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-158">
              <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-159">Occurs before an item is added to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-159">Occurs before an item is added to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-160">O <xref:System.Windows.Forms.BindingSource.AddingNew> evento ocorre antes de um novo objeto é adicionado à lista subjacente representada pelo <xref:System.Windows.Forms.BindingSource.List%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-160">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="fe08d-161">Esse evento é acionado após o <xref:System.Windows.Forms.BindingSource.AddNew%2A> método é chamado, mas antes do novo item é criado e adicionado à lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-161">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="fe08d-162">Manipulando esse evento, o programador pode fornecer a criação de item personalizado e comportamento de inserção sem ser forçado a derivam de <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-162">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="fe08d-163">Isso é feito no manipulador de eventos, definindo o <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriedade o <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parâmetro para o novo item.</span><span class="sxs-lookup"><span data-stu-id="fe08d-163">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="fe08d-164">O novo objeto criado no <xref:System.Windows.Forms.BindingSource.AddingNew> evento deve ser do mesmo tipo como o tipo contido na lista ou ocorrerá uma exceção.</span><span class="sxs-lookup"><span data-stu-id="fe08d-164">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="fe08d-165">Não é possível definir o <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriedade quando associada a um <xref:System.Data.DataView> ou <xref:System.Data.DataTable> porque você não pode adicionar um novo <xref:System.Data.DataRowView> à lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-165">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="fe08d-166">Para obter mais informações sobre como fornecer funcionalidade personalizada de novo item, consulte o <xref:System.Windows.Forms.BindingSource.AddNew%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-166">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="fe08d-167">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-167">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-168">O seguinte exemplo de código usa um <xref:System.Windows.Forms.BindingSource> componente para associar uma lista para um <xref:System.Windows.Forms.DataGridView> controle.</span><span class="sxs-lookup"><span data-stu-id="fe08d-168">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="fe08d-169">Novos itens são adicionados à lista, o <xref:System.Windows.Forms.BindingSource.AddingNew> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-169">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="fe08d-170">Este exemplo de código é parte de um exemplo maior fornecido em [como: personalizar a adição de Item com o BindingSource dos Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-170">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-171">
            <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-171">
              <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="bindingSource.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-172">Adds a new item to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-172">Adds a new item to the underlying list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-174">O <xref:System.Windows.Forms.BindingSource.AddNew%2A> método adiciona um novo item à lista subjacente representada pelo <xref:System.Windows.Forms.BindingSource.List%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-174">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="fe08d-175">Este método define a série de ações a seguir:</span><span class="sxs-lookup"><span data-stu-id="fe08d-175">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="fe08d-176">O <xref:System.Windows.Forms.BindingSource.EndEdit%2A> método é chamado automaticamente para confirmar todas as operações pendentes de edição.</span><span class="sxs-lookup"><span data-stu-id="fe08d-176">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="fe08d-177">O <xref:System.Windows.Forms.BindingSource.AddingNew> evento é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-177">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="fe08d-178">Esse evento pode ser tratado por meio de programação para criar o novo item.</span><span class="sxs-lookup"><span data-stu-id="fe08d-178">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="fe08d-179">Isso é feito no manipulador de eventos, definindo o <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriedade o <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parâmetro para o novo item.</span><span class="sxs-lookup"><span data-stu-id="fe08d-179">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="fe08d-180">O novo objeto criado no <xref:System.Windows.Forms.BindingSource.AddingNew> evento deve ser do mesmo tipo como o tipo contido na lista ou ocorrerá uma exceção.</span><span class="sxs-lookup"><span data-stu-id="fe08d-180">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="fe08d-181">Se o <xref:System.Windows.Forms.BindingSource.AddingNew> evento não é tratado, e a lista subjacente é um <xref:System.ComponentModel.IBindingList>, em seguida, a solicitação é passada para a lista <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-181">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-182">Se a lista subjacente não é um <xref:System.ComponentModel.IBindingList>, o item é criado automaticamente por meio de seu construtor padrão público.</span><span class="sxs-lookup"><span data-stu-id="fe08d-182">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="fe08d-183">Em ambos os casos, o novo item é adicionado ao final da lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-183">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="fe08d-184">O novo item é adicionado imediatamente para a lista interna, a menos que a fonte de dados implementa a <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="fe08d-184">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="fe08d-185">Nesse caso, o novo item não será confirmado até que uma chamada explícita para <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> é feita ou até que uma nova operação de lista é iniciada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-185">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="fe08d-186">Antes de ser confirmada, o novo item pode ser revertido chamando <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, caso em que o novo item será descartado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-186">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="fe08d-187">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-187">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-188">O seguinte exemplo de código usa um <xref:System.Windows.Forms.BindingSource> componente para associar uma lista para um <xref:System.Windows.Forms.DataGridView> controle.</span><span class="sxs-lookup"><span data-stu-id="fe08d-188">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="fe08d-189">Novos itens são adicionados à lista, o <xref:System.Windows.Forms.BindingSource.AddingNew> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-189">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="fe08d-190">Este exemplo de código é parte de um exemplo maior fornecido em [como: personalizar a adição de Item com o BindingSource dos Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-190">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fe08d-192">-or-  A public default constructor could not be found for the current item type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-192">-or-  A public default constructor could not be found for the current item type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool" Usage="System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-193">Gets a value indicating whether items in the underlying list can be edited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-193">Gets a value indicating whether items in the underlying list can be edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-194">
            <see langword="true" /> para indicar que os itens da lista podem ser editados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-194">
              <see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-195">O <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> propriedade normalmente é usada por outros componentes para determinar se a edição de itens na lista é permitida.</span><span class="sxs-lookup"><span data-stu-id="fe08d-195">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.Windows.Forms.BindingSource.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-196">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-196">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-197">
            <see langword="true" /> se <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> pode ser usado para adicionar itens à lista; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-197">
              <see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-198">O valor padrão para o <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriedade depende do tipo de fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-198">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="fe08d-199">Se a lista subjacente implementa o <xref:System.ComponentModel.IBindingList> interface, essa propriedade será delegado à lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-199">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="fe08d-200">Caso contrário, essa propriedade retornará `false` se a lista subjacente tiver uma das seguintes características:</span><span class="sxs-lookup"><span data-stu-id="fe08d-200">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="fe08d-201">Ele tem um tamanho fixo, conforme determinado pelo <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-201">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="fe08d-202">Ele é somente leitura, conforme determinado pelo <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-202">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="fe08d-203">O tipo do item não tem um construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="fe08d-203">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe08d-204">Depois que o valor dessa propriedade é definido, o getter não faz mais referência a chamada para a lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-204">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="fe08d-205">Em vez disso, ele simplesmente retorna o valor que foi anteriormente definido até que o <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-205">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="fe08d-206">Configuração dessa propriedade gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento com <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> definido como <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-206">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fe08d-207">Se você definir o <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriedade `true` e o tipo de lista subjacente não tem um construtor padrão, você deve tratar o <xref:System.Windows.Forms.BindingSource.AddingNew> eventos e criar o tipo apropriado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-207">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-208">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriedade do <xref:System.Windows.Forms.BindingSource> componente para permitir que o usuário para adicionar novos itens a <xref:System.Windows.Forms.BindingSource> lista subjacente do componente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-208">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="fe08d-209">Definir essa propriedade como `true` faz com que o limite <xref:System.Windows.Forms.DataGridView> controle para exibir a linha para novos registros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-209">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-210">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-210">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="fe08d-211">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-211">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool" Usage="System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-212">Gets a value indicating whether items can be removed from the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-212">Gets a value indicating whether items can be removed from the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-213">
            <see langword="true" /> para indicar que lista os itens podem ser removidos da lista; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-213">
              <see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-214">O <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> propriedade normalmente é usada por outros componentes para determinar se a edição de itens na lista é permitida.</span><span class="sxs-lookup"><span data-stu-id="fe08d-214">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-215">Sorts the data source with the specified sort description or descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-215">Sorts the data source with the specified sort description or descriptions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit" Usage="bindingSource.ApplySort sorts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts">
          <span data-ttu-id="fe08d-216">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-216">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-217">Sorts the data source with the specified sort descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-217">Sorts the data source with the specified sort descriptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-218"><xref:System.ComponentModel.IBindingListView> implementa a classificação de várias colunas como um conjunto de pares de direção do descritor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-218"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-219">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-219">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingSource.ApplySort (property, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="fe08d-220">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-220">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="fe08d-221">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-221">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-222">Sorts the data source using the specified property descriptor and sort direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-222">Sorts the data source using the specified property descriptor and sort direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-223">O <xref:System.ComponentModel.IBindingList> implementa a única coluna de classificação usando um <xref:System.ComponentModel.PropertyDescriptor> para indicar uma propriedade de classificação e uma <xref:System.ComponentModel.ListSortDirection> que indica se o conteúdo de propriedade deve ser classificado em ordem crescente ou decrescente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-223">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-224">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-224">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-225">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-225">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-226">O <xref:System.Windows.Forms.BindingSource.BindingComplete> evento ocorre depois de todos os clientes, normalmente, os controles foram ligados a atual <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-226">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="fe08d-227">O manipulador desse evento pode tomar a ação apropriada com base no êxito, erros ou exceções no processo de associação, examinando o <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> propriedade o <xref:System.Windows.Forms.BindingCompleteEventArgs> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fe08d-227">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="fe08d-228">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-228">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-229">O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.BindingSource.BindingComplete> eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-229">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="fe08d-230">Para executar esse código, cole-o em um arquivo de código vazio.</span><span class="sxs-lookup"><span data-stu-id="fe08d-230">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingSource.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-231">Cancels the current edit operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-231">Cancels the current edit operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-232">Esse método descarta as modificações nos dados desde a última salvar ou carregar a operação se as seguintes condições forem atendidas:</span><span class="sxs-lookup"><span data-stu-id="fe08d-232">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="fe08d-233">A fonte de dados implementa a <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="fe08d-233">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="fe08d-234">O <xref:System.Windows.Forms.BindingSource.EndEdit%2A> método ainda não foi chamado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-234">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="fe08d-235">Este método chama o <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> método subjacente <xref:System.Windows.Forms.CurrencyManager>e tem como escopo alterações no nível de linha.</span><span class="sxs-lookup"><span data-stu-id="fe08d-235">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bindingSource.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-236">Removes all elements from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-236">Removes all elements from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-237">O <xref:System.Windows.Forms.BindingSource.Clear%2A> método Remove todos os elementos da lista subjacente representada pelo <xref:System.Windows.Forms.BindingSource.List%2A> propriedade e configura o <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade como zero.</span><span class="sxs-lookup"><span data-stu-id="fe08d-237">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="fe08d-238">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-238">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="bindingSource.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fe08d-239">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-239">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="fe08d-240">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-240">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-241">Determines whether an object is an item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-241">Determines whether an object is an item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-242">
            <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-242">
              <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-243">Embora a implementação é dependente da lista subjacente `Contains` método, normalmente aplicam as seguintes características:</span><span class="sxs-lookup"><span data-stu-id="fe08d-243">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="fe08d-244"><xref:System.Windows.Forms.BindingSource.List%2A> é pesquisado a partir do primeiro elemento e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-244"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="fe08d-245">O método subjacente realiza uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao valor da <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-245">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="fe08d-246">O método subjacente determinar igualdade chamando o <xref:System.Object.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-246">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bindingSource.CopyTo (arr, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="fe08d-247">The destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-247">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="fe08d-248">The index in the destination array at which to start the copy operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-248">The index in the destination array at which to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-249">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-249">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-250">Você pode usar esse método para combinar itens de várias fontes em uma única matriz.</span><span class="sxs-lookup"><span data-stu-id="fe08d-250">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-251">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-251">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-252">O número total de itens filtrados na lista subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-252">The total number of filtered items in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-253">O <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade obtém o número de itens na lista subjacente representada pelo <xref:System.Windows.Forms.BindingSource.List%2A> conforme modificado pelo valor de propriedade a <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-253">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-254">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, e <xref:System.Windows.Forms.BindingSource.Count%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-254">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="fe08d-255">Para executar este exemplo, cole o código em um formulário que contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1`, dois rótulos denominados `label1` e `label2`e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-255">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="fe08d-256">Associar o `button1_Click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-256">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-257">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-257">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-258">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-258">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-259">O <see cref="T:System.Windows.Forms.CurrencyManager" /> associado a este <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-259">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-260">Se você quiser acessar o Gerenciador de moeda para outra associação para o uso de membro de dados mesmo o <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-260">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingSource.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-261">Gets the current item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-261">Gets the current item in the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-262">Um <see cref="T:System.Object" /> que representa o item atual na lista subjacente representada pela propriedade <see cref="P:System.Windows.Forms.BindingSource.List" />, ou <see langword="null" />, se a lista não tiver nenhum item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-262">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-263">Use o <xref:System.Windows.Forms.BindingSource.Current%2A> propriedade para acessar o item atual, mas use o <xref:System.Windows.Forms.BindingSource.List%2A> propriedade para obter a lista completa.</span><span class="sxs-lookup"><span data-stu-id="fe08d-263">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="fe08d-264">Para determinar o tipo do objeto atual, use o <xref:System.Object.GetType%2A>, ou <xref:System.Object.ToString%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-264">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="fe08d-265">Para alterar o item atual, defina o <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade para um novo valor integral ou use um dos métodos de navegação, como <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-265">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-266">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-266">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="fe08d-267">Para executar este exemplo, cole o código em um formulário e uma chamada a `PopulateBindingSourceWithFonts` método do formulário de <xref:System.Windows.Forms.Form.Load> método de manipulação de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-267">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-268">Occurs when the currently bound item changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-268">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-269">O <xref:System.Windows.Forms.BindingSource.CurrentChanged> é gerado sempre que o <xref:System.Windows.Forms.BindingSource.Current%2A> alterações de propriedade para qualquer um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="fe08d-269">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="fe08d-270">A posição atual do <xref:System.Windows.Forms.BindingSource.List%2A> alterações.</span><span class="sxs-lookup"><span data-stu-id="fe08d-270">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="fe08d-271">O <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> alteração de propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe08d-271">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="fe08d-272">A associação de subjacente <xref:System.Windows.Forms.BindingSource.List%2A> alterações, que faz com que <xref:System.Windows.Forms.BindingSource.Position%2A> para se referir a um item diferente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-272">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="fe08d-273">Exemplos incluem a adição ou exclusão de um item antes do item atual, excluindo ou movendo o próprio item atual ou mover um item para a posição atual.</span><span class="sxs-lookup"><span data-stu-id="fe08d-273">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="fe08d-274">A lista subjacente é atualizada por uma nova classificação ou filtragem de operação.</span><span class="sxs-lookup"><span data-stu-id="fe08d-274">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="fe08d-275">Quando esse evento é disparado, o <xref:System.Windows.Forms.BindingSource.Current%2A> propriedade já contém o novo valor.</span><span class="sxs-lookup"><span data-stu-id="fe08d-275">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="fe08d-276"><xref:System.Windows.Forms.BindingSource.CurrentChanged> é o evento padrão para o <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-276"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="fe08d-277">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-277">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-278">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-278">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-279">O <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> é gerado em resposta a todas as circunstâncias que geram o <xref:System.Windows.Forms.BindingSource.CurrentChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-279">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="fe08d-280">Além disso, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> também é acionado sempre que o valor de uma das propriedades de <xref:System.Windows.Forms.BindingSource.Current%2A> é alterado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-280">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="fe08d-281">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-281">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-282">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-282">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-283">Esse evento é informativo e relata somente as exceções compatível com CLS.</span><span class="sxs-lookup"><span data-stu-id="fe08d-283">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="fe08d-284">Para determinar o tipo de exceção que ocorreu, lidar com esse evento e verifique o <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> propriedade o <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-284">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="fe08d-285">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-285">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.BindingSource.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-286">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-286">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-287">O nome de uma lista (ou linha) no <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-287">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          </span>
          <span data-ttu-id="fe08d-288">O padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-288">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-289">Se o <xref:System.Windows.Forms.BindingSource.DataSource%2A> contém várias listas (ou tabelas) de dados, você deve definir o <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriedade para o nome de uma das fontes.</span><span class="sxs-lookup"><span data-stu-id="fe08d-289">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="fe08d-290">Configuração dessa propriedade gera o <xref:System.Windows.Forms.BindingSource.DataMemberChanged> evento</span><span class="sxs-lookup"><span data-stu-id="fe08d-290">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-291">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-291">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-292">O <xref:System.Windows.Forms.BindingSource.DataMemberChanged> evento ocorre após o <xref:System.Windows.Forms.BindingSource.DataMember%2A> alterações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-292">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="fe08d-293">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-293">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.BindingSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-294">Gets or sets the data source that the connector binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-294">Gets or sets the data source that the connector binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-295">Um <see cref="T:System.Object" /> que atua como uma fonte de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-295">An <see cref="T:System.Object" /> that acts as a data source.</span>
          </span>
          <span data-ttu-id="fe08d-296">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-296">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-297">O <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriedade pode ser definida como um número de fontes de dados, incluindo tipos de objetos e listas de tipos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-297">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="fe08d-298">A fonte de dados resultante será exposta como uma lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-298">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="fe08d-299">A tabela a seguir mostra algumas das fontes de dados comuns e a avaliação de lista resultante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-299">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="fe08d-300">Propriedade DataSource</span><span class="sxs-lookup"><span data-stu-id="fe08d-300">DataSource property</span></span>|<span data-ttu-id="fe08d-301">Listar resultados</span><span class="sxs-lookup"><span data-stu-id="fe08d-301">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="fe08d-302">Vazio <xref:System.ComponentModel.IBindingList> de objetos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-302">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="fe08d-303">Adicionar um item define a lista como o tipo do item adicionado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-303">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="fe08d-304">`null` com <xref:System.Windows.Forms.BindingSource.DataMember%2A> definido</span><span class="sxs-lookup"><span data-stu-id="fe08d-304">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="fe08d-305">Sem suporte, gera <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-305">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="fe08d-306">Tipo fora da lista ou objeto do tipo "T"</span><span class="sxs-lookup"><span data-stu-id="fe08d-306">Non-list type or object of type "T"</span></span>|<span data-ttu-id="fe08d-307">Vazio <xref:System.ComponentModel.IBindingList> do tipo "T".</span><span class="sxs-lookup"><span data-stu-id="fe08d-307">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="fe08d-308">Instância de matriz</span><span class="sxs-lookup"><span data-stu-id="fe08d-308">Array instance</span></span>|<span data-ttu-id="fe08d-309"><xref:System.ComponentModel.IBindingList> que contém os elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="fe08d-309"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="fe08d-310"><xref:System.Collections.IEnumerable> Instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-310"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="fe08d-311">Um <xref:System.ComponentModel.IBindingList> que contém o <xref:System.Collections.IEnumerable> itens.</span><span class="sxs-lookup"><span data-stu-id="fe08d-311">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="fe08d-312">Instância de lista que contém o tipo "T"</span><span class="sxs-lookup"><span data-stu-id="fe08d-312">List instance containing type "T"</span></span>|<span data-ttu-id="fe08d-313"><xref:System.ComponentModel.IBindingList> instância que contém o tipo "T".</span><span class="sxs-lookup"><span data-stu-id="fe08d-313"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="fe08d-314">Além disso, <xref:System.Windows.Forms.BindingSource.DataSource%2A> pode ser definido como outros tipos de lista como <xref:System.ComponentModel.IListSource> e <xref:System.ComponentModel.ITypedList> e <xref:System.Windows.Forms.BindingSource> manipulará corretamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-314">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="fe08d-315">Nesse caso, os tipos contidos na lista devem ter um construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="fe08d-315">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="fe08d-316">Ao definir uma fonte de dados se a referência fornecida contém mais de uma lista ou tabela, você deve definir o <xref:System.Windows.Forms.BindingSource.DataMember%2A> uma cadeia de caracteres que especifica a lista para associar à propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-316">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="fe08d-317">A definição dessa propriedade aciona o evento <xref:System.Windows.Forms.BindingSource.DataSourceChanged>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-317">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe08d-318">Se você fizer alterações para o <xref:System.Windows.Forms.BindingSource.DataSource%2A> valor da propriedade, você deve fazer isso no thread de interface do usuário do usuário para garantir que a interface do usuário reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="fe08d-318">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="fe08d-319">O <xref:System.Windows.Forms.BindingSource.DataSource%2A> é a propriedade padrão para o <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-319">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-320">O exemplo de código a seguir atribui uma lista de clientes para o <xref:System.Windows.Forms.BindingSource.DataSource%2A> de um <xref:System.Windows.Forms.BindingSource> componente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-320">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="fe08d-321">Este exemplo de código é parte de um exemplo maior fornecido no [como: acionar notificações de alteração usando o método BindingSource Resetitem](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-321">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-322">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-322">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-323">O <xref:System.Windows.Forms.BindingSource.DataSourceChanged> evento ocorre após o <xref:System.Windows.Forms.BindingSource.DataSource%2A> alterações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-323">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="fe08d-324">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-324">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="bindingSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fe08d-325">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-325">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-326">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-326">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-327">Este método é chamado pelo método público `Dispose` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-327">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="fe08d-328">`Dispose` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-328">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="fe08d-329"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-329"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="fe08d-330">Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Windows.Forms.BindingSource> referências.</span><span class="sxs-lookup"><span data-stu-id="fe08d-330">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="fe08d-331">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-331">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-332">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-332">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="bindingSource.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-333">Applies pending changes to the underlying data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-333">Applies pending changes to the underlying data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-334">Quando o <xref:System.Windows.Forms.BindingSource.EndEdit%2A> método é chamado, todas as alterações pendentes são aplicadas à fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-334">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="fe08d-335">Este método não tem nenhum efeito a menos que os objetos contidos pela fonte de dados implementam a <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="fe08d-335">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="fe08d-336">Se os objetos não implementam a <xref:System.ComponentModel.IEditableObject> interface, as alterações nos dados são copiados para a fonte de dados imediatamente após cada alteração.</span><span class="sxs-lookup"><span data-stu-id="fe08d-336">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="fe08d-337">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-337">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.BindingSource.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-338">Gets or sets the expression used to filter which rows are viewed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-338">Gets or sets the expression used to filter which rows are viewed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-339">Uma cadeia de caracteres que especifica como as linhas devem ser filtradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-339">A string that specifies how rows are to be filtered.</span>
          </span>
          <span data-ttu-id="fe08d-340">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-340">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-341">Normalmente usado em cenários de associação de dados complexos, o <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedade permite que você exiba um subconjunto do <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-341">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="fe08d-342">Somente subjacente lista que implementam o <xref:System.ComponentModel.IBindingListView> interface filtragem de suporte.</span><span class="sxs-lookup"><span data-stu-id="fe08d-342">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="fe08d-343">Quando <xref:System.Windows.Forms.BindingSource.Filter%2A> não é `null`, o <xref:System.Windows.Forms.BindingSource> passa essa propriedade para a lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-343">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="fe08d-344">Se você definir essa propriedade durante a inicialização do objeto, a chamada será adiada até após a conclusão da inicialização.</span><span class="sxs-lookup"><span data-stu-id="fe08d-344">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="fe08d-345">Para formar um valor de filtro, especifique o nome de uma coluna seguido por um operador e um valor para filtrar.</span><span class="sxs-lookup"><span data-stu-id="fe08d-345">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="fe08d-346">A sintaxe de filtro aceitos depende da fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-346">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="fe08d-347">Se a fonte de dados subjacente seja um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, você pode especificar expressões Boolianas usando a sintaxe documentada para o <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-347">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="fe08d-348">O valor da <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedade afeta o valor da <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-348">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="fe08d-349">Além disso, o <xref:System.Windows.Forms.BindingSource.Filter%2A> valor será mantido quando as alterações da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-349">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="fe08d-350">Para interromper a filtragem de <xref:System.Windows.Forms.BindingSource.DataSource%2A>, chame o <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-350">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-351">O exemplo a seguir mostra como usar o <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedade com um <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-351">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="fe08d-352">Para executar este exemplo, cole o código em um formulário do Windows e a chamada `PopulateDataViewAndFilter` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> método manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-352">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="fe08d-353">O formulário deve importar o <xref:System.Xml> e <xref:System.IO> namespaces.</span><span class="sxs-lookup"><span data-stu-id="fe08d-353">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-354">Find the specified item in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-354">Find the specified item in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingSource.Find (prop, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="fe08d-355">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-355">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fe08d-356">The value of <c>prop</c> to match.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-356">The value of <c>prop</c> to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-357">Searches for the index of the item that has the given property descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-357">Searches for the index of the item that has the given property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-358">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-358">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-359">Esse método é usado normalmente em casos de associação de dados complexos para localizar a primeira linha onde o valor do campo especificado com o `prop` parâmetro igual ao valor da `key` parâmetro</span><span class="sxs-lookup"><span data-stu-id="fe08d-359">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="fe08d-360">Este método simplesmente refere-se a solicitação para a lista subjacente <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-360">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-361">Por exemplo, se a fonte de dados subjacente seja um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, este método chama o <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-361">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-362">O comportamento de <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, como o valor retornado se nenhum item correspondente for encontrado, depende da implementação do método na lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-362">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-363">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.BindingSource.Find%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-363">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="fe08d-364">Para o exemplo completo, consulte o tópico de visão geral de classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-364">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-365">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-365">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : string * obj -&gt; int" Usage="bindingSource.Find (propertyName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="fe08d-366">The name of the property to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-366">The name of the property to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fe08d-367">The value of the item with the specified <c>propertyName</c> to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-367">The value of the item with the specified <c>propertyName</c> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-368">Returns the index of the item in the list with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-368">Returns the index of the item in the list with the specified property name and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-369">The zero-based index of the item with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-369">The zero-based index of the item with the specified property name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-370">O <xref:System.Windows.Forms.BindingSource.Find%2A> método só pode ser usado quando a lista subjacente é um <xref:System.ComponentModel.IBindingList> pesquisa implementado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-370">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="fe08d-371">Este método simplesmente refere-se a solicitação para a lista subjacente <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-371">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-372">Por exemplo, se a fonte de dados subjacente seja um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, este método converte `propertyName` para um <xref:System.ComponentModel.PropertyDescriptor> e chama o <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-372">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="fe08d-373">O comportamento de <xref:System.Windows.Forms.BindingSource.Find%2A>, como o valor retornado se nenhum item correspondente for encontrado, depende da implementação do método na lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-373">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="fe08d-374">A comparação de nome de propriedade diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fe08d-374">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-375">O exemplo a seguir mostra como usar o <xref:System.Windows.Forms.BindingSource.Find%2A> método com um <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-375">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="fe08d-376">Para executar este exemplo, cole o código em um formulário do Windows e a chamada `PopulateDataViewAndFind` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> método manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-376">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="fe08d-377">O formulário deve importar o <xref:System.Xml> e <xref:System.IO> namespaces.</span><span class="sxs-lookup"><span data-stu-id="fe08d-377">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-378">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-378">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fe08d-379">
            <paramref name="propertyName" /> does not match a property in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-379">
              <paramref name="propertyName" /> does not match a property in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-380">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-380">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-381">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-381">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="fe08d-382">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-382">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-383">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-383">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-384">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-384">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="bindingSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="fe08d-385">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-385">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-386">Gets the name of the list supplying data for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-386">Gets the name of the list supplying data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-387">The name of the list supplying the data for binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-387">The name of the list supplying the data for binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager&#xA;override this.GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager" Usage="bindingSource.GetRelatedCurrencyManager dataMember" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember">
          <span data-ttu-id="fe08d-388">The name of column or list, within the data source to retrieve the currency manager for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-388">The name of column or list, within the data source to retrieve the currency manager for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-389">Gets the related currency manager for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-389">Gets the related currency manager for the specified data member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-390">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-390">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-391">Se `dataMember` é `null` ou uma cadeia de caracteres vazia (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> retorna o Gerenciador de moeda principal; Caso contrário, ele verifica se há outro <xref:System.Windows.Forms.BindingSource> associado para o membro de dados especificado e retorna seu Gerenciador de moeda.</span><span class="sxs-lookup"><span data-stu-id="fe08d-391">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="bindingSource.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fe08d-392">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-392">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="fe08d-393">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-393">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-394">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-394">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe08d-395">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-395">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-396">Embora a implementação é dependente da lista subjacente `IndexOf` método, normalmente aplicam as seguintes características:</span><span class="sxs-lookup"><span data-stu-id="fe08d-396">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="fe08d-397">O <xref:System.Windows.Forms.BindingSource.List%2A> é pesquisado iniciando no primeiro elemento e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-397">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="fe08d-398">O método subjacente realiza uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao valor da <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-398">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="fe08d-399">O método subjacente determinar igualdade chamando o <xref:System.Object.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-399">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="bindingSource.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe08d-400">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-400">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fe08d-401">The <see cref="T:System.Object" /> to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-401">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="fe08d-402">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-402">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-403">Inserts an item into the list at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-403">Inserts an item into the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-404">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-404">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe08d-405">
            <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-405">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-406">The list is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-406">The list is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-407">Gets a value indicating whether the list binding is suspended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-407">Gets a value indicating whether the list binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-408">
            <see langword="true" /> para indicar que a associação está suspenso; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-408">
              <see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-409">Gets a value indicating whether the underlying list has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-409">Gets a value indicating whether the underlying list has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-410">
            <see langword="true" /> Se a lista subjacente tem um tamanho fixo; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-410">
              <see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-411">Se a lista tem um tamanho fixo, ele não permite a adição ou remoção de elementos depois que a lista foi criada, mas você pode modificar os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="fe08d-411">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-412">Gets a value indicating whether the underlying list is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-412">Gets a value indicating whether the underlying list is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-413">
            <see langword="true" /> Se a lista é somente leitura; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-413">
              <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-414">Uma lista que é somente leitura não permite a adição, remoção ou modificação de itens de lista depois que a lista é criada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-414">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSorted : bool" Usage="System.Windows.Forms.BindingSource.IsSorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-415">Gets a value indicating whether the items in the underlying list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-415">Gets a value indicating whether the items in the underlying list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-416">
            <see langword="true" /> Se a lista é um <see cref="T:System.ComponentModel.IBindingList" /> e é classificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-416">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-417"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> sempre retorna `false` se a lista não é um <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-417"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-418">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-418">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-419">
            <see langword="true" /> para indicar que a lista está sincronizada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-419">
              <see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.BindingSource.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe08d-420">The zero-based index of the element to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-420">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-421">Gets or sets the list element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-421">Gets or sets the list element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-422">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-422">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-423">O <xref:System.Windows.Forms.BindingSource.Item%2A> propriedade representa o indexador para esta classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-423">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="fe08d-424">Ele aceita `null` como um valor válido e permite que os itens duplicados na lista.</span><span class="sxs-lookup"><span data-stu-id="fe08d-424">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="fe08d-425">Configuração irá gerar um valor de <xref:System.Windows.Forms.BindingSource.ListChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-425">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe08d-426">
            <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-426">
              <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.BindingSource.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-427">Gets the list that the connector is bound to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-427">Gets the list that the connector is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-428">Um <see cref="T:System.Collections.IList" /> que representa a lista ou <see langword="null" /> se não houver nenhuma lista subjacente associada a esse <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-428">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-429">O <xref:System.Windows.Forms.BindingSource> classe manipula uniformemente diferentes fontes de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-429">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="fe08d-430">O ideal é a <xref:System.Windows.Forms.BindingSource.List%2A> propriedade deve ser definida como geral <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-430">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="fe08d-431">No entanto, às vezes, pode ser necessário converter essa propriedade como um tipo mais específico.</span><span class="sxs-lookup"><span data-stu-id="fe08d-431">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="fe08d-432">A tabela a seguir mostra o tipo de lista subjacente, que depende do tipo ou valor da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-432">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="fe08d-433">Tipo de fonte de dados</span><span class="sxs-lookup"><span data-stu-id="fe08d-433">Data source type</span></span>|<span data-ttu-id="fe08d-434">Descrição da lista subjacente</span><span class="sxs-lookup"><span data-stu-id="fe08d-434">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="fe08d-435"><xref:System.Windows.Forms.BindingSource.DataSource%2A> e <xref:System.Windows.Forms.BindingSource.DataMember%2A> são `null`</span><span class="sxs-lookup"><span data-stu-id="fe08d-435"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="fe08d-436">Um <xref:System.Collections.ArrayList> vazio.</span><span class="sxs-lookup"><span data-stu-id="fe08d-436">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="fe08d-437"><xref:System.Windows.Forms.BindingSource.DataSource%2A> é `null`, mas <xref:System.Windows.Forms.BindingSource.DataMember%2A> não é `null`</span><span class="sxs-lookup"><span data-stu-id="fe08d-437"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="fe08d-438">Nenhum; uma tentativa de obter o <xref:System.Windows.Forms.BindingSource.List%2A> lançará um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-438">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="fe08d-439">Um <xref:System.Array> instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-439">An <xref:System.Array> instance</span></span>|<span data-ttu-id="fe08d-440">Um <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-440">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="fe08d-441">Um <xref:System.ComponentModel.IListSource> instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-441">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="fe08d-442">O valor de retorno de uma chamada para o <xref:System.ComponentModel.IListSource.GetList%2A> método deste <xref:System.ComponentModel.IListSource> instância.</span><span class="sxs-lookup"><span data-stu-id="fe08d-442">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="fe08d-443">Um <xref:System.ComponentModel.IBindingList> instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-443">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="fe08d-444">Um <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-444">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="fe08d-445">Um <xref:System.Collections.IList> instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-445">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="fe08d-446">Um <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-446">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="fe08d-447">Não<xref:System.Collections.IList> instância do tipo "T"</span><span class="sxs-lookup"><span data-stu-id="fe08d-447">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="fe08d-448">Um <xref:System.ComponentModel.BindingList%601> com um elemento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-448">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="fe08d-449">Um <xref:System.ComponentModel.ICustomTypeDescriptor> instância</span><span class="sxs-lookup"><span data-stu-id="fe08d-449">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="fe08d-450">Um <xref:System.Collections.ArrayList> com um elemento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-450">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="fe08d-451">Um <xref:System.Collections.IEnumerable></span><span class="sxs-lookup"><span data-stu-id="fe08d-451">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="fe08d-452">Um <xref:System.Collections.ArrayList> com os elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-452">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="fe08d-453">O <xref:System.Array> tipo com <xref:System.Windows.Forms.BindingSource.DataMember%2A> do item de tipo "T"</span><span class="sxs-lookup"><span data-stu-id="fe08d-453">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="fe08d-454">Um <xref:System.ComponentModel.BindingList%601>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-454">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="fe08d-455">Um <xref:System.Type> que representa um <xref:System.ComponentModel.IListSource> ou <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="fe08d-455">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="fe08d-456">Uma instância criada por uma chamada para o <xref:System.Activator.CreateInstance%28System.Type%29> método o <xref:System.Activator> classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-456">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="fe08d-457">Um <xref:System.NotSupportedException> pode ser acionada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-457">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="fe08d-458">O <xref:System.Collections.IList> tipo com <xref:System.Windows.Forms.BindingSource.DataMember%2A> do item de tipo "T"</span><span class="sxs-lookup"><span data-stu-id="fe08d-458">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="fe08d-459">-ou-</span><span class="sxs-lookup"><span data-stu-id="fe08d-459">-or-</span></span><br /><br /> <span data-ttu-id="fe08d-460">Não<xref:System.Collections.IList> tipo</span><span class="sxs-lookup"><span data-stu-id="fe08d-460">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="fe08d-461">Um <xref:System.ComponentModel.BindingList%601>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-461">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="fe08d-462">O <xref:System.ComponentModel.ICustomTypeDescriptor> tipo</span><span class="sxs-lookup"><span data-stu-id="fe08d-462">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="fe08d-463">Nenhum; uma tentativa de obter o <xref:System.Windows.Forms.BindingSource.List%2A> lançará um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-463">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="fe08d-464">Se o tipo recuperado é o <xref:System.Collections.IList> interface, a coleção subjacente pode ser mais complexa, como um <xref:System.Collections.ArrayList> ou <xref:System.Data.DataView> classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-464">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-465">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, e <xref:System.Windows.Forms.BindingSource.Count%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-465">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="fe08d-466">Para executar este exemplo, cole o código em um formulário que contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1`, dois rótulos denominados `label1` e `label2`e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-466">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="fe08d-467">Associar o `button1_Click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-467">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-468">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-468">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-469">Occurs when the underlying list changes or an item in the list changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-469">Occurs when the underlying list changes or an item in the list changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-470">O <xref:System.Windows.Forms.BindingSource.ListChanged> evento ocorre quando há uma alteração para a associação ou os metadados da lista subjacente representado pelo <xref:System.Windows.Forms.BindingSource.List%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-470">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="fe08d-471">Por exemplo, esse evento é gerado quando itens são adicionados, removidos ou movidos, ou o <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> alteração de propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe08d-471">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="fe08d-472">Os valores de <xref:System.Windows.Forms.BindingSource.Sort%2A> e <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedades serão mantidas quando esse evento ocorrer.</span><span class="sxs-lookup"><span data-stu-id="fe08d-472">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="fe08d-473">Esse evento pode ser completamente suprimido definindo o <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-473">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="fe08d-474">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-474">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-475">O exemplo de código a seguir demonstra a manipulação de <xref:System.Windows.Forms.BindingSource.ListChanged> eventos do <xref:System.Windows.Forms.BindingSource> componente detectar quando o <xref:System.Windows.Forms.BindingSource> lista subjacente do componente é alterada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-475">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberSignature Language="F#" Value="member this.MoveFirst : unit -&gt; unit" Usage="bindingSource.MoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-476">Moves to the first item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-476">Moves to the first item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-477">Altera o valor atual de <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade como 0, o primeiro item na fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-477">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-478">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, e <xref:System.Windows.Forms.BindingSource.Position%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-478">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="fe08d-479">Para executar este exemplo, cole o código em um formulário que importa o <xref:System.Drawing.Drawing2D> namespace e contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1` e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-479">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="fe08d-480">Associar o `Form1_Load` e `Form1_Paint` métodos com o <xref:System.Windows.Forms.Form.Load> e <xref:System.Windows.Forms.Control.Paint> eventos para o formulário e associar o `button1_click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-480">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-481">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-481">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberSignature Language="F#" Value="member this.MoveLast : unit -&gt; unit" Usage="bindingSource.MoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-482">Moves to the last item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-482">Moves to the last item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-483">Altera o valor atual do <xref:System.Windows.Forms.BindingSource.Position%2A> o índice do último item na fonte de dados subjacente, que é igual ao valor da propriedade de <xref:System.Windows.Forms.BindingSource.Count%2A> propriedade menos 1.</span><span class="sxs-lookup"><span data-stu-id="fe08d-483">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="bindingSource.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-484">Moves to the next item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-484">Moves to the next item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-485">Altera o valor atual de <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade para o próximo item na fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-485">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-486">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, e <xref:System.Windows.Forms.BindingSource.Position%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-486">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="fe08d-487">Para executar este exemplo, cole o código em um formulário que importa o <xref:System.Drawing.Drawing2D> namespace e contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1` e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-487">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="fe08d-488">Associar o `Form1_Load` e `Form1_Paint` métodos com o <xref:System.Windows.Forms.Form.Load> e <xref:System.Windows.Forms.Control.Paint> eventos para o formulário e associar o `button1_click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-488">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-489">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-489">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberSignature Language="F#" Value="member this.MovePrevious : unit -&gt; unit" Usage="bindingSource.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-490">Moves to the previous item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-490">Moves to the previous item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-491">Esse método altera o valor atual de <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade para o item anterior na fonte de dados subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-491">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingSource.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-492">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-492">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-493">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-493">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-494">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-494">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-495">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-495">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-496">O <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-496">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-497">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-497">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-498">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-498">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingSource.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-499">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-499">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-500">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-500">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-501">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-501">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-502">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-502">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-503">O <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-503">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-504">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-504">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-505">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-505">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-506">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-506">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-507">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-507">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-508">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-508">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-509">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-509">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-510">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-510">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-511">O <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-511">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-512">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-512">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-513">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-513">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-514">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-514">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-515">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-515">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-516">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-516">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-517">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-517">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-518">O <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-518">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-519">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-519">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-520">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-520">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit" Usage="bindingSource.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-521">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-521">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-522">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-522">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-523">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-523">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-524">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-524">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-525">O <xref:System.Windows.Forms.BindingSource.OnDataError%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-525">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-526">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-526">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-527">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-527">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-528">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-528">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-529">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-529">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-530">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-530">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-531">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-531">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-532">O <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-532">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-533">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-533">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-534">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.  O <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-534">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.  The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-535">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-535">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-536">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-536">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-537">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-537">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-538">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-538">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-539">O <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-539">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-540">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-540">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-541">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-541">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingSource.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-544">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-544">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-545">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-545">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-546">O <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-546">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-547">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-547">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-548">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-548">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="bindingSource.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fe08d-549">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-549">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-551">A geração de um evento invoca o manipulador de eventos por meio de um delegado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-551">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fe08d-552">Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-552">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fe08d-553">O <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante.</span><span class="sxs-lookup"><span data-stu-id="fe08d-553">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fe08d-554">Isso é a técnica preferida para manipular o evento em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-554">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fe08d-555">
            <para>Ao substituir <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-555">
              <para>When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingSource.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-556">Gets or sets the index of the current item in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-556">Gets or sets the index of the current item in the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-557">Um índice baseado em zero que especifica a posição do item atual na lista subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-557">A zero-based index that specifies the position of the current item in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-558">Ao definir o <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade, valores fora do intervalo são tratados da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="fe08d-558">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="fe08d-559">Valores negativos são tratados como 0.</span><span class="sxs-lookup"><span data-stu-id="fe08d-559">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="fe08d-560">Valores maiores que ou iguais a <xref:System.Windows.Forms.BindingSource.Count%2A> são tratados como <xref:System.Windows.Forms.BindingSource.Count%2A> menos 1.</span><span class="sxs-lookup"><span data-stu-id="fe08d-560">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="fe08d-561">Alterando o <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade ajustará o <xref:System.Windows.Forms.BindingSource.Current%2A> propriedade da mesma forma.</span><span class="sxs-lookup"><span data-stu-id="fe08d-561">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-562">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, e <xref:System.Windows.Forms.BindingSource.Position%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-562">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="fe08d-563">Para executar este exemplo, cole o código em um formulário que importa o <xref:System.Drawing.Drawing2D> namespace e contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1` e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-563">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="fe08d-564">Associar o `Form1_Load` e `Form1_Paint` métodos com o <xref:System.Windows.Forms.Form.Load> e <xref:System.Windows.Forms.Control.Paint> eventos para o formulário e associar o `button1_click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-564">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-565">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-565">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-566">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-566">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-567">O <xref:System.Windows.Forms.BindingSource.PositionChanged> evento ocorre após o <xref:System.Windows.Forms.BindingSource.Position%2A> propriedade foi alterada.</span><span class="sxs-lookup"><span data-stu-id="fe08d-567">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="fe08d-568">Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-568">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-569">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-569">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-570">
            <see langword="true" /> se os eventos <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> deverem ser gerados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-570">
              <see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fe08d-571">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-571">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-572">Quando o <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> é de propriedade `false`, suspende o aumento de <xref:System.Windows.Forms.BindingSource.ListChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-572">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="fe08d-573">Esse evento indica que a lista de associado foi modificada de alguma maneira, inclusive adicionar, excluir, inserir ou modificar itens.</span><span class="sxs-lookup"><span data-stu-id="fe08d-573">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="bindingSource.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fe08d-574">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-574">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-575">Removes the specified item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-575">Removes the specified item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-576">O <xref:System.Windows.Forms.BindingSource.Remove%2A> método faz com que a lista a ser pesquisado a `value` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fe08d-576">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="fe08d-577">Se encontrado, esse método tentará remover o item do <xref:System.Windows.Forms.BindingSource.List%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-577">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="fe08d-578">Essa tentativa falhará se a lista tem um tamanho fixo ou é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="fe08d-578">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="fe08d-579">Estas duas condições podem ser testadas com o <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> e <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-579">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="fe08d-580">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-580">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-581">The underlying list has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-581">The underlying list has a fixed size or is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bindingSource.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe08d-582">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-582">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-583">Removes the item at the specified index in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-583">Removes the item at the specified index in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-584">Estas duas condições podem ser testadas com o <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> e <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-584">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="fe08d-585">Este método gera o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-585">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-586">O exemplo de código a seguir demonstra o <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, e <xref:System.Windows.Forms.BindingSource.Count%2A> membros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-586">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="fe08d-587">Para executar este exemplo, cole o código em um formulário que contém um <xref:System.Windows.Forms.BindingSource> chamado `BindingSource1`, dois rótulos denominados `label1` e `label2`e um botão chamado `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-587">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="fe08d-588">Associar o `button1_Click` método com o <xref:System.Windows.Forms.Control.Click> evento `button1`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-588">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="fe08d-589">Serão necessário adicionar uma referência a System.Data.dll usuários do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fe08d-589">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fe08d-590">
            <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-590">
              <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-591">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-591">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; unit" Usage="bindingSource.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-592">Removes the current item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-592">Removes the current item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-593">O <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> método é equivalente a <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-593">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fe08d-594">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-594">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fe08d-595">-or-  <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-595">-or-  <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-596">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-596">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFilter : unit -&gt; unit&#xA;override this.RemoveFilter : unit -&gt; unit" Usage="bindingSource.RemoveFilter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-597">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-597">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-598">O <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> método refere-se a solicitação para a lista subjacente <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-598">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-599">Lista apenas os que implementam <xref:System.ComponentModel.IBindingListView> suporte à filtragem.</span><span class="sxs-lookup"><span data-stu-id="fe08d-599">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="fe08d-600">Por padrão, uma chamada para esse método é equivalente à configuração de <xref:System.Windows.Forms.BindingSource.Filter%2A> propriedade `null`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-600">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-601">The underlying list does not support filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-601">The underlying list does not support filtering.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSort : unit -&gt; unit&#xA;override this.RemoveSort : unit -&gt; unit" Usage="bindingSource.RemoveSort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-602">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-602">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-603">O <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> método refere-se a solicitação para a lista subjacente <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-603">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fe08d-604">Lista apenas os que implementam <xref:System.ComponentModel.IBindingList> dão suporte à classificação.</span><span class="sxs-lookup"><span data-stu-id="fe08d-604">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="fe08d-605">Por padrão, uma chamada para esse método é equivalente à configuração de <xref:System.Windows.Forms.BindingSource.Sort%2A> propriedade `null`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-605">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-606">The underlying list does not support sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-606">The underlying list does not support sorting.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberSignature Language="F#" Value="abstract member ResetAllowNew : unit -&gt; unit&#xA;override this.ResetAllowNew : unit -&gt; unit" Usage="bindingSource.ResetAllowNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-607">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-607">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-608">O <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> método reinicializar o <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriedade para refletir o valor do <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriedade na lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-608">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : bool -&gt; unit" Usage="bindingSource.ResetBindings metadataChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged">
          <span data-ttu-id="fe08d-609">
            <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-609">
              <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-610">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-610">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-611">O <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> método informa todos os controles associados a <xref:System.Windows.Forms.BindingSource> para atualizar seus valores.</span><span class="sxs-lookup"><span data-stu-id="fe08d-611">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="fe08d-612">O método faz isso gerando o <xref:System.Windows.Forms.BindingSource.ListChanged> evento pelo menos uma vez; o `metaDataChanged` parâmetro indica a natureza da alteração subjacente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-612">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="fe08d-613">Um `metaDataChanged` valor `true` indica que o esquema de dados de <xref:System.Windows.Forms.BindingSource> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="fe08d-613">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="fe08d-614">Um <xref:System.Windows.Forms.BindingSource.ListChanged> é gerado com <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> definido como <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-614">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="fe08d-615">Um `metaDataChanged` valor `false` indica que somente os valores de um ou mais itens foram alterados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-615">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="fe08d-616">Independentemente do valor `metaDataChanged`, um <xref:System.Windows.Forms.BindingSource.ListChanged> é gerado com <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> definido como <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-616">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe08d-617">Como consequência, chamando <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> com um parâmetro de `true` irá gerar duas <xref:System.Windows.Forms.BindingSource.ListChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-617">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="fe08d-618"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> é chamado automaticamente sempre que outro membro fizer alterações importantes para a associação de dados, como configuração de <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="fe08d-618"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="fe08d-619">No entanto, o programador também pode chamar esse método explicitamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-619">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-620">O seguinte exemplo de código usa um <xref:System.Windows.Forms.BindingSource> componente para associar uma lista de matriz, que não fornece a notificação de alteração.</span><span class="sxs-lookup"><span data-stu-id="fe08d-620">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="fe08d-621">Um item é removido da lista e os controles associados são notificados sobre a mudança chamando o <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fe08d-621">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="fe08d-622">Este exemplo de código é parte de um exemplo maior fornecido em [como: refletir atualizações de fonte de dados em um controle de formulários do Windows com o BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-622">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberSignature Language="F#" Value="member this.ResetCurrentItem : unit -&gt; unit" Usage="bindingSource.ResetCurrentItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-623">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-623">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-624">Chamar esse método fará com que o <xref:System.Windows.Forms.BindingSource.ListChanged> evento ocorra, especificando o item alterado na posição atual.</span><span class="sxs-lookup"><span data-stu-id="fe08d-624">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingSource.ResetItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="fe08d-625">The zero-based index of the item that has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-625">The zero-based index of the item that has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-626">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-626">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-627">O <xref:System.Windows.Forms.BindingSource.ResetItem%2A> método notifica sobre todos os controles associados ao item no local especificado <xref:System.Windows.Forms.BindingSource.Position%2A> para atualizar seus valores.</span><span class="sxs-lookup"><span data-stu-id="fe08d-627">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="fe08d-628">O método faz isso gerando o <xref:System.Windows.Forms.BindingSource.ListChanged> evento com <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> definido como <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-628">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fe08d-629"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> é chamado automaticamente sempre que as alterações são feitas para o valor de um item individual.</span><span class="sxs-lookup"><span data-stu-id="fe08d-629"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="fe08d-630">No entanto, o programador também pode chamar esse método explicitamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-630">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-631">O seguinte exemplo de código usa um <xref:System.Windows.Forms.BindingSource> componente para associar uma lista para um <xref:System.Windows.Forms.DataGridView> controle.</span><span class="sxs-lookup"><span data-stu-id="fe08d-631">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="fe08d-632">A lista não gera notificações de alteração, portanto, o <xref:System.Windows.Forms.BindingSource.ResetItem%2A> método no <xref:System.Windows.Forms.BindingSource> é usada para gerar o <xref:System.Windows.Forms.BindingSource.ListChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="fe08d-632">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="fe08d-633">Este exemplo de código é parte de um exemplo maior fornecido em [como: acionar notificações de alteração usando o método BindingSource Resetitem](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="fe08d-633">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberSignature Language="F#" Value="member this.ResumeBinding : unit -&gt; unit" Usage="bindingSource.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-634">Resumes data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-634">Resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-635"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> e <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> dois métodos que permitem a suspensão temporária e a continuação da associação de dados em um cenário de associação simples.</span><span class="sxs-lookup"><span data-stu-id="fe08d-635"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="fe08d-636">Você normalmente seria suspender a associação de dados se o usuário deve ter permissão para fazer edições vários campos de dados antes de validação ocorre.</span><span class="sxs-lookup"><span data-stu-id="fe08d-636">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="fe08d-637">Por exemplo, se um campo deve ser alterado de acordo com um segundo, mas onde Validando o primeiro campo faria com que o segundo campo erros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-637">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe08d-638">Usando <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> impede que as alterações serem postos na fonte de dados até <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> é chamado, mas não realmente impede que todos os eventos que ocorrem.</span><span class="sxs-lookup"><span data-stu-id="fe08d-638">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="fe08d-639">Controles que usam a associação de dados complexos, como o <xref:System.Windows.Forms.DataGridView> controlar, atualize os valores com base em eventos de alteração, como o <xref:System.Windows.Forms.CurrencyManager.ListChanged> eventos, por isso a chamada <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> não impedirá de receber as alterações feitas à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-639">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="fe08d-640">Por esse motivo, isso <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> e <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> são projetados para uso com controles de associação simples, como o <xref:System.Windows.Forms.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="fe08d-640">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="fe08d-641">Como alternativa você pode usar esses métodos em um cenário de associação complexa se você suprimir <xref:System.Windows.Forms.BindingSource.ListChanged> eventos definindo o <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-641">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : string with get, set" Usage="System.Windows.Forms.BindingSource.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-642">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-642">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-643">Uma cadeia de caracteres que diferencia maiúsculas de minúsculas que contém o nome da coluna seguido por “ASC” (para ordem crescente) ou “DESC” (para ordem decrescente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-643">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span>
          </span>
          <span data-ttu-id="fe08d-644">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-644">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-645">O <xref:System.Windows.Forms.BindingSource.Sort%2A> propriedade é uma cadeia de caracteres de maiusculas e minúsculas que especifica os nomes de coluna usados para classificar as linhas, junto com a direção de classificação.</span><span class="sxs-lookup"><span data-stu-id="fe08d-645">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="fe08d-646">As colunas são classificadas em ordem crescente por padrão.</span><span class="sxs-lookup"><span data-stu-id="fe08d-646">Columns are sorted ascending by default.</span></span> <span data-ttu-id="fe08d-647">Várias colunas podem ser separadas por vírgulas, como `"State, ZipCode DESC"`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-647">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="fe08d-648">Para dar suporte a classificação, a lista subjacente deve implementar o <xref:System.ComponentModel.IBindingList> ou <xref:System.ComponentModel.IBindingListView> interfaces.</span><span class="sxs-lookup"><span data-stu-id="fe08d-648">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="fe08d-649">Esse recurso pode ser consultado por meio de <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="fe08d-649">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="fe08d-650">Classificação de várias colunas está disponível quando o <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-650">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="fe08d-651">Definindo o <xref:System.Windows.Forms.BindingSource.Sort%2A> propriedade alterará a lista interna, dependendo do tipo:</span><span class="sxs-lookup"><span data-stu-id="fe08d-651">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="fe08d-652">Se a lista é do tipo <xref:System.ComponentModel.IBindingList>, o <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> e <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> propriedades são definidas na lista interna.</span><span class="sxs-lookup"><span data-stu-id="fe08d-652">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="fe08d-653">Se a lista é do tipo <xref:System.ComponentModel.IBindingListView>, o <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> está definida.</span><span class="sxs-lookup"><span data-stu-id="fe08d-653">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="fe08d-654">Propriedades de classificação da lista interna apenas são alteradas quando a cadeia de caracteres de classificação não é `null`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-654">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="fe08d-655">O `get` acessador para essa propriedade não recuperará o valor de classificação da lista interna; em vez disso, ele retornará o `set` valor do acessador.</span><span class="sxs-lookup"><span data-stu-id="fe08d-655">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="fe08d-656">O valor de <xref:System.Windows.Forms.BindingSource.Sort%2A> propriedade serão mantidas quando as alterações da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-656">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-657">O exemplo a seguir mostra como usar o <xref:System.Windows.Forms.BindingSource.Sort%2A> propriedade para executar a classificação básica com um <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-657">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="fe08d-658">Para executar este exemplo, cole o código em um formulário do Windows e a chamada `PopulateDataViewAndSort` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> método manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-658">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="fe08d-659">O formulário deve importar o <xref:System.Xml> e <xref:System.IO> namespaces.</span><span class="sxs-lookup"><span data-stu-id="fe08d-659">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="fe08d-660">O exemplo a seguir mostra como usar o <xref:System.Windows.Forms.BindingSource.Sort%2A> avançado de propriedade para executar classificação com um <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-660">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="fe08d-661">Para executar este exemplo, cole o código em um formulário do Windows e a chamada `PopulateDataViewAndAdvancedSort` do construtor do formulário ou <xref:System.Windows.Forms.Form.Load> método manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fe08d-661">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="fe08d-662">O formulário deve importar o <xref:System.Xml> e <xref:System.IO> namespaces.</span><span class="sxs-lookup"><span data-stu-id="fe08d-662">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.ListSortDescriptionCollection" Usage="System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-663">Gets the collection of sort descriptions applied to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-663">Gets the collection of sort descriptions applied to the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-664">Se a fonte de dados for um <see cref="T:System.ComponentModel.IBindingListView" />, um <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> que contém as descrições de classificação aplicadas à lista; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-664">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-665">Se a lista não é um <xref:System.ComponentModel.IBindingListView>, o <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-665">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="fe08d-666">O <xref:System.ComponentModel.ListSortDescriptionCollection> é uma coleção somente leitura.</span><span class="sxs-lookup"><span data-stu-id="fe08d-666">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.ComponentModel.ListSortDirection" Usage="System.Windows.Forms.BindingSource.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-667">Gets the direction the items in the list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-667">Gets the direction the items in the list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-668">Uma da <see cref="T:System.ComponentModel.ListSortDirection" /> valores indicando a direção em que a lista é classificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-668">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-669">Se a lista subjacente não é um <xref:System.ComponentModel.IBindingList>, o <xref:System.Windows.Forms.BindingSource.SortDirection%2A> propriedade sempre retornará <xref:System.ComponentModel.ListSortDirection.Ascending>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-669">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortProperty : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Forms.BindingSource.SortProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-670">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-670">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-671">Se a lista é um <see cref="T:System.ComponentModel.IBindingList" />, o <see cref="T:System.ComponentModel.PropertyDescriptor" /> que está sendo usado para classificação; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-671">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-672">Se a lista não é um <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-672">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAdvancedSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-673">Gets a value indicating whether the data source supports multi-column sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-673">Gets a value indicating whether the data source supports multi-column sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-674">
            <see langword="true" /> Se a lista é um <see cref="T:System.ComponentModel.IBindingListView" /> e dá suporte à classificação de várias colunas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-674">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-675">Se a lista não é um <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-675">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotification : bool" Usage="System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-676">Gets a value indicating whether the data source supports change notification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-676">Gets a value indicating whether the data source supports change notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-677">
            <see langword="true" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-677">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFiltering : bool" Usage="System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-678">Gets a value indicating whether the data source supports filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-678">Gets a value indicating whether the data source supports filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-679">
            <see langword="true" /> se a lista for um <see cref="T:System.ComponentModel.IBindingListView" /> e der suporte à filtragem; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-679">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-680">Se a lista não é um <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-680">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearching : bool" Usage="System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-681">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-681">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-682">
            <see langword="true" /> Se a lista é um <see cref="T:System.ComponentModel.IBindingList" /> e oferece suporte a pesquisa com o <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> método; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-682">
              <see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-683">Se a fonte de dados não é um <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-683">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe08d-684">O exemplo de código a seguir demonstra como usar o <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> membro.</span><span class="sxs-lookup"><span data-stu-id="fe08d-684">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="fe08d-685">Para o exemplo completo, consulte o tópico de visão geral de classe.</span><span class="sxs-lookup"><span data-stu-id="fe08d-685">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-686">Gets a value indicating whether the data source supports sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-686">Gets a value indicating whether the data source supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-687">
            <see langword="true" /> se a fonte de dados for um <see cref="T:System.ComponentModel.IBindingList" /> e der suporte à classificação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-687">
              <see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-688">Se a fonte de dados não é um <xref:System.ComponentModel.IBindingList>, o <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> propriedade sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-688">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberSignature Language="F#" Value="member this.SuspendBinding : unit -&gt; unit" Usage="bindingSource.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-689">Suspends data binding to prevent changes from updating the bound data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-689">Suspends data binding to prevent changes from updating the bound data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-690"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> e <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> dois métodos que permitem a suspensão temporária e a continuação da associação de dados em um cenário de associação simples.</span><span class="sxs-lookup"><span data-stu-id="fe08d-690"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="fe08d-691">Você normalmente seria suspender a associação de dados se o usuário deve ter permissão para fazer edições vários campos de dados antes de validação ocorre.</span><span class="sxs-lookup"><span data-stu-id="fe08d-691">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="fe08d-692">Por exemplo, se um campo deve ser alterado de acordo com um segundo, mas onde Validando o primeiro campo faria com que o segundo campo erros.</span><span class="sxs-lookup"><span data-stu-id="fe08d-692">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe08d-693">Usando <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> e impede que as alterações serem postos na fonte de dados até <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> é chamado, mas não realmente impede que todos os eventos que ocorrem.</span><span class="sxs-lookup"><span data-stu-id="fe08d-693">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="fe08d-694">Controles que usam a associação de dados complexos, como o <xref:System.Windows.Forms.DataGridView> controlar, atualize os valores com base em eventos de alteração, como o <xref:System.Windows.Forms.CurrencyManager.ListChanged> eventos, por isso a chamada <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> não impedirá de receber as alterações feitas à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="fe08d-694">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="fe08d-695">Por esse motivo, isso <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> e <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> são projetados para uso com controles de associação simples, como o <xref:System.Windows.Forms.TextBox> controle.</span><span class="sxs-lookup"><span data-stu-id="fe08d-695">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="fe08d-696">Como alternativa você pode usar esses métodos em um cenário de associação complexa se você suprimir <xref:System.Windows.Forms.BindingSource.ListChanged> eventos definindo o <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-696">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-697">Gets an object that can be used to synchronize access to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-697">Gets an object that can be used to synchronize access to the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-698">Um objeto que pode ser usado para sincronizar o acesso a lista subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-698">An object that can be used to synchronize access to the underlying list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="fe08d-699">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-699">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-700">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-700">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-701">Se a lista subjacente é um <xref:System.ComponentModel.IBindingList> tipo, esse método adicionará o <xref:System.ComponentModel.PropertyDescriptor> para os índices; caso contrário, chamar este método gerará uma <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-701">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe08d-702">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-702">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="fe08d-703">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-703">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-704">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-704">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-705">Se a lista subjacente não é um <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, este método sempre gerará um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-705">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="fe08d-706">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-706">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-707">Discards a pending new item from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-707">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-708">O <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> método reverte uma adição pendente de um item adicionado anteriormente à coleção no índice especificado pelo `position`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-708">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="fe08d-709">O `position` parâmetro é necessário porque vários novos itens podem estar pendentes simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-709">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="fe08d-710">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-710">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe08d-711">Commits a pending new item to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-711">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-712">O <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> método confirma uma adição pendente de um item adicionado anteriormente à coleção no índice especificado pelo `position`.</span><span class="sxs-lookup"><span data-stu-id="fe08d-712">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="fe08d-713">O `position` parâmetro é necessário porque vários novos itens podem estar pendentes simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="fe08d-713">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-714">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-714">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-715">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-715">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe08d-716">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-716">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe08d-717">
            <see langword="true" /> para indicar o <see cref="T:System.Windows.Forms.BindingSource" /> for inicializada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe08d-717">
              <see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe08d-718">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="fe08d-718">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fe08d-719">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.BindingSource> é convertida em uma interface de <xref:System.ComponentModel.ISupportInitializeNotification>.</span><span class="sxs-lookup"><span data-stu-id="fe08d-719">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>