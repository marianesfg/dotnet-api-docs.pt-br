<Type Name="QueryContinueDragEventHandler" FullName="System.Windows.Forms.QueryContinueDragEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76034148851547fc9bc5d99e0262a9cf68aee85a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36515861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void QueryContinueDragEventHandler(object sender, QueryContinueDragEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed QueryContinueDragEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub QueryContinueDragEventHandler(sender As Object, e As QueryContinueDragEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void QueryContinueDragEventHandler(System::Object ^ sender, QueryContinueDragEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type QueryContinueDragEventHandler = delegate of obj * QueryContinueDragEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">A origem de um evento.</param>
    <param name="e">Um <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contém os dados do evento.</param>
    <summary>Representa o método que manipulará o evento de <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> de <see cref="T:System.Windows.Forms.Control" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você cria um <xref:System.Windows.Forms.QueryContinueDragEventHandler> delegado, você identificar o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante. Para obter mais informações sobre como manipular eventos com delegados, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo a seguir demonstra uma operação de arrastar e soltar entre duas <xref:System.Windows.Forms.ListBox> controles. O exemplo chama o <xref:System.Windows.Forms.Control.DoDragDrop%2A> método quando a ação de arrastar inicia. A ação de arrastar inicia se moveu o mouse mais de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> do local do mouse durante o <xref:System.Windows.Forms.Control.MouseDown> evento. O <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método é usado para determinar o índice do item a arrastar durante o `MouseDown` evento.  
  
 O exemplo também demonstra como usar cursores personalizados para a operação de arrastar e soltar. O exemplo supõe que dois arquivos de cursor, `3dwarro.cur` e `3dwno.cur`, existe no diretório de aplicativo para a operação de arrastar personalizado e não-drop cursores, respectivamente. Os cursores personalizados serão usados se o `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> é verificada. Os cursores personalizados são definidos <xref:System.Windows.Forms.Control.GiveFeedback> manipulador de eventos.  
  
 O estado do teclado é avaliado no <xref:System.Windows.Forms.Control.DragOver> manipulador de eventos para a direita `ListBox`, para determinar qual será a operação de arrastar com base no estado das teclas SHIFT, CTRL, ALT e CTRL + ALT. O local no `ListBox` onde ocorreria o descarte também é determinado durante a `DragOver` eventos. Se os dados para remover não são um `String`, em seguida, o <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> é definido como <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Por fim, o status de menu é exibido no `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Os dados para remover à direita `ListBox` é determinado no <xref:System.Windows.Forms.Control.DragDrop> manipulador de eventos e o `String` valor é adicionado no local apropriado no `ListBox`. Se a operação de arrastar é movido para fora dos limites do formulário, a operação de arrastar e soltar foi cancelada no <xref:System.Windows.Forms.Control.QueryContinueDrag> manipulador de eventos.  
  
 Esse trecho de código demonstra como usar o <xref:System.Windows.Forms.QueryContinueDragEventHandler> delegar com o <xref:System.Windows.Forms.Control.QueryContinueDrag> evento. Consulte o <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para o exemplo de código completo.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
    <altmember cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  </Docs>
</Type>