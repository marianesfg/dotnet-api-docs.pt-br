<Type Name="XmlLicenseTransform" FullName="System.Security.Cryptography.Xml.XmlLicenseTransform">
  <TypeSignature Language="C#" Value="public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLicenseTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLicenseTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLicenseTransform : System::Security::Cryptography::Xml::Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="00064-101">Representa o algoritmo de transformação de licença usado para normalizar licenças XrML para assinaturas.</span><span class="sxs-lookup"><span data-stu-id="00064-101">Represents the license transform algorithm used to normalize XrML licenses for signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00064-102">O <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe representa o algoritmo de transformação de licença, conforme definido na linguagem da extensão de direitos MPEG (MPEG REL).</span><span class="sxs-lookup"><span data-stu-id="00064-102">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</span></span>  
  
 <span data-ttu-id="00064-103">Use o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe XrML licenças para assinaturas de transformação.</span><span class="sxs-lookup"><span data-stu-id="00064-103">Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.</span></span>  
  
 <span data-ttu-id="00064-104">O URI Uniform Resource Identifier () que descreve o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe é definida pelo <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> campo.</span><span class="sxs-lookup"><span data-stu-id="00064-104">The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00064-105">O exemplo de código a seguir mostra como validar uma assinatura digital XML usando o <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface e o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe.</span><span class="sxs-lookup"><span data-stu-id="00064-105">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlLicenseTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlLicenseTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00064-106">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryptor">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.IRelDecryptor Decryptor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryptor As IRelDecryptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::IRelDecryptor ^ Decryptor { System::Security::Cryptography::Xml::IRelDecryptor ^ get(); void set(System::Security::Cryptography::Xml::IRelDecryptor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.IRelDecryptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00064-107">Obtém ou define o descriptografador do objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-107">Gets or sets the decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="00064-108">O descriptografador do atual <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="00064-108">The decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00064-109">O <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> objeto usa um <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface descriptografar `<encryptedGrant>` elementos da atual `<license>` elemento.</span><span class="sxs-lookup"><span data-stu-id="00064-109">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00064-110">O exemplo de código a seguir mostra como validar uma assinatura digital XML usando o <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface e o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe.</span><span class="sxs-lookup"><span data-stu-id="00064-110">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00064-111">Retorna uma representação XML dos parâmetros de um objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> adequados para serem incluídos como subelementos de um elemento <see langword="&lt;Transform&gt;" /> XMLDSIG.</span><span class="sxs-lookup"><span data-stu-id="00064-111">Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="00064-112">Uma lista de nós XML que representa o conteúdo específico da transformação necessário para descrever o objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual em um elemento <see langword="&lt;Transform&gt;" /> XMLDSIG.</span><span class="sxs-lookup"><span data-stu-id="00064-112">A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00064-113">Retorna a saída de um objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-113">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00064-114">Retorna a saída de um objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-114">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <returns><span data-ttu-id="00064-115">A saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-115">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00064-116">O tipo do objeto retornado deve ser <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="00064-116">The type of the returned object must be <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="00064-117">O tipo de saída a ser retornada.</span><span class="sxs-lookup"><span data-stu-id="00064-117">The type of the output to return.</span></span> <span data-ttu-id="00064-118"><see cref="T:System.Xml.XmlDocument" /> é o único tipo válido para esse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="00064-118"><see cref="T:System.Xml.XmlDocument" /> is the only valid type for this parameter.</span></span></param>
        <summary><span data-ttu-id="00064-119">Retorna a saída de um objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-119">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <returns><span data-ttu-id="00064-120">A saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />.</span><span class="sxs-lookup"><span data-stu-id="00064-120">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="00064-121">O parâmetro <paramref name="type" /> não é um objeto <see cref="T:System.Xml.XmlDocument" />.</span><span class="sxs-lookup"><span data-stu-id="00064-121">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00064-122">Obtém uma matriz de tipos que são entradas válidas para o método <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> do objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-122">Gets an array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="00064-123">Uma matriz de tipos que são entradas válidas para o <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> método atual <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> objeto; você pode passar apenas os objetos de um desses tipos para o <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> método atual <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="00064-123">An array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; you can pass only objects of one of these types to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00064-124">O tipo de entrada só é válido para o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe é <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="00064-124">The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><span data-ttu-id="00064-125">Um objeto <see cref="T:System.Xml.XmlNodeList" /> que encapsula a transformação a ser carregada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-125">An <see cref="T:System.Xml.XmlNodeList" /> object that encapsulates the transform to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></param>
        <summary><span data-ttu-id="00064-126">Analisa o objeto <see cref="T:System.Xml.XmlNodeList" /> especificado como conteúdo específico da transformação de um elemento <see langword="&lt;Transform&gt;" />; este método não tem suporte porque o objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> não tem nenhum elemento XML interno.</span><span class="sxs-lookup"><span data-stu-id="00064-126">Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object has no inner XML elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="00064-127">A entrada a ser carregada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-127">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span> <span data-ttu-id="00064-128">O tipo de objeto de entrada deve ser <see cref="T:System.Xml.XmlDocument" />.</span><span class="sxs-lookup"><span data-stu-id="00064-128">The type of the input object must be <see cref="T:System.Xml.XmlDocument" />.</span></span></param>
        <summary><span data-ttu-id="00064-129">Carrega a entrada especificada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-129">Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="00064-130">O contexto não foi definido antes da transformação ser invocada.</span><span class="sxs-lookup"><span data-stu-id="00064-130">The context was not set before this transform was invoked.</span></span>  
  
 <span data-ttu-id="00064-131">- ou -</span><span class="sxs-lookup"><span data-stu-id="00064-131">-or-</span></span>  
  
 <span data-ttu-id="00064-132">O elemento <see langword="&lt;issuer&gt;" /> não foi definido antes dessa transformação ser invocada.</span><span class="sxs-lookup"><span data-stu-id="00064-132">The <see langword="&lt;issuer&gt;" /> element was not set before this transform was invoked.</span></span>  
  
 <span data-ttu-id="00064-133">- ou -</span><span class="sxs-lookup"><span data-stu-id="00064-133">-or-</span></span>  
  
 <span data-ttu-id="00064-134">O elemento <see langword="&lt;license&gt;" /> não foi definido antes dessa transformação ser invocada.</span><span class="sxs-lookup"><span data-stu-id="00064-134">The <see langword="&lt;license&gt;" /> element was not set before this transform was invoked.</span></span>  
  
 <span data-ttu-id="00064-135">- ou -</span><span class="sxs-lookup"><span data-stu-id="00064-135">-or-</span></span>  
  
 <span data-ttu-id="00064-136">A propriedade <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> não foi definida antes dessa transformação ser invocada.</span><span class="sxs-lookup"><span data-stu-id="00064-136">The <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> property was not set before this transform was invoked.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00064-137">Obtém uma matriz de tipos de saídas válidas do método <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> do objeto <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> atual.</span><span class="sxs-lookup"><span data-stu-id="00064-137">Gets an array of types that are valid outputs from the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="00064-138">Uma matriz de tipos de saída válido para o atual <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> objeto; somente os objetos de um desses tipos são retornados do <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> métodos do atual <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="00064-138">An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00064-139">O tipo de saída só é válida para o <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> classe é <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="00064-139">The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>