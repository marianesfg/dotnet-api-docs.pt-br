<Type Name="XmlDsigXsltTransform" FullName="System.Security.Cryptography.Xml.XmlDsigXsltTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f526aeca63aa2b1d59d5edec852d7c729c8fa61c" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49141203" /></Metadata><TypeSignature Language="C#" Value="public class XmlDsigXsltTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigXsltTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigXsltTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigXsltTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDsigXsltTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa a transformação XSLT para uma assinatura digital, conforme definido pelo W3C.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> classe permite que você direcione um documento XML usando uma transformação XSLT.  Essa classe usa o XSLT para transformar nós XML em outros nós XML que você deseja assinar ou criptografar.  
  
 Use o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe para assinar ou criptografar as partes específicas de um documento XML usando uma transformação XSLT.  
  
 O identificador de URI (Uniform Resource) que descreve o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe é definida pelo <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> campo.  
  
 Para obter mais informações sobre a transformação XSLT, consulte a seção 6.6.5 da especificação de XMLDSIG, que está disponível a partir do W3C em www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código mostra como assinar e verificar um documento XML usando o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe com uma assinatura de envelope.  O segundo exemplo de código demonstra como usar os membros de <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 **Exemplo 1 #**  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 **Exemplo #2**  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXsltTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigXsltTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como assinar e verificar um documento XML usando o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe com uma assinatura de envelope.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXsltTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigXsltTransform(bool includeComments);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigXsltTransform : bool -&gt; System.Security.Cryptography.Xml.XmlDsigXsltTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigXsltTransform includeComments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments"><see langword="true" /> para incluir comentários; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> com comentários, se especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDsigXsltTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma representação XML dos parâmetros do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> adequados para serem incluídos como subelementos de um elemento <see langword="&lt;Transform&gt;" /> XMLDSIG.</summary>
        <returns>Uma lista de nós XML que representa o conteúdo específico da transformação necessário para descrever o objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual em um elemento <see langword="&lt;Transform&gt;" /> XMLDSIG.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna a saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDsigXsltTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</summary>
        <returns>A saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo do objeto retornado deve ser <xref:System.IO.Stream>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A> método para recuperar a saída do atual <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> objeto. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDsigXsltTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de saída a ser retornada. <see cref="T:System.IO.Stream" /> é o único tipo válido para esse parâmetro.</param>
        <summary>Retorna a saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual do tipo <see cref="T:System.IO.Stream" />.</summary>
        <returns>A saída do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual do tipo <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo do objeto retornado deve ser <xref:System.IO.Stream>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A> método para recuperar a saída do atual <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> objeto. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="type" /> não é um objeto <see cref="T:System.IO.Stream" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma matriz de tipos que são entradas válidas para o método <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</summary>
        <value>Uma matriz de tipos de entrada válidas para o atual <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> do objeto; você pode passar apenas os objetos de um desses tipos para o <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> método atual <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tipos de entrada válida <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> estão <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, e <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A> propriedade para recuperar os tipos de entrada válidos para a transformação atual. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDsigXsltTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Um objeto <see cref="T:System.Xml.XmlNodeList" /> que encapsula uma folha de estilos XSLT a ser carregada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual. Esta folha de estilos é aplicada ao documento carregado pelo método <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" />.</param>
        <summary>Analisa o objeto <see cref="T:System.Xml.XmlNodeList" /> especificado como conteúdo específico da transformação de um elemento <see langword="&lt;Transform&gt;" /> e configura o estado interno do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual para corresponder ao elemento <see langword="&lt;Transform&gt;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para processar os subelementos de um `<Transform>` elemento.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como assinar e verificar um documento XML usando o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe com uma assinatura de envelope.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">O parâmetro <paramref name="nodeList" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="nodeList" /> não contém um objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDsigXsltTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">A entrada a ser carregada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</param>
        <summary>Carrega a entrada especificada no objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de objeto de entrada deve ser um dos tipos no <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A> propriedade. Tipos de entrada válida <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> estão <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, e <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput%2A> método usando especificado <xref:System.Xml.XmlDocument> objeto como entrada. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#11)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma matriz de tipos que são possíveis saídas provenientes de métodos <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> do objeto <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> atual.</summary>
        <value>Uma matriz de tipos de saída válido para o atual <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> objeto; somente os objetos de um desses tipos são retornados do <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> métodos do atual <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> é o tipo de saída válido somente para <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes%2A> propriedade para recuperar os tipos de saída válido para a transformação atual. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> classe.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>