<Type Name="CommandLineBuilder" FullName="Microsoft.Build.Utilities.CommandLineBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a603b956f755b3371675eb89333aa6cb85bff1fc" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39980633" /></Metadata><TypeSignature Language="C#" Value="public class CommandLineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CommandLineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineBuilder" />
  <TypeSignature Language="F#" Value="type CommandLineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d8ea-101">Abrange métodos de utilitário para construção de uma linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-101">Comprises utility methods for constructing a command line.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d8ea-102">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-102">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-103">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-103">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d8ea-104">Construtor</span><span class="sxs-lookup"><span data-stu-id="8d8ea-104">Constructor</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d8ea-105">Inicializa uma nova instância da classe <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d8ea-106">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-106">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-107">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-107">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder quoteHyphensOnCommandLine" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine"><span data-ttu-id="8d8ea-108">Se for true, os hifens deverão estar entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-108">If true, hyphens should be quoted.</span></span></param>
        <summary><span data-ttu-id="8d8ea-109">Construtor padrão</span><span class="sxs-lookup"><span data-stu-id="8d8ea-109">Default constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNameIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d8ea-110">Anexa o nome de arquivo representado pelo parâmetro à linha de comando, inserindo aspas se necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-110">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d8ea-111">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-111">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-112">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-112">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(class Microsoft.Build.Framework.ITaskItem fileItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileItem As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(Microsoft::Build::Framework::ITaskItem ^ fileItem);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="fileItem"><span data-ttu-id="8d8ea-113">A especificação de item de tarefa para acrescentar à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-113">The task item specification to append to the command line.</span></span> <span data-ttu-id="8d8ea-114">Se ele for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-114">If it is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-115">Acrescenta o nome de arquivo do objeto <see cref="T:Microsoft.Build.Framework.ITaskItem" /> especificado à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-115">Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-116">Esse método acrescenta a linha de comando com uma especificação de item de tarefa e envolve a especificação de item de tarefa com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-116">This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-117">Se a linha de comando não estiver vazia, esse método também acrescentará a linha de comando com um espaço, antes da especificação de item de tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-117">If the command line is not empty, then this method also appends the command line with a space, before the task item specification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-118">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-118">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-119">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-119">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="8d8ea-120">O nome do arquivo a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-120">The file name to append.</span></span> <span data-ttu-id="8d8ea-121">Se ele for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-121">If it is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-122">Anexa o nome de arquivo representado pelo parâmetro à linha de comando, inserindo aspas se necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-122">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-123">Esse método acrescenta a linha de comando com um nome de arquivo e envolve o nome do arquivo entre aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-123">This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-124">Se o primeiro caractere do nome do arquivo é um traço, em seguida, `.\` é adicionado ao início do nome do arquivo para diferenciá-lo de um comutador.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-124">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="8d8ea-125">Se a linha de comando não estiver vazia, esse método também acrescentará a linha de comando com um espaço, antes do nome do arquivo.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-125">If the command line is not empty, then this method also appends the command line with a space, before the file name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` produz `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNamesIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d8ea-127">Anexa uma lista de nomes de arquivo à linha de comando, inserindo aspas se necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-127">Appends the command line with a list of file names, inserting quotation marks if necessary.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(class Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileItems As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ fileItems, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileItems, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItems" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileItems"><span data-ttu-id="8d8ea-128">As especificações do item de tarefa a serem acrescentadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-128">The task item specifications to append.</span></span> <span data-ttu-id="8d8ea-129">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-129">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-130">O delimitador a ser colocado entre as especificações do item de tarefa na linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-130">The delimiter to put between task item specifications in the command line.</span></span></param>
        <summary><span data-ttu-id="8d8ea-131">Acrescenta a lista de nomes de arquivo na matriz <see cref="T:Microsoft.Build.Framework.ITaskItem" /> especificada à linha de comando, separados por um delimitador especificado.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-131">Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-132">Esse método acrescenta a linha de comando com nomes de arquivo e envolve os nomes de arquivo com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-132">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="8d8ea-133">Os nomes de arquivo são separados por um delimitador especificado.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-133">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="8d8ea-134">Se a linha de comando não estiver vazia, esse método também acrescentará a linha de comando com um espaço, antes dos nomes de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-134">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-135">Consulte o exemplo <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-135">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(string[] fileNames, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileNames As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;System::String ^&gt; ^ fileNames, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : string[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileNames, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileNames"><span data-ttu-id="8d8ea-136">Os nomes de arquivo para acrescentar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-136">The file names to append.</span></span> <span data-ttu-id="8d8ea-137">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-137">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-138">O delimitador a ser colocado entre os nomes de arquivo na linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-138">The delimiter to put between file names in the command line.</span></span></param>
        <summary><span data-ttu-id="8d8ea-139">Acrescenta a lista de nomes de arquivo na matriz <see langword="string" /> especificada à linha de comando, separados por um delimitador especificado.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-139">Appends the command line with the list of file names in the specified <see langword="string" /> array, separated by the specified delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-140">Esse método acrescenta a linha de comando com nomes de arquivo e envolve os nomes de arquivo com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-140">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="8d8ea-141">Os nomes de arquivo são separados por um delimitador especificado.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-141">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="8d8ea-142">Se a linha de comando não estiver vazia, esse método também acrescentará a linha de comando com um espaço, antes dos nomes de arquivo.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-142">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` produz `Alpha.cs,Beta.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendFileNameWithQuoting (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendFileNameWithQuoting(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendFileNameWithQuoting (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendFileNameWithQuoting(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameWithQuoting fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="8d8ea-144">O nome do arquivo a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-144">The file name to append.</span></span></param>
        <summary><span data-ttu-id="8d8ea-145">Acrescenta um nome do arquivo à linha de comando e envolve o nome do arquivo entre aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-145">Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-146">Se o primeiro caractere do nome do arquivo é um traço, em seguida, `.\` é adicionado ao início do nome do arquivo para diferenciá-lo de um comutador.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-146">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="8d8ea-147">Esse método não anexa a linha de comando com um espaço antes de executar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-147">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` produz `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendQuotedTextToBuffer">
      <MemberSignature Language="C#" Value="protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendQuotedTextToBuffer(class System.Text.StringBuilder buffer, string unquotedTextToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendQuotedTextToBuffer (buffer As StringBuilder, unquotedTextToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendQuotedTextToBuffer(System::Text::StringBuilder ^ buffer, System::String ^ unquotedTextToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendQuotedTextToBuffer : System.Text.StringBuilder * string -&gt; unit" Usage="commandLineBuilder.AppendQuotedTextToBuffer (buffer, unquotedTextToAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Text.StringBuilder" />
        <Parameter Name="unquotedTextToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8d8ea-149">O buffer ao qual acrescentar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-149">The buffer to append to.</span></span></param>
        <param name="unquotedTextToAppend"><span data-ttu-id="8d8ea-150">O texto a ser colocado entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-150">The text to be quoted.</span></span></param>
        <summary><span data-ttu-id="8d8ea-151">Acrescenta o texto fornecido ao buffer após primeiro colocar o texto entre aspas, se necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-151">Appends given text to the buffer after first quoting the text if necessary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpaceIfNotEmpty">
      <MemberSignature Language="C#" Value="protected void AppendSpaceIfNotEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendSpaceIfNotEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendSpaceIfNotEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendSpaceIfNotEmpty();" />
      <MemberSignature Language="F#" Value="member this.AppendSpaceIfNotEmpty : unit -&gt; unit" Usage="commandLineBuilder.AppendSpaceIfNotEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d8ea-152">Adiciona um espaço à cadeia de caracteres especificada, desde que a cadeia de caracteres não esteja vazia.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-152">Adds a space to the specified string, given the string is not empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-153">Esse método só está disponível para classes herdadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-153">This method is only available to inherited classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitch">
      <MemberSignature Language="C#" Value="public void AppendSwitch (string switchName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitch(string switchName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitch (switchName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitch(System::String ^ switchName);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitch : string -&gt; unit" Usage="commandLineBuilder.AppendSwitch switchName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-154">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-154">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-155">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-155">This value cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d8ea-156">Acrescenta a opção especificada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-156">Appends the command line with the specified switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-157">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-157">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-158">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-158">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-159">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-159">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d8ea-160">Acrescenta uma opção à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-160">Appends the command line with a switch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-161">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-161">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-162">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-162">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="8d8ea-163">O parâmetro switch a ser acrescentado à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-163">The switch parameter to append to the command line.</span></span> <span data-ttu-id="8d8ea-164">As aspas serão adicionadas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-164">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="8d8ea-165">Caso este valor seja <see langword="null" />, este método não entra em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-165">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-166">Acrescenta à linha de comando uma opção que aceita uma especificação de item de tarefa, que age como um único parâmetro de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-166">Appends the command line with a switch that takes a task item specification that acts a single string parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-167">Este método encapsula nomes de arquivo individuais com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-167">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-168">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-168">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-169">Consulte o exemplo <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-169">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-170">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-170">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-171">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-171">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="8d8ea-172">O parâmetro switch a ser acrescentado à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-172">The switch parameter to append to the command line.</span></span> <span data-ttu-id="8d8ea-173">As aspas serão adicionadas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-173">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="8d8ea-174">Caso este valor seja <see langword="null" />, este método não entra em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-174">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-175">Acrescenta uma opção que aceita um único parâmetro de cadeia de caracteres à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-175">Appends the command line with a switch that takes a single string parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-176">Este método encapsula nomes de arquivo individuais com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-176">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-177">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-177">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` produz `/source:\"File Name.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-179">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-179">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-180">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-180">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d8ea-181">Uma matriz de parâmetros de chave a ser anexada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-181">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="8d8ea-182">As aspas serão adicionadas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-182">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="8d8ea-183">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-183">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-184">O delimitador que separa parâmetros individuais.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-184">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="8d8ea-185">Este valor pode ser vazio, mas não pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-185">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d8ea-186">Acrescenta à linha de comando uma opção que aceita uma matriz de especificações de item de tarefa, que agem como parâmetros de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-186">Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-187">Este método encapsula nomes de arquivo individuais com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-187">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-188">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-188">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-189">Consulte o exemplo <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-189">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-190">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-190">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-191">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-191">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d8ea-192">Uma matriz de parâmetros de chave a ser anexada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-192">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="8d8ea-193">As aspas serão adicionadas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-193">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="8d8ea-194">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-194">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-195">O delimitador que separa parâmetros individuais.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-195">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="8d8ea-196">Este valor pode ser vazio, mas não pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-196">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d8ea-197">Acrescenta uma opção que aceita uma matriz de parâmetros de cadeia de caracteres à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-197">Appends the command line with a switch that takes an array of string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-198">Este método encapsula nomes de arquivo individuais com aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-198">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="8d8ea-199">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-199">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` produz `/sources:Alpha.cs;\"Be ta.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchUnquotedIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d8ea-201">Anexa uma opção à linha de comando, sem tentar encapsular os parâmetros da opção com aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-201">Appends the command line with a switch, without attempting to encapsulate the switch parameters with quotation marks.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-202">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-202">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-203">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-203">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="8d8ea-204">O parâmetro switch a ser acrescentado à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-204">The switch parameter to append to the command line.</span></span> <span data-ttu-id="8d8ea-205">As aspas não serão adicionadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-205">Quotation marks will not be added.</span></span> <span data-ttu-id="8d8ea-206">Caso este valor seja <see langword="null" />, este método não entra em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-206">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-207">Acrescenta a linha de comando uma opção que aceita uma especificação de item de tarefa como um único parâmetro de cadeia de caracteres, sem tentar encapsular o parâmetro de opção entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-207">Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-208">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-208">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-209">Consulte o exemplo <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-209">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-210">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-210">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-211">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-211">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="8d8ea-212">O parâmetro switch a ser acrescentado à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-212">The switch parameter to append to the command line.</span></span> <span data-ttu-id="8d8ea-213">As aspas não serão adicionadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-213">Quotation marks will not be added.</span></span> <span data-ttu-id="8d8ea-214">Caso este valor seja <see langword="null" />, este método não entra em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-214">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="8d8ea-215">Acrescenta a linha de comando uma opção que aceita um único parâmetro de cadeia de caracteres, sem tentar encapsular o parâmetro de opção entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-215">Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-216">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-216">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` produz `/source:File Name.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-218">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-218">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-219">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-219">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d8ea-220">Uma matriz de parâmetros de chave a ser anexada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-220">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="8d8ea-221">As aspas não serão adicionadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-221">Quotation marks will not be added.</span></span> <span data-ttu-id="8d8ea-222">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-222">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-223">O delimitador que separa parâmetros individuais.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-223">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="8d8ea-224">Este valor pode ser vazio, mas não pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-224">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d8ea-225">Acrescenta a linha de comando uma opção que aceita uma matriz de especificações de item de tarefa que agem como parâmetros de cadeia de caracteres, sem tentar encapsulá-los entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-225">Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-226">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-226">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-227">Consulte o exemplo <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-227">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-228">O nome de opção a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-228">The name of the switch to append to the command line.</span></span> <span data-ttu-id="8d8ea-229">Este valor pode não ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-229">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d8ea-230">Uma matriz de parâmetros de chave a ser anexada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-230">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="8d8ea-231">As aspas não serão adicionadas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-231">Quotation marks will not be added.</span></span> <span data-ttu-id="8d8ea-232">Se a matriz for <see langword="null" />, este método não entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-232">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8d8ea-233">O delimitador que separa parâmetros individuais.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-233">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="8d8ea-234">Este valor pode ser vazio, mas não pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-234">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d8ea-235">Acrescenta a linha de comando uma opção que aceita uma matriz de parâmetros de cadeia de caracteres, sem tentar encapsular os parâmetros de opção entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-235">Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-236">Se a linha de comando não estiver vazia, este método também acrescentará a linha de comando com um espaço, antes da opção.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-236">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` produz `/sources:Alpha.cs;Be ta.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextUnquoted">
      <MemberSignature Language="C#" Value="public void AppendTextUnquoted (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextUnquoted (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextUnquoted : string -&gt; unit" Usage="commandLineBuilder.AppendTextUnquoted textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="8d8ea-238">A cadeia de caracteres a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-238">The string to append to the command line.</span></span></param>
        <summary><span data-ttu-id="8d8ea-239">Anexa a cadeia de caracteres à linha de comando, sem tentar encapsular a cadeia de caracteres entre aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-239">Appends the command line with string, without attempting to encapsulate the string with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-240">Esse método não anexa a linha de comando com um espaço antes de executar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-240">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-241">`AppendTextUnquoted(@"Folder name\filename.cs")` produz `Folder name\\filename.cs`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-241">`AppendTextUnquoted(@"Folder name\filename.cs")` yields `Folder name\\filename.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendTextWithQuoting (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextWithQuoting(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextWithQuoting (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextWithQuoting(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendTextWithQuoting textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="8d8ea-242">A cadeia de caracteres a ser acrescentada à linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-242">The string to append to the command line.</span></span></param>
        <summary><span data-ttu-id="8d8ea-243">Acrescenta a linha de comando com a cadeia de caracteres e envolve a cadeia de caracteres entre aspas conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-243">Appends the command line with string, and surrounds the string with quotations marks as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-244">Esse método não anexa a linha de comando com um espaço antes de executar.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-244">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d8ea-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` produz `\"Folder name\\filename.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` yields `\"Folder name\\filename.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommandLine As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Text::StringBuilder ^ CommandLine { System::Text::StringBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : System.Text.StringBuilder" Usage="Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d8ea-246">Obtém a instância de <see cref="T:System.Text.StringBuilder" /> que representa a linha de comando para herdar classes.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-246">Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</span></span></summary>
        <value><span data-ttu-id="8d8ea-247">Um <see cref="T:System.Text.StringBuilder" /> para herdar classes.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-247">A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuotingRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsQuotingRequired (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsQuotingRequired(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsQuotingRequired (parameter As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsQuotingRequired(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member IsQuotingRequired : string -&gt; bool&#xA;override this.IsQuotingRequired : string -&gt; bool" Usage="commandLineBuilder.IsQuotingRequired parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8d8ea-248">A cadeia de caracteres a examinar em busca de caracteres que exigem aspas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-248">The string to examine for characters that require quotation marks.</span></span></param>
        <summary><span data-ttu-id="8d8ea-249">Determina se o parâmetro de cadeia de caracteres especificado deve ser colocado entre aspas porque ele contém espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-249">Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</span></span></summary>
        <returns><span data-ttu-id="8d8ea-250"><see langword="true" /> se o parâmetro de opção deve ser colocado entre aspas; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-250"><see langword="true" />, if the switch parameter should be surrounded with quotation marks; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d8ea-251">Representa o tamanho da linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-251">Represents the length of the command line.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandLineBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d8ea-252">Retorna a linha de comando como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-252">Returns the command line as a string.</span></span></summary>
        <returns><span data-ttu-id="8d8ea-253">Um <see cref="T:System.String" /> que representa a linha de comando.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-253">A <see cref="T:System.String" /> that represents the command line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d8ea-254">O exemplo a seguir cria uma <xref:Microsoft.Build.Utilities.ToolTask> que executa [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="8d8ea-254">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="8d8ea-255">As classes <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper> e <xref:Microsoft.Build.Utilities.TaskLoggingHelper> são usadas para gerar as informações necessárias para executar a tarefa.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-255">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 <span data-ttu-id="8d8ea-256">msbuild_ToolTask#1</span><span class="sxs-lookup"><span data-stu-id="8d8ea-256">msbuild_ToolTask#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyThrowNoEmbeddedDoubleQuotes">
      <MemberSignature Language="C#" Value="protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VerifyThrowNoEmbeddedDoubleQuotes (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void VerifyThrowNoEmbeddedDoubleQuotes(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit&#xA;override this.VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit" Usage="commandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="8d8ea-257">Uma cadeia de caracteres que representa o nome da opção para a mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-257">A string representing the switch name for the error message.</span></span></param>
        <param name="parameter"><span data-ttu-id="8d8ea-258">Uma cadeia de caracteres que representa o parâmetro de opção a verificar quanto a aspas duplas.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-258">A string representing the switch parameter to scan for double-quotes.</span></span></param>
        <summary><span data-ttu-id="8d8ea-259">Retorna um erro se o parâmetro de linha de comando contém um caractere de aspas duplas (").</span><span class="sxs-lookup"><span data-stu-id="8d8ea-259">Returns an error if the command line parameter contains a double-quote (") character.</span></span> <span data-ttu-id="8d8ea-260">Como aspas duplas são ilegais em parâmetros de linha de comando, esse método ajuda a evitar ataques de injeção de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-260">Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d8ea-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> é um método virtual para que seus aplicativos podem substituir este método se você quiser permitir que aspas duplas de escape em nomes de arquivos.</span><span class="sxs-lookup"><span data-stu-id="8d8ea-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>