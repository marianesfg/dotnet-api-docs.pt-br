<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7f638e1c6b08a849c703c09d7ece293bb979d2a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36732738" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="abe22-101">Representa um agente multiplexação.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-101">Represents a multiplexing logger.</span>
      </span>
      <span data-ttu-id="abe22-102">A finalidade desse agente é registrar e cancelar o registro de vários agentes durante o build.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span>
      </span>
      <span data-ttu-id="abe22-103">É compatível com o cenário do IDE do Visual Studio em que agentes são registrados e têm o registro cancelado para cada solicitação de build do sistema do projeto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system’s build request.</span>
      </span>
      <span data-ttu-id="abe22-104">Um build físico pode ter diversos builds lógicos, cada um com o próprio conjunto de agentes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-104">One physical build can have multiple logical builds, each with its own set of loggers.</span>
      </span>
      <span data-ttu-id="abe22-105">O <see langword="MuxLogger" /> registra-se com o gerenciador de build como um agente de estilo /l central normal.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span>
      </span>
      <span data-ttu-id="abe22-106">Ele recebe mensagens do gerenciador de build e as encaminha ao agente correto com base no build lógica do qual a mensagem veio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abe22-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe22-107">O `MuxLogger` geralmente funciona da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="abe22-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="abe22-108">O `MuxLogger` está registrado no início da compilação de início do Gerenciador de compilação.</span><span class="sxs-lookup"><span data-stu-id="abe22-108">The `MuxLogger` is registered at the beginning of the build manager’s Begin build.</span></span>  
  
     <span data-ttu-id="abe22-109">Quaisquer agentes registrados antes que o Gerenciador de compilação a compilação é iniciado obtém o evento de compilação iniciada ao mesmo tempo como o `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="abe22-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="abe22-110">Quaisquer agentes registrados depois que o Gerenciador de compilação a compilação é iniciado terá um evento de compilação iniciada sintetizado.</span><span class="sxs-lookup"><span data-stu-id="abe22-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="abe22-111">O evento não pode ser armazenado em cache porque o carimbo de hora do evento de compilação iniciada é determinado quando o evento é criado e o evento de cache, fornecer tempos de compilação incorreto os agentes registrados para o `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="abe22-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="abe22-112">O `MuxLogger` é inicializada pelo Gerenciador de compilação</span><span class="sxs-lookup"><span data-stu-id="abe22-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="abe22-113">O `MuxLogger` escuta todos os eventos na fonte de evento do Gerenciador de compilação e encaminha eventos corretamente para os agentes de log registrados.</span><span class="sxs-lookup"><span data-stu-id="abe22-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="abe22-114">O `MuxLogger` é desligado quando a compilação seja concluída na compilação de término.</span><span class="sxs-lookup"><span data-stu-id="abe22-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="abe22-115">Neste momento, ele cancela o registro de qualquer agentes anexados a ele.</span><span class="sxs-lookup"><span data-stu-id="abe22-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="abe22-116">O `MuxLogger` registra o evento de conclusão de compilação quando o evento de conclusão de projeto para o primeiro evento iniciado pelo projeto é exibido para cada agente de log.</span><span class="sxs-lookup"><span data-stu-id="abe22-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="abe22-117">O `MuxLogger` registra agentes de log da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="abe22-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="abe22-118">O agente de log é passado para o `MuxLogger.RegisterLogger` método com uma ID de envio é usado para rotear uma mensagem para esse agente.</span><span class="sxs-lookup"><span data-stu-id="abe22-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="abe22-119">O `MuxLogger` registra o agente de log para o `MuxLogger` origem do evento.</span><span class="sxs-lookup"><span data-stu-id="abe22-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="abe22-120">Se o evento iniciado de compilação já foi registrado, o `MuxLogger` cria um novo evento de compilação iniciada e a envia para a origem do evento do agente de log.</span><span class="sxs-lookup"><span data-stu-id="abe22-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.</span></span>  
  
 <span data-ttu-id="abe22-121">O `MuxLogger` cancela o registro de agentes de log da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="abe22-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="abe22-122">Quando um envio de compilação for concluído, o `MuxLogger.UnregisterLogger` método é chamado com a ID de envio para o agente de log.</span><span class="sxs-lookup"><span data-stu-id="abe22-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="abe22-123">O `MuxLogger` procura o estado de êxito do evento de conclusão de projeto para a ID de envio e registra um evento de conclusão de compilação para o agente de log.</span><span class="sxs-lookup"><span data-stu-id="abe22-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="abe22-124">O `MuxLogger` limpa a origem do evento.</span><span class="sxs-lookup"><span data-stu-id="abe22-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="abe22-125">Observe que o cancelamento de registro é proveniente de um thread que não seja o thread de registro em log e um problema de sincronização pode ocorrer se o cancelamento de registro é chamado enquanto eventos estão sendo registrados.</span><span class="sxs-lookup"><span data-stu-id="abe22-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abe22-126">Cria uma nova instância do agente de multiplexação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-126">Creates a new instance of the multiplexing logger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abe22-127">Inicializa a instância <see langword="MuxLogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-127">Initializes the <see langword="MuxLogger" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="abe22-128">A fonte do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-128">The event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abe22-129">Inicialize a instância <see langword="MuxLogger" /> com a origem do evento especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="abe22-130">A fonte do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-130">The event source.</span>
          </span>
        </param>
        <param name="maxNodeCount">
          <span data-ttu-id="abe22-131">O número máximo de nós.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-131">The maximum number of nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abe22-132">Inicialize a instância <see langword="MuxLogger" /> com a origem de evento especificada e o número máximo de nós especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abe22-133">Obtém e define o atributo Parameters, exigido pela interface <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abe22-134">Retorna o atributo de parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-134">Returns the Parameters attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="abe22-135">A ID de envio do agente que está sendo registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-135">The submission ID of the logger being registered.</span>
          </span>
        </param>
        <param name="logger">
          <span data-ttu-id="abe22-136">O agente a registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-136">The logger to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abe22-137">Registra um agente no <see langword="MuxLogger" /> e gera um evento iniciado por build se o evento iniciado por build já tiver sido registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abe22-138">Desliga o <see langword="MuxLogger" /> e limpa qualquer estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="abe22-139">A ID de envio do agente a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-139">The submission ID of the logger to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abe22-140">Remove o agente especificado do MuxLogger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-140">Removes the specified logger from the MuxLogger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abe22-141">Retornará <see langword="true" /> se o método for bem-sucedido na remoção do agente; caso contrário, retornará <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abe22-142">Obtém e define o atributo Verbosity, exibido pela interface <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abe22-143">Retorna o atributo de detalhamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abe22-143">Returns the Verbosity attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>