<Type Name="Logger" FullName="Microsoft.Build.Utilities.Logger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="544212aa6629d3e2e21c430b8d6cfb07bf315fd7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Logger : Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Logger extends System.Object implements class Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.Logger" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Logger&#xA;Implements ILogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class Logger abstract : Microsoft::Build::Framework::ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bf5dc-101">Quando substituído em um formulário derivado, fornece a funcionalidade para agentes que tratam os eventos gerados pelo mecanismo MSBuild.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf5dc-101">When overridden in a derived form, provides functionality for loggers that handle events raised by the MSBuild engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5dc-102">Essa classe abstrata fornece implementações padrão para os métodos e propriedades do <xref:Microsoft.Build.Framework.ILogger> interface.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-102">This abstract class provides default implementations for the methods and properties of the <xref:Microsoft.Build.Framework.ILogger> interface.</span></span>  
  
 <span data-ttu-id="bf5dc-103">Essa classe só pode ser instanciada em um formulário derivado.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-103">This class can only be instantiated in a derived form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf5dc-104">O exemplo a seguir mostra como gravar um agente básico que responde a eventos de compilação.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-104">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Logger ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Logger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf5dc-105">Inicializa uma nova instância da classe <see cref="T:Microsoft.Build.Utilities.Logger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Logger" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorEvent">
      <MemberSignature Language="C#" Value="public virtual string FormatErrorEvent (Microsoft.Build.Framework.BuildErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatErrorEvent(class Microsoft.Build.Framework.BuildErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FormatErrorEvent (args As BuildErrorEventArgs) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ FormatErrorEvent(Microsoft::Build::Framework::BuildErrorEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Build.Framework.BuildErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="bf5dc-106">Os argumentos do evento de erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-106">The arguments of the error event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5dc-107">Gera uma mensagem de erro que está no formato padrão, de um objeto <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-107">Generates an error message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5dc-108">Um <see cref="T:System.String" /> que representa uma mensagem de erro em formato canônico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-108">A <see cref="T:System.String" /> that represents an error message in canonical format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatWarningEvent">
      <MemberSignature Language="C#" Value="public virtual string FormatWarningEvent (Microsoft.Build.Framework.BuildWarningEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatWarningEvent(class Microsoft.Build.Framework.BuildWarningEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FormatWarningEvent (args As BuildWarningEventArgs) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ FormatWarningEvent(Microsoft::Build::Framework::BuildWarningEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Build.Framework.BuildWarningEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="bf5dc-109">Os argumentos do evento de aviso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-109">The arguments of the warning event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5dc-110">Gera uma mensagem de aviso que está no formato padrão, de um objeto <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-110">Generates a warning message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5dc-111">Um <see cref="T:System.String" /> que representa uma mensagem de aviso em formato canônico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-111">A <see cref="T:System.String" /> that represents a warning message in canonical format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="bf5dc-112">Os eventos disponíveis que um agente pode assinar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-112">The available events that a logger can subscribe to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5dc-113">Quando substituído em uma classe derivada, assina o agente para eventos específicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-113">When overridden in a derived class, subscribes the logger to specific events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5dc-114">Este método deve ser substituído na classe derivada para executar a lógica de inicialização e inscrever-se para criar eventos publicados pelo <xref:Microsoft.Build.Framework.IEventSource>.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-114">This method must be overridden in the derived class to perform initialization logic and to subscribe to build events published by <xref:Microsoft.Build.Framework.IEventSource>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf5dc-115">O exemplo a seguir mostra como gravar um agente básico que responde a eventos de compilação.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-115">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVerbosityAtLeast">
      <MemberSignature Language="C#" Value="public bool IsVerbosityAtLeast (Microsoft.Build.Framework.LoggerVerbosity checkVerbosity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVerbosityAtLeast(valuetype Microsoft.Build.Framework.LoggerVerbosity checkVerbosity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVerbosityAtLeast (checkVerbosity As LoggerVerbosity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVerbosityAtLeast(Microsoft::Build::Framework::LoggerVerbosity checkVerbosity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkVerbosity" Type="Microsoft.Build.Framework.LoggerVerbosity" />
      </Parameters>
      <Docs>
        <param name="checkVerbosity">
          <span data-ttu-id="bf5dc-116">A configuração de verbosidade do agente transmitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-116">The logger verbosity setting passed in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf5dc-117">Determina se a atual configuração <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> é pelo menos o valor que é transmitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-117">Determines whether the current <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> setting is at least the value that is passed in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf5dc-118">
            <see langword="true" /> se a configuração atual de verbosidade de agente for pelo menos o valor que é transmitido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-118">
              <see langword="true" /> if the current logger verbosity setting is at least the value that is passed in; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf5dc-119">O exemplo a seguir mostra como gravar um agente básico que responde a eventos de compilação.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-119">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.Logger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5dc-120">Obtém ou define os parâmetros definidos pelo usuário do agente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-120">Gets or sets the user-defined parameters of the logger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5dc-121">Os parâmetros de agente de log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-121">The logger parameters.</span>
          </span>
          <span data-ttu-id="bf5dc-122">Este valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-122">This value can be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5dc-123">Se a classe derivada não aceita parâmetros, ela pode ignorar essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-123">If the derived class does not take parameters, then it can ignore this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf5dc-124">O exemplo a seguir mostra como gravar um agente básico que responde a eventos de compilação.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-124">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public virtual void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.Logger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf5dc-125">Quando substituído em uma classe derivada, libera os recursos alocados ao agente no momento da inicialização ou durante o build.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-125">When overridden in a derived class, releases the resources allocated to the logger at the time of initialization or during the build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5dc-126">Este método pode ser substituído na classe derivada para executar lógica de desligamento, como liberar recursos adquiridos.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-126">This method can be overridden in the derived class to perform shutdown logic, such as releasing acquired resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf5dc-127">O exemplo a seguir mostra como gravar um agente básico que responde a eventos de compilação.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-127">The following example shows how to write a basic logger that responds to build events.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.Logger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf5dc-128">Obtém ou define o nível de detalhes a ser mostrado no log de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-128">Gets or sets the level of detail to show in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf5dc-129">Um dos valores de enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-129">One of the enumeration values.</span>
          </span>
          <span data-ttu-id="bf5dc-130">O padrão é <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf5dc-130">The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf5dc-131">Enquanto um agente de log está livre para escolher os eventos de log, as diretrizes de detalhes a seguir cria uma experiência de usuário consistente.</span><span class="sxs-lookup"><span data-stu-id="bf5dc-131">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>