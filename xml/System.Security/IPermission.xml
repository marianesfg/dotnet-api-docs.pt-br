<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPermission.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab62c8d43e0ca696a66655b37755ebe3e68e56e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab62c8d43e0ca696a66655b37755ebe3e68e56e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.IPermission">
          <source>Defines methods implemented by permission types.</source>
          <target state="translated">Define os métodos implementados pelos tipos de permissão.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</source>
          <target state="translated">Permissões no common language runtime são objetos que descrevem os conjuntos de operações que podem ser protegidos para recursos especificados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</source>
          <target state="translated">Um objeto de permissão descreve as operações ou access que está sujeito a controle de segurança; ele não representa um direito de executar operações ou de acesso.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Permissions are used by both application code and the .NET Framework security system in the following ways.</source>
          <target state="translated">As permissões são usadas pelo código do aplicativo e o sistema de segurança do .NET Framework das seguintes maneiras.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code requests the permissions it needs in order to run.</source>
          <target state="translated">Código solicita as permissões necessárias para executar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>The security system policy grants permissions to code in order for it to run.</source>
          <target state="translated">A política de sistema de segurança concede permissões ao código em ordem para ele para executar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code demands that calling code has a permission.</source>
          <target state="translated">O código exige que o código de chamada tem a permissão.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>Code overrides the security stack using assert/deny/permit-only.</source>
          <target state="translated">Código substitui a pilha de segurança usando assert/negar/permitir-somente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>If you write a new permission, you must implement this interface in your class.</source>
          <target state="translated">Se você gravar uma nova permissão, você deve implementar essa interface em sua classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>A permission can be accessed by multiple threads.</source>
          <target state="translated">Uma permissão pode ser acessada por vários threads.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>When implementing this interface, you must guarantee that the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method implementations are thread safe.</source>
          <target state="translated">Ao implementar esta interface, você deve assegurar que o <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> implementações de método são thread-safe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>This example shows how to define a permission class for use with code access security.</source>
          <target state="translated">Este exemplo mostra como definir uma classe de permissão para uso com a segurança de acesso do código.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.IPermission">
          <source>All of the necessary permission interfaces are implemented.</source>
          <target state="translated">Todas as interfaces de permissão necessários são implementadas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">Cria e retorna uma cópia idêntica da permissão atual.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Copy">
          <source>A copy of the current permission.</source>
          <target state="translated">Uma cópia da permissão atual.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">Uma cópia de uma permissão representa o mesmo acesso a recursos como a permissão original.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como implementar o <ph id="ph1">&lt;xref:System.Security.IPermission.Copy%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Demand">
          <source>Throws a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if the security requirement is not met.</source>
          <target state="translated">Gera um <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> em tempo de execução se o requisito de segurança não é atendido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">Normalmente, esse método é usado pelas bibliotecas seguras para garantir que os chamadores tem permissão para acessar um recurso.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>For example, a file class in a secure class library calls <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> for the necessary <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> before performing a file operation requested by the caller.</source>
          <target state="translated">Por exemplo, uma classe de arquivo em uma biblioteca de classe seguro chama <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> para necessários <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> antes de executar uma operação de arquivo solicitada pelo chamador.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</source>
          <target state="translated">Embora a maioria das classes que implementam este método de interface atendem aos critérios de segurança executando um exame da pilha completa, um exame da pilha não é necessariamente executado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>An example of an implementation that does not perform a stack walk is <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Um exemplo de uma implementação que não executará um exame da pilha é <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Quando um exame da pilha é executado, as permissões do código que chama esse método não são examinadas; a seleção começa o chamador imediato do código e continua na pilha.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">A pilha de chamadas é representada geralmente como crescimento para baixo, para que os métodos superiores na pilha de chamadas chamam métodos inferior na pilha de chamadas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;</ph> é realizada somente se nenhuma <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">Uma permissão para ter interseção com a permissão atual.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Ele deve ser do mesmo tipo da permissão atual.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
          <target state="translated">Uma nova permissão que representa a interseção da permissão atual e da permissão especificada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This new permission is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Essa nova permissão é <ph id="ph1">&lt;see langword="null" /&gt;</ph> se a interseção estiver vazia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">A interseção de duas permissões é uma permissão que descreve o conjunto de operações que ambas descrevem em comum.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">Somente uma demanda que passa as permissões originais passará a interseção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">As instruções a seguir deve ser verdadeiro para todas as implementações do <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> object references that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> e <ph id="ph2">`Y`</ph> representar <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> referências de objeto que não são <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`X`</ph>) returns a value equal to <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`X`</ph>) retorna um valor igual a <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.Intersect(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`Y`</ph>) retorna o mesmo valor como <ph id="ph3">`Y`</ph>. Intersect (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`null`</ph>) returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. Intersect (<ph id="ph2">`null`</ph>) retorna <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como implementar o <ph id="ph1">&lt;xref:System.Security.IPermission.Intersect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not an instance of the same class as the current permission.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é <ph id="ph2">&lt;see langword="null" /&gt;</ph> e não é uma instância da mesma classe que a permissão atual.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">Uma permissão que deve ser testada quanto à relação de subconjunto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">Essa permissão deve ser do mesmo tipo da permissão atual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">Determina se a permissão atual é um subconjunto da permissão especificada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current permission is a subset of the specified permission; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">A permissão atual é um subconjunto de permissão especificada se a permissão atual especifica um conjunto de operações é totalmente contido pelo conjunto de permissões especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:<ph id="ph1">\\</ph>.</source>
          <target state="translated">Por exemplo, uma permissão que representa acesso à C:\example.txt é um subconjunto de uma permissão que representa acesso na unidade c:<ph id="ph1">\\</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Se esse método retornar <ph id="ph1">`true`</ph>, a permissão atual não representa nenhum mais acesso ao recurso protegido que a permissão especificada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">As instruções a seguir deve ser verdadeiro para todas as implementações do <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, and <ph id="ph3">`Z`</ph> represent <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph5">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>, <ph id="ph2">`Y`</ph>, e <ph id="ph3">`Z`</ph> representar <ph id="ph4">&lt;xref:System.Security.IPermission&gt;</ph> objetos que não são <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`X`</ph>) returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`X`</ph>) retorna <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`X`</ph>) if and only if <ph id="ph5">`X`</ph> and <ph id="ph6">`Y`</ph> represent the same set of permissions.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) retorna o mesmo valor como <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`X`</ph>) somente se <ph id="ph5">`X`</ph> e <ph id="ph6">`Y`</ph> representar o mesmo conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph>.IsSubsetOf(<ph id="ph2">`Y`</ph>) and <ph id="ph3">`Y`</ph>.IsSubsetOf(<ph id="ph4">`Z`</ph>) both return <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>.IsSubsetOf(<ph id="ph7">`Z`</ph>) returns <ph id="ph8">`true`</ph>.</source>
          <target state="translated">If <ph id="ph1">`X`</ph>. IsSubsetOf (<ph id="ph2">`Y`</ph>) e <ph id="ph3">`Y`</ph>. IsSubsetOf (<ph id="ph4">`Z`</ph>) retornam <ph id="ph5">`true`</ph>, <ph id="ph6">`X`</ph>. IsSubsetOf (<ph id="ph7">`Z`</ph>) retorna <ph id="ph8">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`X`</ph> represents an empty <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> object with a permission state of <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> and <ph id="ph4">`Y`</ph> represents an <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> object that is <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>.IsSubsetOf(<ph id="ph8">`Y`</ph>) returns <ph id="ph9">`true`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`X`</ph> representa vazio <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> objeto com um estado de permissão de <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> e <ph id="ph4">`Y`</ph> representa um <ph id="ph5">&lt;xref:System.Security.IPermission&gt;</ph> objeto <ph id="ph6">`null`</ph>, <ph id="ph7">`X`</ph>. IsSubsetOf (<ph id="ph8">`Y`</ph>) retorna <ph id="ph9">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`Z`</ph> is also an empty permission, the compound set operation <ph id="ph2">`X`</ph>.Union(Z).IsSubsetOf(Y) also returns <ph id="ph3">`true`</ph> because the union of two empty permissions is an empty permission.</source>
          <target state="translated">Se <ph id="ph1">`Z`</ph> também é uma permissão vazia, a operação de definição composta <ph id="ph2">`X`</ph>. Union(Z). Também retorna IsSubsetOf(Y) <ph id="ph3">`true`</ph> porque a união de duas permissões vazias é uma permissão vazia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como implementar o <ph id="ph1">&lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é <ph id="ph2">&lt;see langword="null" /&gt;</ph> e não é do mesmo tipo que a permissão atual.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">Uma permissão a ser combinada com a permissão atual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">Ele deve ser do mesmo tipo da permissão atual.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">Uma nova permissão que representa a união da permissão atual e da permissão especificada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">O resultado de uma chamada para <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> é uma permissão que representa todas as operações representadas pela permissão atual e a permissão especificada.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">Qualquer solicitação que passa a ter a permissão passa seu union.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following statements are required to be true for all implementations of the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">As instruções a seguir deve ser verdadeiro para todas as implementações do <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph> e <ph id="ph2">`Y`</ph> representar <ph id="ph3">&lt;xref:System.Security.IPermission&gt;</ph> objetos que não são <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`X`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. União (<ph id="ph2">`X`</ph>) retorna um objeto que tem o mesmo valor como <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`Y`</ph>) returns an object that has the same value as the object returned by <ph id="ph3">`Y`</ph>.Union(<ph id="ph4">`X`</ph>).</source>
          <target state="translated"><ph id="ph1">`X`</ph>. União (<ph id="ph2">`Y`</ph>) retorna um objeto que tem o mesmo valor que o objeto retornado por <ph id="ph3">`Y`</ph>. União (<ph id="ph4">`X`</ph>).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">`X`</ph>.Union(<ph id="ph2">`null`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>. União (<ph id="ph2">`null`</ph>) retorna um objeto que tem o mesmo valor como <ph id="ph3">`X`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como implementar o <ph id="ph1">&lt;xref:System.Security.IPermission.Union%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> and is not of the same type as the current permission.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é <ph id="ph2">&lt;see langword="null" /&gt;</ph> e não é do mesmo tipo que a permissão atual.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>