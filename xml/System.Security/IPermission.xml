<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="115a9c114d05e21e1ea17f7b691c3d3824c7f961" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56071123" /></Metadata><TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IPermission = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49b82-101">Define os métodos implementados pelos tipos de permissão.</span><span class="sxs-lookup"><span data-stu-id="49b82-101">Defines methods implemented by permission types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-102">Permissões no common language runtime são objetos que descrevem os conjuntos de operações que podem ser protegidos para recursos especificados.</span><span class="sxs-lookup"><span data-stu-id="49b82-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="49b82-103">Um objeto de permissão descreve operações ou access que está sujeita ao controle de segurança; ele não representa um direito de executar operações ou de acesso.</span><span class="sxs-lookup"><span data-stu-id="49b82-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="49b82-104">Permissões são usadas pelo código do aplicativo e o sistema de segurança do .NET Framework das seguintes maneiras.</span><span class="sxs-lookup"><span data-stu-id="49b82-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="49b82-105">Código solicita as permissões necessárias para executar.</span><span class="sxs-lookup"><span data-stu-id="49b82-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="49b82-106">A política de segurança do sistema concede permissões ao código em ordem para que ele seja executado.</span><span class="sxs-lookup"><span data-stu-id="49b82-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="49b82-107">O código exige que o código de chamada tem uma permissão.</span><span class="sxs-lookup"><span data-stu-id="49b82-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="49b82-108">Código substitui a pilha de segurança usando assert/negar/somente de permissão.</span><span class="sxs-lookup"><span data-stu-id="49b82-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49b82-109">Se você gravar uma nova permissão, você deve implementar essa interface em sua classe.</span><span class="sxs-lookup"><span data-stu-id="49b82-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49b82-110">Uma permissão pode ser acessada por vários threads.</span><span class="sxs-lookup"><span data-stu-id="49b82-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="49b82-111">Ao implementar essa interface, você deve assegurar que o <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, e <xref:System.Security.IPermission.Copy%2A> implementações de método são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="49b82-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b82-112">Este exemplo mostra como definir uma classe de permissão para uso com a segurança de acesso do código.</span><span class="sxs-lookup"><span data-stu-id="49b82-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="49b82-113">Todas as interfaces de permissão necessária são implementadas.</span><span class="sxs-lookup"><span data-stu-id="49b82-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="iPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b82-114">Cria e retorna uma cópia idêntica da permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-114">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="49b82-115">Uma cópia da permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-115">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-116">Uma cópia de uma permissão representa o mesmo acesso a recursos como a permissão original.</span><span class="sxs-lookup"><span data-stu-id="49b82-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b82-117">O exemplo de código a seguir demonstra como implementar o <xref:System.Security.IPermission.Copy%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="49b82-118">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="49b82-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iPermission.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b82-119">Gera um <see cref="T:System.Security.SecurityException" /> em tempo de execução se o requisito de segurança não é atendido.</span><span class="sxs-lookup"><span data-stu-id="49b82-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-120">Normalmente, esse método é usado pelas bibliotecas seguras para garantir que os chamadores tenham permissão para acessar um recurso.</span><span class="sxs-lookup"><span data-stu-id="49b82-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="49b82-121">Por exemplo, uma classe de arquivo em uma biblioteca de classe seguras chama <xref:System.Security.CodeAccessPermission.Demand%2A> para que o necessário <xref:System.Security.Permissions.FileIOPermission> antes de executar uma operação de arquivo solicitada pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="49b82-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="49b82-122">Embora a maioria das classes que implementam este método de interface satisfazer os critérios de segurança, executando uma movimentação de pilha completa, uma movimentação de pilha não é necessariamente executada.</span><span class="sxs-lookup"><span data-stu-id="49b82-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="49b82-123">Um exemplo de uma implementação que não realiza um exame da pilha é <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49b82-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="49b82-124">Quando um exame da pilha é executado, as permissões do código que chama esse método não são examinadas; a seleção começa do chamador imediato desse código e continua na pilha.</span><span class="sxs-lookup"><span data-stu-id="49b82-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="49b82-125">A pilha de chamadas é representada geralmente como crescente para baixo, para que o mais alto na pilha de chamadas de métodos chama métodos inferior na pilha de chamadas.</span><span class="sxs-lookup"><span data-stu-id="49b82-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="49b82-126"><xref:System.Security.CodeAccessPermission.Demand%2A> é bem-sucedido somente se nenhuma <xref:System.Security.SecurityException> é gerado.</span><span class="sxs-lookup"><span data-stu-id="49b82-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="49b82-127">Uma permissão para ter interseção com a permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-127">A permission to intersect with the current permission.</span></span> <span data-ttu-id="49b82-128">Ele deve ser do mesmo tipo da permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="49b82-129">Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="49b82-130">Uma nova permissão que representa a interseção da permissão atual e da permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-130">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="49b82-131">Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</span><span class="sxs-lookup"><span data-stu-id="49b82-131">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-132">A interseção de duas permissões é uma permissão que descreve o conjunto de operações, que pois ambas descrevem em comum.</span><span class="sxs-lookup"><span data-stu-id="49b82-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="49b82-133">Somente uma demanda que passe ambas as permissões originais passará a interseção.</span><span class="sxs-lookup"><span data-stu-id="49b82-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="49b82-134">As instruções a seguir devem ser verdadeiras para que todas as implementações do <xref:System.Security.IPermission.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="49b82-135">`X` e `Y` representam <xref:System.Security.IPermission> referências de objeto que não são `null`.</span><span class="sxs-lookup"><span data-stu-id="49b82-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="49b82-136">`X`. Intersect (`X`) retorna um valor igual a `X`.</span><span class="sxs-lookup"><span data-stu-id="49b82-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="49b82-137">`X`. Intersect (`Y`) retorna o mesmo valor como `Y`. Intersect (`X`).</span><span class="sxs-lookup"><span data-stu-id="49b82-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="49b82-138">`X`. Intersect (`null`) retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="49b82-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b82-139">O exemplo de código a seguir demonstra como implementar o <xref:System.Security.IPermission.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="49b82-140">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="49b82-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49b82-141">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é uma instância da mesma classe que a permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="iPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="49b82-142">Uma permissão que deve ser testada quanto à relação de subconjunto.</span><span class="sxs-lookup"><span data-stu-id="49b82-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="49b82-143">Essa permissão deve ser do mesmo tipo da permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="49b82-144">Determina se a permissão atual é um subconjunto da permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-144">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="49b82-145"><see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49b82-145"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-146">A permissão atual é um subconjunto da permissão especificada se a permissão atual especifica um conjunto de operações está totalmente contido pela permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="49b82-147">Por exemplo, uma permissão que representa o acesso à C:\example.txt é um subconjunto de uma permissão que representa o acesso na unidade c:\\.</span><span class="sxs-lookup"><span data-stu-id="49b82-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="49b82-148">Se esse método retornar `true`, a permissão atual não representa nenhum mais acesso ao recurso protegido que tem a permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="49b82-149">As instruções a seguir devem ser verdadeiras para que todas as implementações do <xref:System.Security.IPermission.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="49b82-150">`X`, `Y`, e `Z` representam <xref:System.Security.IPermission> objetos que não são `null`.</span><span class="sxs-lookup"><span data-stu-id="49b82-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="49b82-151">`X`. IsSubsetOf (`X`) retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="49b82-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="49b82-152">`X`. IsSubsetOf (`Y`) retorna o mesmo valor como `Y`. IsSubsetOf (`X`) se e somente se `X` e `Y` representam o mesmo conjunto de permissões.</span><span class="sxs-lookup"><span data-stu-id="49b82-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="49b82-153">Se `X`. IsSubsetOf (`Y`) e `Y`. IsSubsetOf (`Z`) retornam `true`, `X`. IsSubsetOf (`Z`) retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="49b82-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="49b82-154">Se `X` representa um vazio <xref:System.Security.IPermission> objeto com um estado de permissão de <xref:System.Security.Permissions.PermissionState.None> e `Y` representa um <xref:System.Security.IPermission> objeto que é `null`, `X`. IsSubsetOf (`Y`) retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="49b82-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="49b82-155">Se `Z` também é uma permissão vazia, a operação de definição composta `X`. Union(Z). Também retorna IsSubsetOf(Y) `true` porque a união de duas permissões vazias é uma permissão vazia.</span><span class="sxs-lookup"><span data-stu-id="49b82-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b82-156">O exemplo de código a seguir demonstra como implementar o <xref:System.Security.IPermission.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="49b82-157">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="49b82-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49b82-158">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="49b82-159">Uma permissão a ser combinada com a permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-159">A permission to combine with the current permission.</span></span> <span data-ttu-id="49b82-160">Ele deve ser do mesmo tipo da permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-160">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="49b82-161">Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-161">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="49b82-162">Uma nova permissão que representa a união da permissão atual e da permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-162">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b82-163">O resultado de uma chamada para <xref:System.Security.IPermission.Union%2A> é uma permissão que representa todas as operações representadas pela permissão atual e a permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="49b82-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="49b82-164">Qualquer demanda que passe a permissão passa seu union.</span><span class="sxs-lookup"><span data-stu-id="49b82-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="49b82-165">As instruções a seguir devem ser verdadeiras para que todas as implementações do <xref:System.Security.IPermission.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="49b82-166">`X` e `Y` representam <xref:System.Security.IPermission> objetos que não são `null`.</span><span class="sxs-lookup"><span data-stu-id="49b82-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="49b82-167">`X`. Union (`X`) retorna um objeto que tem o mesmo valor como `X`.</span><span class="sxs-lookup"><span data-stu-id="49b82-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="49b82-168">`X`. Union (`Y`) retorna um objeto que tem o mesmo valor que o objeto retornado por `Y`. Union (`X`).</span><span class="sxs-lookup"><span data-stu-id="49b82-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="49b82-169">`X`. Union (`null`) retorna um objeto que tem o mesmo valor como `X`.</span><span class="sxs-lookup"><span data-stu-id="49b82-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b82-170">O exemplo de código a seguir demonstra como implementar o <xref:System.Security.IPermission.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49b82-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="49b82-171">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="49b82-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49b82-172">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</span><span class="sxs-lookup"><span data-stu-id="49b82-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>