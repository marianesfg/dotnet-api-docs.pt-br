<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PermissionSet.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ef50fe48167ee95c6b53105e01d8ef0b244f9361.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef50fe48167ee95c6b53105e01d8ef0b244f9361</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">Representa uma coleção que pode conter vários tipos diferentes de permissões.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>You can use <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> to perform operations on several different permissions as a group.</source>
          <target state="translated">Você pode usar <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> para executar operações em várias permissões diferentes como um grupo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class and members.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso da <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe e membros.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</source>
          <target state="translated">para herdeiros seja totalmente confiável ou em um assembly que está assinado com o Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">Um dos valores de enumeração que especifica o acesso a recursos do conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> com o <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, while <ph id="ph3">`None`</ph> allows no permissions.</source>
          <target state="translated">O <ph id="ph1">`Unrestricted`</ph> estado permite que todas as permissões que implementam o <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, enquanto <ph id="ph3">`None`</ph> não permite nenhuma permissão.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> on an empty <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to define the set in greater detail.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> em vazio <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> para definir o conjunto mais detalhadamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> constructor to create a permission set with a permission state of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> construtor para criar uma permissão definida com um estado de permissão de <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">&lt;paramref name="state" /&gt;</ph> parameter is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="state" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The set from which to take the value of the new <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to create an empty <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">O conjunto do qual o valor do novo <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> para criar um <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> vazio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with initial values taken from the <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph> parameter.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> com valores iniciais obtidos do parâmetro <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The new <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains copies of the permissions contained in the specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">O novo <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contém cópias das permissões contidas especificado <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>This is equivalent to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Isso é equivalente a <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> quando o <ph id="ph2">`permSet`</ph> parâmetro não é <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">A permissão a ser adicionada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Adiciona uma permissão especificada ao <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">A união da permissão adicionada e qualquer permissão do mesmo tipo que já exista no <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Se uma permissão do mesmo tipo que a permissão adicionado já existe no <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, a nova permissão é a união de objeto de permissão existente e o objeto de permissão especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Por exemplo, se uma permissão que implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> é adicionado a um <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, a união resultante é original <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method to add a permission to a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> método para adicionar uma permissão a um conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, você pode alterar o comportamento do <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> método substituindo o <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">A permissão a ser adicionada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Adiciona uma permissão especificada ao <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A união da permissão adicionada e qualquer permissão do mesmo tipo que já exista no <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> for <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> método é a implementação para o <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Se uma permissão do mesmo tipo que a permissão adicionado já existe no <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, a nova permissão é a união de objeto de permissão existente e o objeto de permissão especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Por exemplo, se uma permissão que implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> é adicionado a um <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, a união resultante é original <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">Declara que o código de chamada pode acessar o recurso protegido por uma demanda de permissão através do código que chama este método, mesmo que os chamadores na pilha não tenham recebido permissão para acessar o recurso.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Using <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> can create security vulnerabilities.</source>
          <target state="translated">Usar um <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> pode criar vulnerabilidades de segurança.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> can be active on a frame.</source>
          <target state="translated">Essa é a única maneira de declarar permissões vários ao mesmo tempo em um quadro, porque apenas um <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> podem estar ativas em um quadro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> is only effective for granted permissions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> só é eficaz para permissões concedidas.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Call the <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> method to cancel an active <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> método para cancelar um ativo <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">Como chamar o <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> método Remove o requisito de que todos os código da cadeia de chamada deve ter permissão para acessar o recurso especificado, ele pode abrir vulnerabilidades de segurança se usado incorretamente ou inadequadamente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">Portanto, ele deve ser usado com cuidado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> instance asserted has not been granted to the asserting code.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> declarada não foi concedida ao código de declaração.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>There is already an active <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Já existe um <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> ativo para o quadro atual.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contém permissões que não são derivadas de <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contiver permissões que não são derivadas de <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Uma cadeia de caracteres que representa um dos seguintes formatos de codificação: ASCII, Unicode ou Binário.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Os valores possíveis são "XMLASCII" ou "XML", "XMLUNICODE" e "BINARY".</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An XML-encoded permission set.</source>
          <target state="translated">Um conjunto de permissões codificados em XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Uma cadeia de caracteres que representa um dos seguintes formatos de codificação: ASCII, Unicode ou Binário.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Os valores possíveis são "XMLASCII" ou "XML", "XMLUNICODE" e "BINARY".</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Converts an encoded <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">Converte um <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> codificado de um formato de codificação XML para outro formato de codificação XML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">Um conjunto de permissões criptografadas com o formato de saída especificado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Do not use this method.</source>
          <target state="translated">Não use esse método.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>In all cases.</source>
          <target state="translated">Em todos os casos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Cria uma cópia do <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Uma cópia do <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> represents the same access to resources as the original object.</source>
          <target state="translated">Uma cópia de um <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> representa o mesmo acesso a recursos que o objeto original.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">As alterações feitas na cópia não afetam o conjunto de permissões original.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> method to create a copy of a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> método para criar uma cópia de um conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The target array to which to copy.</source>
          <target state="translated">A matriz de destino para a qual copiar.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">A posição inicial na matriz para começar a copiar (baseado em zero).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>Copies the permission objects of the set to the indicated location in an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated">Copia os objetos de permissão do conjunto para o local indicado em um <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter has more than one dimension.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="array" /&gt;</ph> tem mais de uma dimensão.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> parameter is out of the range of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> parameter.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="index" /&gt;</ph> está fora do intervalo do parâmetro <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.Count">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">Obtém o número de objetos de permissão contidos no conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The number of permission objects contained in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">O número de objetos de permissão contidas a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">No <ph id="ph1">`None`</ph> ou <ph id="ph2">`Unrestricted`</ph> estado Isso retorna zero, porque nenhuma instância de objeto de permissão real é usada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> property to get the number of permission objects in a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> propriedade para obter o número de objetos de permissão em um conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>Forces a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">Força um <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> em tempo de execução se todos os chamadores no topo da pilha de chamadas não receberam as permissões especificadas pela instância atual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> em um <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> para garantir que todos os chamadores têm todas as permissões em conjunto com uma única operação.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">As permissões do código que chama esse método não são examinadas; a seleção começa o chamador imediato do código e continua na pilha.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">A pilha de chamadas é representada geralmente como crescimento para baixo, para que os métodos superiores na pilha de chamadas chamam métodos inferior na pilha de chamadas.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> é realizada somente se nenhuma <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>If the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains permissions that do not inherit from <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, the <ph id="ph3">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contém permissões que não herda de <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, o <ph id="ph3">`Demand`</ph> métodos dessas permissões são chamados também.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> method to demand all the permissions in a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> método para solicitar todas as permissões em um conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">Um chamador na cadeia de chamadas não tem a permissão exigida.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Faz com que qualquer <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> que passe pelo código de chamada para uma permissão que tenha uma interseção com uma permissão de um tipo contido no atual <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> falhe.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">Esse método impede que os chamadores mais acima na pilha de chamadas acessando o recurso protegido por meio do código que chama esse método, mesmo que os chamadores tiverem permissão para acessá-lo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">A pilha de chamadas é representada geralmente como crescimento para baixo, para que os métodos superiores na pilha de chamadas chamam métodos inferior na pilha de chamadas.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> from being used to access the resource protected by the denied permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> pode limitar a responsabilidade do programador ou ajudar a evitar vulnerabilidades de segurança acidental, pois ajuda a impedir que o método que chama <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> seja usado para acessar o recurso protegido pela permissão negada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>If a method calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> on a permission, and if a <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</source>
          <target state="translated">Se chama um método <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> em uma permissão e se um <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> para essa permissão é invocado por um chamador inferior na pilha de chamadas, essa verificação de segurança falha quando atingir o <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> é ignorado para uma permissão que não é concedida porque uma solicitação de permissão não pode ser bem-sucedida.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>A previous call to <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> has already restricted the permissions for the current stack frame.</source>
          <target state="translated">Uma chamada anterior a <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> já restringiu as permissões para o registro de ativação atual.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser comparado com o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> object is equal to the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Determina se o objeto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> especificado é igual ao <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto especificado for igual ao objeto <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">Igualdade é determinada pelas permissões contidas no conjunto de permissões especificado por <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">`obj`</ph> can be either a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> pode ser um <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> objeto ou uma <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>If <ph id="ph1">`obj`</ph> is a <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, the name and description are ignored.</source>
          <target state="translated">Se <ph id="ph1">`obj`</ph> é um <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, o nome e a descrição são ignorados.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">A codificação XML a ser usada para reconstruir o objeto de segurança.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is not a valid permission element.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> não é um elemento de permissão válido.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter's version number is not supported.</source>
          <target state="translated">O número de versão do parâmetro <ph id="ph1">&lt;paramref name="et" /&gt;</ph> não é compatível.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Retorna um enumerador para as permissões do conjunto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Um objeto enumerador para as permissões do conjunto.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">Use o enumerador como um índice para acessar objetos de permissão individual no conjunto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method to list all the permissions in a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> método para listar todas as permissões em um conjunto de permissões.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> method.</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, você pode alterar o comportamento do <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> método substituindo o <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Retorna um enumerador para as permissões do conjunto.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Um objeto enumerador para as permissões do conjunto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> método é a implementação para o <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>Gets a hash code for the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">Obtém um código hash para o objeto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object.</source>
          <target state="translated">Um código hash para o objeto <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objects.</source>
          <target state="translated">O código hash para duas instâncias do mesmo conjunto de permissões pode ser diferente, para um código de hash não deve ser usado para comparar dois <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The type of the desired permission object.</source>
          <target state="translated">O tipo do objeto de permissão desejado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Obtém um objeto de permissão do tipo especificado, se ele existir no conjunto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>A copy of the permission object of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Uma cópia do objeto de permissão do tipo especificado pelo parâmetro <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> contido no <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph>, se não existir nenhum.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">O método retorna <ph id="ph1">`null`</ph> para um <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Embora um <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efetivamente contém todas as permissões, ele não tem todas as instâncias reais para retornar.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, você pode alterar o comportamento do <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> método substituindo o <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The type of the permission object.</source>
          <target state="translated">O tipo do objeto de permissão.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Obtém um objeto de permissão do tipo especificado, se ele existir no conjunto.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>A copy of the permission object, of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter, contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Uma cópia do objeto de permissão do tipo especificado pelo parâmetro <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> contido no <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph>, se não existir nenhum.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> método é a implementação para o <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">O método retorna <ph id="ph1">`null`</ph> para um <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Embora um <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efetivamente contém todas as permissões, ele não tem todas as instâncias reais para retornar.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A permission set to intersect with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Um conjunto de permissões a intersectar com o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Creates and returns a permission set that is the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Cria e retorna um conjunto de permissões que é a interseção do <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual e do <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A new permission set that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified target.</source>
          <target state="translated">Um novo conjunto de permissões que representa a interseção do <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual e do destino especificado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Este objeto será <ph id="ph1">&lt;see langword="null" /&gt;</ph> se a interseção estiver vazia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">A interseção de dois conjuntos de permissão é um conjunto de permissões que descreve o conjunto de operações que ambas descrevem em comum.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">Especificamente, ele representa as permissões mínimas, de modo que qualquer solicitação que transmite os dois permissão define também passa a interseção entre elas.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Para cada tipo de permissão que está presente em dois conjuntos, as duas instâncias dessas permissões são comparadas com a permissão <ph id="ph1">`Intersect`</ph> método; a permissão resultante é incluída na resultante <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">Tipos de permissão que existem somente em um dos dois conjuntos são excluídos do conjunto resultante.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> está vazio.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> estiver vazio; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> pode estar vazio e ainda contém instâncias de permissões se essas permissões estão no estado totalmente restrito.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">As permissões estão em um estado totalmente restrito se seus <ph id="ph1">`IsSubsetOf`</ph> métodos retornam <ph id="ph2">`true`</ph> quando <ph id="ph3">`null`</ph> é passado como um parâmetro.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Obtém um valor que indica se a coleção é somente leitura.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> cannot be read-only, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> não pode ser somente leitura, portanto, essa propriedade é sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra o valor retornado pelo <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">O conjunto de permissões a testar para a relação do subconjunto.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This must be either a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Isso deve ser um <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual é um subconjunto do <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the <ph id="ph3">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual for um subconjunto do parâmetro <ph id="ph3">&lt;paramref name="target" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> is a subset of the target <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> if all demands that succeed for the <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> also succeed for the target.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> é um subconjunto do destino <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> se todas as demandas que bem-sucedido para o <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> também obter êxito para o destino.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">Ou seja, o destino contém pelo menos as permissões contidas no subconjunto.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">Obtém um valor que indica se é garantido que a coleção é thread-safe.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> does not automatically handle thread safety, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> não manipula automaticamente acesso thread-safe, portanto, essa propriedade é sempre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Esse método é necessário para suportar <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra o valor retornado pelo <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> é <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> for <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>An <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions that implement the <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
          <target state="translated">Um <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efetivamente contém todas as permissões que implementam o <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for any <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is not a subset of the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Faz com que qualquer <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> que passe pelo código de chamada para qualquer <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que não seja um subconjunto do <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual falhe.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> é semelhante ao <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, ambos causam movimentações de pilha falhe quando eles conseguirão caso contrário.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The difference is that <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> specifies permissions that will cause the stack walk to fail, but <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">A diferença é que <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> Especifica as permissões que fará com que a movimentação da pilha falhe, mas <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> Especifica as permissões somente que fazem com que a movimentação da pilha falha.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">Chame este método para garantir que seu código pode ser usado para acessar somente os recursos especificados.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> é ignorado para uma permissão concedida não porque uma solicitação de permissão não pode ser bem-sucedida.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>However, if code lower on the call stack later calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</source>
          <target state="translated">No entanto, se o código inferior na chamada de pilha mais tarde chamadas <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> para essa permissão, um <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> é gerada quando a movimentação da pilha atinge o código que tentou chamar <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>This is because the code that called <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> has not been granted the permission, even though it called <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> for that permission.</source>
          <target state="translated">Isso ocorre porque o código chamado <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> não recebeu a permissão, mesmo que ela chamou <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> para essa permissão.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">A pilha de chamadas é representada geralmente como crescimento para baixo, para que os métodos superiores na pilha de chamadas chamam métodos inferior na pilha de chamadas.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The type of permission to delete.</source>
          <target state="translated">O tipo de permissão a excluir.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Remove uma permissão de um determinado tipo do conjunto.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">A permissão removida do conjunto.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Você não pode remover permissões de um conjunto de permissões irrestritas.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">O conjunto de permissões permanece irrestrito após você tentar remover a permissão e uma exceção não é gerada.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following C# code attempts to remove the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from the <ph id="ph2">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">O código c# a seguir tenta remover o <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> da <ph id="ph2">`FullTrust`</ph> conjunto de permissões, mas a permissão não é removida.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method to remove a <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from a permission set.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> método para remover um <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> de uma permissão definida.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, você pode alterar o comportamento do <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> método substituindo o <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The type of the permission to remove.</source>
          <target state="translated">O tipo de permissão para remover.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Remove uma permissão de um determinado tipo do conjunto.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">A permissão removida do conjunto.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> método é a implementação para o <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Você não pode remover permissões de um conjunto de permissões irrestritas.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">O conjunto de permissões permanece irrestrito após você tentar remover a permissão e uma exceção não é gerada.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>Causes any previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">Faz com que qualquer <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> anterior do quadro atual seja removido e não esteja mais em vigor.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> for the current frame, an <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> is thrown.</source>
          <target state="translated">Se não houver nenhum <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> para o quadro atual, um <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>There is no previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Não há nenhum <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> anterior para o quadro atual.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">A permissão a ser definida.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Define uma permissão para o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, substituindo qualquer permissão existente do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">A permissão definida.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Este método remove qualquer objeto de permissão existentes do mesmo tipo de <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> e substitui-lo com o <ph id="ph2">`perm`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Se uma permissão que implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> é definido em um <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> que é <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, resultante <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> não é mais <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, você pode alterar o comportamento do <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> método substituindo o <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">A permissão a ser definida.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Define uma permissão para o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, substituindo qualquer permissão existente do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">A permissão definida.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> método é a implementação para o <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Este método remove qualquer objeto de permissão existentes do mesmo tipo de <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> e substitui-lo com o <ph id="ph2">`perm`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Se uma permissão que implementa <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> é definido em um <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> que é <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, resultante <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> não é mais <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">O método é chamado de um <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">Obtém o objeto raiz da coleção atual.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The root object of the current collection.</source>
          <target state="translated">O objeto raiz da coleção atual.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Esse método é necessário para suportar <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> property to get the root object of the current collection.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso de <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> propriedade para obter o objeto raiz da coleção atual.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">O objeto que iniciou o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">A funcionalidade desse parâmetro não está implementada no momento.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">É executado quando o todo o grafo de objeto tiver sido desserializado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>Returns a string representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Retorna uma representação de cadeia de caracteres da <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>A representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Uma representação de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The string representation is useful in debugging to see the state of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">A representação de cadeia de caracteres é útil para depuração para ver o estado de um <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">Cria uma codificação XML do objeto de segurança e seu estado atual.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The permission set to form the union with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">O conjunto de permissões para formar a união com o <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is the union of the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> que é a união do <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual e do <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>A new permission set that represents the union of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Um novo conjunto de permissões que representa a união do <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> atual e do <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that represents all the operations represented by the current <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> as well as all the operations represented by the specified <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">O resultado de uma chamada para <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> é um <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> que representa todas as operações representadas pelo atual <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> , bem como todas as operações representadas pelo <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">Se for definido <ph id="ph1">`Unrestricted`</ph>, é a união <ph id="ph2">`Unrestricted`</ph> também.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>