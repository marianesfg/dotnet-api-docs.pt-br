<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b31b0be6455d3954166f451e28a451c79525ea4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37629700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0418f-101">Represents the XML object model for encoding security objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0418f-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="0418f-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0418f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-103">Essa classe destina-se a ser uma implementação simples de um modelo de objeto XML simples para uso dentro do sistema de segurança e não para uso como um modelo de objeto XML geral.</span><span class="sxs-lookup"><span data-stu-id="0418f-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="0418f-104">Esta documentação pressupõe um conhecimento básico do XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="0418f-105">O modelo de objeto XML simple para um elemento consiste das seguintes partes:</span><span class="sxs-lookup"><span data-stu-id="0418f-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="0418f-106">A marca é o nome do elemento.</span><span class="sxs-lookup"><span data-stu-id="0418f-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="0418f-107">Os atributos são zero ou mais pares de atributo de nome/valor no elemento.</span><span class="sxs-lookup"><span data-stu-id="0418f-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="0418f-108">Os filhos são zero ou mais elementos aninhados `<tag>` e `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="0418f-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="0418f-109">É altamente recomendável que a representação XML de atributo com base é usada para express segurança elementos e seus valores.</span><span class="sxs-lookup"><span data-stu-id="0418f-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="0418f-110">Isso significa que as propriedades de um elemento são expressas como atributos e valores de propriedade são expressos como valores de atributo.</span><span class="sxs-lookup"><span data-stu-id="0418f-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="0418f-111">Evite o aninhamento de texto dentro de marcas.</span><span class="sxs-lookup"><span data-stu-id="0418f-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="0418f-112">Para qualquer `<tag>text</tag>` representação de uma representação de tipo `<tag value="text"/>` está geralmente disponível.</span><span class="sxs-lookup"><span data-stu-id="0418f-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="0418f-113">Usando essa representação de XML com base em atributo aumenta a legibilidade e permite a portabilidade fácil de WMI da serialização XML resultante.</span><span class="sxs-lookup"><span data-stu-id="0418f-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="0418f-114">Um nome de atributo deve ser um caractere ou maior e não pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="0418f-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="0418f-115">Se o valor com base no elemento de representação é usada, elementos com um texto de cadeia de caracteres que é `null` são representadas na `<tag/>` formulário; caso contrário, o texto é delimitado pela `<tag>` e `</tag>` tokens.</span><span class="sxs-lookup"><span data-stu-id="0418f-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="0418f-116">Ambas as formas podem ser combinadas com atributos, que são mostrados se estiver presente.</span><span class="sxs-lookup"><span data-stu-id="0418f-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="0418f-117">As marcas, atributos e texto de elementos, se presente, sempre diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="0418f-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="0418f-118">O formulário XML contém cotações e ignora os quando necessário.</span><span class="sxs-lookup"><span data-stu-id="0418f-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="0418f-119">Os valores de cadeia de caracteres que incluam caracteres inválidos para uso em XML resultam em um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="0418f-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="0418f-120">Essas regras se aplicam a todas as propriedades e métodos.</span><span class="sxs-lookup"><span data-stu-id="0418f-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0418f-121">Por motivos de desempenho, a validade de caracteres é verificada apenas quando o elemento é codificado em formulário de texto XML e não em cada conjunto de uma propriedade ou método.</span><span class="sxs-lookup"><span data-stu-id="0418f-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="0418f-122">Métodos estáticos permitem explícitos de verificação quando for necessário.</span><span class="sxs-lookup"><span data-stu-id="0418f-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-123">O exemplo a seguir mostra o uso de membros a <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0418f-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0418f-125">The tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-127">O `tag` parâmetro deve consistir em um nome de marca XML válido.</span><span class="sxs-lookup"><span data-stu-id="0418f-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="0418f-128">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-129">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.%23ctor%2A> construtor para criar um novo <xref:System.Security.SecurityElement> objeto.</span><span class="sxs-lookup"><span data-stu-id="0418f-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="0418f-130">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0418f-133">The tag name of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0418f-134">The text content within the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-136">Se o `text` parâmetro é `null` este construtor gera um elemento idêntico ao construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="0418f-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0418f-139">The name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0418f-140">The value of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-141">Adds a name/value attribute to an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-142">Nomes e valores nos atributos devem conter apenas caracteres de atributo XML válidos.</span><span class="sxs-lookup"><span data-stu-id="0418f-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="0418f-143">Nomes de atributo XML devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="0418f-143">XML attribute names must be unique.</span></span> <span data-ttu-id="0418f-144">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0418f-145">Não há nenhum suporte para cadeias de caracteres entre aspas, portanto, cadeias de caracteres de pares nome/valor não devem conter aspas ou outros caracteres que exigem aspas.</span><span class="sxs-lookup"><span data-stu-id="0418f-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-146">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.AddAttribute%2A> método para adicionar um atributo de nome/valor a um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="0418f-147">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="0418f-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="0418f-151">The child element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-151">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-152">Adds a child element to the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-152">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-153">O elemento filho é adicionado após os elementos filho já existentes.</span><span class="sxs-lookup"><span data-stu-id="0418f-153">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-154">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.AddChild%2A> método para adicionar um elemento filho ao elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-154">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="0418f-155">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-155">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0418f-157">The name of the attribute for which to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-157">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-158">Finds an attribute by name in an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-158">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-160">Com o XML da seguinte maneira, `Attribute("B")` retornaria "456".</span><span class="sxs-lookup"><span data-stu-id="0418f-160">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0418f-161">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Attribute%2A> método para localizar um atributo pelo nome.</span><span class="sxs-lookup"><span data-stu-id="0418f-161">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="0418f-162">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-162">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0418f-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0418f-165">O <see cref="T:System.Collections.Hashtable" /> objeto para os valores de atributo do elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-165">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-166">Cada atributo é armazenado no <xref:System.Collections.Hashtable> como um par nome/valor.</span><span class="sxs-lookup"><span data-stu-id="0418f-166">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="0418f-167">Nomes e valores nos atributos devem conter apenas caracteres de atributo XML válidos.</span><span class="sxs-lookup"><span data-stu-id="0418f-167">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="0418f-168">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-168">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0418f-169">Não há nenhum suporte para cadeias de caracteres entre aspas, portanto, cadeias de caracteres de pares nome/valor não devem conter aspas ou outros caracteres que exigem aspas.</span><span class="sxs-lookup"><span data-stu-id="0418f-169">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-170">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Attributes%2A> propriedade para obter um atributo de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-170">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="0418f-171">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-171">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0418f-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-173">The name is not a valid XML attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-173">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0418f-174">Gets or sets the array of child elements of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-174">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0418f-175">Os elementos filho ordenada do elemento XML como elementos de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-175">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-176">Se um <xref:System.Security.SecurityElement> contém ambas <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> aparecerão primeiro.</span><span class="sxs-lookup"><span data-stu-id="0418f-176">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-177">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Children%2A> propriedade para obter a matriz de elementos filho do elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-177">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="0418f-178">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-178">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-179">A child of the XML parent node is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-179">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0418f-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-182">A cópia inclui tanto o <xref:System.Security.SecurityElement.Children%2A> e <xref:System.Security.SecurityElement.Attributes%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="0418f-182">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0418f-183">An XML element object to which to compare the current XML element object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-183">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-184">Compares two XML element objects for equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-184">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-185">
            <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-185">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-186">Se não houver elementos filho, a comparação estende recursivamente a eles.</span><span class="sxs-lookup"><span data-stu-id="0418f-186">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="0418f-187">Não há nenhum suporte para comparar diferentes representações XML dos mesmos caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-187">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-188">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Equal%2A> método para comparar dois elementos XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-188">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="0418f-189">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-189">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="0418f-190">The string within which to escape invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-190">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-192">The input string with invalid characters replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-192">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-193">Use esse método para substituir caracteres inválidos em uma cadeia de caracteres antes de usar a cadeia de caracteres em um <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="0418f-193">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="0418f-194">Se os caracteres inválidos são usados em uma <xref:System.Security.SecurityElement> sem sejam escapados, um <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="0418f-194">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="0418f-195">A tabela a seguir mostra os caracteres XML inválidos e seus equivalentes de escape.</span><span class="sxs-lookup"><span data-stu-id="0418f-195">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="0418f-196">Caractere XML inválido</span><span class="sxs-lookup"><span data-stu-id="0418f-196">Invalid XML character</span></span> | <span data-ttu-id="0418f-197">Substituído por</span><span class="sxs-lookup"><span data-stu-id="0418f-197">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="0418f-198">O código a seguir mostra o uso da <xref:System.Security.SecurityElement.Escape%2A> caracteres de método para substituir um XML inválido em uma cadeia de caracteres com seus equivalentes XML válidos.</span><span class="sxs-lookup"><span data-stu-id="0418f-198">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="0418f-199">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-199">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="0418f-200">The XML-encoded string from which to create the security element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-200">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-201">Creates a security element from an XML-encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-201">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-203">Não use aspas simples na cadeia de caracteres XML; em vez disso, use aspas duplas com escape.</span><span class="sxs-lookup"><span data-stu-id="0418f-203">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="0418f-204">Por exemplo, em vez de "`<value name='Company'>Microsoft</value>"` usar"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="0418f-204">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="0418f-205">O uso de aspas simples pode resultar em qualquer uma exceção sendo lançada ou, em alguns casos, os que está sendo tratados como texto na cadeia de caracteres de aspas simples.</span><span class="sxs-lookup"><span data-stu-id="0418f-205">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="0418f-206">
            <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-206">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-207">
            <paramref name="xml" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-207">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0418f-208">The attribute name to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-208">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-209">Determines whether a string is a valid attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-209">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-210">
            <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-210">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-211">Esse método pode ser usado para testar um atributo antes de adicioná-lo a um elemento de segurança.</span><span class="sxs-lookup"><span data-stu-id="0418f-211">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-212">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidAttributeName%2A> método para determinar se uma cadeia de caracteres é um nome de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="0418f-212">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="0418f-213">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-213">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0418f-214">The attribute value to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-214">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-215">Determines whether a string is a valid attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-215">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-216">
            <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-216">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-217">Esse método pode ser usado para testar um atributo antes de adicioná-lo a um elemento de segurança.</span><span class="sxs-lookup"><span data-stu-id="0418f-217">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-218">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> método para determinar se uma cadeia de caracteres é um valor de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="0418f-218">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="0418f-219">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-219">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0418f-220">The tag to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-220">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-221">Determines whether a string is a valid tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-221">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-222">
            <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-222">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-223">Isso pode ser usado para testar um <xref:System.Security.SecurityElement.Tag%2A> antes de defini-lo.</span><span class="sxs-lookup"><span data-stu-id="0418f-223">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-224">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidTag%2A> método para determinar se uma cadeia de caracteres é uma marca de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="0418f-224">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="0418f-225">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-225">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0418f-226">The text to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-226">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-227">Determines whether a string is valid as text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-227">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-228">
            <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-228">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-229">Esse método pode ser usado para testar <xref:System.Security.SecurityElement.Text%2A> antes de defini-lo.</span><span class="sxs-lookup"><span data-stu-id="0418f-229">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-230">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidText%2A> método para determinar se uma cadeia de caracteres é válida como texto de elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-230">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="0418f-231">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-231">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0418f-232">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-232">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-233">Finds a child by its tag name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-233">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-235">Com o XML da seguinte maneira, `SearchForChildByTag("second")` retornaria o elemento filho `<second>`.</span><span class="sxs-lookup"><span data-stu-id="0418f-235">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0418f-236">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.SearchForChildByTag%2A> método para localizar um filho pelo seu nome de marca.</span><span class="sxs-lookup"><span data-stu-id="0418f-236">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="0418f-237">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-237">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0418f-239">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-239">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0418f-240">Finds a child by its tag name and returns the contained text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-240">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-241">The text contents of the first child element with the specified tag value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-241">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-242">Esse método é equivalente ao seguinte:</span><span class="sxs-lookup"><span data-stu-id="0418f-242">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="0418f-243">Com o XML da seguinte maneira, `SearchForTextOfTag("second")` retornaria "Texto2".</span><span class="sxs-lookup"><span data-stu-id="0418f-243">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0418f-244">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> método para localizar um filho pelo seu nome de marca e retornar o texto contido.</span><span class="sxs-lookup"><span data-stu-id="0418f-244">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="0418f-245">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-245">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-246">
            <paramref name="tag" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-246">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0418f-247">Gets or sets the tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-247">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0418f-248">O nome da marca de um elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-248">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-249">Em XML, a marca é exibida no script conforme aparece abaixo:</span><span class="sxs-lookup"><span data-stu-id="0418f-249">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="0418f-250">Se este elemento tem elementos filho, os filhos substituirá `text`.</span><span class="sxs-lookup"><span data-stu-id="0418f-250">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="0418f-251">Atribua somente cadeias de marca XML válidas para essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="0418f-251">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="0418f-252">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-252">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-253">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Tag%2A> propriedade para obter o nome da marca de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-253">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="0418f-254">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-254">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0418f-255">The tag is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-255">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-256">The tag is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-256">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0418f-257">Gets or sets the text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-257">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0418f-258">O valor do texto dentro de um elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-258">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-259">O texto não deve conter caracteres especiais de XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-259">The text should not contain XML special characters.</span></span> <span data-ttu-id="0418f-260">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0418f-260">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0418f-261">Se um <xref:System.Security.SecurityElement> contém ambas <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> aparecerão primeiro.</span><span class="sxs-lookup"><span data-stu-id="0418f-261">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0418f-262">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Text%2A> propriedade para obter o texto de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="0418f-262">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="0418f-263">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="0418f-263">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0418f-264">The text is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-264">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0418f-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0418f-266">The XML element and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0418f-266">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0418f-267">Esse método é útil na depuração para ver a representação XML do elemento.</span><span class="sxs-lookup"><span data-stu-id="0418f-267">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>