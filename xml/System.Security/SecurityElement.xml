<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcf18faba5d9af88089f384c842ac5b4b87e99ad" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941172" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="26566-101">Representa o modelo de objeto XML para codificação de objetos de segurança.</span><span class="sxs-lookup"><span data-stu-id="26566-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="26566-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="26566-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-103">Essa classe destina-se a ser uma implementação simples de um modelo de objeto XML simples para uso dentro do sistema de segurança e não para uso como um modelo de objeto XML geral.</span><span class="sxs-lookup"><span data-stu-id="26566-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="26566-104">Esta documentação pressupõe um conhecimento básico do XML.</span><span class="sxs-lookup"><span data-stu-id="26566-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="26566-105">O modelo de objeto XML simple para um elemento consiste das seguintes partes:</span><span class="sxs-lookup"><span data-stu-id="26566-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="26566-106">A marca é o nome do elemento.</span><span class="sxs-lookup"><span data-stu-id="26566-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="26566-107">Os atributos são zero ou mais pares de atributo de nome/valor no elemento.</span><span class="sxs-lookup"><span data-stu-id="26566-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="26566-108">Os filhos são zero ou mais elementos aninhados `<tag>` e `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="26566-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="26566-109">É altamente recomendável que a representação XML de atributo com base é usada para express segurança elementos e seus valores.</span><span class="sxs-lookup"><span data-stu-id="26566-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="26566-110">Isso significa que as propriedades de um elemento são expressas como atributos e valores de propriedade são expressos como valores de atributo.</span><span class="sxs-lookup"><span data-stu-id="26566-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="26566-111">Evite o aninhamento de texto dentro de marcas.</span><span class="sxs-lookup"><span data-stu-id="26566-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="26566-112">Para qualquer `<tag>text</tag>` representação de uma representação de tipo `<tag value="text"/>` está geralmente disponível.</span><span class="sxs-lookup"><span data-stu-id="26566-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="26566-113">Usando essa representação de XML com base em atributo aumenta a legibilidade e permite a portabilidade fácil de WMI da serialização XML resultante.</span><span class="sxs-lookup"><span data-stu-id="26566-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="26566-114">Um nome de atributo deve ser um caractere ou maior e não pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="26566-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="26566-115">Se o valor com base no elemento de representação é usada, elementos com um texto de cadeia de caracteres que é `null` são representadas na `<tag/>` formulário; caso contrário, o texto é delimitado pela `<tag>` e `</tag>` tokens.</span><span class="sxs-lookup"><span data-stu-id="26566-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="26566-116">Ambas as formas podem ser combinadas com atributos, que são mostrados se estiver presente.</span><span class="sxs-lookup"><span data-stu-id="26566-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="26566-117">As marcas, atributos e texto de elementos, se presente, sempre diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="26566-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="26566-118">O formulário XML contém cotações e ignora os quando necessário.</span><span class="sxs-lookup"><span data-stu-id="26566-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="26566-119">Os valores de cadeia de caracteres que incluam caracteres inválidos para uso em XML resultam em um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="26566-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="26566-120">Essas regras se aplicam a todas as propriedades e métodos.</span><span class="sxs-lookup"><span data-stu-id="26566-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26566-121">Por motivos de desempenho, a validade de caracteres é verificada apenas quando o elemento é codificado em formulário de texto XML e não em cada conjunto de uma propriedade ou método.</span><span class="sxs-lookup"><span data-stu-id="26566-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="26566-122">Métodos estáticos permitem explícitos de verificação quando for necessário.</span><span class="sxs-lookup"><span data-stu-id="26566-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-123">O exemplo a seguir mostra o uso de membros a <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26566-124">Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityElement" />.</span><span class="sxs-lookup"><span data-stu-id="26566-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="26566-125">O nome da marca de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="26566-126">Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityElement" /> com a marca especificada.</span><span class="sxs-lookup"><span data-stu-id="26566-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-127">O `tag` parâmetro deve consistir em um nome de marca XML válido.</span><span class="sxs-lookup"><span data-stu-id="26566-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="26566-128">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-129">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.%23ctor%2A> construtor para criar um novo <xref:System.Security.SecurityElement> objeto.</span><span class="sxs-lookup"><span data-stu-id="26566-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="26566-130">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-131">O parâmetro <paramref name="tag" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-132">O parâmetro <paramref name="tag" /> é inválido em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="26566-133">O nome da marca do elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="26566-134">O conteúdo do texto dentro do elemento.</span><span class="sxs-lookup"><span data-stu-id="26566-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="26566-135">Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityElement" /> com o texto e a marca especificados.</span><span class="sxs-lookup"><span data-stu-id="26566-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-136">Se o `text` parâmetro é `null` este construtor gera um elemento idêntico ao construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="26566-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-137">O parâmetro <paramref name="tag" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-138">O parâmetro <paramref name="tag" /> ou <paramref name="text" /> é inválido em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="26566-139">O nome do atributo.</span><span class="sxs-lookup"><span data-stu-id="26566-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="26566-140">O valor do atributo.</span><span class="sxs-lookup"><span data-stu-id="26566-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="26566-141">Adiciona um atributo de nome/valor a um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-142">Nomes e valores nos atributos devem conter apenas caracteres de atributo XML válidos.</span><span class="sxs-lookup"><span data-stu-id="26566-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="26566-143">Nomes de atributo XML devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="26566-143">XML attribute names must be unique.</span></span> <span data-ttu-id="26566-144">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="26566-145">Não há nenhum suporte para cadeias de caracteres entre aspas, portanto, cadeias de caracteres de pares nome/valor não devem conter aspas ou outros caracteres que exigem aspas.</span><span class="sxs-lookup"><span data-stu-id="26566-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-146">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.AddAttribute%2A> método para adicionar um atributo de nome/valor a um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="26566-147">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-148">O parâmetro <paramref name="name" /> ou o parâmetro <paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-149">O parâmetro <paramref name="name" /> ou <paramref name="value" /> é inválido em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="26566-150">- ou -</span><span class="sxs-lookup"><span data-stu-id="26566-150">-or-</span></span> 
<span data-ttu-id="26566-151">Um atributo com o nome especificado pelo parâmetro <paramref name="name" /> já existe.</span><span class="sxs-lookup"><span data-stu-id="26566-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="26566-152">O elemento filho a adicionar.</span><span class="sxs-lookup"><span data-stu-id="26566-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="26566-153">Adiciona um elemento filho ao elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-154">O elemento filho é adicionado após os elementos filho já existentes.</span><span class="sxs-lookup"><span data-stu-id="26566-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-155">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.AddChild%2A> método para adicionar um elemento filho ao elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="26566-156">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-157">O parâmetro <paramref name="child" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="26566-158">O nome do atributo pelo qual pesquisar.</span><span class="sxs-lookup"><span data-stu-id="26566-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="26566-159">Localiza um atributo pelo nome em um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="26566-160">O valor associado ao atributo nomeado ou <see langword="null" /> se nenhum atributo com <paramref name="name" /> existir.</span><span class="sxs-lookup"><span data-stu-id="26566-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-161">Com o XML da seguinte maneira, `Attribute("B")` retornaria "456".</span><span class="sxs-lookup"><span data-stu-id="26566-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="26566-162">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Attribute%2A> método para localizar um atributo pelo nome.</span><span class="sxs-lookup"><span data-stu-id="26566-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="26566-163">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-164">O parâmetro <paramref name="name" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26566-165">Obtém ou define os atributos de um elemento XML como pares nome/valor.</span><span class="sxs-lookup"><span data-stu-id="26566-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="26566-166">O <see cref="T:System.Collections.Hashtable" /> objeto para os valores de atributo do elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-167">Cada atributo é armazenado no <xref:System.Collections.Hashtable> como um par nome/valor.</span><span class="sxs-lookup"><span data-stu-id="26566-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="26566-168">Nomes e valores nos atributos devem conter apenas caracteres de atributo XML válidos.</span><span class="sxs-lookup"><span data-stu-id="26566-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="26566-169">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="26566-170">Não há nenhum suporte para cadeias de caracteres entre aspas, portanto, cadeias de caracteres de pares nome/valor não devem conter aspas ou outros caracteres que exigem aspas.</span><span class="sxs-lookup"><span data-stu-id="26566-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-171">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Attributes%2A> propriedade para obter um atributo de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="26566-172">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="26566-173">O nome ou o valor do objeto <see cref="T:System.Collections.Hashtable" /> é inválido.</span><span class="sxs-lookup"><span data-stu-id="26566-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-174">O nome não é um nome de atributo XML válido.</span><span class="sxs-lookup"><span data-stu-id="26566-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26566-175">Obtém ou define a matriz de elementos filho do elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="26566-176">Os elementos filho ordenada do elemento XML como elementos de segurança.</span><span class="sxs-lookup"><span data-stu-id="26566-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-177">Se um <xref:System.Security.SecurityElement> contém ambas <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> aparecerão primeiro.</span><span class="sxs-lookup"><span data-stu-id="26566-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-178">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Children%2A> propriedade para obter a matriz de elementos filho do elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="26566-179">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-180">Um filho do nó pai XML é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26566-181">Cria e retorna uma cópia idêntica do objeto <see cref="T:System.Security.SecurityElement" /> atual.</span><span class="sxs-lookup"><span data-stu-id="26566-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="26566-182">Uma cópia do objeto <see cref="T:System.Security.SecurityElement" /> atual.</span><span class="sxs-lookup"><span data-stu-id="26566-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-183">A cópia inclui tanto o <xref:System.Security.SecurityElement.Children%2A> e <xref:System.Security.SecurityElement.Attributes%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="26566-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="26566-184">Um objeto de elemento XML com o qual comparar o objeto do elemento XML atual.</span><span class="sxs-lookup"><span data-stu-id="26566-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="26566-185">Compara dois objetos de elemento XML quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="26566-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="26566-186"><see langword="true" /> se a marca, os nomes e valores de atributos, os elementos filho e os campos de texto no elemento XML atual forem idênticos às suas contrapartes no parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26566-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-187">Se não houver elementos filho, a comparação estende recursivamente a eles.</span><span class="sxs-lookup"><span data-stu-id="26566-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="26566-188">Não há nenhum suporte para comparar diferentes representações XML dos mesmos caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-189">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Equal%2A> método para comparar dois elementos XML.</span><span class="sxs-lookup"><span data-stu-id="26566-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="26566-190">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="26566-191">A cadeia de caracteres dentro da qual escapar os caracteres inválidos.</span><span class="sxs-lookup"><span data-stu-id="26566-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="26566-192">Substitui os caracteres XML inválidos em uma cadeia de caracteres com seus equivalentes XML válidos.</span><span class="sxs-lookup"><span data-stu-id="26566-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="26566-193">A cadeia de caracteres de entrada com caracteres inválidos substituídos.</span><span class="sxs-lookup"><span data-stu-id="26566-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-194">Use esse método para substituir caracteres inválidos em uma cadeia de caracteres antes de usar a cadeia de caracteres em um <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="26566-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="26566-195">Se os caracteres inválidos são usados em uma <xref:System.Security.SecurityElement> sem sejam escapados, um <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="26566-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="26566-196">A tabela a seguir mostra os caracteres XML inválidos e seus equivalentes de escape.</span><span class="sxs-lookup"><span data-stu-id="26566-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="26566-197">Caractere XML inválido</span><span class="sxs-lookup"><span data-stu-id="26566-197">Invalid XML character</span></span> | <span data-ttu-id="26566-198">Substituído por</span><span class="sxs-lookup"><span data-stu-id="26566-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="26566-199">O código a seguir mostra o uso da <xref:System.Security.SecurityElement.Escape%2A> caracteres de método para substituir um XML inválido em uma cadeia de caracteres com seus equivalentes XML válidos.</span><span class="sxs-lookup"><span data-stu-id="26566-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="26566-200">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="26566-201">A cadeia de caracteres codificada em XML da qual o elemento de segurança é criado.</span><span class="sxs-lookup"><span data-stu-id="26566-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="26566-202">Cria um elemento de segurança de uma cadeia de caracteres codificada em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="26566-203">Um <see cref="T:System.Security.SecurityElement" /> criado do XML.</span><span class="sxs-lookup"><span data-stu-id="26566-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-204">Não use aspas simples na cadeia de caracteres XML; em vez disso, use aspas duplas com escape.</span><span class="sxs-lookup"><span data-stu-id="26566-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="26566-205">Por exemplo, em vez de "`<value name='Company'>Microsoft</value>"` usar"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="26566-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="26566-206">O uso de aspas simples pode resultar em qualquer uma exceção sendo lançada ou, em alguns casos, os que está sendo tratados como texto na cadeia de caracteres de aspas simples.</span><span class="sxs-lookup"><span data-stu-id="26566-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="26566-207"><paramref name="xml" /> contém um ou mais caracteres de aspas simples.</span><span class="sxs-lookup"><span data-stu-id="26566-207"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-208"><paramref name="xml" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-208"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="26566-209">O nome do atributo para testar quanto à validade.</span><span class="sxs-lookup"><span data-stu-id="26566-209">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="26566-210">Determina se uma cadeia de caracteres é um nome de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="26566-210">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="26566-211"><see langword="true" /> se o parâmetro <paramref name="name" /> for um nome de atributo XML válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26566-211"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-212">Esse método pode ser usado para testar um atributo antes de adicioná-lo a um elemento de segurança.</span><span class="sxs-lookup"><span data-stu-id="26566-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-213">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidAttributeName%2A> método para determinar se uma cadeia de caracteres é um nome de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="26566-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="26566-214">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="26566-215">O valor do atributo a testar quanto à validade.</span><span class="sxs-lookup"><span data-stu-id="26566-215">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="26566-216">Determina se uma cadeia de caracteres é um valor de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="26566-216">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="26566-217"><see langword="true" /> se o parâmetro <paramref name="value" /> for um valor de atributo XML válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26566-217"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-218">Esse método pode ser usado para testar um atributo antes de adicioná-lo a um elemento de segurança.</span><span class="sxs-lookup"><span data-stu-id="26566-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-219">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> método para determinar se uma cadeia de caracteres é um valor de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="26566-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="26566-220">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="26566-221">A marca a testar quanto à validade.</span><span class="sxs-lookup"><span data-stu-id="26566-221">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="26566-222">Determina se uma cadeia de caracteres é uma marca válida.</span><span class="sxs-lookup"><span data-stu-id="26566-222">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="26566-223"><see langword="true" /> se o parâmetro <paramref name="tag" /> for uma marca XML válida; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26566-223"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-224">Isso pode ser usado para testar um <xref:System.Security.SecurityElement.Tag%2A> antes de defini-lo.</span><span class="sxs-lookup"><span data-stu-id="26566-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-225">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidTag%2A> método para determinar se uma cadeia de caracteres é uma marca de atributo válido.</span><span class="sxs-lookup"><span data-stu-id="26566-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="26566-226">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="26566-227">O texto a testar quanto à validade.</span><span class="sxs-lookup"><span data-stu-id="26566-227">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="26566-228">Determina se uma cadeia de caracteres é válida como texto dentro de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-228">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="26566-229"><see langword="true" /> se o parâmetro <paramref name="text" /> for um elemento de texto XML válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26566-229"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-230">Esse método pode ser usado para testar <xref:System.Security.SecurityElement.Text%2A> antes de defini-lo.</span><span class="sxs-lookup"><span data-stu-id="26566-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-231">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.IsValidText%2A> método para determinar se uma cadeia de caracteres é válida como texto de elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="26566-232">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="26566-233">A marca pela qual pesquisar nos elementos filho.</span><span class="sxs-lookup"><span data-stu-id="26566-233">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="26566-234">Localiza um filho pelo seu nome de marca.</span><span class="sxs-lookup"><span data-stu-id="26566-234">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="26566-235">O primeiro elemento XML filho com o valor da marca especificado ou <see langword="null" />, se nenhum elemento filho com <paramref name="tag" /> existir.</span><span class="sxs-lookup"><span data-stu-id="26566-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-236">Com o XML da seguinte maneira, `SearchForChildByTag("second")` retornaria o elemento filho `<second>`.</span><span class="sxs-lookup"><span data-stu-id="26566-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="26566-237">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.SearchForChildByTag%2A> método para localizar um filho pelo seu nome de marca.</span><span class="sxs-lookup"><span data-stu-id="26566-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="26566-238">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-239">O parâmetro <paramref name="tag" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="26566-240">A marca pela qual pesquisar nos elementos filho.</span><span class="sxs-lookup"><span data-stu-id="26566-240">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="26566-241">Localiza um filho pelo seu nome de marca e retorna o texto contido.</span><span class="sxs-lookup"><span data-stu-id="26566-241">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="26566-242">O conteúdo de texto do primeiro elemento filho com o valor da marca especificado.</span><span class="sxs-lookup"><span data-stu-id="26566-242">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-243">Esse método é equivalente ao seguinte:</span><span class="sxs-lookup"><span data-stu-id="26566-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="26566-244">Com o XML da seguinte maneira, `SearchForTextOfTag("second")` retornaria "Texto2".</span><span class="sxs-lookup"><span data-stu-id="26566-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="26566-245">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> método para localizar um filho pelo seu nome de marca e retornar o texto contido.</span><span class="sxs-lookup"><span data-stu-id="26566-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="26566-246">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-247"><paramref name="tag" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-247"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26566-248">Obtém ou define o nome da marca de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-248">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="26566-249">O nome da marca de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-249">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-250">Em XML, a marca é exibida no script conforme aparece abaixo:</span><span class="sxs-lookup"><span data-stu-id="26566-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="26566-251">Se este elemento tem elementos filho, os filhos substituirá `text`.</span><span class="sxs-lookup"><span data-stu-id="26566-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="26566-252">Atribua somente cadeias de marca XML válidas para essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="26566-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="26566-253">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-254">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Tag%2A> propriedade para obter o nome da marca de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="26566-255">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26566-256">A marca é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26566-256">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-257">A marca não é válida em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-257">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26566-258">Obtém ou define o texto em um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-258">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="26566-259">O valor do texto dentro de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-259">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-260">O texto não deve conter caracteres especiais de XML.</span><span class="sxs-lookup"><span data-stu-id="26566-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="26566-261">Use <xref:System.Security.SecurityElement.Escape%2A> para remover caracteres inválidos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="26566-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="26566-262">Se um <xref:System.Security.SecurityElement> contém ambas <xref:System.Security.SecurityElement.Text%2A> e <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> aparecerão primeiro.</span><span class="sxs-lookup"><span data-stu-id="26566-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26566-263">O código a seguir mostra o uso do <xref:System.Security.SecurityElement.Text%2A> propriedade para obter o texto de um elemento XML.</span><span class="sxs-lookup"><span data-stu-id="26566-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="26566-264">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="26566-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="26566-265">O texto não é válido em XML.</span><span class="sxs-lookup"><span data-stu-id="26566-265">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26566-266">Produz uma representação de cadeia de caracteres de um elemento XML e seus atributos constituintes, elementos filho e texto.</span><span class="sxs-lookup"><span data-stu-id="26566-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="26566-267">O elemento XML e seus conteúdos.</span><span class="sxs-lookup"><span data-stu-id="26566-267">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26566-268">Esse método é útil na depuração para ver a representação XML do elemento.</span><span class="sxs-lookup"><span data-stu-id="26566-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>