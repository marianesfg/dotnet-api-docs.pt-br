<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HostSecurityManager.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ff48fa5df967caba5aed9ae2ba2fef1a119992f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff48fa5df967caba5aed9ae2ba2fef1a119992f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.HostSecurityManager">
          <source>Allows the control and customization of security behavior for application domains.</source>
          <target state="translated">Permite o controle e a personalização do comportamento de segurança para domínios do aplicativo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>When you create a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, the common language runtime queries the <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> for the presence of a <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, which participates in making security decisions for the <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Quando você cria um novo <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, as consultas comuns de tempo de execução de linguagem de <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> a presença de um <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, que participa de tomada de decisões de segurança o <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Host providers should implement a host security manager that inherits from the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">Provedores de host devem implementar um Gerenciador de segurança do host que herda de <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The following example shows a very simple implementation of a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir mostra uma implementação muito simple de uma <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Essa classe não pode ser usada por código parcialmente confiável ou transparente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>for full trust for inheritors.</source>
          <target state="translated">para confiança total de herdeiros.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Esta classe não pode ser herdada pelo código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Some members of a <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> are called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">Alguns membros de um <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> são chamado sempre que um assembly é carregado, implícita ou explicitamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The <ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods must not load any assemblies, because doing so will result in the members of the <ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> being recursively called.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> métodos não devem carregar todos os assemblies, porque isso resultará em membros do <ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> sendo recursivamente chamado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>To avoid circular references, you should create new instances of classes that can cause assemblies to be loaded, either implicitly or explicitly, in the constructor of a class that derives from <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>.</source>
          <target state="translated">Para evitar referências circulares, você deve criar novas instâncias de classes que podem causar assemblies a serem carregados, implicitamente ou explicitamente, no construtor de uma classe que deriva de <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">para confiança total de herdeiros.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Este membro não pode ser herdado por código parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Create instances of classes that can cause assemblies to be loaded, either explicitly or implicitly, in this constructor.</source>
          <target state="translated">Crie instâncias de classes que podem causar os assemblies sejam carregados, explícita ou implicitamente, este construtor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>The get accessor for the <ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph> property and the <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods are called whenever an assembly is loaded, and their subsequent loading of assemblies will cause circular references.</source>
          <target state="translated">O acessador get para a <ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph> propriedade e o <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> e <ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> métodos são chamados sempre que um assembly é carregado e seu carregamento subsequente dos assemblies fará com que as referências circulares.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The evidence for the application to be activated.</source>
          <target state="translated">A evidência do aplicativo ser ativado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Optionally, the evidence for the activating application domain.</source>
          <target state="translated">Opcionalmente, a evidência para o domínio do aplicativo realizando a ativação.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The trust context.</source>
          <target state="translated">O contexto de confiança.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Determines whether an application should be executed.</source>
          <target state="translated">Determina se um aplicativo deve ser executado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An object that contains trust information about the application.</source>
          <target state="translated">Um objeto que contém informações de confiança sobre o aplicativo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Este método pode ser substituído por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation calls the application security manager to determine if the application should be executed.</source>
          <target state="translated">A implementação base chama o Gerenciador de segurança do aplicativo para determinar se o aplicativo deve ser executado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation does not use the activator evidence.</source>
          <target state="translated">A implementação base não usa a evidência de activator.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</source>
          <target state="translated">No entanto, uma implementação substituída pode usar a evidência ativador para determinar a evidência de segurança para o domínio de aplicativo tentar ativar o aplicativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">O exemplo a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph> método para um Gerenciador de segurança do host personalizado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">Este exemplo é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> object could not be found in the application evidence.</source>
          <target state="translated">Não foi possível localizar um objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> na evidência do aplicativo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> property in the activation arguments is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> nos argumentos de ativação é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> grant set does not contain the minimum request set specified by the <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated">O conjunto de concessão <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> não contém o conjunto de solicitações mínimo especificado pelo <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>When overridden in a derived class, gets the security policy for the current application domain.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém a política de segurança do domínio do aplicativo atual.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The security policy for the current application domain.</source>
          <target state="translated">A política de segurança para o domínio de aplicativo atual.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">Essa propriedade pode ser substituída em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The base implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A implementação base sempre retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property is called at <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> creation time.</source>
          <target state="translated">Essa propriedade é chamada no <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> hora de criação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>It allows a host to supply a policy for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Ele permite que um host fornecer uma política atual <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A policy level consists of the following:</source>
          <target state="translated">Um nível de política consiste no seguinte:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of code groups organized into a single rooted tree.</source>
          <target state="translated">Um conjunto de grupos de código são organizados em uma única árvore com raiz.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</source>
          <target state="translated">Um conjunto de conjuntos de permissões nomeadas que são referenciados pelos grupos de código para especificar as permissões a serem concedidas ao código que pertencem ao grupo de códigos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A list of fully trusted assemblies.</source>
          <target state="translated">Uma lista de assemblies totalmente confiáveis.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">Consulte as observações para herdeiros para o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe para informações críticas de implementação.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Esse método usa a política de CAS (segurança de acesso do código), que está obsoleta no <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
          <target state="translated">Para habilitar a política de CAS para compatibilidade com versões anteriores do .NET Framework, use o <bpt id="p1">[</bpt>elemento <ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.Flags">
          <source>Gets the flag representing the security policy components of concern to the host.</source>
          <target state="translated">Obtém um sinalizador que representa os componentes de política de segurança de interesse para o host.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>One of the enumeration values that specifies security policy components.</source>
          <target state="translated">Um dos valores de enumeração que especifica os componentes da política de segurança.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">Essa propriedade pode ser substituída em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The base implementation always returns <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.</source>
          <target state="translated">A implementação base sempre retorna <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The derived host can change the value of this property when only a subset of the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> is of interest.</source>
          <target state="translated">O host derivado pode alterar o valor dessa propriedade quando apenas um subconjunto do <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> é de interesse.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The possible subsets include none, the refused set, the policy level, and assembly evidence.</source>
          <target state="translated">Os subconjuntos possíveis incluem none, o conjunto recusado, o nível de política e evidência de assembly.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property for a custom host security manager.</source>
          <target state="translated">O exemplo a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> propriedade para um Gerenciador de segurança do host personalizado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">Este exemplo é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The evidence type.</source>
          <target state="translated">O tipo de evidência.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>Requests a specific evidence type for the application domain.</source>
          <target state="translated">Solicita um tipo de evidência específico para o domínio de aplicativo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The requested application domain evidence.</source>
          <target state="translated">A evidência de domínio do aplicativo solicitada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Este método pode ser substituído por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retorna a implementação base <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">O common language runtime chama este método quando evidência do tipo especificado é necessária para a atual <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> property.</source>
          <target state="translated">O valor retornado é usado como a evidência fornecida pelo host e é armazenado no <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> coleção do <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the collection.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> método para obter a evidência gerada da coleção.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">Para obter um retorno de chamada para esse método, os hosts devem especificar o <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> sinalizador no <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">Esse método de geração de evidência permite que os hosts atrasar a geração de evidência para um <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> até que a evidência é necessária.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">Na versão do .NET Framework 3.5 e versões anteriores, era necessário fornecer <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidência no tempo de carregamento, substituindo o <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.</source>
          <target state="translated">Recomendamos que você use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> para comprovar a em vez de substituir <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> método é chamado novamente para somente para tipos de evidência de que o host especificado na substituição do <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">Um valor de retorno <ph id="ph1">`null`</ph> indica que o host não é possível gerar evidência deste tipo específico.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">O exemplo a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> método para um Gerenciador de segurança do host personalizado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">Este exemplo é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The evidence type.</source>
          <target state="translated">O tipo de evidência.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">O assembly de destino.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>Requests a specific evidence type for the assembly.</source>
          <target state="translated">Solicita um tipo de evidência específico para o assembly.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The requested assembly evidence.</source>
          <target state="translated">A evidência do assembly solicitada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Este método pode ser substituído por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retorna a implementação base <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</source>
          <target state="translated">O common language runtime chama este método quando evidência do tipo especificado é necessária para o assembly atual.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">O valor retornado é usado como a evidência fornecida pelo host e é armazenado no <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> método para obter a evidência gerada do <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">Para obter um retorno de chamada para esse método, os hosts devem especificar o <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> sinalizador no <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">Esse método de geração de evidência permite que os hosts atrasar a geração de evidência para um <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> até que a evidência é necessária.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>In the .NET Framework 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">No .NET Framework 3.5 e versões anteriores, era necessário fornecer <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidência no tempo de carregamento, substituindo o <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.</source>
          <target state="translated">Recomendamos que você use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> para comprovar a em vez de substituir <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> método é chamado novamente para somente para tipos de evidência de que o host especificado na substituição do <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">Um valor de retorno <ph id="ph1">`null`</ph> indica que o host não é possível gerar evidência deste tipo específico.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>Determines which evidence types the host can supply for the application domain, if requested.</source>
          <target state="translated">Determina quais tipos de evidência o host pode fornecer para o domínio de aplicativo, se solicitado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>An array of evidence types.</source>
          <target state="translated">Uma matriz de tipos de evidência.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Este método pode ser substituído por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retorna a implementação base <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">Os tipos retornados por este método é determinar se o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> método será chamado de volta em.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">A presença de um tipo na lista não significa que o host deve ser capaz de gerar esse tipo de evidência, mas que talvez seja possível.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">Por esse motivo, é melhor especificar excesso em vez de em-Especifique os tipos nessa lista.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">O assembly de destino.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>Determines which evidence types the host can supply for the assembly, if requested.</source>
          <target state="translated">Determina quais tipos de evidência o host pode fornecer para o assembly, se solicitado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>An array of evidence types.</source>
          <target state="translated">Uma matriz de tipos de evidência.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">Este método pode ser substituído por uma classe derivada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retorna a implementação base <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">Os tipos retornados por este método é determinar se o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> método será chamado de volta em.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">A presença de um tipo na lista não significa que o host deve ser capaz de gerar esse tipo de evidência, mas que talvez seja possível.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">Por esse motivo, é melhor especificar excesso em vez de em-Especifique os tipos nessa lista.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> evidence.</source>
          <target state="translated">Evidência adicional para adicionar à evidência <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Provides the application domain evidence for an assembly being loaded.</source>
          <target state="translated">Fornece a evidência de domínio de aplicativo para um assembly sendo carregado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The evidence to be used for the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">A evidência a ser usada para o <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">Este método pode ser substituído em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method is called whenever an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> object is created.</source>
          <target state="translated">Este método é chamado sempre que uma <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> objeto é criado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.</source>
          <target state="translated">O <ph id="ph1">`inputEvidence`</ph> parâmetro é a evidência computada do common language runtime.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">A implementação do host pode escolher ampliar ou reduzir a evidência.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the application domain.</source>
          <target state="translated">O valor de retorno é a evidência a ser usado para o domínio de aplicativo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">A implementação base sempre retorna o objeto de evidência passado como o <ph id="ph1">`inputEvidence`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">Consulte as observações para herdeiros para o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe para informações críticas de implementação.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The loaded assembly.</source>
          <target state="translated">O assembly carregado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the assembly evidence.</source>
          <target state="translated">Evidência adicional a ser adicionada à evidência do assembly.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Provides the assembly evidence for an assembly being loaded.</source>
          <target state="translated">Fornece a evidência de assembly para um assembly sendo carregado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The evidence to be used for the assembly.</source>
          <target state="translated">A evidência a ser usada para o assembly.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">Este método pode ser substituído em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method is called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">Este método é chamado sempre que um assembly é carregado, implícita ou explicitamente.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</source>
          <target state="translated">Os parâmetros passados são o assembly que está sendo carregado e a evidência computada do common language runtime.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">A implementação do host pode escolher ampliar ou reduzir a evidência.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the assembly.</source>
          <target state="translated">O valor de retorno é a evidência para ser usado para o assembly.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">A implementação base sempre retorna o objeto de evidência passado como o <ph id="ph1">`inputEvidence`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">Consulte as observações para herdeiros para o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe para informações críticas de implementação.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">O exemplo a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph> método para um Gerenciador de segurança do host personalizado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">Este exemplo é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The evidence set used to evaluate policy.</source>
          <target state="translated">O conjunto de evidências usado para avaliar a política.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
          <target state="translated">Determina quais permissões conceder ao código com base na evidência especificada.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The permission set that can be granted by the security system.</source>
          <target state="translated">O conjunto de permissões que pode ser concedido pelo sistema de segurança.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>This method invokes the security policy engine, providing it with the specified evidence.</source>
          <target state="translated">Este método chama o mecanismo de políticas de segurança, fornecendo a evidência especificada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The result is determined by the security policy.</source>
          <target state="translated">O resultado é determinado pela política de segurança.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>