<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7f9bada72f0e036f0fdb2ae93db2c823ab1aa15" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37729951" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <TypeSignature Language="F#" Value="type IStreamProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0037f-101">Representa uma interface que pode ser implementada pelas classes que fornecem fluxos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0037f-101">Represents an interface that can be implemented by classes providing streams.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0037f-102">Ao gravar uma mensagem de saída que contém um corpo de streaming em um gravador XML, o <xref:System.ServiceModel.Channels.Message> usará uma sequência de chamadas semelhantes ao seguinte no seu <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementação:</span><span class="sxs-lookup"><span data-stu-id="0037f-102">When writing an outgoing message containing a streamed body to an XML writer, the <xref:System.ServiceModel.Channels.Message> will use a sequence of calls similar to the following in its <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementation:</span></span>  
  
-   <span data-ttu-id="0037f-103">Grave as informações necessárias que precede o fluxo (por exemplo, a marca de abertura XML).</span><span class="sxs-lookup"><span data-stu-id="0037f-103">Write any necessary information preceding the stream (For example, the opening XML tag).</span></span>  
  
-   <span data-ttu-id="0037f-104">Gravar o fluxo.</span><span class="sxs-lookup"><span data-stu-id="0037f-104">Write the stream.</span></span>  
  
-   <span data-ttu-id="0037f-105">Grave todas as informações a seguir o fluxo (por exemplo, o marcação XML de fechamento).</span><span class="sxs-lookup"><span data-stu-id="0037f-105">Write any information following the stream (For example, the closing XML tag).</span></span>  
  
 <span data-ttu-id="0037f-106">Isso funciona bem com codificações que são semelhantes a codificação XML textual.</span><span class="sxs-lookup"><span data-stu-id="0037f-106">This works well with encodings that are similar to the textual XML encoding.</span></span> <span data-ttu-id="0037f-107">No entanto, há algumas codificações que não coloque informações de infoset XML (por exemplo, tags para iniciar e terminar a elementos XML) junto com os dados contidos em elementos.</span><span class="sxs-lookup"><span data-stu-id="0037f-107">However, there are some encodings that do not place XML infoset information (For example, tags for starting and ending XML elements) together with the data contained within elements.</span></span> <span data-ttu-id="0037f-108">Por exemplo, na codificação de MTOM, a mensagem é dividida em várias partes.</span><span class="sxs-lookup"><span data-stu-id="0037f-108">For example, in the MTOM encoding, the message is split into multiple parts.</span></span> <span data-ttu-id="0037f-109">Uma parte contém o infoset XML, que pode conter referências a outras partes de conteúdo do elemento real.</span><span class="sxs-lookup"><span data-stu-id="0037f-109">One part contains the XML infoset, which may contain references to other parts for actual element contents.</span></span> <span data-ttu-id="0037f-110">Uma vez que o XML infoset normalmente será pequeno em comparação com o conteúdo em fluxo, faz sentido armazenar em buffer o infoset, grave-out e, em seguida, gravar o conteúdo de uma forma em fluxo.</span><span class="sxs-lookup"><span data-stu-id="0037f-110">Since the XML infoset will normally be small compared to the streamed contents, it makes sense to buffer the infoset, write it out, and then write the contents in a streamed way.</span></span> <span data-ttu-id="0037f-111">Isso significa que, no momento o fechamento marca de elemento é escrita, podemos não deve ter escrito o fluxo de saída ainda.</span><span class="sxs-lookup"><span data-stu-id="0037f-111">This means that by the time the closing element tag is written, we should not have written out the stream yet.</span></span>  
  
 <span data-ttu-id="0037f-112">Para essa finalidade, o <xref:System.Xml.IStreamProvider> interface é usada.</span><span class="sxs-lookup"><span data-stu-id="0037f-112">For this purpose, the <xref:System.Xml.IStreamProvider> interface is used.</span></span> <span data-ttu-id="0037f-113">A interface tem um <xref:System.Xml.IStreamProvider.GetStream> método que retorna o fluxo a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="0037f-113">The interface has a <xref:System.Xml.IStreamProvider.GetStream> method that returns the stream to be written.</span></span> <span data-ttu-id="0037f-114">A maneira correta de escrever um corpo de mensagem transmitidos em <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> é da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="0037f-114">The correct way to write out a streamed message body in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> is as follows:</span></span>  
  
-   <span data-ttu-id="0037f-115">Gravar as informações necessárias que precede o fluxo (por exemplo, a marca de abertura XML)</span><span class="sxs-lookup"><span data-stu-id="0037f-115">Write any necessary information preceding the stream (For example, the opening XML tag)</span></span>  
  
-   <span data-ttu-id="0037f-116">Chame o `WriteValue` sobrecarregar do <xref:System.Xml.XmlDictionaryWriter> que usa um <xref:System.Xml.IStreamProvider>, com um `IStreamProvider` implementação que retorna o fluxo a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="0037f-116">Call the `WriteValue` overload on the <xref:System.Xml.XmlDictionaryWriter> that takes an <xref:System.Xml.IStreamProvider>, with an `IStreamProvider` implementation that returns the stream to be written.</span></span>  
  
-   <span data-ttu-id="0037f-117">Gravar todas as informações a seguir o fluxo (por exemplo, a marca de fechamento XML)</span><span class="sxs-lookup"><span data-stu-id="0037f-117">Write any information following the stream (For example, the closing XML tag)</span></span>  
  
 <span data-ttu-id="0037f-118">Com essa abordagem, o gravador de XML tem uma opção de quando chamar <xref:System.Xml.IStreamProvider.GetStream> e gravar os dados transmitidos.</span><span class="sxs-lookup"><span data-stu-id="0037f-118">With this approach, the XML writer has a choice of when to call <xref:System.Xml.IStreamProvider.GetStream> and write out the streamed data.</span></span> <span data-ttu-id="0037f-119">Por exemplo, os gravadores XML textuais e binários serão chamá-lo imediatamente e gravar o conteúdo transmitido entre as marcas de início e término.</span><span class="sxs-lookup"><span data-stu-id="0037f-119">For example, the textual and binary XML writers will call it immediately and write out the streamed contents in between the start and end tags.</span></span> <span data-ttu-id="0037f-120">O gravador MTOM pode optar por chamar <xref:System.Xml.IStreamProvider.GetStream> posteriormente, quando ele está pronto para gravar a parte apropriada da mensagem.</span><span class="sxs-lookup"><span data-stu-id="0037f-120">The MTOM writer may decide to call <xref:System.Xml.IStreamProvider.GetStream> later, when it is ready to write the appropriate part of the message.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="abstract member GetStream : unit -&gt; System.IO.Stream" Usage="iStreamProvider.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0037f-121">Obtém um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0037f-121">Gets a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0037f-122">Um objeto <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0037f-122">A <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0037f-123">Esse método pode ser usado para retornar o fluxo a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="0037f-123">This method can be used to return the stream to be written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStream : System.IO.Stream -&gt; unit" Usage="iStreamProvider.ReleaseStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0037f-124">O fluxo que está sendo liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0037f-124">The stream being released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0037f-125">Libera um fluxo para a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0037f-125">Releases a stream to output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>