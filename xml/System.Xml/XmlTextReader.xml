<Type Name="XmlTextReader" FullName="System.Xml.XmlTextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5cb88eb979766bf7bddf81d0b3c1e58bf53f76d8" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52602328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlTextReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b9423-101">Representa um leitor que fornece acesso rápido não armazenado em cache e somente de encaminhamento aos dados XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9423-101">Represents a reader that provides fast, non-cached, forward-only access to XML data.</span>
      </span>
      <span data-ttu-id="b9423-102">A partir do .NET Framework 2.0, recomendamos o uso da classe <see cref="T:System.Xml.XmlReader" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9423-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlReader" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-103">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-103">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-104"><xref:System.Xml.XmlTextReader> fornece acesso de somente avanço, somente leitura a um fluxo de dados XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-104"><xref:System.Xml.XmlTextReader> provides forward-only, read-only access to a stream of XML data.</span></span> <span data-ttu-id="b9423-105">O nó atual refere-se ao nó em que o leitor está localizado.</span><span class="sxs-lookup"><span data-stu-id="b9423-105">The current node refers to the node on which the reader is positioned.</span></span> <span data-ttu-id="b9423-106">O leitor é avançado usando qualquer um dos métodos de leitura e propriedades refletem o valor do nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-106">The reader is advanced using any of the read methods and properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="b9423-107">Essa classe implementa <xref:System.Xml.XmlReader> e está em conformidade com o W3C Extensible Markup Language (XML) 1.0 e os Namespaces em recomendações XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-107">This class implements <xref:System.Xml.XmlReader> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span> <span data-ttu-id="b9423-108">`XmlTextReader` fornece a seguinte funcionalidade:</span><span class="sxs-lookup"><span data-stu-id="b9423-108">`XmlTextReader` provides the following functionality:</span></span>  
  
-   <span data-ttu-id="b9423-109">Impõe as regras de XML bem formado.</span><span class="sxs-lookup"><span data-stu-id="b9423-109">Enforces the rules of well-formed XML.</span></span>  
  
-   <span data-ttu-id="b9423-110">`XmlTextReader` não fornece validação de dados.</span><span class="sxs-lookup"><span data-stu-id="b9423-110">`XmlTextReader` does not provide data validation.</span></span>  
  
-   <span data-ttu-id="b9423-111">Verifica se `DocumentType` nós estão bem formados.</span><span class="sxs-lookup"><span data-stu-id="b9423-111">Checks that `DocumentType` nodes are well-formed.</span></span> <span data-ttu-id="b9423-112">`XmlTextReader` verifica o DTD está bem formado, mas não é validado usando o DTD.</span><span class="sxs-lookup"><span data-stu-id="b9423-112">`XmlTextReader` checks the DTD for well-formedness, but does not validate using the DTD.</span></span>  
  
-   <span data-ttu-id="b9423-113">Para nós em que <xref:System.Xml.XmlTextReader.NodeType%2A> é `XmlNodeType.EntityReference`, um único vazio `EntityReference` nó será retornado (ou seja, o <xref:System.Xml.XmlTextReader.Value%2A> é de propriedade `String.Empty`).</span><span class="sxs-lookup"><span data-stu-id="b9423-113">For nodes where <xref:System.Xml.XmlTextReader.NodeType%2A> is `XmlNodeType.EntityReference`, a single empty `EntityReference` node is returned (that is, the <xref:System.Xml.XmlTextReader.Value%2A> property is `String.Empty`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-114">As declarações reais de entidades no DTD são chamadas `Entity` nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-114">The actual declarations of entities in the DTD are called `Entity` nodes.</span></span> <span data-ttu-id="b9423-115">Quando você se referir a esses nós em seus dados, eles são chamados `EntityReference` nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-115">When you refer to these nodes in your data, they are called `EntityReference` nodes.</span></span>  
  
-   <span data-ttu-id="b9423-116">Expanda os atributos padrão.</span><span class="sxs-lookup"><span data-stu-id="b9423-116">Does not expand default attributes.</span></span>  
  
 <span data-ttu-id="b9423-117">Porque o `XmlTextReader` não executa as verificações adicionais necessárias para a validação de dados, ele fornece um analisador rápido de boa formação.</span><span class="sxs-lookup"><span data-stu-id="b9423-117">Because the `XmlTextReader` does not perform the extra checks required for data validation, it provides a fast well-formedness parser.</span></span>  
  
 <span data-ttu-id="b9423-118">Para executar a validação de dados, use uma validação <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="b9423-118">To perform data validation, use a validating <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="b9423-119">Para ler dados XML de um <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.</span><span class="sxs-lookup"><span data-stu-id="b9423-119">To read XML data from an <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.</span></span>  
  
 <span data-ttu-id="b9423-120">`XmlTextReader` gera um <xref:System.Xml.XmlException> erros de análise XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-120">`XmlTextReader` throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="b9423-121">Depois que uma exceção é lançada o estado do leitor não é previsível.</span><span class="sxs-lookup"><span data-stu-id="b9423-121">After an exception is thrown the state of the reader is not predictable.</span></span> <span data-ttu-id="b9423-122">Por exemplo, o tipo de nó relatadas pode ser diferente do tipo de nó reais do nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-122">For example, the reported node type may be different than the actual node type of the current node.</span></span> <span data-ttu-id="b9423-123">Use o <xref:System.Xml.XmlTextReader.ReadState%2A> propriedade para verificar se um leitor está no estado de erro.</span><span class="sxs-lookup"><span data-stu-id="b9423-123">Use the <xref:System.Xml.XmlTextReader.ReadState%2A> property to check whether a reader is in error state.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="b9423-124">Considerações sobre segurança</span><span class="sxs-lookup"><span data-stu-id="b9423-124">Security Considerations</span></span>  
 <span data-ttu-id="b9423-125">Os seguintes são coisas a considerar ao usar o <xref:System.Xml.XmlTextReader> classe.</span><span class="sxs-lookup"><span data-stu-id="b9423-125">The following are things to consider when using the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
-   <span data-ttu-id="b9423-126">As exceções lançadas a <xref:System.Xml.XmlTextReader> pode divulgar informações de caminho que você deseja não transferidos até o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b9423-126">Exceptions thrown the <xref:System.Xml.XmlTextReader> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="b9423-127">Os aplicativos devem capturar exceções e processar-las apropriadamente.</span><span class="sxs-lookup"><span data-stu-id="b9423-127">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="b9423-128">O processamento de DTD é ativado por padrão.</span><span class="sxs-lookup"><span data-stu-id="b9423-128">DTD processing is enabled by default.</span></span> <span data-ttu-id="b9423-129">Desabilite o processamento de DTD se você estiver preocupado sobre problemas de negação de serviço ou se você estiver lidando com fontes não confiáveis.</span><span class="sxs-lookup"><span data-stu-id="b9423-129">Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources.</span></span> <span data-ttu-id="b9423-130">Defina as <xref:System.Xml.XmlTextReader.DtdProcessing%2A> propriedade para <xref:System.Xml.DtdProcessing.Prohibit> para desabilitar o processamento de DTD.</span><span class="sxs-lookup"><span data-stu-id="b9423-130">Set the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property to <xref:System.Xml.DtdProcessing.Prohibit> to disable DTD processing.</span></span>  
  
     <span data-ttu-id="b9423-131">Se você tiver o processamento de DTD ativado, você pode usar <xref:System.Xml.XmlSecureResolver> para restringir os recursos que <xref:System.Xml.XmlTextReader> pode acessar.</span><span class="sxs-lookup"><span data-stu-id="b9423-131">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="b9423-132">Você também pode criar seu aplicativo para que processar XML é memória e hora restritos.</span><span class="sxs-lookup"><span data-stu-id="b9423-132">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="b9423-133">Por exemplo, configurar limites de tempo limite no seu aplicativo ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="b9423-133">For example, configure time-out limits in your ASP.NET application.</span></span>  
  
-   <span data-ttu-id="b9423-134">Dados XML podem incluir referências a recursos externos, como um arquivo DTD.</span><span class="sxs-lookup"><span data-stu-id="b9423-134">XML data can include references to external resources such as a DTD file.</span></span> <span data-ttu-id="b9423-135">Os recursos externos são determinados por padrão usando um objeto de <xref:System.Xml.XmlUrlResolver> sem credenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="b9423-135">By default external resources are resolved using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="b9423-136">Você pode proteger este adicional seguindo um destes procedimentos:</span><span class="sxs-lookup"><span data-stu-id="b9423-136">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="b9423-137">Restringir os recursos que <xref:System.Xml.XmlTextReader> pode acessar definindo a propriedade de <xref:System.Xml.XmlTextReader.XmlResolver%2A> a um objeto de <xref:System.Xml.XmlSecureResolver> .</span><span class="sxs-lookup"><span data-stu-id="b9423-137">Restrict the resources that the <xref:System.Xml.XmlTextReader> can access by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="b9423-138">Não permita que <xref:System.Xml.XmlReader> abra os recursos externos definindo a propriedade de <xref:System.Xml.XmlTextReader.XmlResolver%2A> a `null`.</span><span class="sxs-lookup"><span data-stu-id="b9423-138">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to `null`.</span></span>  
  
-   <span data-ttu-id="b9423-139">Os dados XML podem conter um grande número de declarações de atributos, namespace, elementos aninhados e assim por diante que exigem um montante considerável de tempo de processamento.</span><span class="sxs-lookup"><span data-stu-id="b9423-139">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="b9423-140">Para limitar o tamanho da entrada que é enviado para o <xref:System.Xml.XmlTextReader>, crie uma implementação IStream personalizada e fornecê-lo a <xref:System.Xml.XmlTextReader>.</span><span class="sxs-lookup"><span data-stu-id="b9423-140">To limit the size of the input that is sent to the <xref:System.Xml.XmlTextReader>, create a custom IStream implementation and supply it the <xref:System.Xml.XmlTextReader>.</span></span>  
  
-   <span data-ttu-id="b9423-141">O <xref:System.Xml.XmlReader.ReadValueChunk%2A> método pode ser usado para lidar com grandes fluxos de dados.</span><span class="sxs-lookup"><span data-stu-id="b9423-141">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="b9423-142">Este método lê um pequeno número de caracteres de cada vez em vez de atribuir uma única cadeia de caracteres para o valor inteiro.</span><span class="sxs-lookup"><span data-stu-id="b9423-142">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="b9423-143">As entidades gerais não são expandidos por padrão.</span><span class="sxs-lookup"><span data-stu-id="b9423-143">By default general entities are not expanded.</span></span> <span data-ttu-id="b9423-144">As entidades gerais são expandidas quando você chama o método de <xref:System.Xml.XmlTextReader.ResolveEntity%2A> .</span><span class="sxs-lookup"><span data-stu-id="b9423-144">General entities are expanded when you call the <xref:System.Xml.XmlTextReader.ResolveEntity%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="b9423-145">Essa classe tem uma exigência de herança.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b9423-145">This class has an inheritance demand.</span>
        </span>
        <span data-ttu-id="b9423-146">Confiança total é necessária para herdar de <see langword="XmlTextReader" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b9423-146">Full trust is required to inherit from <see langword="XmlTextReader" />.</span>
        </span>
      </para>
    </block>
    <related type="Article" href="~/docs/standard/data/xml/index.md">
      <span data-ttu-id="b9423-147">Documentos e dados XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9423-147">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-148">Inicializa uma nova instância do <see cref="T:System.Xml.XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-148">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-149">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-149">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-150">Inicializa uma nova instância do <see langword="XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-150">Initializes a new instance of the <see langword="XmlTextReader" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="b9423-151">O fluxo que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-151">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-152">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-152">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-153">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-153">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-154">O <xref:System.Xml.XmlTextReader> decodifica o fluxo usando <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9423-154">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-155">
            <paramref name="input" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-155">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader input" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="b9423-156">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-156">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-157">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.IO.TextReader" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-157">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-158">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-158">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-159">Supõe-se que `TextReader` já esteja definido como a codificação correta.</span><span class="sxs-lookup"><span data-stu-id="b9423-159">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="b9423-160">Isso é usado por clientes que já leu algumas coisas do fluxo em um cenário MIME de várias parte.</span><span class="sxs-lookup"><span data-stu-id="b9423-160">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-161">O exemplo a seguir carrega uma cadeia de caracteres XML para o `XmlTextReader` do objeto usando o <xref:System.IO.StringReader> classe.</span><span class="sxs-lookup"><span data-stu-id="b9423-161">The following example loads an XML string into the `XmlTextReader` object using the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[XmlTextReader.cctor1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.cctor1/CPP/rdrcctor1.cpp#1)]
 [!code-csharp[XmlTextReader.cctor1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.cctor1/CS/rdrcctor1.cs#1)]
 [!code-vb[XmlTextReader.cctor1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.cctor1/VB/rdrcctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-162">A URL do arquivo que contém os dados XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-162">The URL for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="b9423-163">O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-163">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-164">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-164">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-165">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-165">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-166">Se o arquivo está localizado em um recurso que exige credenciais de acesso, use o <xref:System.Xml.XmlTextReader.XmlResolver%2A> propriedade para especificar as credenciais necessárias.</span><span class="sxs-lookup"><span data-stu-id="b9423-166">If the file is located on a resource that requires access credentials, use the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to specify the necessary credentials.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-167">Na versão 1.1 do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], parcialmente confiável código não é possível definir o `XmlResolver` propriedade.</span><span class="sxs-lookup"><span data-stu-id="b9423-167">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], partially trusted code cannot set the `XmlResolver` property.</span></span> <span data-ttu-id="b9423-168">A solução alternativa é criar uma <xref:System.Xml.XmlUrlResolver> com as credenciais necessárias, passe o URI para o <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> método e, em seguida, construir a `XmlTextReader` usando resultante <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="b9423-168">The workaround is to create an <xref:System.Xml.XmlUrlResolver> with the necessary credentials, pass the URI to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> method, and then construct the `XmlTextReader` using the resulting <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="b9423-169">A solução alternativa é descrita o código c# a seguir.</span><span class="sxs-lookup"><span data-stu-id="b9423-169">The workaround is described in the following C# code.</span></span>  
  
```csharp  
// Create a resolver with the necessary credentials.  
XmlUrlResolver resolver = new XmlUrlResolver();  
NetworkCredential nc = new NetworkCredential(SecurelyStoredUserName, SecurelyStoredPassword, SecurelyStoredDomain);  
resolver.Credentials = nc;   
// Get a Stream object containing the XML file.  
Uri myUri = new Uri ("http://myServer/data/books.xml");  
Stream s=(Stream)resolver.GetEntity(myUri, null, typeof(Stream));  
// Construct a reader using the Stream object.  
XmlTextReader reader = new XmlTextReader(s);  
```  
  
   
  
## Examples  
 <span data-ttu-id="b9423-170">O exemplo a seguir lê um arquivo XML e exibe cada um de nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-170">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-171">O exemplo usa o arquivo `items.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-171">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="b9423-172">Não foi possível localizar o arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-172">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="b9423-173">Não foi possível encontrar parte do nome do arquivo ou diretório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-173">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-174">
            <paramref name="url" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-174">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="b9423-175">Não foi possível resolver o nome do arquivo remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-175">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="b9423-176">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-176">-or-</span>
          </span>
          <span data-ttu-id="b9423-177">Ocorreu um erro ao processar a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-177">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="b9423-178">
            <paramref name="url" /> não é um URI válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-178">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextReader.XmlResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlTextReader (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlTextReader(System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader nt" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="b9423-179">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-179">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-180">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.Xml.XmlNameTable" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-180">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-181">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-181">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="b9423-182">O fluxo que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-182">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="b9423-183">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-183">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-184">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado e <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-184">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-185">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-185">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-186">O <xref:System.Xml.XmlTextReader> decodifica o fluxo usando <xref:System.Text.Encoding?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9423-186">The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b9423-187">Se você especificar uma tabela de nome, esse construtor usa os nomes que já definidos nessa tabela.</span><span class="sxs-lookup"><span data-stu-id="b9423-187">If you specify a name table, this constructor uses the names defined already in that table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b9423-188">O valor <paramref name="input" /> ou <paramref name="nt" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-188">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="b9423-189">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-189">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="b9423-190">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-190">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-191">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Xml.XmlNameTable" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-191">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-192">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-192">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-193">Supõe-se que `TextReader` já esteja definido como a codificação correta.</span><span class="sxs-lookup"><span data-stu-id="b9423-193">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="b9423-194">Isso é usado por clientes que já leu algumas coisas do fluxo em um cenário MIME de várias parte.</span><span class="sxs-lookup"><span data-stu-id="b9423-194">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b9423-195">O valor <paramref name="nt" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-195">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-196">A URL a ser usada para resolver recursos externos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-196">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="b9423-197">O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-197">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="b9423-198">O fluxo que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-198">The stream containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-199">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL e o fluxo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-199">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-200">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-200">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-201">
            <paramref name="input" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-201">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-202">A URL a ser usada para resolver recursos externos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-202">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="b9423-203">O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-203">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="b9423-204">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-204">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-205">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL especificada e <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-205">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-206">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-206">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-207">Supõe-se que `TextReader` já esteja definido como a codificação correta.</span><span class="sxs-lookup"><span data-stu-id="b9423-207">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="b9423-208">Isso é usado por clientes que já leu algumas coisas do fluxo em um cenário MIME de várias parte.</span><span class="sxs-lookup"><span data-stu-id="b9423-208">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-209">A URL do arquivo que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-209">The URL for the file containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="b9423-210">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-210">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-211">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o arquivo especificado e <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-211">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-212">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-212">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b9423-213">O valor <paramref name="nt" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-213">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="b9423-214">Não foi possível localizar o arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-214">The specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="b9423-215">Não foi possível encontrar parte do nome do arquivo ou diretório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-215">Part of the filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-216">
            <paramref name="url" /> é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-216">
              <paramref name="url" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="b9423-217">Não foi possível resolver o nome do arquivo remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-217">The remote filename cannot be resolved.</span>
          </span>
          <span data-ttu-id="b9423-218">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-218">-or-</span>
          </span>
          <span data-ttu-id="b9423-219">Ocorreu um erro ao processar a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-219">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="b9423-220">
            <paramref name="url" /> não é um URI válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-220">
              <paramref name="url" /> is not a valid URI.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="b9423-221">O fluxo que contém o fragmento XML a ser analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-221">The stream containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="b9423-222">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-222">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="b9423-223">Ele também determina o que o fragmento pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-223">This also determines what the fragment can contain.</span>
          </span>
          <span data-ttu-id="b9423-224">(Consulte a tabela abaixo.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-224">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b9423-225">O <see cref="T:System.Xml.XmlParserContext" /> no qual o <paramref name="xmlFragment" /> deve ser analisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-225">The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed.</span>
          </span>
          <span data-ttu-id="b9423-226">Isso inclui o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, codificação, o escopo de namespace, o <c>xml:lang</c> atual e o escopo <c>xml:space</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-226">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-227">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com o fluxo especificado, <see cref="T:System.Xml.XmlNodeType" /> e <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-227">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified stream, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-228">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-228">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-229">Este construtor analisa a cadeia de caracteres fornecida como um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-229">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="b9423-230">Se o fragmento XML é um elemento ou atributo, você pode ignorar as regras de nível raiz para documentos XML bem formados.</span><span class="sxs-lookup"><span data-stu-id="b9423-230">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span>  
  
 <span data-ttu-id="b9423-231">A tabela a seguir lista os valores válidos para `fragType`.</span><span class="sxs-lookup"><span data-stu-id="b9423-231">The following table lists valid values for `fragType`.</span></span>  
  
|<span data-ttu-id="b9423-232">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="b9423-232">XmlNodeType</span></span>|<span data-ttu-id="b9423-233">Fragmento pode conter</span><span class="sxs-lookup"><span data-stu-id="b9423-233">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|`Element`|<span data-ttu-id="b9423-234">Qualquer conteúdo de elemento válido (por exemplo, qualquer combinação de elementos, comentários, instruções de processamento, seções CDATA, texto e as referências de entidade).</span><span class="sxs-lookup"><span data-stu-id="b9423-234">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="b9423-235">Uma declaração XML também pode ser fornecida.</span><span class="sxs-lookup"><span data-stu-id="b9423-235">An XML declaration can also be supplied.</span></span> <span data-ttu-id="b9423-236">Isso permite que você especifique a codificação para o fragmento XML, em vez de precisar defini-lo sobre a <xref:System.Xml.XmlParserContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="b9423-236">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|`Attribute`|<span data-ttu-id="b9423-237">O valor de um atributo (a parte dentro de aspas).</span><span class="sxs-lookup"><span data-stu-id="b9423-237">The value of an attribute (the part inside the quotes).</span></span>|  
|`Document`|<span data-ttu-id="b9423-238">O conteúdo de um documento inteiro XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-238">The contents of an entire XML document.</span></span> <span data-ttu-id="b9423-239">Isso impõe regras de nível de documento.</span><span class="sxs-lookup"><span data-stu-id="b9423-239">This enforces document level rules.</span></span>|  
  
 <span data-ttu-id="b9423-240">O leitor usa o seguinte para determinar a codificação do fluxo.</span><span class="sxs-lookup"><span data-stu-id="b9423-240">The reader uses the following to determine the encoding of the stream.</span></span>  
  
1.  <span data-ttu-id="b9423-241">Verifica o <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> propriedade para determinar a codificação.</span><span class="sxs-lookup"><span data-stu-id="b9423-241">Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span>  
  
2.  <span data-ttu-id="b9423-242">Se o `Encoding` é de propriedade `null`, o leitor procura por uma marca de ordem de byte no início do fluxo.</span><span class="sxs-lookup"><span data-stu-id="b9423-242">If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.</span></span>  
  
3.  <span data-ttu-id="b9423-243">Se o `Encoding` é de propriedade `null`e nenhuma marca de ordem de byte for encontrada, o leitor pressupõe que o fluxo é codificado em UTF-8.</span><span class="sxs-lookup"><span data-stu-id="b9423-243">If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-244">
            <paramref name="fragType" /> não é um Elemento, Atributo ou Documento <see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-244">
              <paramref name="fragType" /> is not an Element, Attribute, or Document <see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-245">
            <paramref name="xmlFragment" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-245">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.Stream input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.Stream input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As Stream, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::Stream ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.Stream * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-246">A URL a ser usada para resolver recursos externos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-246">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="b9423-247">O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-247">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="b9423-248">Se <paramref name="url" /> é <see langword="null" />, <see langword="BaseURI" /> é definido como <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-248">If <paramref name="url" /> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="b9423-249">O fluxo que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-249">The stream containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="b9423-250">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-250">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-251">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL, o fluxo e <see cref="T:System.Xml.XmlNameTable" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-251">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-252">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-252">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b9423-253">O valor <paramref name="input" /> ou <paramref name="nt" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-253">The <paramref name="input" /> or <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string url, System.IO.TextReader input, System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.IO.TextReader input, class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, input As TextReader, nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ url, System::IO::TextReader ^ input, System::Xml::XmlNameTable ^ nt);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.IO.TextReader * System.Xml.XmlNameTable -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (url, input, nt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="b9423-254">A URL a ser usada para resolver recursos externos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-254">The URL to use for resolving external resources.</span>
          </span>
          <span data-ttu-id="b9423-255">O <see cref="P:System.Xml.XmlTextReader.BaseURI" /> é definido para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-255">The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</span>
          </span>
          <span data-ttu-id="b9423-256">Se <paramref name="url" /> é <see langword="null" />, <see langword="BaseURI" /> é definido como <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-256">If <paramref name="url" /> is <see langword="null" />, <see langword="BaseURI" /> is set to <see langword="String.Empty" />.</span>
          </span>
        </param>
        <param name="input">
          <span data-ttu-id="b9423-257">O <see langword="TextReader" /> que contém os dados XML a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-257">The <see langword="TextReader" /> containing the XML data to read.</span>
          </span>
        </param>
        <param name="nt">
          <span data-ttu-id="b9423-258">O <see langword="XmlNameTable" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-258">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-259">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a URL especificada, <see cref="T:System.IO.TextReader" /> e <see cref="T:System.Xml.XmlNameTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-259">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-260">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-260">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-261">Supõe-se que `TextReader` já esteja definido como a codificação correta.</span><span class="sxs-lookup"><span data-stu-id="b9423-261">It is assumed that the `TextReader` is already set to the correct encoding.</span></span> <span data-ttu-id="b9423-262">Isso é usado por clientes que já leu algumas coisas do fluxo em um cenário MIME de várias parte.</span><span class="sxs-lookup"><span data-stu-id="b9423-262">This is used by clients that have already read some things from the stream in a multi-part MIME scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-263">O valor <paramref name="nt" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-263">The <paramref name="nt" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlTextReader" Usage="new System.Xml.XmlTextReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">
          <span data-ttu-id="b9423-264">A cadeia de caracteres que contém o fragmento XML a ser analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-264">The string containing the XML fragment to parse.</span>
          </span>
        </param>
        <param name="fragType">
          <span data-ttu-id="b9423-265">O <see cref="T:System.Xml.XmlNodeType" /> do fragmento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-265">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment.</span>
          </span>
          <span data-ttu-id="b9423-266">Ele também determina o que a cadeia de caracteres de fragmento pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-266">This also determines what the fragment string can contain.</span>
          </span>
          <span data-ttu-id="b9423-267">(Consulte a tabela abaixo.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-267">(See table below.)</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b9423-268">O <see cref="T:System.Xml.XmlParserContext" /> no qual o <paramref name="xmlFragment" /> deve ser analisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-268">The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed.</span>
          </span>
          <span data-ttu-id="b9423-269">Isso inclui o <see cref="T:System.Xml.XmlNameTable" /> a ser usado, codificação, o escopo de namespace, o <c>xml:lang</c> atual e o escopo <c>xml:space</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-269">This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-270">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlTextReader" /> com a cadeia de caracteres especificada, <see cref="T:System.Xml.XmlNodeType" /> e <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-270">Initializes a new instance of the <see cref="T:System.Xml.XmlTextReader" /> class with the specified string, <see cref="T:System.Xml.XmlNodeType" />, and <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-271">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-271">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-272">Este construtor analisa a cadeia de caracteres fornecida como um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-272">This constructor parses the given string as a fragment of XML.</span></span> <span data-ttu-id="b9423-273">Se o fragmento XML é um elemento ou atributo, você pode ignorar as regras de nível raiz para documentos XML bem formados.</span><span class="sxs-lookup"><span data-stu-id="b9423-273">If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</span></span> <span data-ttu-id="b9423-274">Esse construtor pode manipular cadeias de caracteres retornadas de <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9423-274">This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.</span></span>  
  
 <span data-ttu-id="b9423-275">A tabela a seguir lista os valores válidos para `fragType` e como o leitor analisa cada um dos tipos de nó diferente.</span><span class="sxs-lookup"><span data-stu-id="b9423-275">The following table lists valid values for `fragType` and how the reader parses each of the different node types.</span></span>  
  
|<span data-ttu-id="b9423-276">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="b9423-276">XmlNodeType</span></span>|<span data-ttu-id="b9423-277">Fragmento pode conter</span><span class="sxs-lookup"><span data-stu-id="b9423-277">Fragment May Contain</span></span>|  
|-----------------|--------------------------|  
|<span data-ttu-id="b9423-278">Elemento</span><span class="sxs-lookup"><span data-stu-id="b9423-278">Element</span></span>|<span data-ttu-id="b9423-279">Qualquer conteúdo de elemento válido (por exemplo, qualquer combinação de elementos, comentários, instruções de processamento, seções CDATA, texto e as referências de entidade).</span><span class="sxs-lookup"><span data-stu-id="b9423-279">Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).</span></span><br /><br /> <span data-ttu-id="b9423-280">Uma declaração XML também pode ser fornecida.</span><span class="sxs-lookup"><span data-stu-id="b9423-280">An XML declaration can also be supplied.</span></span> <span data-ttu-id="b9423-281">Isso permite que você especifique a codificação para o fragmento XML, em vez de precisar defini-lo sobre a <xref:System.Xml.XmlParserContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="b9423-281">This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.</span></span>|  
|<span data-ttu-id="b9423-282">Atributo</span><span class="sxs-lookup"><span data-stu-id="b9423-282">Attribute</span></span>|<span data-ttu-id="b9423-283">O valor de um atributo (a parte dentro de aspas).</span><span class="sxs-lookup"><span data-stu-id="b9423-283">The value of an attribute (the part inside the quotes).</span></span>|  
|<span data-ttu-id="b9423-284">Documento</span><span class="sxs-lookup"><span data-stu-id="b9423-284">Document</span></span>|<span data-ttu-id="b9423-285">O conteúdo de um documento inteiro XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-285">The contents of an entire XML document.</span></span> <span data-ttu-id="b9423-286">Isso impõe regras de nível de documento.</span><span class="sxs-lookup"><span data-stu-id="b9423-286">This enforces document level rules.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9423-287">O exemplo a seguir analisa um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-287">The following example parses an XML fragment.</span></span> <span data-ttu-id="b9423-288">Ele usa o `XmlParserContext` e seu <xref:System.Xml.XmlNamespaceManager> para lidar com a resolução de namespace.</span><span class="sxs-lookup"><span data-stu-id="b9423-288">It uses the `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace resolution.</span></span>  
  
 [!code-cpp[XmlTextReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Cctor/CPP/readfrag.cpp#1)]
 [!code-csharp[XmlTextReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Cctor/CS/readfrag.cs#1)]
 [!code-vb[XmlTextReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Cctor/VB/readfrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-289">
            <paramref name="fragType" /> não é um <see langword="Element" />, <see langword="Attribute" /> ou <see langword="Document" /><see langword="XmlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-289">
              <paramref name="fragType" /> is not an <see langword="Element" />, <see langword="Attribute" />, or <see langword="Document" /><see langword="XmlNodeType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-290">
            <paramref name="xmlFragment" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-290">
              <paramref name="xmlFragment" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlParserContext" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlTextReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-291">Obtém o número de atributos no nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-291">Gets the number of attributes on the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-292">O número de atributos no nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-292">The number of attributes on the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-293">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-293">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-294">Essa propriedade é relevante para `Element`, `DocumentType` e `XmlDeclaration` somente nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-294">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="b9423-295">(Outros tipos de nó não tem atributos.)</span><span class="sxs-lookup"><span data-stu-id="b9423-295">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-296">O exemplo a seguir exibe todos os atributos no nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-296">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlTextReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-297">Obtém o URI base do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-297">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-298">O URI base do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-298">The base URI of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-299">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-299">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-300">Um documento XML em rede é composto por blocos de dados agregados usando vários mecanismos de inclusão padrão W3C e, portanto, contém nós que vêm de diferentes locais.</span><span class="sxs-lookup"><span data-stu-id="b9423-300">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="b9423-301">Entidades de DTD são um exemplo disso, mas isso não é limitado para DTDs.</span><span class="sxs-lookup"><span data-stu-id="b9423-301">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="b9423-302">A base de URI informa onde vieram esses nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-302">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="b9423-303">Se não houver nenhum URI de base para os nós que estão sendo retornados (por exemplo, eles foram analisados em uma cadeia de caracteres na memória), `String.Empty` será retornado.</span><span class="sxs-lookup"><span data-stu-id="b9423-303">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-304">O exemplo a seguir exibe o URI de base para cada um de nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-304">The following example displays the base URI for each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-305">O exemplo usa o arquivo `baseuri.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-305">The example uses the file, `baseuri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlTextReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-306">Obtém um valor que indica se o <see cref="T:System.Xml.XmlTextReader" /> implementa os métodos de leitura de conteúdo binário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-306">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the binary content read methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-307">
            <see langword="true" /> Se os métodos de leitura de conteúdo binários são implementados; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-307">
              <see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-308">O <see cref="T:System.Xml.XmlTextReader" /> classe sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-308">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-309">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-309">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-310">O conteúdo binário ler métodos incluem a <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, e <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="b9423-310">The binary content read methods include the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public override bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlTextReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-311">Obtém um valor que indica se o <see cref="T:System.Xml.XmlTextReader" /> implementa o método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-311">Gets a value indicating whether the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-312">
            <see langword="true" /> Se o <see cref="T:System.Xml.XmlTextReader" /> implementa o <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> método; caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-312">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlTextReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-313">O <see cref="T:System.Xml.XmlTextReader" /> classe sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-313">The <see cref="T:System.Xml.XmlTextReader" /> class always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-314">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-314">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-315">O <xref:System.Xml.XmlTextReader> lança uma <xref:System.NotSupportedException> se o <xref:System.Xml.XmlReader.ReadValueChunk%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="b9423-315">The <xref:System.Xml.XmlTextReader> throws a <xref:System.NotSupportedException> if the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlTextReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-316">Obtém um valor que indica se este leitor pode analisar e resolver entidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-316">Gets a value indicating whether this reader can parse and resolve entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-317">
            <see langword="true" /> Se o leitor pode analisar e resolver entidades; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-317">
              <see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-318">O <see langword="XmlTextReader" /> classe sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-318">The <see langword="XmlTextReader" /> class always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-319">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-320">Essa é uma alteração no [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] de versão.</span><span class="sxs-lookup"><span data-stu-id="b9423-320">This is a change in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] release.</span></span> <span data-ttu-id="b9423-321">Nas versões anteriores, o `XmlTextReader` classe não foi possível resolver entidades e `CanResolveEntity` sempre retornado `false`.</span><span class="sxs-lookup"><span data-stu-id="b9423-321">In previous versions, the `XmlTextReader` class could not resolve entities and `CanResolveEntity` always returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-322">Altera o <see cref="P:System.Xml.XmlReader.ReadState" /> para <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-322">Changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see langword="Closed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-323">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-323">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-324">Esse método também libera os recursos mantidos durante a leitura.</span><span class="sxs-lookup"><span data-stu-id="b9423-324">This method also releases any resources held while reading.</span></span> <span data-ttu-id="b9423-325">Se este leitor foi criado usando um fluxo, esse método também chama `Close` no fluxo subjacente.</span><span class="sxs-lookup"><span data-stu-id="b9423-325">If this reader was constructed using a stream, this method also calls `Close` on the underlying stream.</span></span>  
  
 <span data-ttu-id="b9423-326">Se `Close` já foi chamado, nenhuma ação é executada.</span><span class="sxs-lookup"><span data-stu-id="b9423-326">If `Close` has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlTextReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-327">Obtém a profundidade do nó atual no documento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-327">Gets the depth of the current node in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-328">A profundidade do nó atual no documento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-328">The depth of the current node in the XML document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-329">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-329">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-330">O exemplo a seguir exibe cada nó, incluindo sua profundidade, o número de linha e a posição da linha.</span><span class="sxs-lookup"><span data-stu-id="b9423-330">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlTextReader.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-331">Obtém ou define a enumeração de <see cref="T:System.Xml.DtdProcessing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-331">Gets or sets the <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-332">A enumeração <see cref="T:System.Xml.DtdProcessing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-332">The <see cref="T:System.Xml.DtdProcessing" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9423-333">O <xref:System.Xml.DtdProcessing> enumeração contém o <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, e <xref:System.Xml.DtdProcessing.Parse> enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b9423-333">The <xref:System.Xml.DtdProcessing> enumeration contains the <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, and <xref:System.Xml.DtdProcessing.Parse> enumerators.</span></span> <span data-ttu-id="b9423-334"><xref:System.Xml.DtdProcessing.Parse> é o comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="b9423-334"><xref:System.Xml.DtdProcessing.Parse> is the default behavior.</span></span> <span data-ttu-id="b9423-335">O <xref:System.Xml.XmlTextReader.DtdProcessing%2A> propriedade substitui a `ProhibitDTD` propriedade e adiciona a capacidade de ignorar o elemento DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="b9423-335">The <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property replaces the `ProhibitDTD` property and adds the ability to ignore the DOCTYPE element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b9423-336">Se o <xref:System.Xml.XmlTextReader.DtdProcessing%2A> estiver definida como <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, o <xref:System.Xml.XmlTextReader> não relatará os DTDs.</span><span class="sxs-lookup"><span data-stu-id="b9423-336">If the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, the <xref:System.Xml.XmlTextReader> will not report the DTDs.</span></span> <span data-ttu-id="b9423-337">Isso significa que o DTD/DOCTYPE será perdido na saída.</span><span class="sxs-lookup"><span data-stu-id="b9423-337">This means that the DTD/DOCTYPE will be lost on output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlTextReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-338">Obtém a codificação do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-338">Gets the encoding of the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-339">O valor de codificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-339">The encoding value.</span>
          </span>
          <span data-ttu-id="b9423-340">Se não houver nenhum atributo de codificação e nenhuma marca de ordem de byte, o padrão será UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-340">If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-341">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-341">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-342">Porque <xref:System.Xml.XmlTextReader> usa o <xref:System.Text.Encoding?displayProperty=nameWithType> classe, `XmlTextReader` também dá suporte a todas as codificações suportadas pela classe.</span><span class="sxs-lookup"><span data-stu-id="b9423-342">Because <xref:System.Xml.XmlTextReader> uses the <xref:System.Text.Encoding?displayProperty=nameWithType> class, `XmlTextReader` also supports all encodings supported by that class.</span></span> <span data-ttu-id="b9423-343">A exceção é qualquer codificação, como UTF-7 ou EBCDIC, que mapeia o `<?xml` sequência de valores diferentes de bytes de UTF-8.</span><span class="sxs-lookup"><span data-stu-id="b9423-343">The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the `<?xml` sequence to different byte values than UTF-8.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlTextReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-344">Obtém ou define um valor que especifica como o leitor trata entidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-344">Gets or sets a value that specifies how the reader handles entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-345">Um dos valores de <see cref="T:System.Xml.EntityHandling" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-345">One of the <see cref="T:System.Xml.EntityHandling" /> values.</span>
          </span>
          <span data-ttu-id="b9423-346">Se nenhum <see langword="EntityHandling" /> for especificado, ele usará <see langword="EntityHandling.ExpandCharEntities" /> como padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-346">If no <see langword="EntityHandling" /> is specified, it defaults to <see langword="EntityHandling.ExpandCharEntities" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-347">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-347">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-348">Essa propriedade pode ser alterada no efeito imediatamente e leva após o próximo <xref:System.Xml.XmlTextReader.Read%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="b9423-348">This property can be changed on the fly and takes effect after the next <xref:System.Xml.XmlTextReader.Read%2A> call.</span></span>  
  
 <span data-ttu-id="b9423-349">Quando `EntityHandling` é definido como `ExpandCharEntities`, valores de atributo são apenas parcialmente normalizados.</span><span class="sxs-lookup"><span data-stu-id="b9423-349">When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized.</span></span> <span data-ttu-id="b9423-350">O leitor normaliza cada nó de texto individuais, independentemente do conteúdo de nós de referência de entidade adjacentes.</span><span class="sxs-lookup"><span data-stu-id="b9423-350">The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</span></span>  
  
 <span data-ttu-id="b9423-351">Para ilustrar a diferença entre a entidade de modos de tratamento de considerar o seguinte XML:</span><span class="sxs-lookup"><span data-stu-id="b9423-351">To illustrate the difference between the entity handling modes consider the following XML:</span></span>  
  
```  
<!DOCTYPE doc [<!ENTITY num "123">]>  
    <doc> &#65; &num; </doc>  
```  
  
 <span data-ttu-id="b9423-352">Quando `EntityHandling` é definido como `ExpandEntities` o nó do elemento "doc" contém um nó de texto com o texto de entidade expandido:</span><span class="sxs-lookup"><span data-stu-id="b9423-352">When `EntityHandling` is set to `ExpandEntities` the "doc" element node contains one text node with the expanded entity text:</span></span>  
  
|<span data-ttu-id="b9423-353">Profundidade</span><span class="sxs-lookup"><span data-stu-id="b9423-353">Depth</span></span>|<span data-ttu-id="b9423-354">Tipo de nó</span><span class="sxs-lookup"><span data-stu-id="b9423-354">Node type</span></span>|<span data-ttu-id="b9423-355">Nome</span><span class="sxs-lookup"><span data-stu-id="b9423-355">Name</span></span>|<span data-ttu-id="b9423-356">Valor</span><span class="sxs-lookup"><span data-stu-id="b9423-356">Value</span></span>|  
|-----------|---------------|----------|-----------|  
|<span data-ttu-id="b9423-357">1</span><span class="sxs-lookup"><span data-stu-id="b9423-357">1</span></span>|`Text`||<span data-ttu-id="b9423-358">A 123</span><span class="sxs-lookup"><span data-stu-id="b9423-358">A 123</span></span>|  
  
 <span data-ttu-id="b9423-359">Quando `EntityHandling` é definido como `ExpandCharEntites`, e <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> é definido como `Significant` ou `All`, o elemento "doc" expande a entidade de caracteres e retorna a entidade geral como um nó:</span><span class="sxs-lookup"><span data-stu-id="b9423-359">When `EntityHandling` is set to `ExpandCharEntites`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to `Significant` or `All`, the "doc" element expands the character entity and returns the general entity as a node:</span></span>  
  
|<span data-ttu-id="b9423-360">Profundidade</span><span class="sxs-lookup"><span data-stu-id="b9423-360">Depth</span></span>|<span data-ttu-id="b9423-361">Tipo de nó</span><span class="sxs-lookup"><span data-stu-id="b9423-361">Node type</span></span>|<span data-ttu-id="b9423-362">Nome</span><span class="sxs-lookup"><span data-stu-id="b9423-362">Name</span></span>|<span data-ttu-id="b9423-363">Valor</span><span class="sxs-lookup"><span data-stu-id="b9423-363">Value</span></span>|  
|-----------|---------------|----------|-----------|  
|<span data-ttu-id="b9423-364">1</span><span class="sxs-lookup"><span data-stu-id="b9423-364">1</span></span>|`Text`||<span data-ttu-id="b9423-365">Um</span><span class="sxs-lookup"><span data-stu-id="b9423-365">A</span></span>|  
|<span data-ttu-id="b9423-366">1</span><span class="sxs-lookup"><span data-stu-id="b9423-366">1</span></span>|`EntityReference`|<span data-ttu-id="b9423-367">num</span><span class="sxs-lookup"><span data-stu-id="b9423-367">num</span></span>||  
|<span data-ttu-id="b9423-368">1</span><span class="sxs-lookup"><span data-stu-id="b9423-368">1</span></span>|`SignificantWhitespace`|||  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlTextReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-369">Obtém um valor que indica se o leitor está posicionado no final do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-369">Gets a value indicating whether the reader is positioned at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-370">
            <see langword="true" /> Se o leitor estiver posicionado no final do fluxo; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-370">
              <see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-371">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-371">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-372">Obtém o valor de um atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-372">Gets the value of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-373">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-373">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlTextReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b9423-374">O índice do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-374">The index of the attribute.</span>
          </span>
          <span data-ttu-id="b9423-375">O índice é baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-375">The index is zero-based.</span>
          </span>
          <span data-ttu-id="b9423-376">(O primeiro atributo tem índice 0.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-376">(The first attribute has index 0.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-377">Obtém o valor do atributo com o índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-377">Gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-378">O valor do atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-378">The value of the specified attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-379">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-379">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-380">Esse método não move o leitor.</span><span class="sxs-lookup"><span data-stu-id="b9423-380">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-381">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-381">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlTextReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b9423-382">O nome qualificado do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-382">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-383">Obtém o valor do atributo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-383">Gets the value of the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-384">O valor do atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-384">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="b9423-385">Se o atributo não for encontrado, <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-385">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-386">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-386">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-387">Esse método não move o leitor.</span><span class="sxs-lookup"><span data-stu-id="b9423-387">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="b9423-388">Se o leitor estiver posicionado em um `DocumentType` nó, esse método pode ser usado para obter os literais PUBLIC e sistema, por exemplo, `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="b9423-388">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-389">O exemplo a seguir obtém o valor do atributo ISBN.</span><span class="sxs-lookup"><span data-stu-id="b9423-389">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-390">O exemplo usa o arquivo `attrs.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-390">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetAttribute1 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlTextReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="b9423-391">O nome local do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-391">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="b9423-392">O URI do namespace do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-392">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-393">Obtém o valor do atributo com o nome do local e o URI de namespace especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-393">Gets the value of the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-394">O valor do atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-394">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="b9423-395">Se o atributo não for encontrado, <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-395">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
          <span data-ttu-id="b9423-396">Esse método não move o leitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-396">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-397">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-397">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-398">O XML a seguir contém um atributo em um namespace específico:</span><span class="sxs-lookup"><span data-stu-id="b9423-398">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="b9423-399">Você pode pesquisar o `dt:type` de atributo usando um argumento (prefixo e o nome local) ou dois argumentos (nome local e URI de namespace):</span><span class="sxs-lookup"><span data-stu-id="b9423-399">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="b9423-400">A pesquisa a `xmlns:dt` de atributo, use um dos seguintes argumentos:</span><span class="sxs-lookup"><span data-stu-id="b9423-400">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="b9423-401">Você também pode obter essas informações usando o <xref:System.Xml.XmlTextReader.Prefix%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b9423-401">You can also get this information using the <xref:System.Xml.XmlTextReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="member this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlTextReader.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="b9423-402">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica o tipo de nós de namespace a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-402">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-403">Obtém uma coleção que contém todos os namespaces no escopo no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-403">Gets a collection that contains all namespaces currently in-scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-404">Um objeto <see cref="T:System.Collections.IDictionary" /> que contém todos os namespaces no escopo atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-404">An <see cref="T:System.Collections.IDictionary" /> object that contains all the current in-scope namespaces.</span>
          </span>
          <span data-ttu-id="b9423-405">Se o leitor não estiver posicionado em um elemento, um dicionário vazio (sem namespace) será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-405">If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-406">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-407">O dicionário consiste em uma coleção de nomes de namespace inseridos pelo prefixo.</span><span class="sxs-lookup"><span data-stu-id="b9423-407">The dictionary consists of a collection of namespace names keyed by prefix.</span></span> <span data-ttu-id="b9423-408">Ele pode ser usado para enumerar os namespaces no escopo.</span><span class="sxs-lookup"><span data-stu-id="b9423-408">It can be used to enumerate the in-scope namespaces.</span></span> <span data-ttu-id="b9423-409">O dicionário é uma cópia desconectada da lista de namespace do leitor.</span><span class="sxs-lookup"><span data-stu-id="b9423-409">The dictionary is a disconnected copy of the namespace list of the reader.</span></span> <span data-ttu-id="b9423-410">Ele permanece inalterado como a posição do leitor, a lista atual de namespace no escopo, as alterações.</span><span class="sxs-lookup"><span data-stu-id="b9423-410">It remains unchanged as the reader position, current in-scope namespace list, changes.</span></span>  
  
 <span data-ttu-id="b9423-411">A tabela a seguir descreve como o <xref:System.Xml.XmlNamespaceScope> afeta o valor de enumeração se ou não os namespaces padrão e internos são retornados pelo <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9423-411">The following table describes how the <xref:System.Xml.XmlNamespaceScope> enumeration value affects the whether or not the default and built-in namespaces are returned by <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.</span></span>  
  
|<span data-ttu-id="b9423-412">Valor de XmlNamespaceScope</span><span class="sxs-lookup"><span data-stu-id="b9423-412">XmlNamespaceScope Value</span></span>|<span data-ttu-id="b9423-413">xmlns:xml</span><span class="sxs-lookup"><span data-stu-id="b9423-413">xmlns:xml</span></span>|<span data-ttu-id="b9423-414">xmlns:xmlns</span><span class="sxs-lookup"><span data-stu-id="b9423-414">xmlns:xmlns</span></span>|<span data-ttu-id="b9423-415">xmlns=""</span><span class="sxs-lookup"><span data-stu-id="b9423-415">xmlns=""</span></span>|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|<span data-ttu-id="b9423-416">sim</span><span class="sxs-lookup"><span data-stu-id="b9423-416">yes</span></span>|<span data-ttu-id="b9423-417">no</span><span class="sxs-lookup"><span data-stu-id="b9423-417">no</span></span>|<span data-ttu-id="b9423-418">no</span><span class="sxs-lookup"><span data-stu-id="b9423-418">no</span></span>|  
|`ExcludeXml`|<span data-ttu-id="b9423-419">no</span><span class="sxs-lookup"><span data-stu-id="b9423-419">no</span></span>|<span data-ttu-id="b9423-420">no</span><span class="sxs-lookup"><span data-stu-id="b9423-420">no</span></span>|<span data-ttu-id="b9423-421">no</span><span class="sxs-lookup"><span data-stu-id="b9423-421">no</span></span>|  
|`Local`|<span data-ttu-id="b9423-422">no</span><span class="sxs-lookup"><span data-stu-id="b9423-422">no</span></span>|<span data-ttu-id="b9423-423">no</span><span class="sxs-lookup"><span data-stu-id="b9423-423">no</span></span>|<span data-ttu-id="b9423-424">sim</span><span class="sxs-lookup"><span data-stu-id="b9423-424">yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetRemainder">
      <MemberSignature Language="C#" Value="public System.IO.TextReader GetRemainder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextReader GetRemainder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.GetRemainder" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemainder () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextReader ^ GetRemainder();" />
      <MemberSignature Language="F#" Value="member this.GetRemainder : unit -&gt; System.IO.TextReader" Usage="xmlTextReader.GetRemainder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-425">Obtém o restante do XML no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-425">Gets the remainder of the buffered XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-426">Um <see cref="T:System.IO.TextReader" /> que contém o resto do XML em buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-426">A <see cref="T:System.IO.TextReader" /> containing the remainder of the buffered XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-427">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-428">Porque <xref:System.Xml.XmlTextReader> faz em um buffer `Read`, ele deve ser capaz de retornar o restante do buffer não utilizado de forma que nenhum dado seja perdido.</span><span class="sxs-lookup"><span data-stu-id="b9423-428">Because <xref:System.Xml.XmlTextReader> does a buffered `Read`, it must be able to return the remainder of the unused buffer so that no data is lost.</span></span> <span data-ttu-id="b9423-429">Isso permite que os protocolos (como MIME de várias parte) para o pacote XML no mesmo fluxo de outras coisas.</span><span class="sxs-lookup"><span data-stu-id="b9423-429">This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.</span></span>  
  
 <span data-ttu-id="b9423-430">Depois de chamar esse método, <xref:System.Xml.XmlTextReader.EOF%2A> é definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="b9423-430">After calling this method, <xref:System.Xml.XmlTextReader.EOF%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-431">O exemplo a seguir lê a primeira parte de um documento XML e, em seguida, usa `GetRemainder` para concluir a leitura do documento usando um leitor de segundo.</span><span class="sxs-lookup"><span data-stu-id="b9423-431">The following example reads the first part of an XML document and then uses `GetRemainder` to complete reading the document using a second reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-432">O exemplo usa o arquivo de entrada `tworeads.xml`.</span><span class="sxs-lookup"><span data-stu-id="b9423-432">The example uses the input file `tworeads.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.GetRemainder Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlTextReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-433">Obtém um valor que indica se a classe pode retornar informações de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-433">Gets a value indicating whether the class can return line information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-434">
            <see langword="true" /> se a classe puder retornar informações de linha; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-434">
              <see langword="true" /> if the class can return line information; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-435">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-435">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlTextReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-436">Obtém um valor que indica se o nó atual pode ter um <see cref="P:System.Xml.XmlTextReader.Value" /> diferente de <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-436">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> other than <see langword="String.Empty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-437">
            <see langword="true" /> se o nó em que o leitor está posicionado no momento puder ter um <see langword="Value" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-437">
              <see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-438">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-438">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-439">A tabela a seguir lista os tipos de nós que têm um valor a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="b9423-439">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="b9423-440">Tipo de nó</span><span class="sxs-lookup"><span data-stu-id="b9423-440">Node type</span></span>|<span data-ttu-id="b9423-441">Valor</span><span class="sxs-lookup"><span data-stu-id="b9423-441">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="b9423-442">O valor do atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-442">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="b9423-443">O conteúdo da seção CDATA.</span><span class="sxs-lookup"><span data-stu-id="b9423-443">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="b9423-444">O conteúdo do comentário.</span><span class="sxs-lookup"><span data-stu-id="b9423-444">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="b9423-445">O subconjunto interno.</span><span class="sxs-lookup"><span data-stu-id="b9423-445">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="b9423-446">Todo o conteúdo, exceto o destino.</span><span class="sxs-lookup"><span data-stu-id="b9423-446">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="b9423-447">O espaço em branco entre a marcação em um modelo de conteúdo misto.</span><span class="sxs-lookup"><span data-stu-id="b9423-447">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="b9423-448">O conteúdo do nó de texto.</span><span class="sxs-lookup"><span data-stu-id="b9423-448">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="b9423-449">Espaço em branco entre a marcação.</span><span class="sxs-lookup"><span data-stu-id="b9423-449">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="b9423-450">O conteúdo da declaração.</span><span class="sxs-lookup"><span data-stu-id="b9423-450">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9423-451">O exemplo a seguir exibe o valor para cada nó que pode ter um valor.</span><span class="sxs-lookup"><span data-stu-id="b9423-451">The following example displays the value for every node that can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-452">O exemplo usa o arquivo `book1.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-452">The example uses the file, `book1.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.HasValue Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlTextReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-453">Obtém um valor que indica se o nó atual é um atributo que foi gerado do valor padrão definido no DTD ou esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-453">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-454">Essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-454">This property always returns <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-455">(<see cref="T:System.Xml.XmlTextReader" /> não expande atributos padrão.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-455">(<see cref="T:System.Xml.XmlTextReader" /> does not expand default attributes.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-456">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-457">Essa propriedade se aplica somente a nós de atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-457">This property applies only to attribute nodes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlTextReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-458">Obtém um valor que indica se o nó atual é um elemento vazio (por exemplo, <c>&lt;MyElement/&gt;</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-458">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-459">
            <see langword="true" /> Se o nó atual é um elemento (<see cref="P:System.Xml.XmlTextReader.NodeType" /> é igual a <see langword="XmlNodeType.Element" />) que terminará com <c>/ &gt;</c>; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-459">
              <see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlTextReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-460">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-460">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-461">Essa propriedade permite determinar a diferença entre o seguinte:</span><span class="sxs-lookup"><span data-stu-id="b9423-461">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="b9423-462">`<item num="123"/>` (`IsEmptyElement` é `true`).</span><span class="sxs-lookup"><span data-stu-id="b9423-462">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="b9423-463">`<item num="123">` (`IsEmptyElement` é `false`, embora o conteúdo do elemento está vazio).</span><span class="sxs-lookup"><span data-stu-id="b9423-463">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="b9423-464">Um correspondente `EndElement` nó não é gerado para elementos vazios.</span><span class="sxs-lookup"><span data-stu-id="b9423-464">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="b9423-465">`IsEmptyElement` simplesmente informa se o elemento no documento de origem tinha uma marca de elemento final.</span><span class="sxs-lookup"><span data-stu-id="b9423-465">`IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-466">O exemplo a seguir exibe o conteúdo de texto de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-466">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-467">O exemplo usa o arquivo `elems.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-467">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlTextReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlTextReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlTextReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlTextReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-468">Obtém o número de linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-468">Gets the current line number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-469">O número de linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-469">The current line number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-470">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-470">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-471">Essa propriedade é mais comumente usada para relatar erros, mas pode ser chamada a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="b9423-471">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="b9423-472">O valor inicial para essa propriedade é `1`.</span><span class="sxs-lookup"><span data-stu-id="b9423-472">The starting value for this property is `1`.</span></span>  
  
 <span data-ttu-id="b9423-473">Combinado com <xref:System.Xml.XmlTextReader.LinePosition%2A>, um valor de `1,1` indica o início do documento.</span><span class="sxs-lookup"><span data-stu-id="b9423-473">Combined with <xref:System.Xml.XmlTextReader.LinePosition%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-474">O exemplo a seguir exibe cada nó, incluindo sua profundidade, o número de linha e a posição da linha.</span><span class="sxs-lookup"><span data-stu-id="b9423-474">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlTextReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-475">Obtém a posição da linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-475">Gets the current line position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-476">A posição da linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-476">The current line position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-477">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-478">Essa propriedade é mais comumente usada para relatar erros, mas pode ser chamada a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="b9423-478">This property is most commonly used for error reporting, but can be called at any time.</span></span> <span data-ttu-id="b9423-479">O valor da propriedade inicial é `1`.</span><span class="sxs-lookup"><span data-stu-id="b9423-479">The property's starting value is `1`.</span></span>  
  
 <span data-ttu-id="b9423-480">A posição indicada é o primeiro caractere do texto na marcação.</span><span class="sxs-lookup"><span data-stu-id="b9423-480">The position indicated is the first character of text in the markup.</span></span>  
  
```  
<root>  
abc<tag/>  
</root>  
```  
  
 <span data-ttu-id="b9423-481">Na primeira linha do texto XML anterior, uma `LinePosition` de `2` corresponde ao caractere `r`; na segunda linha, uma `LinePosition` de `5` corresponde ao caractere `t`; e na terceira linha, uma `LinePosition` dos `3` corresponde ao caractere `r`.</span><span class="sxs-lookup"><span data-stu-id="b9423-481">On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.</span></span>  
  
 <span data-ttu-id="b9423-482">Combinado com <xref:System.Xml.XmlTextReader.LineNumber%2A>, um valor de `1,1` indica o início do documento.</span><span class="sxs-lookup"><span data-stu-id="b9423-482">Combined with <xref:System.Xml.XmlTextReader.LineNumber%2A>, a value of `1,1` indicates the start of the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-483">O exemplo a seguir exibe cada nó, incluindo sua profundidade, o número de linha e a posição da linha.</span><span class="sxs-lookup"><span data-stu-id="b9423-483">The following example displays each node including its depth, line number, and line position.</span></span>  
  
 [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]
 [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]
 [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlTextReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-484">Obtém o nome local do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-484">Gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-485">O nome do nó atual com o prefixo removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-485">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="b9423-486">Por exemplo, <see langword="LocalName" /> está <see langword="book" /> para o elemento <c>&lt;BK: Book&gt;</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-486">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="b9423-487">Para tipos de nós que não têm um nome (como <see langword="Text" />, <see langword="Comment" /> e assim por diante), essa propriedade retornará <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-487">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-488">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-488">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-489">O exemplo a seguir exibe o nome local de cada nó, e, se existirem, o prefixo e URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="b9423-489">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-490">O exemplo usa o arquivo `book2.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-490">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlTextReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="b9423-491">O prefixo cujo URI de namespace você deseja resolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-491">The prefix whose namespace URI you want to resolve.</span>
          </span>
          <span data-ttu-id="b9423-492">Para corresponder ao namespace padrão, transmita uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-492">To match the default namespace, pass an empty string.</span>
          </span>
          <span data-ttu-id="b9423-493">Essa cadeia de caracteres não precisa ser atomizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-493">This string does not have to be atomized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-494">Resolve um prefixo de namespace no escopo do elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-494">Resolves a namespace prefix in the current element's scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-495">O URI de namespace para o qual o prefixo será mapeado ou <see langword="null" /> se nenhum prefixo correspondente for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-495">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-496">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-496">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-497">No XML a seguir, se o leitor estiver posicionado na `href` do atributo, o prefixo `a` é resolvida chamando `reader.LookupNamespace("a")`.</span><span class="sxs-lookup"><span data-stu-id="b9423-497">In the following XML, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="b9423-498">A cadeia de caracteres retornada é `urn:456`.</span><span class="sxs-lookup"><span data-stu-id="b9423-498">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-499">A propriedade <see cref="P:System.Xml.XmlTextReader.Namespaces" /> está definida como <see langword="true" /> e o valor <paramref name="prefix" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-499">The <see cref="P:System.Xml.XmlTextReader.Namespaces" /> property is set to <see langword="true" /> and the <paramref name="prefix" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-500">Move para o atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-500">Moves to the specified attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-501">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-501">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlTextReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b9423-502">O índice do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-502">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-503">Move para o atributo com o índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-503">Moves to the attribute with the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-504">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-504">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-505">O exemplo a seguir exibe todos os atributos no nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-505">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-506">O parâmetro <paramref name="i" /> é menor que 0 ou maior que ou igual a <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-506">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlTextReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b9423-507">O nome qualificado do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-507">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-508">Move para o atributo com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-508">Moves to the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-509">
            <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-509">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-510">Se <see langword="false" />, a posição do leitor não será alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-510">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-511">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-511">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-512">Depois de chamar `MoveToAttribute`, o <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, e <xref:System.Xml.XmlTextReader.Prefix%2A> propriedades reflete as propriedades desse atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-512">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlTextReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="b9423-513">O nome local do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-513">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="b9423-514">O URI do namespace do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-514">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-515">Move para o atributo com o nome local e o URI de namespace especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-515">Moves to the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-516">
            <see langword="true" /> se o atributo for encontrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-516">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-517">Se <see langword="false" />, a posição do leitor não será alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-517">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-518">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-518">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-519">Depois de chamar `MoveToAttribute`, o <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, e <xref:System.Xml.XmlTextReader.Prefix%2A> propriedades reflete as propriedades desse atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-519">After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlTextReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-520">Move para o elemento que contém o nó de atributo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-520">Moves to the element that contains the current attribute node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-521">
            <see langword="true" /> se o leitor estiver posicionado em um atributo (o leitor se move para o elemento que possui o atributo); <see langword="false" /> se o leitor não estiver posicionado em um atributo (a posição do leitor não é alterada).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-521">
              <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-522">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-522">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-523">Use esse método para retornar a um elemento depois de navegar por meio de seus atributos.</span><span class="sxs-lookup"><span data-stu-id="b9423-523">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="b9423-524">Esse método Move o leitor a um dos seguintes tipos de nó: `Element`, `DocumentType`, ou `XmlDeclaration`.</span><span class="sxs-lookup"><span data-stu-id="b9423-524">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-525">O exemplo a seguir exibe todos os atributos no nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-525">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-526">Move para o primeiro atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-526">Moves to the first attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-527">
            <see langword="true" /> se um atributo existir (o leitor é movido para o primeiro atributo); caso contrário, <see langword="false" /> (a posição do leitor não é alterada).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-527">
              <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-528">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-528">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-529">O exemplo a seguir obtém o valor do primeiro atributo do nó raiz.</span><span class="sxs-lookup"><span data-stu-id="b9423-529">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-530">O exemplo usa o arquivo `attrs.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-530">The example uses the file, `attrs.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.MoveToFirstAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlTextReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-531">Move para o próximo atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-531">Moves to the next attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-532">
            <see langword="true" /> se houver um atributo seguinte; <see langword="false" /> se não houver mais nenhum atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-532">
              <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-533">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-533">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-534">Se o nó atual é um nó de elemento, esse método é equivalente a <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9423-534">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="b9423-535">Se `MoveToNextAttribute` retorna `true`, o leitor se move para o próximo atributo; caso contrário, a posição do leitor não é alterada.</span><span class="sxs-lookup"><span data-stu-id="b9423-535">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-536">O exemplo a seguir exibe todos os atributos no nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-536">The following example displays all attributes on the current node.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlTextReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-537">Obtém o nome qualificado do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-537">Gets the qualified name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-538">O nome qualificado do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-538">The qualified name of the current node.</span>
          </span>
          <span data-ttu-id="b9423-539">Por exemplo, <see langword="Name" /> está <see langword="bk:book" /> para o elemento <c>&lt;BK: Book&gt;</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-539">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="b9423-540">O nome retornado depende do <see cref="P:System.Xml.XmlTextReader.NodeType" /> do nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-540">The name returned is dependent on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="b9423-541">Os seguintes tipos de nó retornam os valores listados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-541">The following node types return the listed values.</span>
          </span>
          <span data-ttu-id="b9423-542">Todos os outros tipos de nó retornam uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-542">All other node types return an empty string.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="b9423-543">Tipo de nó</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-543">Node Type</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b9423-544">Nome</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-544">Name</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see langword="Attribute" />
              </term>
              <description>
                <span data-ttu-id="b9423-545">O nome do atributo.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-545">The name of the attribute.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="DocumentType" />
              </term>
              <description>
                <span data-ttu-id="b9423-546">O nome do tipo de documento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-546">The document type name.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="Element" />
              </term>
              <description>
                <span data-ttu-id="b9423-547">O nome da marcação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-547">The tag name.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="EntityReference" />
              </term>
              <description>
                <span data-ttu-id="b9423-548">O nome da entidade referenciada.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-548">The name of the entity referenced.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="ProcessingInstruction" />
              </term>
              <description>
                <span data-ttu-id="b9423-549">O destino da instrução de processamento.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-549">The target of the processing instruction.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="XmlDeclaration" />
              </term>
              <description>
                <span data-ttu-id="b9423-550">A cadeia de caracteres literal <see langword="xml" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-550">The literal string <see langword="xml" />.</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-551">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-551">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-552">O exemplo a seguir lê um arquivo XML e exibe cada um de nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-552">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-553">O exemplo usa o arquivo `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="b9423-553">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-554">Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-554">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-555">
            <see langword="true" /> para oferecer suporte ao namespace; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-555">
              <see langword="true" /> to do namespace support; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-556">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-556">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-557">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-557">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-558">Essa propriedade determina se o leitor dá suporte a Namespaces W3C na recomendação XML localizada em www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="b9423-558">This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 <span data-ttu-id="b9423-559">O `Namespaces` propriedade não pode ser definida após a ocorrência de uma operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="b9423-559">The `Namespaces` property cannot be set after a read operation has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-560">Ocorreu a configuração dessa propriedade após uma operação de leitura (<see cref="P:System.Xml.XmlTextReader.ReadState" /> não é <see langword="ReadState.Initial" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-560">Setting this property after a read operation has occurred (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is not <see langword="ReadState.Initial" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlTextReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-561">Obtém o URI de namespace (conforme definido na especificação de Namespace do W3C) do nó no qual o leitor está posicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-561">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-562">O URI do namespace do nó atual; caso contrário, uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-562">The namespace URI of the current node; otherwise an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-563">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-563">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-564">Essa propriedade é relevante para `Element` e `Attribute` somente nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-564">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-565">O exemplo a seguir exibe o nome local de cada nó, e, se existirem, o prefixo e URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="b9423-565">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-566">O exemplo usa o arquivo `book2.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-566">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlTextReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-567">Obtém o <see cref="T:System.Xml.XmlNameTable" /> associado à essa implementação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-567">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-568">O <see langword="XmlNameTable" /> que permite obter a versão atomizada de uma cadeia de caracteres no nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-568">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-569">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-569">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-570">Todos os nomes de nó e o atributo retornado de <xref:System.Xml.XmlTextReader> são objetos usando o `NameTable`.</span><span class="sxs-lookup"><span data-stu-id="b9423-570">All node and attribute names returned from <xref:System.Xml.XmlTextReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="b9423-571">Quando o mesmo nome é retornado várias vezes (por exemplo, `Customer`), em seguida, o mesmo `String` objeto é retornado para esse nome.</span><span class="sxs-lookup"><span data-stu-id="b9423-571">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="b9423-572">Isso torna possível para você escrever código eficiente que o objeto comparações nessas cadeias de caracteres em vez de comparações de cadeia de caracteres caro.</span><span class="sxs-lookup"><span data-stu-id="b9423-572">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlTextReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-573">Obtém o tipo do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-573">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-574">Um dos valores <see cref="T:System.Xml.XmlNodeType" /> que representa o tipo do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-574">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-575">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-575">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-576">Essa propriedade nunca retorna o seguinte `XmlNodeType` tipos: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, ou `Notation`.</span><span class="sxs-lookup"><span data-stu-id="b9423-576">This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, or `Notation`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-577">O exemplo a seguir lê um arquivo XML e exibe cada um de nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-577">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-578">O exemplo usa o arquivo `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="b9423-578">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Normalization">
      <MemberSignature Language="C#" Value="public bool Normalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Normalization" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Normalization" />
      <MemberSignature Language="VB.NET" Value="Public Property Normalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Normalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Normalization : bool with get, set" Usage="System.Xml.XmlTextReader.Normalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-579">Obtém ou define um valor que indica se você deseja normalizar o espaço em branco e os valores de atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-579">Gets or sets a value indicating whether to normalize white space and attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-580">
            <see langword="true" /> para normalizar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-580">
              <see langword="true" /> to normalize; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-581">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-581">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-582">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-582">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-583">Essa propriedade pode ser alterada a qualquer momento e entra em vigor na próxima operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="b9423-583">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-584">Se o <xref:System.Xml.XmlTextReader> é usado para construir um <xref:System.Xml.XmlValidatingReader>, para normalizar os valores de atributo `Normalization` deve ser definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="b9423-584">If the <xref:System.Xml.XmlTextReader> is used to construct an <xref:System.Xml.XmlValidatingReader>, to normalize attribute values, `Normalization` must be set to `true`.</span></span>  
  
 <span data-ttu-id="b9423-585">Se `Normalization` é definido como `false`, isso também desabilita o intervalo de caracteres que verifica entidades numéricas.</span><span class="sxs-lookup"><span data-stu-id="b9423-585">If `Normalization` is set to `false`, this also disables character range checking for numeric entities.</span></span> <span data-ttu-id="b9423-586">Como resultado, entidades, de caractere, como `&#0;`, são permitidos.</span><span class="sxs-lookup"><span data-stu-id="b9423-586">As a result, character entities, such as `&#0;`, are allowed.</span></span>  
  
 <span data-ttu-id="b9423-587">O exemplo a seguir descreve a normalização de valor de atributo:</span><span class="sxs-lookup"><span data-stu-id="b9423-587">The following describes attribute value normalization:</span></span>  
  
-   <span data-ttu-id="b9423-588">Para obter uma referência de caractere, acrescentar o caractere referenciado ao valor de atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-588">For a character reference, append the referenced character to the attribute value.</span></span>  
  
-   <span data-ttu-id="b9423-589">Para obter uma referência de entidade, recursivamente processar o texto de substituição de entidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-589">For an entity reference, recursively process the replacement text of the entity.</span></span>  
  
-   <span data-ttu-id="b9423-590">Para um caractere de espaço em branco (#x20, #xD, #xA, #x9), acrescente #x20 o valor normalizado.</span><span class="sxs-lookup"><span data-stu-id="b9423-590">For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value.</span></span> <span data-ttu-id="b9423-591">(Apenas um único #x20 é acrescentado para uma sequência de "#xD #xA" que é parte de uma entidade analisada externo ou o valor de literal de entidade de uma entidade analisada interna).</span><span class="sxs-lookup"><span data-stu-id="b9423-591">(Only a single #x20 is appended for a "#xD#xA" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)</span></span>  
  
-   <span data-ttu-id="b9423-592">Processar outros caracteres acrescentar os ao valor normalizado.</span><span class="sxs-lookup"><span data-stu-id="b9423-592">Process other characters by appending them to the normalized value.</span></span>  
  
-   <span data-ttu-id="b9423-593">Se o valor não é declarado CDATA, descartar qualquer caractere de espaço (#x20) à esquerda e à direita e substituir sequências de caracteres de espaço (#x20) com um único espaço (#x20).</span><span class="sxs-lookup"><span data-stu-id="b9423-593">If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.</span></span>  
  
 <span data-ttu-id="b9423-594">O `XmlTextReader` executa apenas o atributo ou normalização CDATA.</span><span class="sxs-lookup"><span data-stu-id="b9423-594">The `XmlTextReader` only performs attribute or CDATA normalization.</span></span> <span data-ttu-id="b9423-595">Ele não normalização de DTD específica, a menos que encapsulado dentro de um `XmlValidatingReader`.</span><span class="sxs-lookup"><span data-stu-id="b9423-595">It does not do DTD-specific normalization unless wrapped within an `XmlValidatingReader`.</span></span>  
  
 <span data-ttu-id="b9423-596">Consulte a recomendação do W3C XML 1.0 para uma discussão mais detalhada na normalização.</span><span class="sxs-lookup"><span data-stu-id="b9423-596">Refer to the W3C XML 1.0 recommendation for further discussion on normalization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-597">O exemplo a seguir mostra o comportamento do leitor com normalização ativada e, em seguida, desativado.</span><span class="sxs-lookup"><span data-stu-id="b9423-597">The following example shows reader behavior with normalization turned on and then off.</span></span>  
  
 [!code-cpp[XmlTextReader.Normalization#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Normalization/CPP/readnormal.cpp#1)]
 [!code-csharp[XmlTextReader.Normalization#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Normalization/CS/readnormal.cs#1)]
 [!code-vb[XmlTextReader.Normalization#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Normalization/VB/readnormal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-598">Definir essa propriedade quando o leitor é fechado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> é <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-598">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlTextReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-599">Obtém o prefixo de namespace associado ao nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-599">Gets the namespace prefix associated with the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-600">O prefixo de namespace associado com o nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-600">The namespace prefix associated with the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-601">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-601">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-602">O exemplo a seguir exibe o nome local de cada nó, e, se existirem, o prefixo e URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="b9423-602">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-603">O exemplo usa o arquivo `book2.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-603">The example uses the file, `book2.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlTextReader.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Use DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-604">Obtém ou define um valor que indica se o processamento do DTD deve ser permitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-604">Gets or sets a value indicating whether to allow DTD processing.</span>
          </span>
          <span data-ttu-id="b9423-605">Esta propriedade está obsoleta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-605">This property is obsolete.</span>
          </span>
          <span data-ttu-id="b9423-606">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> em seu lugar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-606">Use <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> instead.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-607">
            <see langword="true" /> para não permitir o processamento de DTD; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-607">
              <see langword="true" /> to disallow DTD processing; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b9423-608">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-608">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-609">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-609">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-610">Processamento de DTD com versões anteriores é habilitado por padrão para compatibilidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-610">DTD processing is enabled by default for backwards compatibility.</span></span> <span data-ttu-id="b9423-611">No entanto, a menos que seu aplicativo requer processamento de DTD, você deve desabilitar essa configuração.</span><span class="sxs-lookup"><span data-stu-id="b9423-611">However, unless your application requires DTD processing, you should disable this setting.</span></span> <span data-ttu-id="b9423-612">Desabilitando o DTD processamento pode ser útil para evitar determinados ataques de negação de serviço.</span><span class="sxs-lookup"><span data-stu-id="b9423-612">Disabling DTD processing can be useful in preventing certain denial of service attacks.</span></span> <span data-ttu-id="b9423-613">Se definido como `true`, o leitor lança um <xref:System.Xml.XmlException> quando qualquer conteúdo DTD for encontrado.</span><span class="sxs-lookup"><span data-stu-id="b9423-613">If set to `true`, the reader throws an <xref:System.Xml.XmlException> when any DTD content is encountered.</span></span>  
  
 <span data-ttu-id="b9423-614">Se você tiver habilitado o processamento de DTD, você precisa estar atento incluindo DTDs de fontes não confiáveis e de possíveis ataques de negação de serviço.</span><span class="sxs-lookup"><span data-stu-id="b9423-614">If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks.</span></span> <span data-ttu-id="b9423-615">Use o <xref:System.Xml.XmlSecureResolver> para restringir os recursos que o <xref:System.Xml.XmlTextReader> pode acessar.</span><span class="sxs-lookup"><span data-stu-id="b9423-615">Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access.</span></span> <span data-ttu-id="b9423-616">Você também pode criar seu aplicativo para que processar XML é memória e hora restritos.</span><span class="sxs-lookup"><span data-stu-id="b9423-616">You can also design your application so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="b9423-617">Por exemplo, configurar limites de tempo limite em seu aplicativo ASP.NET</span><span class="sxs-lookup"><span data-stu-id="b9423-617">For example, configure time-out limits in your ASP.NET application</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlTextReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-618">Obtém o caractere de aspas usado para circunscrever o valor de um nó de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-618">Gets the quotation mark character used to enclose the value of an attribute node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-619">O caractere de aspas ("ou") usado para Circunscrever o valor de um nó de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-619">The quotation mark character (" or ') used to enclose the value of an attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-620">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-620">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-621">Essa propriedade só se aplica a um nó de atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-621">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlTextReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-622">Lê o próximo nó do fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-622">Reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-623">
            <see langword="true" /> se o próximo nó for lido com êxito; <see langword="false" /> se não houver mais nenhum nó para ler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-623">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-624">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-624">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-625">Quando um leitor é primeiro criado e inicializado, nenhuma informação está disponível.</span><span class="sxs-lookup"><span data-stu-id="b9423-625">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="b9423-626">Você deve chamar `Read` para ler o primeiro nó.</span><span class="sxs-lookup"><span data-stu-id="b9423-626">You must call `Read` to read the first node.</span></span>  
  
 <span data-ttu-id="b9423-627">Esse método requer pelo menos quatro bytes do fluxo de dados para começar a analisar.</span><span class="sxs-lookup"><span data-stu-id="b9423-627">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="b9423-628">Se menos de quatro bytes são retornados e não houver mais nenhum dado no fluxo, o método falhará.</span><span class="sxs-lookup"><span data-stu-id="b9423-628">If fewer than four bytes are returned and there is no more data in the stream, the method will fail.</span></span> <span data-ttu-id="b9423-629">Se houver mais dados no fluxo, o método irá bloquear a análise até o recebimento do quarto byte.</span><span class="sxs-lookup"><span data-stu-id="b9423-629">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-630">O exemplo a seguir lê um arquivo XML e exibe cada nó.</span><span class="sxs-lookup"><span data-stu-id="b9423-630">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-631">O exemplo usa o arquivo `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="b9423-631">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-632">Erro ao analisar o XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-632">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlTextReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-633">Analisa o valor do atributo em um ou mais nós <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-633">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-634">
            <see langword="true" /> se houver nós para retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-634">
              <see langword="true" /> if there are nodes to return.</span>
          </span>
          <span data-ttu-id="b9423-635">
            <see langword="false" /> se o leitor não estiver posicionado em um nó de atributo quando a chamada inicial for feita ou se todos os valores de atributo tiverem sido lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-635">
              <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          </span>
          <span data-ttu-id="b9423-636">Um atributo vazio, como <c>misc=""</c>, retorna <see langword="true" /> com um único nó com um valor de <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-636">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-637">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-637">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-638">Use este método depois de chamar `MoveToAttribute` para ler os nós de referência de texto ou uma entidade que compõem o valor do atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-638">Use this method after calling `MoveToAttribute` to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="b9423-639">O <xref:System.Xml.XmlReader.Depth%2A> de nós de valor do atributo é um mais a profundidade do nó de atributo; ele incrementa e decrementa por um quando a etapa dentro e fora de referências a entidades geral.</span><span class="sxs-lookup"><span data-stu-id="b9423-639">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-640">O exemplo a seguir lê um atributo conosco de texto e de entidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-640">The following example reads an attribute with text and entity nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CPP/readattrval.cpp#1)]
 [!code-csharp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CS/readattrval.cs#1)]
 [!code-vb[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/VB/readattrval.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBase64">
      <MemberSignature Language="C#" Value="public int ReadBase64 (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBase64(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBase64 (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBase64(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBase64 (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b9423-641">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-641">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9423-642">O índice de base zero na matriz que especifica onde o método pode começar a gravar no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-642">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="b9423-643">O número de bytes a serem gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-643">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-644">Decodifica a Base64 e retorna os bytes binários decodificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-644">Decodes Base64 and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-645">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-645">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-646">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-646">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-647">Como <xref:System.Xml.XmlTextReader.ReadChars%2A>, esse método pode ser chamado sucessivamente para ler grandes fluxos de texto inserido.</span><span class="sxs-lookup"><span data-stu-id="b9423-647">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="b9423-648">Decodifica o conteúdo de Base64 e retorna os bytes binários decodificados (por exemplo, um embutido Base64 codificado imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-648">It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="b9423-649">Consulte a RFC 1521.</span><span class="sxs-lookup"><span data-stu-id="b9423-649">See RFC 1521.</span></span> <span data-ttu-id="b9423-650">(Você pode obter RFCs do [solicitar para o site da Web de comentários](https://www.rfc-editor.org).)</span><span class="sxs-lookup"><span data-stu-id="b9423-650">(You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-651">O exemplo a seguir lê um arquivo que contém dados Base64 e BinHex.</span><span class="sxs-lookup"><span data-stu-id="b9423-651">The following example reads a file containing Base64 and BinHex data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-652">O exemplo usa o arquivo. `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="b9423-652">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-653">A sequência Base64 não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-653">The Base64 sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-654">O valor de <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-654">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-655">
            <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-655">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadBinHex">
      <MemberSignature Language="C#" Value="public int ReadBinHex (byte[] array, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadBinHex(unsigned int8[] array, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBinHex (array As Byte(), offset As Integer, len As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadBinHex(cli::array &lt;System::Byte&gt; ^ array, int offset, int len);" />
      <MemberSignature Language="F#" Value="member this.ReadBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadBinHex (array, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b9423-656">A matriz de bytes que serve como o buffer no qual os bytes binários decodificados são gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-656">The byte array that serves as the buffer to which the decoded binary bytes are written.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="b9423-657">O índice de base zero na matriz que especifica onde o método pode começar a gravar no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-657">The zero-based index into the array specifying where the method can begin to write to the buffer.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="b9423-658">O número de bytes a serem gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-658">The number of bytes to write into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-659">Decodifica <see langword="BinHex" /> e retorna os bytes binários decodificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-659">Decodes <see langword="BinHex" /> and returns the decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-660">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-660">The number of bytes written to your buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-661">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-661">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-662">Como <xref:System.Xml.XmlTextReader.ReadChars%2A>, esse método pode ser chamado sucessivamente para ler grandes fluxos de texto inserido.</span><span class="sxs-lookup"><span data-stu-id="b9423-662">Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="b9423-663">Ele decodifica `BinHex` de conteúdo e retorna os bytes binários decodificados (por exemplo, um embutido `BinHex` codificados de imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-663">It decodes `BinHex` content and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-664">O exemplo a seguir lê um arquivo que contém `Base64` e `BinHex` dados.</span><span class="sxs-lookup"><span data-stu-id="b9423-664">The following example reads a file containing `Base64` and `BinHex` data.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-665">O exemplo usa o arquivo. `binary.xml`</span><span class="sxs-lookup"><span data-stu-id="b9423-665">The sample uses the file `binary.xml`</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-666">A sequência <see langword="BinHex" /> não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-666">The <see langword="BinHex" /> sequence is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-667">O valor de <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-667">The value of <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-668">
            <paramref name="offset" /> &lt; 0 ou <paramref name="len" /> &lt; 0 ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-668">
              <paramref name="offset" /> &lt; 0, or <paramref name="len" /> &lt; 0, or <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public int ReadChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChars (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadChars : char[] * int * int -&gt; int" Usage="xmlTextReader.ReadChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b9423-669">A matriz de caracteres que serve como o buffer no qual os conteúdos de texto são gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-669">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b9423-670">A posição em <paramref name="buffer" /> no qual o método pode iniciar a gravação do conteúdo do texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-670">The position within <paramref name="buffer" /> where the method can begin writing text contents.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b9423-671">O número de caracteres a serem gravados em <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-671">The number of characters to write into <paramref name="buffer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-672">Lê o conteúdo de texto de um elemento em um buffer de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-672">Reads the text contents of an element into a character buffer.</span>
          </span>
          <span data-ttu-id="b9423-673">Esse método é projetado para ler grandes fluxos de texto inserido chamando-o sucessivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-673">This method is designed to read large streams of embedded text by calling it successively.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-674">Número de caracteres a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-674">The number of characters read.</span>
          </span>
          <span data-ttu-id="b9423-675">Isso poderá ser <see langword="0" /> se o leitor não estiver posicionado em um elemento ou se não houver mais nenhum conteúdo de texto a ser retornado no contexto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-675">This can be <see langword="0" /> if the reader is not positioned on an element or if there is no more text content to return in the current context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-676">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-676">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-677">Essa é a maneira mais eficiente para processar grandes fluxos de texto inserido em um documento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-677">This is the most efficient way to process very large streams of text embedded in an XML document.</span></span> <span data-ttu-id="b9423-678">Em vez de alocar objetos de cadeia de caracteres grandes `ReadChars` retorna o conteúdo de texto um buffer por vez.</span><span class="sxs-lookup"><span data-stu-id="b9423-678">Rather than allocating large string objects, `ReadChars` returns text content a buffer at a time.</span></span> <span data-ttu-id="b9423-679">Esse método é projetado para trabalhar apenas em nós de elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-679">This method is designed to work only on element nodes.</span></span> <span data-ttu-id="b9423-680">Outros tipos de nó causa `ReadChars` para retornar `0`.</span><span class="sxs-lookup"><span data-stu-id="b9423-680">Other node types cause `ReadChars` to return `0`.</span></span>  
  
 <span data-ttu-id="b9423-681">No XML a seguir, se o leitor é posicionado na marca de início, `ReadChars` retorna `test` e posicionar o leitor após a marca de fim.</span><span class="sxs-lookup"><span data-stu-id="b9423-681">In the following XML, if the reader is positioned on the start tag, `ReadChars` returns `test` and positions the reader after the end tag.</span></span>  
  
```xml  
<Item>test</Item>  
```  
  
 <span data-ttu-id="b9423-682">`ReadChars` tem a seguinte funcionalidade:</span><span class="sxs-lookup"><span data-stu-id="b9423-682">`ReadChars` has the following functionality:</span></span>  
  
-   <span data-ttu-id="b9423-683">Esse método é projetado para trabalhar em nós de elemento apenas.</span><span class="sxs-lookup"><span data-stu-id="b9423-683">This method is designed to work on element nodes only.</span></span> <span data-ttu-id="b9423-684">Outros tipos de nó causa `ReadChars` retorne 0.</span><span class="sxs-lookup"><span data-stu-id="b9423-684">Other node types cause `ReadChars` to return 0.</span></span>  
  
-   <span data-ttu-id="b9423-685">Esse método retorna o conteúdo real de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b9423-685">This method returns the actual character content.</span></span> <span data-ttu-id="b9423-686">Não há nenhuma tentativa de resolver entidades, CDATA ou qualquer outra marcação encontrado.</span><span class="sxs-lookup"><span data-stu-id="b9423-686">There is no attempt to resolve entities, CDATA, or any other markup encountered.</span></span> <span data-ttu-id="b9423-687">`ReadChars` Retorna todos entre a marca de início e a marca de fim, inclusive a marcação.</span><span class="sxs-lookup"><span data-stu-id="b9423-687">`ReadChars` returns everything between the start tag and the end tag, including markup.</span></span>  
  
-   <span data-ttu-id="b9423-688">`ReadChars` ignora a marcação XML que não está bem formada.</span><span class="sxs-lookup"><span data-stu-id="b9423-688">`ReadChars` ignores XML markup that is not well-formed.</span></span> <span data-ttu-id="b9423-689">Por exemplo, ao ler a cadeia de caracteres XML seguinte `<A>1<A>2</A>`, `ReadChars` retorna `1<A>2</A>`.</span><span class="sxs-lookup"><span data-stu-id="b9423-689">For example, when reading the following XML string `<A>1<A>2</A>`, `ReadChars` returns `1<A>2</A>`.</span></span> <span data-ttu-id="b9423-690">(Ele retorna uma marcação do par de elemento correspondente e ignora outros.)</span><span class="sxs-lookup"><span data-stu-id="b9423-690">(It returns markup from the matching element pair and ignores others.)</span></span>  
  
-   <span data-ttu-id="b9423-691">Esse método não faz nenhuma normalização.</span><span class="sxs-lookup"><span data-stu-id="b9423-691">This method does not do any normalization.</span></span>  
  
-   <span data-ttu-id="b9423-692">Quando `ReadChars` alcançou o final do fluxo de caractere, ele retorna o valor 0 e o leitor é posicionado após a marca de fim.</span><span class="sxs-lookup"><span data-stu-id="b9423-692">When `ReadChars` has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.</span></span>  
  
-   <span data-ttu-id="b9423-693">Métodos não estão disponíveis durante o uso de leitura do atributo `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="b9423-693">Attribute read methods are not available while using `ReadChars`.</span></span>  
  
 <span data-ttu-id="b9423-694">Por exemplo, usando o seguinte XML:</span><span class="sxs-lookup"><span data-stu-id="b9423-694">For example, using the following XML:</span></span>  
  
```xml  
<thing>  
 some text  
</thing>  
<item>  
</item>  
```  
  
 <span data-ttu-id="b9423-695">O leitor está posicionado sobre o `<item>` elemento no final do while loop.</span><span class="sxs-lookup"><span data-stu-id="b9423-695">The reader is positioned on the `<item>` element at the end of the while loop.</span></span>  
  
```csharp  
if (XmlNodeType.Element == reader.NodeType && "thing" == reader.Name)  
{  
 while(0 != reader.ReadChars(buffer, 0, 1)  
 {  
 // Do something.  
 // Attribute values are not available at this point.  
 }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="b9423-696">O exemplo a seguir lê o XML usando `ReadChars`.</span><span class="sxs-lookup"><span data-stu-id="b9423-696">The following example reads in XML using `ReadChars`.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-697">O exemplo usa o arquivo `items.xml` como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-697">The example uses the `items.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b9423-698">
            <paramref name="count" /> é maior que o espaço especificado no <paramref name="buffer" /> (tamanho do buffer – <paramref name="index" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-698">
              <paramref name="count" /> is greater than the space specified in the <paramref name="buffer" /> (buffer size - <paramref name="index" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-699">O valor <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-699">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-700">
            <paramref name="index" />
            <see langword="&lt; 0" /> ou <paramref name="count" /><see langword="&lt; 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-700">
              <paramref name="index" />
              <see langword="&lt; 0" /> or <paramref name="count" /><see langword="&lt; 0" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b9423-701">O buffer para o qual o texto resultante será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-701">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="b9423-702">Este valor pode não ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-702">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b9423-703">O deslocamento do buffer no qual o resultado começará a ser copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-703">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b9423-704">O número máximo de bytes a serem copiados para o buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-704">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="b9423-705">O número real de bytes copiados é retornado deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-705">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-706">Lê o conteúdo e retorna os bytes binários decodificados <see langword="Base64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-706">Reads the content and returns the <see langword="Base64" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-707">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-707">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-708">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-708">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-709">Esse método transmite o conteúdo, decodifica as `Base64` de conteúdo e retorna os bytes binários decodificados (por exemplo, um embutido `Base64`-codificados de imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-709">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="b9423-710">Esse método pode ser chamado sucessivamente para ler grandes fluxos de texto inserido.</span><span class="sxs-lookup"><span data-stu-id="b9423-710">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="b9423-711">Para obter mais informações, consulte RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uma: mecanismos para especificar e que descreve o formato dos corpos de mensagens da Internet".</span><span class="sxs-lookup"><span data-stu-id="b9423-711">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="b9423-712">Você pode obter RFCs do [para o site da Web de comentários de solicitação](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="b9423-712">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-713">Você não deve acessar qualquer uma das propriedades leitor entre as chamadas para o <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> método até que o método retorna o valor 0.</span><span class="sxs-lookup"><span data-stu-id="b9423-713">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="b9423-714">Esse método tem o seguinte comportamento:</span><span class="sxs-lookup"><span data-stu-id="b9423-714">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="b9423-715"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> Retorna o valor 0 quando ele alcançou o final do fluxo de bytes que ele estava funcionando em.</span><span class="sxs-lookup"><span data-stu-id="b9423-715"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="b9423-716">O leitor está posicionado no primeiro nó não são de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="b9423-716">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="b9423-717">Se você solicitar menos ou o número exato, de bytes que são deixados no fluxo, o leitor permaneça na posição atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-717">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="b9423-718"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> Não há suporte para os seguintes tipos de nós XML: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="b9423-718"><xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-719">O valor <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-719">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-720">Não há suporte para <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-720">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported in the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-721">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-721">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b9423-722">O buffer para o qual o texto resultante será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-722">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="b9423-723">Este valor pode não ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-723">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b9423-724">O deslocamento do buffer no qual o resultado começará a ser copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-724">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b9423-725">O número máximo de bytes a serem copiados para o buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-725">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="b9423-726">O número real de bytes copiados é retornado deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-726">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-727">Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-727">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-728">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-728">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-729">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-729">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-730">Esse método transmite o conteúdo, decodifica as `BinHex` de conteúdo e retorna os bytes binários decodificados (por exemplo, um embutido `BinHex` codificados de imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-730">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="b9423-731">Esse método pode ser chamado sucessivamente para ler grandes fluxos de texto inserido.</span><span class="sxs-lookup"><span data-stu-id="b9423-731">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-732">Você não deve acessar qualquer uma das propriedades leitor entre as chamadas para o <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> método até que o método retorna o valor 0.</span><span class="sxs-lookup"><span data-stu-id="b9423-732">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="b9423-733">Esse método tem o seguinte comportamento:</span><span class="sxs-lookup"><span data-stu-id="b9423-733">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="b9423-734"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> Retorna o valor 0 quando ele alcançou o final do fluxo de bytes que ele estava funcionando em.</span><span class="sxs-lookup"><span data-stu-id="b9423-734"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="b9423-735">O leitor está posicionado no primeiro nó não são de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="b9423-735">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="b9423-736">Se você solicitar menos ou o número exato, de bytes que são deixados no fluxo, o leitor permaneça na posição atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-736">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="b9423-737"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> Não há suporte para os seguintes tipos de nós XML: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span><span class="sxs-lookup"><span data-stu-id="b9423-737"><xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-738">O valor <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-738">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-739">Não há suporte para <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-739">
              <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-740">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-740">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b9423-741">A implementação <see cref="T:System.Xml.XmlTextReader" /> não dá suporte a esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-741">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b9423-742">O buffer para o qual o texto resultante será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-742">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="b9423-743">Este valor pode não ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-743">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b9423-744">O deslocamento do buffer no qual o resultado começará a ser copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-744">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b9423-745">O número máximo de bytes a serem copiados para o buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-745">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="b9423-746">O número real de bytes copiados é retornado deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-746">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-747">Lê o elemento e decodifica o conteúdo de Base64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-747">Reads the element and decodes the Base64 content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-748">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-748">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-749">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-749">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-750">Esse método lê o conteúdo do elemento, decodifica usando a codificação Base64 e retorna os bytes binários decodificados (por exemplo, um embutido Base64 codificado imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-750">This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="b9423-751">Para obter mais informações, consulte RFC 1521, "parte MIME (Multipurpose Internet Mail Extensions) uma: mecanismos para especificar e que descreve o formato dos corpos de mensagens da Internet".</span><span class="sxs-lookup"><span data-stu-id="b9423-751">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="b9423-752">Você pode obter RFCs do [para o site da Web de comentários de solicitação](https://www.rfc-editor.org).</span><span class="sxs-lookup"><span data-stu-id="b9423-752">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="b9423-753">Esse método só pode ler os elementos de conteúdo simples.</span><span class="sxs-lookup"><span data-stu-id="b9423-753">This method can only read simple-content elements.</span></span> <span data-ttu-id="b9423-754">O elemento pode conter texto, espaço em branco, espaço em branco significativo, seções CDATA, comentários e instruções de processamento.</span><span class="sxs-lookup"><span data-stu-id="b9423-754">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="b9423-755">Ele também pode conter referências de entidade, que são automaticamente expandidas.</span><span class="sxs-lookup"><span data-stu-id="b9423-755">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="b9423-756">O elemento não pode ter elementos filho.</span><span class="sxs-lookup"><span data-stu-id="b9423-756">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="b9423-757">Esse método é muito semelhante ao <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> método, exceto que ele só pode ser chamado em tipos de nó de elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-757">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="b9423-758">Se o `count` valor é maior do que o número de bytes no documento, ou se for igual ao número de bytes no documento, o <xref:System.Xml.XmlTextReader> lê todos os bytes restantes no documento e retorna o número de bytes lidos.</span><span class="sxs-lookup"><span data-stu-id="b9423-758">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="b9423-759">A próxima <xref:System.Xml.XmlTextReader> chamada de método retorna um zero e move o leitor para o nó após o <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="b9423-759">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="b9423-760">Se você chamar <xref:System.Xml.XmlTextReader.Read%2A> antes de todo o conteúdo do elemento é consumido, o leitor pode se comportar como se o conteúdo foi consumido e, em seguida, o <xref:System.Xml.XmlTextReader.Read%2A> método foi chamado.</span><span class="sxs-lookup"><span data-stu-id="b9423-760">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="b9423-761">Isso significa que o leitor lê todo o texto até que o elemento final seja encontrado.</span><span class="sxs-lookup"><span data-stu-id="b9423-761">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="b9423-762">Em seguida, lê o nó de marca de fim, lê o próximo nó e, em seguida, se posiciona no próximo nó subsequente.</span><span class="sxs-lookup"><span data-stu-id="b9423-762">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-763">Consulte <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> para ver um exemplo que usa esse método.</span><span class="sxs-lookup"><span data-stu-id="b9423-763">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-764">O valor <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-764">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-765">O nó atual não é um nó de elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-765">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-766">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-766">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b9423-767">A implementação <see cref="T:System.Xml.XmlTextReader" /> não dá suporte a esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-767">The <see cref="T:System.Xml.XmlTextReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-768">O elemento contém conteúdo misto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-768">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b9423-769">Não é possível converter conteúdo no tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-769">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlTextReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b9423-770">O buffer para o qual o texto resultante será copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-770">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="b9423-771">Este valor pode não ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-771">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b9423-772">O deslocamento do buffer no qual o resultado começará a ser copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-772">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b9423-773">O número máximo de bytes a serem copiados para o buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-773">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="b9423-774">O número real de bytes copiados é retornado deste método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-774">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-775">Lê o elemento e decodifica o conteúdo de <see langword="BinHex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-775">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-776">O número de bytes gravados no buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-776">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-777">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-777">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-778">Esse método lê o conteúdo do elemento, decodifica usando `BinHex` de codificação e retorna os bytes binários decodificados (por exemplo, um embutido `BinHex` codificados de imagem GIF) no buffer.</span><span class="sxs-lookup"><span data-stu-id="b9423-778">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="b9423-779">Esse método só pode ler os elementos de conteúdo simples.</span><span class="sxs-lookup"><span data-stu-id="b9423-779">This method can only read simple-content elements.</span></span> <span data-ttu-id="b9423-780">O elemento pode conter texto, espaço em branco, espaço em branco significativo, seções CDATA, comentários e instruções de processamento.</span><span class="sxs-lookup"><span data-stu-id="b9423-780">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="b9423-781">Ele também pode conter referências de entidade, que são automaticamente expandidas.</span><span class="sxs-lookup"><span data-stu-id="b9423-781">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="b9423-782">O elemento não pode ter elementos filho.</span><span class="sxs-lookup"><span data-stu-id="b9423-782">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="b9423-783">Esse método é muito semelhante ao <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> método, exceto que ele só pode ser chamado em tipos de nó de elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-783">This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="b9423-784">Se o `count` valor é maior do que o número de bytes no documento, ou se for igual ao número de bytes no documento, o <xref:System.Xml.XmlTextReader> lê todos os bytes restantes no documento e retorna o número de bytes lidos.</span><span class="sxs-lookup"><span data-stu-id="b9423-784">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="b9423-785">A próxima <xref:System.Xml.XmlTextReader> chamada de método retorna um zero e move o leitor para o nó após o <xref:System.Xml.XmlNodeType.EndElement>.</span><span class="sxs-lookup"><span data-stu-id="b9423-785">The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.</span></span>  
  
 <span data-ttu-id="b9423-786">Se você chamar <xref:System.Xml.XmlTextReader.Read%2A> antes de todo o conteúdo do elemento é consumido, o leitor pode se comportar como se o conteúdo foi consumido e, em seguida, o <xref:System.Xml.XmlTextReader.Read%2A> método foi chamado.</span><span class="sxs-lookup"><span data-stu-id="b9423-786">If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called.</span></span> <span data-ttu-id="b9423-787">Isso significa que o leitor lê todo o texto até que o elemento final seja encontrado.</span><span class="sxs-lookup"><span data-stu-id="b9423-787">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="b9423-788">Em seguida, lê o nó de marca de fim, lê o próximo nó e, em seguida, se posiciona no próximo nó subsequente.</span><span class="sxs-lookup"><span data-stu-id="b9423-788">It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-789">Consulte <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> para ver um exemplo que usa esse método.</span><span class="sxs-lookup"><span data-stu-id="b9423-789">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9423-790">O valor <paramref name="buffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-790">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-791">O nó atual não é um nó de elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-791">The current node is not an element node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-792">O índice de buffer ou de índice + contagem é maior que o tamanho do buffer alocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-792">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b9423-793">A implementação <see cref="T:System.Xml.XmlReader" /> não dá suporte a esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-793">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-794">O elemento contém conteúdo misto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-794">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b9423-795">Não é possível converter conteúdo no tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-795">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlTextReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-796">Obtém o estado do leitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-796">Gets the state of the reader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-797">Um dos valores de <see cref="T:System.Xml.ReadState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-797">One of the <see cref="T:System.Xml.ReadState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-798">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-798">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlTextReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-799">Lê o conteúdo de um elemento ou um nó de texto como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-799">Reads the contents of an element or a text node as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-800">O conteúdo do nó de elemento ou de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-800">The contents of the element or text node.</span>
          </span>
          <span data-ttu-id="b9423-801">Essa poderá ser uma cadeia de caracteres vazia se o leitor estiver posicionado em algo diferente de um elemento ou nó de texto ou, se não houver nenhum outro conteúdo de texto para retornar no contexto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-801">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span>
          </span>
          <span data-ttu-id="b9423-802">
            <see langword="Note:" /> O nó de texto pode ser um elemento ou um nó de texto do atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-802">
              <see langword="Note:" /> The text node can be either an element or an attribute text node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-803">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-803">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-804">Se posicionado em um elemento `ReadString` concatena todos os texto, espaço em branco significativo, espaço em branco, e `CData` nó da seção tipos juntos e retorna os dados concatenados como o conteúdo do elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-804">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and `CData` section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="b9423-805">Ele é interrompido quando qualquer marcação for encontrada, incluindo comentários e instruções de processamento.</span><span class="sxs-lookup"><span data-stu-id="b9423-805">It stops when any markup is encountered, including comments and processing instructions.</span></span> <span data-ttu-id="b9423-806">Isso pode ocorrer em um modelo de conteúdo misto ou quando uma marca de fim de elemento for lida.</span><span class="sxs-lookup"><span data-stu-id="b9423-806">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="b9423-807">Se posicionado em um nó de texto, `ReadString` executa a mesma concatenação do nó de texto para a marca de fim do elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-807">If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="b9423-808">Se o leitor for posicionado em um nó de texto de atributo, o `ReadString` terá a mesma funcionalidade de um leitor posicionado na marca de início de elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-808">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="b9423-809">Ele retornará todos os nós de texto de elemento concatenados.</span><span class="sxs-lookup"><span data-stu-id="b9423-809">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-810">O exemplo a seguir exibe o conteúdo de texto de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="b9423-810">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-811">O exemplo usa o arquivo `elems.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-811">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-812">Erro ao analisar o XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-812">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-813">Ocorreu uma tentativa de uma operação inválida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-813">An invalid operation was attempted.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="xmlTextReader.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-814">Redefine o estado do leitor para ReadState.Initial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-814">Resets the state of the reader to ReadState.Initial.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-815">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-815">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-816">Esse método permite que você analise vários documentos XML em um único fluxo.</span><span class="sxs-lookup"><span data-stu-id="b9423-816">This method enables you to parse multiple XML documents in a single stream.</span></span> <span data-ttu-id="b9423-817">Quando você atingir o final de um documento XML, você pode chamar `ResetState` para redefinir o estado do leitor em preparação para o próximo documento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-817">When you reach the end of an XML document, you can call `ResetState` to reset the state of the reader in preparation for the next XML document.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b9423-818">Os documentos no fluxo devem compartilhar a mesma codificação.</span><span class="sxs-lookup"><span data-stu-id="b9423-818">The documents in the stream must share the same encoding.</span></span> <span data-ttu-id="b9423-819">Se isso não for o caso, quando `ResetState` é chamado um <xref:System.Xml.XmlException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="b9423-819">If this is not the case, when `ResetState` is called an <xref:System.Xml.XmlException> is thrown.</span></span> <span data-ttu-id="b9423-820">(Essa é uma alteração no comportamento do .NET Framework versão 1.1 e anterior).</span><span class="sxs-lookup"><span data-stu-id="b9423-820">(This is a change in behavior from .NET Framework version 1.1 and earlier).</span></span>  
  
 <span data-ttu-id="b9423-821">As propriedades a seguir não são afetadas por `ResetState`.</span><span class="sxs-lookup"><span data-stu-id="b9423-821">The following properties are not affected by `ResetState`.</span></span>  
  
-   <xref:System.Xml.XmlTextReader.Normalization%2A>  
  
-   <xref:System.Xml.XmlTextReader.Namespaces%2A>  
  
-   <xref:System.Xml.XmlTextReader.XmlResolver%2A>  
  
-   <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-822">O exemplo a seguir analisa os dois documentos XML em um único fluxo.</span><span class="sxs-lookup"><span data-stu-id="b9423-822">The following example parses two XML documents in a single stream.</span></span>  
  
 [!code-cpp[XmlTextReader.ResetState#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ResetState/CPP/resetstate.cpp#1)]
 [!code-csharp[XmlTextReader.ResetState#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ResetState/CS/resetstate.cs#1)]
 [!code-vb[XmlTextReader.ResetState#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ResetState/VB/resetstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-823">Chamando <see langword="ResetState" /> se o leitor foi criado usando um <see cref="T:System.Xml.XmlParserContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-823">Calling <see langword="ResetState" /> if the reader was constructed using an <see cref="T:System.Xml.XmlParserContext" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b9423-824">Documentos em um mesmo fluxo não compartilham a mesma codificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-824">Documents in a single stream do not share the same encoding.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.ReadState" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlTextReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-825">Resolve a referência de entidade para nós <see langword="EntityReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-825">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-826">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-826">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-827">Se o leitor estiver posicionado em um `EntityReference` nó (`XmlNodeType.EntityReference`), se <xref:System.Xml.XmlTextReader.Read%2A> for chamado após chamar esse método, o texto de substituição de entidade é analisado.</span><span class="sxs-lookup"><span data-stu-id="b9423-827">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlTextReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="b9423-828">Quando o texto de substituição de entidade é concluído, um `EndEntity` nó será retornado para fechar o escopo de referência de entidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-828">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9423-829">Depois de chamar esse método, se a entidade fizer parte de um valor de atributo, você deve chamar <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> para a etapa para a entidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-829">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlTextReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-830">Obtém o objeto <see cref="T:System.Xml.XmlReaderSettings" /> usado para criar essa instância <see cref="T:System.Xml.XmlTextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-830">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlTextReader" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-831">O <see cref="T:System.Xml.XmlReaderSettings" /> objeto usado para criar este <see cref="T:System.Xml.XmlTextReader" /> instância; <see langword="null" /> se o leitor não foi criado usando o <see cref="Overload:System.Xml.XmlReader.Create" /> método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-831">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlTextReader" /> instance; <see langword="null" /> if the reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> <span data-ttu-id="b9423-832">Em [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], a prática recomendada é criar instâncias de <xref:System.Xml.XmlReader> que usam a classe de <xref:System.Xml.XmlReaderSettings> e o método de <xref:System.Xml.XmlReader.Create%2A> .</span><span class="sxs-lookup"><span data-stu-id="b9423-832">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="b9423-833">Isso permite que você veja as vantagens de todos os novos recursos introduzidos em [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b9423-833">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="b9423-834">Para obter mais informações, consulte a seção comentários a <xref:System.Xml.XmlReader> página de referência.</span><span class="sxs-lookup"><span data-stu-id="b9423-834">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlTextReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-835">Ignora os filhos do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-835">Skips the children of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-836">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-836">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-837">No seguinte XML de entrada se o leitor está posicionado sobre o `<a>` nó ou qualquer um dos seus atributos, chamando `Skip` posiciona o leitor para o `<b>` nó.</span><span class="sxs-lookup"><span data-stu-id="b9423-837">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="b9423-838">Se o leitor está posicionado em um nó folha já (como o `<x>` nó ou o nó de texto `abc`), chamar `Skip` é o mesmo que chamar <xref:System.Xml.XmlTextReader.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9423-838">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlTextReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
  <x/>abc<y/>  
</a>  
<b>  
 ...  
</b>  
```  
  
 <span data-ttu-id="b9423-839">Esse método verifica XML bem formado.</span><span class="sxs-lookup"><span data-stu-id="b9423-839">This method checks for well-formed XML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9423-840">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-840">For a description of this member, see <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-841">
            <see langword="true" /> se <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> e <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> puderem ser fornecidos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-841">
              <see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b9423-842">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="b9423-842">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b9423-843">Ele só pode ser usado quando a instância de <xref:System.Xml.XmlTextReader> é convertida em uma interface de <xref:System.Xml.IXmlLineInfo>.</span><span class="sxs-lookup"><span data-stu-id="b9423-843">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlLineInfo> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="b9423-844">Um valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica o tipo de nós de namespace a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-844">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-845">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-845">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-846">Um <see cref="T:System.Collections.IDictionary" /> que contém os namespaces no escopo atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-846">An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9423-847">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="b9423-847">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b9423-848">Ele só pode ser usado quando a instância de <xref:System.Xml.XmlTextReader> é convertida em uma interface de <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="b9423-848">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="b9423-849">O prefixo cujo URI de namespace você deseja localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-849">The prefix whose namespace URI you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-850">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-850">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-851">O URI do namespace mapeado para o prefixo; <see langword="null" /> se o prefixo não estiver mapeado para um URI de namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-851">The namespace URI that is mapped to the prefix; <see langword="null" /> if the prefix is not mapped to a namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9423-852">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="b9423-852">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b9423-853">Ele só pode ser usado quando a instância de <xref:System.Xml.XmlTextReader> é convertida em uma interface de <xref:System.Xml.IXmlNamespaceResolver>.</span><span class="sxs-lookup"><span data-stu-id="b9423-853">It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">
          <span data-ttu-id="b9423-854">O URI do namespace cujo prefixo você deseja localizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-854">The namespace URI whose prefix you wish to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9423-855">Para obter uma descrição desse membro, consulte <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-855">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9423-856">O prefixo que é mapeado para o URI do namespace; <see langword="null" /> se o URI de namespace não estiver mapeado para um prefixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-856">The prefix that is mapped to the namespace URI; <see langword="null" /> if the namespace URI is not mapped to a prefix.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlTextReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-857">Obtém o valor de texto do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-857">Gets the text value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-858">O valor retornado depende do <see cref="P:System.Xml.XmlTextReader.NodeType" /> do nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-858">The value returned depends on the <see cref="P:System.Xml.XmlTextReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="b9423-859">A tabela a seguir lista os tipos de nós que têm um valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-859">The following table lists node types that have a value to return.</span>
          </span>
          <span data-ttu-id="b9423-860">Todos os outros tipos de nó retornam <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-860">All other node types return <see langword="String.Empty" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="b9423-861">Tipo de nó</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-861">Node Type</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b9423-862">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-862">Value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see langword="Attribute" />
              </term>
              <description>
                <span data-ttu-id="b9423-863">O valor do atributo.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-863">The value of the attribute.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="CDATA" />
              </term>
              <description>
                <span data-ttu-id="b9423-864">O conteúdo da seção CDATA.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-864">The content of the CDATA section.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="Comment" />
              </term>
              <description>
                <span data-ttu-id="b9423-865">O conteúdo do comentário.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-865">The content of the comment.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="DocumentType" />
              </term>
              <description>
                <span data-ttu-id="b9423-866">O subconjunto interno.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-866">The internal subset.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="ProcessingInstruction" />
              </term>
              <description>
                <span data-ttu-id="b9423-867">Todo o conteúdo, exceto o destino.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-867">The entire content, excluding the target.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="SignificantWhitespace" />
              </term>
              <description>
                <span data-ttu-id="b9423-868">O espaço em branco dentro de um <see langword="xml:space" />= 'preserve' escopo.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-868">The white space within an <see langword="xml:space" />= 'preserve' scope.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="Text" />
              </term>
              <description>
                <span data-ttu-id="b9423-869">O conteúdo do nó de texto.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-869">The content of the text node.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="Whitespace" />
              </term>
              <description>
                <span data-ttu-id="b9423-870">Espaço em branco entre a marcação.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-870">The white space between markup.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see langword="XmlDeclaration" />
              </term>
              <description>
                <span data-ttu-id="b9423-871">O conteúdo da declaração.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b9423-871">The content of the declaration.</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-872">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-872">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-873">O exemplo a seguir lê um arquivo XML e exibe cada nó.</span><span class="sxs-lookup"><span data-stu-id="b9423-873">The following example reads an XML file and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b9423-874">O exemplo usa o arquivo `items.xml`.</span><span class="sxs-lookup"><span data-stu-id="b9423-874">The sample uses the file `items.xml`.</span></span>  
  
 [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.WhitespaceHandling WhitespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WhitespaceHandling WhitespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property WhitespaceHandling As WhitespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::WhitespaceHandling WhitespaceHandling { System::Xml::WhitespaceHandling get(); void set(System::Xml::WhitespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.WhitespaceHandling : System.Xml.WhitespaceHandling with get, set" Usage="System.Xml.XmlTextReader.WhitespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WhitespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-875">Obtém ou define um valor que especifica como o espaço em branco é tratado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-875">Gets or sets a value that specifies how white space is handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-876">Um dos valores de <see cref="T:System.Xml.WhitespaceHandling" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-876">One of the <see cref="T:System.Xml.WhitespaceHandling" /> values.</span>
          </span>
          <span data-ttu-id="b9423-877">O padrão é <see langword="WhitespaceHandling.All" /> (retorna <see langword="Whitespace" /> e <see langword="SignificantWhitespace" /> nós).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-877">The default is <see langword="WhitespaceHandling.All" /> (returns <see langword="Whitespace" /> and <see langword="SignificantWhitespace" /> nodes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-878">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-878">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-879">Essa propriedade pode ser alterada a qualquer momento e entra em vigor na próxima operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="b9423-879">This property can be changed at any time and takes effect on the next read operation.</span></span>  
  
 <span data-ttu-id="b9423-880">Porque o `XmlTextReader` não tem informações de DTD disponíveis para ele, `SignificantWhitepsace` nós só são retornados dentro de um `xml:space='preserve'` escopo.</span><span class="sxs-lookup"><span data-stu-id="b9423-880">Because the `XmlTextReader` does not have DTD information available to it, `SignificantWhitepsace` nodes are only returned within an `xml:space='preserve'` scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-881">O exemplo a seguir lê um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="b9423-881">The following example reads an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b9423-882">Valor inválido especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-882">Invalid value specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b9423-883">Definir essa propriedade quando o leitor é fechado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> é <see langword="ReadState.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-883">Setting this property when the reader is closed (<see cref="P:System.Xml.XmlTextReader.ReadState" /> is <see langword="ReadState.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-884">Obtém o escopo de <see langword="xml:lang" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-884">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-885">Atual <see langword="xml:lang" /> escopo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-885">The current <see langword="xml:lang" /> scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-886">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-886">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-887">Esta propriedade representa o `xml:lang` definir o escopo no qual reside o nó atual.</span><span class="sxs-lookup"><span data-stu-id="b9423-887">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="b9423-888">Por exemplo, aqui está um fragmento XML com `xml:lang` definido como inglês dos EUA no elemento raiz:</span><span class="sxs-lookup"><span data-stu-id="b9423-888">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
 <span data-ttu-id="b9423-889">\<raiz de XML: lang = "en-us" ></span><span class="sxs-lookup"><span data-stu-id="b9423-889">\<root xml:lang="en-us"></span></span>  
  
 <span data-ttu-id="b9423-890">\<nome > Fred \< /nome ></span><span class="sxs-lookup"><span data-stu-id="b9423-890">\<name>Fred\</name></span></span>  
  
 <span data-ttu-id="b9423-891">\</root></span><span class="sxs-lookup"><span data-stu-id="b9423-891">\</root></span></span>  
  
 <span data-ttu-id="b9423-892">Quando o leitor está posicionado sobre o `name` elemento, você pode usar essa propriedade para localizar o que ele está no escopo de um inglês dos EUA `xml:lang` atributo.</span><span class="sxs-lookup"><span data-stu-id="b9423-892">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-893">O exemplo a seguir exibe o `xml:lang` valor para cada um de nós.</span><span class="sxs-lookup"><span data-stu-id="b9423-893">The following example displays the `xml:lang` value for each of the nodes.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlLang#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlLang/CPP/readlang.cpp#1)]
 [!code-csharp[XmlTextReader.XmlLang#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlLang/CS/readlang.cs#1)]
 [!code-vb[XmlTextReader.XmlLang#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlLang/VB/readlang.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlTextReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-894">Define o <see cref="T:System.Xml.XmlResolver" /> usado para resolver referências de DTD.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-894">Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-895">O <see langword="XmlResolver" /> a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-895">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="b9423-896">Se definido como <see langword="null" />, recursos externos não são resolvidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-896">If set to <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="b9423-897">Na versão 1.1 do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], o chamador deve ser totalmente confiável para especificar um <see langword="XmlResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-897">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-898">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-898">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="b9423-899">O leitor usa `XmlResolver` para resolver o local do arquivo carregado no leitor e também para resolver referências DTD.</span><span class="sxs-lookup"><span data-stu-id="b9423-899">The reader uses `XmlResolver` to resolve the location of the file loaded into the reader and also to resolve DTD references.</span></span> <span data-ttu-id="b9423-900">Por exemplo, se seu XML incluído a declaração DOCTYPE, `<!DOCTYPE book SYSTEM book.dtd>` o leitor resolve esse arquivo externo e garante que o DTD seja bem formado.</span><span class="sxs-lookup"><span data-stu-id="b9423-900">For example, if your XML included the DOCTYPE declaration, `<!DOCTYPE book SYSTEM book.dtd>` the reader resolves this external file and ensures that the DTD is well-formed.</span></span> <span data-ttu-id="b9423-901">O leitor não usa o DTD para validação.</span><span class="sxs-lookup"><span data-stu-id="b9423-901">The reader does not use the DTD for validation.</span></span>  
  
 <span data-ttu-id="b9423-902">Essa propriedade pode ser alterada a qualquer momento e entra em vigor na próxima operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="b9423-902">This property can be changed at any time and takes effect on the next read operation.</span></span> <span data-ttu-id="b9423-903">Se essa propriedade é definida como `null`, quaisquer referências DTD externas encontradas pelo leitor não são resolvidas.</span><span class="sxs-lookup"><span data-stu-id="b9423-903">If this property is set to `null`, any external DTD references encountered by the reader are not resolved.</span></span>  
  
 <span data-ttu-id="b9423-904">Na versão 1.1 do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], se essa propriedade não for definida, o nível de confiança do aplicativo determina o comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="b9423-904">In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="b9423-905">`Fully trusted code:` O leitor usa um padrão <xref:System.Xml.XmlUrlResolver> sem credenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="b9423-905">`Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="b9423-906">Se a autenticação é necessária para acessar um recurso de rede, use o `XmlResolver` propriedade para especificar um `XmlResolver` com as credenciais necessárias.</span><span class="sxs-lookup"><span data-stu-id="b9423-906">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="b9423-907">`Semi-trusted code:` O `XmlResolver` estiver definida como `null`.</span><span class="sxs-lookup"><span data-stu-id="b9423-907">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="b9423-908">Recursos externos não são resolvidos.</span><span class="sxs-lookup"><span data-stu-id="b9423-908">External resources are not resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-909">O exemplo a seguir usa o `XmlResolver` propriedade para especificar as credenciais necessárias para acessar o arquivo em rede.</span><span class="sxs-lookup"><span data-stu-id="b9423-909">The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked file.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlResolver/CPP/rdr_resolver.cpp#1)]
 [!code-csharp[XmlTextReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlResolver/CS/rdr_resolver.cs#1)]
 [!code-vb[XmlTextReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlResolver/VB/rdr_resolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9423-910">Obtém o escopo de <see langword="xml:space" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-910">Gets the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9423-911">Um dos valores de <see cref="T:System.Xml.XmlSpace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-911">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span>
          </span>
          <span data-ttu-id="b9423-912">Se nenhum <see langword="xml:space" /> escopo existir, essa propriedade padroniza como <see langword="XmlSpace.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9423-912">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9423-913">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlReader> instâncias usando o <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> método para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="b9423-913">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9423-914">O exemplo a seguir analisa um arquivo e retorna o espaço em branco significativo se um `xml:space='preserve'` escopo for encontrado.</span><span class="sxs-lookup"><span data-stu-id="b9423-914">The following example parses a file and returns significant white space if an `xml:space='preserve'` scope is found.</span></span>  
  
 [!code-cpp[XmlTextReader.XmlSpace#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlSpace/CPP/readspace.cpp#1)]
 [!code-csharp[XmlTextReader.XmlSpace#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlSpace/CS/readspace.cs#1)]
 [!code-vb[XmlTextReader.XmlSpace#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlSpace/VB/readspace.vb#1)]  
  
 <span data-ttu-id="b9423-915">O exemplo usa o arquivo `authors.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="b9423-915">The example uses the file, `authors.xml`, as input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>