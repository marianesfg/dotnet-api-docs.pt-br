<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="950e7-101">Representa um gravador que fornece um modo rápido não armazenado em cache e somente de encaminhamento para gerar fluxos ou arquivos que contém dados XML em conformidade com o W3C Extensible Markup Language (XML) 1.0 e os Namespaces nas recomendações de XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
 <span data-ttu-id="950e7-102">A partir do .NET Framework 2.0, recomendamos o uso da classe <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950e7-103">Essa classe implementa o <xref:System.Xml.XmlWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="950e7-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="950e7-104">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-105">`XmlTextWriter` mantém uma pilha de namespace correspondente a todos os namespaces definidos na pilha do elemento atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="950e7-106">Usando `XmlTextWriter` você pode declarar namespaces manualmente.</span><span class="sxs-lookup"><span data-stu-id="950e7-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="950e7-107">O código c# acima produz a saída a seguir.</span><span class="sxs-lookup"><span data-stu-id="950e7-107">The above C# code produces the following output.</span></span> <span data-ttu-id="950e7-108">`XmlTextWriter` promove a declaração de namespace para o elemento raiz para evitar que ele duplicado nos dois elementos filho.</span><span class="sxs-lookup"><span data-stu-id="950e7-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="950e7-109">Os elementos filho pegar o prefixo da declaração de namespace.</span><span class="sxs-lookup"><span data-stu-id="950e7-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="950e7-110">`XmlTextWriter` também permite que você substitua a declaração de namespace atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="950e7-111">No exemplo a seguir, o namespace URI "123" é substituído por "abc" para produzir o elemento XML `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="950e7-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="950e7-112">Usando os métodos de gravação que usam um prefixo como um argumento você também pode especificar qual prefixo a ser usado.</span><span class="sxs-lookup"><span data-stu-id="950e7-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="950e7-113">No exemplo a seguir, dois prefixos diferentes são mapeados para o mesmo namespace URI para produzir o texto XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="950e7-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="950e7-114">Se houver várias declarações de namespace mapeamento prefixos diferentes para o mesmo URI de namespace `XmlTextWriter` examina a pilha de declarações de namespace com versões anteriores e escolhe um mais próximo.</span><span class="sxs-lookup"><span data-stu-id="950e7-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="950e7-115">No c# de exemplo acima, pois o `WriteAttributeString` chamada não especifica um prefixo, o gravador usa o prefixo de último inserido na pilha de namespace e produz o seguinte XML:</span><span class="sxs-lookup"><span data-stu-id="950e7-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="950e7-116">Se ocorrerem conflitos de namespace, `XmlTextWriter` resolve-los por meio da geração prefixos alternativos.</span><span class="sxs-lookup"><span data-stu-id="950e7-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="950e7-117">Por exemplo, se um atributo e elemento tem o mesmo prefixo namespaces mas diferentes, `XmlWriter` gera um prefixo alternativo para o atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="950e7-118">Os prefixos gerados são nomeados `n{i}` onde `i` é um número que começa em 1.</span><span class="sxs-lookup"><span data-stu-id="950e7-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="950e7-119">O número é redefinido para 1 para cada elemento.</span><span class="sxs-lookup"><span data-stu-id="950e7-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="950e7-120">Atributos que estão associados com um URI de namespace devem ter um prefixo (namespaces não se aplicam aos atributos padrão).</span><span class="sxs-lookup"><span data-stu-id="950e7-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="950e7-121">Isso está de acordo com a seção 5.2 dos Namespaces W3C na recomendação XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="950e7-122">Se um atributo faz referência a um URI de namespace, mas não especifica um prefixo, o gravador gera um prefixo para o atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="950e7-123">Ao gravar um elemento vazio, um espaço é adicionado entre o nome da marca e a marca de fechamento, por exemplo `<item />`.</span><span class="sxs-lookup"><span data-stu-id="950e7-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="950e7-124">Isso fornece compatibilidade com navegadores mais antigos.</span><span class="sxs-lookup"><span data-stu-id="950e7-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="950e7-125">Quando um `String` é usada como parâmetro de método `null` e `String.Empty` são equivalentes.</span><span class="sxs-lookup"><span data-stu-id="950e7-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="950e7-126">`String.Empty` segue as regras do W3C.</span><span class="sxs-lookup"><span data-stu-id="950e7-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="950e7-127">Para gravar dados fortemente tipados, use o <xref:System.Xml.XmlConvert> classe para converter tipos de dados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="950e7-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="950e7-128">Por exemplo, o código c# a seguir converte os dados de `Double` para `String` e grava o elemento `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="950e7-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="950e7-129">`XmlTextWriter` não verifica o seguinte:</span><span class="sxs-lookup"><span data-stu-id="950e7-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="950e7-130">Caracteres inválidos em nomes de elementos e atributos.</span><span class="sxs-lookup"><span data-stu-id="950e7-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="950e7-131">Caracteres Unicode que não se ajustarem à codificação especificada.</span><span class="sxs-lookup"><span data-stu-id="950e7-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="950e7-132">Se os caracteres Unicode que não se ajustarem à codificação especificada, o `XmlTextWriter` não escapa os caracteres Unicode em entidades de caractere.</span><span class="sxs-lookup"><span data-stu-id="950e7-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="950e7-133">Atributos duplicados.</span><span class="sxs-lookup"><span data-stu-id="950e7-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="950e7-134">Caracteres de identificador público DOCTYPE ou um identificador de sistema.</span><span class="sxs-lookup"><span data-stu-id="950e7-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="950e7-135">Considerações sobre segurança</span><span class="sxs-lookup"><span data-stu-id="950e7-135">Security Considerations</span></span>  
 <span data-ttu-id="950e7-136">Os seguintes itens são coisas a serem consideradas ao trabalhar com o <xref:System.Xml.XmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="950e7-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="950e7-137">Exceções geradas pelo <xref:System.Xml.XmlTextWriter> pode divulgar informações de caminho que você deseja não transferidos até o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="950e7-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="950e7-138">Os aplicativos devem capturar exceções e processar-las apropriadamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="950e7-139">Quando você passa o <xref:System.Xml.XmlTextWriter> para outro aplicativo, o fluxo subjacente é exposto ao aplicativo.</span><span class="sxs-lookup"><span data-stu-id="950e7-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="950e7-140">Se você precisar passar <xref:System.Xml.XmlTextWriter> a um aplicativo de confiança parcial, você deve usar um objeto de <xref:System.Xml.XmlWriter> criado pelo método de <xref:System.Xml.XmlWriter.Create%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="950e7-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="950e7-141">O <xref:System.Xml.XmlTextWriter> não valida os dados que são passados para o <xref:System.Xml.XmlTextWriter.WriteDocType%2A> ou <xref:System.Xml.XmlTextWriter.WriteRaw%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="950e7-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="950e7-142">Você não deve passar dados arbitrários para esses métodos.</span><span class="sxs-lookup"><span data-stu-id="950e7-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="950e7-143">Se as configurações padrão forem alteradas, não há nenhuma garantia de que a saída gerada é dados XML bem formado.</span><span class="sxs-lookup"><span data-stu-id="950e7-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="950e7-144">Não aceitar componentes de suporte, como um <xref:System.Text.Encoding> objeto, de uma fonte não confiável.</span><span class="sxs-lookup"><span data-stu-id="950e7-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950e7-145">Cria uma instância de <see langword="XmlTextWriter" /> classe.</span><span class="sxs-lookup"><span data-stu-id="950e7-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-146">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="950e7-147">O <see langword="TextWriter" /> no qual ocorrerá a gravação.</span><span class="sxs-lookup"><span data-stu-id="950e7-147">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="950e7-148">Supõe-se que <see langword="TextWriter" /> já esteja definido como a codificação correta.</span><span class="sxs-lookup"><span data-stu-id="950e7-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="950e7-149">Cria uma instância da classe <see langword="XmlTextWriter" /> usando o <see cref="T:System.IO.TextWriter" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="950e7-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-150">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="950e7-151">O fluxo no qual você deseja fazer a gravação.</span><span class="sxs-lookup"><span data-stu-id="950e7-151">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="950e7-152">A codificação a ser gerada.</span><span class="sxs-lookup"><span data-stu-id="950e7-152">The encoding to generate.</span></span> <span data-ttu-id="950e7-153">Se a codificação for <see langword="null" />, ele gravará o fluxo como UTF-8 e omitirá o atributo de codificação do <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="950e7-154">Cria uma instância da classe <see langword="XmlTextWriter" /> usando o fluxo e a codificação especificados.</span><span class="sxs-lookup"><span data-stu-id="950e7-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-155">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-156">Não há suporte para a codificação ou não é possível gravar no fluxo.</span><span class="sxs-lookup"><span data-stu-id="950e7-156">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="950e7-157"><paramref name="w" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-157"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="950e7-158">O nome do arquivo para gravação.</span><span class="sxs-lookup"><span data-stu-id="950e7-158">The filename to write to.</span></span> <span data-ttu-id="950e7-159">Se o arquivo existir, ele será truncado e substituído pelo novo conteúdo.</span><span class="sxs-lookup"><span data-stu-id="950e7-159">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="950e7-160">A codificação a ser gerada.</span><span class="sxs-lookup"><span data-stu-id="950e7-160">The encoding to generate.</span></span> <span data-ttu-id="950e7-161">Se a codificação for <see langword="null" />, ele gravará o arquivo como UTF-8 e omitirá o atributo de codificação do <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="950e7-162">Cria uma instância da classe <see cref="T:System.Xml.XmlTextWriter" /> usando o arquivo especificado.</span><span class="sxs-lookup"><span data-stu-id="950e7-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-163">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-164">Não há suporte para a codificação; o nome do arquivo está vazio, contém somente espaços em branco ou contém um ou mais caracteres inválidos.</span><span class="sxs-lookup"><span data-stu-id="950e7-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="950e7-165">O acesso foi negado.</span><span class="sxs-lookup"><span data-stu-id="950e7-165">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="950e7-166">O nome do arquivo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-166">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="950e7-167">O diretório de gravação não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="950e7-167">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="950e7-168">O nome do arquivo inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe do rótulo do volume.</span><span class="sxs-lookup"><span data-stu-id="950e7-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="950e7-169">O chamador não tem a permissão necessária.</span><span class="sxs-lookup"><span data-stu-id="950e7-169">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-170">Obtém o objeto do fluxo subjacente.</span><span class="sxs-lookup"><span data-stu-id="950e7-170">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="950e7-171">O fluxo ao qual o <see langword="XmlTextWriter" /> está gravando ou <see langword="null" /> se o <see langword="XmlTextWriter" /> foi criado usando um <see cref="T:System.IO.TextWriter" /> que não herda da classe <see cref="T:System.IO.StreamWriter" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-172">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-173">Se o gravador foi criado usando um `TextWriter` que é derivado do `StreamWriter` classe, essa propriedade é equivalente ao <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="950e7-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="950e7-174">Se o gravador foi criado usando um <xref:System.IO.Stream>, essa propriedade retorna o `Stream` transmitido ao construtor.</span><span class="sxs-lookup"><span data-stu-id="950e7-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="950e7-175">Se o gravador foi construído usando um nome de arquivo, essa propriedade retorna o `Stream` que representa o arquivo.</span><span class="sxs-lookup"><span data-stu-id="950e7-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-176">Fecha este fluxo e o fluxo subjacente.</span><span class="sxs-lookup"><span data-stu-id="950e7-176">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-177">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-178">Os elementos ou atributos deixados abertos são fechados automaticamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="950e7-179">Este método não lança exceções.</span><span class="sxs-lookup"><span data-stu-id="950e7-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-180">O exemplo a seguir grava um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-181">Libera o que está no buffer para os fluxos subjacentes e também libera o fluxo subjacente.</span><span class="sxs-lookup"><span data-stu-id="950e7-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-182">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-183">Isso é chamado em vez de <xref:System.Xml.XmlTextWriter.Close%2A> quando quiser gravar mais para o fluxo subjacente sem perder o que é ainda no buffer.</span><span class="sxs-lookup"><span data-stu-id="950e7-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-184">O exemplo a seguir grava dois fragmentos XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-185">Indica como a saída é formatada.</span><span class="sxs-lookup"><span data-stu-id="950e7-185">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="950e7-186">Um dos valores de <see cref="T:System.Xml.Formatting" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="950e7-187">O padrão é <see langword="Formatting.None" /> (sem formatação especial).</span><span class="sxs-lookup"><span data-stu-id="950e7-187">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-188">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-189">Se o `Indented` opção for definida, os elementos filho são recuados usando o <xref:System.Xml.XmlTextWriter.Indentation%2A> e <xref:System.Xml.XmlTextWriter.IndentChar%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="950e7-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="950e7-190">Conteúdo do elemento é recuado.</span><span class="sxs-lookup"><span data-stu-id="950e7-190">Only element content is indented.</span></span> <span data-ttu-id="950e7-191">O código c# a seguir grava elementos HTML, inclusive conteúdo misto:</span><span class="sxs-lookup"><span data-stu-id="950e7-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="950e7-192">O código acima produz a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="950e7-192">The above code produces the following output:</span></span>  
  
```  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="950e7-193">Quando isso for exibido em HTML sem espaço em branco aparece entre os elementos em negrito e itálicos.</span><span class="sxs-lookup"><span data-stu-id="950e7-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="950e7-194">Na verdade, neste exemplo, se Recuar foi adicionado entre esses elementos a palavra "Elefante" será interrompida incorretamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="950e7-195">Gravar qualquer texto conteúdo, exceto `String.Empty` coloca esse elemento de conteúdo misto.</span><span class="sxs-lookup"><span data-stu-id="950e7-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="950e7-196">Elementos filho não herdam esse status de "" misto.</span><span class="sxs-lookup"><span data-stu-id="950e7-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="950e7-197">Um elemento filho de um elemento "misto" não recuo, a menos que também contém o conteúdo "misto".</span><span class="sxs-lookup"><span data-stu-id="950e7-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="950e7-198">Conteúdo de elemento (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) e conteúdo misto (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) são definidas de acordo com as definições de XML 1.0 destes termos.</span><span class="sxs-lookup"><span data-stu-id="950e7-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-199">O exemplo a seguir grava um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-200">Obtém ou define quantos IndentChars gravar para cada nível da hierarquia quando <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está definido como <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="950e7-201">Número de <see langword="IndentChars" /> para cada nível.</span><span class="sxs-lookup"><span data-stu-id="950e7-201">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="950e7-202">O padrão é 2.</span><span class="sxs-lookup"><span data-stu-id="950e7-202">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-203">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-204">Recuo é executado nos seguintes tipos de nó: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, e `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="950e7-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="950e7-205">Todos os outros tipos de nó não são afetados.</span><span class="sxs-lookup"><span data-stu-id="950e7-205">All other node types are not affected.</span></span> <span data-ttu-id="950e7-206">O `XmlTextWriter` não recua o subconjunto de DTD interno.</span><span class="sxs-lookup"><span data-stu-id="950e7-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="950e7-207">No entanto, você pode fazer o seguinte para aplicar formatação para o subconjunto de DTD interno.</span><span class="sxs-lookup"><span data-stu-id="950e7-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="950e7-208">O exemplo a seguir grava um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-208">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-209">Definir essa propriedade para um valor negativo.</span><span class="sxs-lookup"><span data-stu-id="950e7-209">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-210">Obtém ou define qual caractere deve ser usado para recuar quando <see cref="P:System.Xml.XmlTextWriter.Formatting" /> é definido como <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="950e7-211">O caractere a ser usado para o recuo.</span><span class="sxs-lookup"><span data-stu-id="950e7-211">The character to use for indenting.</span></span> <span data-ttu-id="950e7-212">O padrão é o espaço.</span><span class="sxs-lookup"><span data-stu-id="950e7-212">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="950e7-213">O <see langword="XmlTextWriter" /> permite que você defina essa propriedade para qualquer caractere.</span><span class="sxs-lookup"><span data-stu-id="950e7-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="950e7-214">Para garantir um XML válido, especifique um caractere de espaço em branco válido: 0x9, 0x10, 0x13 ou 0x20.</span><span class="sxs-lookup"><span data-stu-id="950e7-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-215">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="950e7-216">URI do namespace cujo prefixo que você deseja localizar.</span><span class="sxs-lookup"><span data-stu-id="950e7-216">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="950e7-217">Retorna o prefixo mais próximo definido no escopo atual do namespace para o URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="950e7-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="950e7-218">O prefixo correspondente.</span><span class="sxs-lookup"><span data-stu-id="950e7-218">The matching prefix.</span></span> <span data-ttu-id="950e7-219">Ou <see langword="null" /> se nenhum URI de namespace correspondente for encontrado no escopo atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-220">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-221">O exemplo a seguir grava um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-222"><paramref name="ns" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-222"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-223">Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</span><span class="sxs-lookup"><span data-stu-id="950e7-223">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value>
          <span data-ttu-id="950e7-224"><see langword="true" /> para oferecer suporte a namespaces. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-224"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="950e7-225">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-225">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-226">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-227">Essa propriedade determina se o gravador dá suporte a Namespaces W3C na recomendação XML localizada em www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="950e7-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-228">Você só pode alterar essa propriedade quando estiver no estado <see langword="WriteState.Start" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-229">Obtém ou define o caractere a ser usado para colocar valores de atributos entre aspas.</span><span class="sxs-lookup"><span data-stu-id="950e7-229">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="950e7-230">O caractere a ser usado para colocar valores de atributos entre aspas.</span><span class="sxs-lookup"><span data-stu-id="950e7-230">The character to use to quote attribute values.</span></span> <span data-ttu-id="950e7-231">Isso deve ser uma aspa simples (&amp;#39;) ou aspas duplas (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="950e7-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="950e7-232">O padrão é uma aspa dupla.</span><span class="sxs-lookup"><span data-stu-id="950e7-232">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-233">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-234">Configurar essa propriedade como algo diferente de aspas simples ou aspas duplas.</span><span class="sxs-lookup"><span data-stu-id="950e7-234">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="950e7-235">Matriz de bytes a ser codificada.</span><span class="sxs-lookup"><span data-stu-id="950e7-235">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="950e7-236">A posição dentro do buffer que indica o início dos bytes a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-236">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="950e7-237">O número de bytes a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-237">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="950e7-238">Codifica os bytes binários especificados como base64 e grava o texto resultante.</span><span class="sxs-lookup"><span data-stu-id="950e7-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-239">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-240">O exemplo a seguir codifica um arquivo de entrada usando `WriteBase64` e gera um arquivo XML temporário.</span><span class="sxs-lookup"><span data-stu-id="950e7-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="950e7-241">O arquivo XML temporário é decodificado usando o <xref:System.Xml.XmlTextReader.ReadBase64%2A> método e comparada com o arquivo original.</span><span class="sxs-lookup"><span data-stu-id="950e7-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="950e7-242"><paramref name="buffer" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-242"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-243">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="950e7-244"><paramref name="index" /> ou <paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="950e7-244"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-245">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="950e7-246">Matriz de bytes a ser codificada.</span><span class="sxs-lookup"><span data-stu-id="950e7-246">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="950e7-247">A posição no buffer que indica o início dos bytes a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-247">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="950e7-248">O número de bytes a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-248">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="950e7-249">Codifica os bytes binários especificados como binhex e grava o texto resultante.</span><span class="sxs-lookup"><span data-stu-id="950e7-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-250">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="950e7-251"><paramref name="buffer" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-251"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-252">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="950e7-253"><paramref name="index" /> ou <paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="950e7-253"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-254">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está Fechado.</span><span class="sxs-lookup"><span data-stu-id="950e7-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="950e7-255">O texto a ser colocado no bloco CDATA.</span><span class="sxs-lookup"><span data-stu-id="950e7-255">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="950e7-256">Grava um bloco &lt;![CDATA[...]]&gt; que contém o texto especificado.</span><span class="sxs-lookup"><span data-stu-id="950e7-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-257">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-258">Se `text` é `null` ou `String.Empty`, esse método grava um bloco CDATA vazio, por exemplo \<! [ CDATA []]] ><! [[CDATA] >.</span><span class="sxs-lookup"><span data-stu-id="950e7-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-259">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-259">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-260">O texto poderia resultar em um documento XML malformado.</span><span class="sxs-lookup"><span data-stu-id="950e7-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-261">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="950e7-262">O caractere Unicode para a qual gerar uma entidade de caracteres.</span><span class="sxs-lookup"><span data-stu-id="950e7-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="950e7-263">Força a geração de uma entidade de caracteres para o valor especificado de caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="950e7-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-264">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-265">Esse método grava o caractere Unicode em formato de referência de entidade de caractere hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="950e7-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-266">O exemplo a seguir usa o `WriteCharEntity` método grave um endereço de email.</span><span class="sxs-lookup"><span data-stu-id="950e7-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-267">O caractere está dentro do intervalo de caracteres do par alternativo, <see langword="0xd800" /> - <see langword="0xdfff" />; ou então, o texto pode resultar em um documento XML malformado.</span><span class="sxs-lookup"><span data-stu-id="950e7-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-268">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="950e7-269">Uma matriz de caracteres que contém o texto a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="950e7-270">A posição do buffer que indica o início do texto a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="950e7-271">O número de caracteres a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="950e7-272">Grava texto um buffer por vez.</span><span class="sxs-lookup"><span data-stu-id="950e7-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-273">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-274">Esse método pode ser usado para gravar grandes quantidades de um buffer de texto por vez.</span><span class="sxs-lookup"><span data-stu-id="950e7-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="950e7-275">Tratamento especial deve ser feito para garantir o `WriteChars` método não divide os caracteres do par substituto em várias gravações de buffer.</span><span class="sxs-lookup"><span data-stu-id="950e7-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="950e7-276">A especificação XML define os intervalos válidos de pares substitutos.</span><span class="sxs-lookup"><span data-stu-id="950e7-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="950e7-277">Uma exceção é gerada se caracteres de pares substitutos são gravados que resultaria nos caracteres de par substituto que está sendo divididos em buffer.</span><span class="sxs-lookup"><span data-stu-id="950e7-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="950e7-278"><paramref name="buffer" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="950e7-279"><paramref name="index" /> ou <paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="950e7-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="950e7-280">- ou -</span><span class="sxs-lookup"><span data-stu-id="950e7-280">-or-</span></span>  
  
 <span data-ttu-id="950e7-281">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />; a chamada resulta em caracteres do par alternativo sendo divididos ou na gravação de um par alternativo inválido.</span><span class="sxs-lookup"><span data-stu-id="950e7-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-282">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está Fechado.</span><span class="sxs-lookup"><span data-stu-id="950e7-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="950e7-283">Texto a colocar dentro do comentário.</span><span class="sxs-lookup"><span data-stu-id="950e7-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="950e7-284">Grava um comentário &lt;!--...--&gt; que contém o texto especificado.</span><span class="sxs-lookup"><span data-stu-id="950e7-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-285">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-286">Se `text` é `null` ou `String.Empty`, esse método grava um `Comment` sem dados de conteúdo, por exemplo \<!--->.</span><span class="sxs-lookup"><span data-stu-id="950e7-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-287">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-288">O texto pode resultar em um documento XML malformado</span><span class="sxs-lookup"><span data-stu-id="950e7-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-289">O <see cref="P:System.Xml.XmlTextWriter.WriteState" /> é <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="950e7-290">O nome do DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="950e7-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="950e7-291">Isso deve ser não vazio.</span><span class="sxs-lookup"><span data-stu-id="950e7-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="950e7-292">Se for não nulo, ele também grava PUBLIC "pubid" "sysid", em que <c>pubid</c> e <c>sysid</c> são substituídos pelo valor dos argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="950e7-292">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="950e7-293">Se <c>pubid</c> for nulo e <c>sysid</c> não for nulo, ele grava SYSTEM "sysid", em que <c>sysid</c> é substituído pelo valor desse argumento.</span><span class="sxs-lookup"><span data-stu-id="950e7-293">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="950e7-294">Se não for nulo, ele gravará [subset], em que subset é substituído pelo valor desse argumento.</span><span class="sxs-lookup"><span data-stu-id="950e7-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="950e7-295">Grava a declaração DOCTYPE com o nome especificado e os atributos opcionais.</span><span class="sxs-lookup"><span data-stu-id="950e7-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-296">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-297">Este método não verifica se há caracteres inválidos no `pubid`, `sysid` ou `subset`.</span><span class="sxs-lookup"><span data-stu-id="950e7-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="950e7-298">Ele também não verifica se o subconjunto interno está bem formado.</span><span class="sxs-lookup"><span data-stu-id="950e7-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="950e7-299">O <xref:System.Xml.XmlTextWriter> não valida os dados que são passados para o <xref:System.Xml.XmlTextWriter.WriteDocType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="950e7-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="950e7-300">Você não deve passar dados arbitrários para este método.</span><span class="sxs-lookup"><span data-stu-id="950e7-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-301">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-302">Esse método foi chamado fora do prólogo (após o elemento raiz).</span><span class="sxs-lookup"><span data-stu-id="950e7-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-303"><paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="950e7-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
 <span data-ttu-id="950e7-304">- ou -</span><span class="sxs-lookup"><span data-stu-id="950e7-304">-or-</span></span>  
  
 <span data-ttu-id="950e7-305">o valor de <paramref name="name" /> resultaria em um XML inválido.</span><span class="sxs-lookup"><span data-stu-id="950e7-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-306">Fecha a chamada <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> anterior.</span><span class="sxs-lookup"><span data-stu-id="950e7-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-307">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-308">Se você chamar `WriteStartAttribute`, você pode fechar o atributo com esse método.</span><span class="sxs-lookup"><span data-stu-id="950e7-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="950e7-309">Você também pode fechar o atributo chamando `WriteStartAttribute` novamente, chamando <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, ou chamar <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="950e7-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-310">O exemplo a seguir grava um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-311">Fecha os possíveis elementos ou atributos abertos e coloca o gravador de volta no estado Inicial.</span><span class="sxs-lookup"><span data-stu-id="950e7-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-312">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-313">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-314">O documento XML é inválido.</span><span class="sxs-lookup"><span data-stu-id="950e7-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-315">Fecha um elemento e aciona o escopo de namespace correspondente.</span><span class="sxs-lookup"><span data-stu-id="950e7-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-316">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-317">Se o elemento não possui nenhum conteúdo curto marca de fim "/ >" é gravado; Caso contrário, uma marca de fim completo será gravada.</span><span class="sxs-lookup"><span data-stu-id="950e7-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-318">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="950e7-319">Nome da referência de entidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="950e7-320">Grava uma referência de entidade como <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-321">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-322">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-323">O texto pode resultar em um documento XML malformado ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-324">Fecha um elemento e aciona o escopo de namespace correspondente.</span><span class="sxs-lookup"><span data-stu-id="950e7-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-325">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-326">Esse método sempre grava a marca final completa.</span><span class="sxs-lookup"><span data-stu-id="950e7-326">This method always writes the full end tag.</span></span> <span data-ttu-id="950e7-327">Isso é útil ao lidar com os elementos que devem incluir uma marca de fim completo.</span><span class="sxs-lookup"><span data-stu-id="950e7-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="950e7-328">Por exemplo, navegadores esperam blocos de script HTML a ser fechado com " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="950e7-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-329">O exemplo a seguir grava um elemento sem conteúdo.</span><span class="sxs-lookup"><span data-stu-id="950e7-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="950e7-330">Ele usa WriteFullEndElement para gravar a marca do elemento final completa.</span><span class="sxs-lookup"><span data-stu-id="950e7-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="950e7-331">Nome para gravação.</span><span class="sxs-lookup"><span data-stu-id="950e7-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="950e7-332">Grava o nome especificado, garantindo que ele seja um nome válido de acordo com a recomendação do W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="950e7-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-333">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-334">Se <xref:System.Xml.XmlTextWriter.Namespaces%2A> é definido como `true`, `WriteName` também verifica se o nome também é válido de acordo com os Namespaces W3C na recomendação XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-335"><paramref name="name" /> não é um nome XML válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="950e7-336">Nome para gravação.</span><span class="sxs-lookup"><span data-stu-id="950e7-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="950e7-337">Grava o nome especificado, garantindo que ele seja um <see langword="NmToken" /> válido de acordo com a recomendação do W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="950e7-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-338">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-339"><paramref name="name" /> não é um <see langword="NmToken" /> válido; ou <paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="950e7-340">Nome da instrução de processamento.</span><span class="sxs-lookup"><span data-stu-id="950e7-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="950e7-341">Texto a ser incluído na instrução de processamento.</span><span class="sxs-lookup"><span data-stu-id="950e7-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="950e7-342">Grava uma instrução de processamento com um espaço entre o nome e o texto da seguinte maneira: &lt;?nome texto?&gt;.</span><span class="sxs-lookup"><span data-stu-id="950e7-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-343">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-344">Se `text` é `null` ou `String.Empty`, esse método grava um `ProcessingInstruction` sem dados de conteúdo, por exemplo \<? nome? >.</span><span class="sxs-lookup"><span data-stu-id="950e7-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-345">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-346">O texto poderia resultar em um documento XML malformado.</span><span class="sxs-lookup"><span data-stu-id="950e7-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="950e7-347"><paramref name="name" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="950e7-348">Esse método está sendo usado para criar uma declaração XML após uma chamada a <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="950e7-349">O nome local a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="950e7-350">O URI do namespace para associar ao nome.</span><span class="sxs-lookup"><span data-stu-id="950e7-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="950e7-351">Grava o nome qualificado do namespace.</span><span class="sxs-lookup"><span data-stu-id="950e7-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="950e7-352">Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</span><span class="sxs-lookup"><span data-stu-id="950e7-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-353">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-354">Por exemplo, o seguinte código do Microsoft Visual c#:</span><span class="sxs-lookup"><span data-stu-id="950e7-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="950e7-355">Gera a saída a seguir:</span><span class="sxs-lookup"><span data-stu-id="950e7-355">Generates the following output:</span></span>  
  
```  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="950e7-356">Se `ns` mapeia para o namespace padrão atual, nenhum prefixo é gerado.</span><span class="sxs-lookup"><span data-stu-id="950e7-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="950e7-357">Ao gravar valores de atributo, esse método gera um prefixo se `ns` não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="950e7-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="950e7-358">Ao gravar o conteúdo do elemento, gera uma exceção se `ns` não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="950e7-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="950e7-359">Se esse gravador dá suporte a namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> é definido como `true`), esse método também verifica se o nome é válido de acordo com os Namespaces W3C na recomendação XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="950e7-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-360">O exemplo a seguir grava uma parte de um esquema XSD.</span><span class="sxs-lookup"><span data-stu-id="950e7-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-361"><paramref name="localName" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="950e7-362"><paramref name="localName" /> não é um nome válido de acordo com a especificação de Namespaces do W3C.</span><span class="sxs-lookup"><span data-stu-id="950e7-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950e7-363">Grava a marcação bruta manualmente.</span><span class="sxs-lookup"><span data-stu-id="950e7-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-364">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="950e7-365">A cadeia de caracteres que contém o texto a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="950e7-366">Grava a marcação bruta manualmente de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="950e7-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-367">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-368">Esse método não escapar caracteres especiais.</span><span class="sxs-lookup"><span data-stu-id="950e7-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="950e7-369">O <xref:System.Xml.XmlTextWriter> não valida os dados que são passados para o <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="950e7-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="950e7-370">Você não deve passar dados arbitrários para este método.</span><span class="sxs-lookup"><span data-stu-id="950e7-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-371">O exemplo a seguir grava uma cadeia de caracteres usando o `WriteRaw` método.</span><span class="sxs-lookup"><span data-stu-id="950e7-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="950e7-372">Uma matriz de caracteres que contém o texto a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="950e7-373">A posição no buffer que indica o início do texto a ser escrito.</span><span class="sxs-lookup"><span data-stu-id="950e7-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="950e7-374">O número de caracteres a serem gravados.</span><span class="sxs-lookup"><span data-stu-id="950e7-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="950e7-375">Grava a marcação bruta manualmente de um buffer de caracteres.</span><span class="sxs-lookup"><span data-stu-id="950e7-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-376">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-377">Esse método não escapar caracteres especiais.</span><span class="sxs-lookup"><span data-stu-id="950e7-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="950e7-378">O <xref:System.Xml.XmlTextWriter> não valida os dados que são passados para o <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="950e7-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="950e7-379">Você não deve passar dados arbitrários para este método.</span><span class="sxs-lookup"><span data-stu-id="950e7-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="950e7-380"><paramref name="buffer" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="950e7-381"><paramref name="index" /> ou <paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="950e7-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="950e7-382">- ou -</span><span class="sxs-lookup"><span data-stu-id="950e7-382">-or-</span></span>  
  
 <span data-ttu-id="950e7-383">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="950e7-384">O prefixo <see langword="Namespace" /> do atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName">
          <span data-ttu-id="950e7-385"><see langword="LocalName" /> do atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns">
          <span data-ttu-id="950e7-386"><see langword="NamespaceURI" /> do atributo</span><span class="sxs-lookup"><span data-stu-id="950e7-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="950e7-387">Grava o início de um atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-388">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-389">Esta é uma versão mais avançada de <xref:System.Xml.XmlWriter.WriteAttributeString%2A> que permite gravar um valor de atributo usando vários métodos de gravação, como <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="950e7-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-390">O exemplo a seguir grava um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="950e7-391"><paramref name="localName" /> é <see langword="null" /> ou <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="950e7-392">Grava a declaração XML com a versão "1.0".</span><span class="sxs-lookup"><span data-stu-id="950e7-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-393">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="950e7-394">Grava a declaração XML com a versão "1.0".</span><span class="sxs-lookup"><span data-stu-id="950e7-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-395">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-396">O nível de codificação do documento é determinado por como o gravador é implementado.</span><span class="sxs-lookup"><span data-stu-id="950e7-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="950e7-397">Por exemplo, se um <xref:System.Text.Encoding> especificado no objeto de `XmlTextWriter` construtor, isso determina o valor do atributo de codificação.</span><span class="sxs-lookup"><span data-stu-id="950e7-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="950e7-398">Este método não cria um atributo autônomo.</span><span class="sxs-lookup"><span data-stu-id="950e7-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="950e7-399">Quando `WriteStartDocument` é chamado o gravador valida que você está escrevendo um documento XML bem formado.</span><span class="sxs-lookup"><span data-stu-id="950e7-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="950e7-400">Por exemplo, ele verifica se a declaração XML é o primeiro nó, um e somente um elemento de nível raiz existe e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="950e7-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="950e7-401">Se esse método não for chamado, o gravador pressupõe um fragmento XML está sendo gravado e se aplica a nenhuma regra de nível raiz.</span><span class="sxs-lookup"><span data-stu-id="950e7-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="950e7-402">Se `WriteStartDocument` foi chamado e, em seguida, o <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método é usado para criar outra declaração XML, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="950e7-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-403">O exemplo a seguir grava um arquivo XML que representa um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-404">Este não é o primeiro método de gravação chamado após o construtor.</span><span class="sxs-lookup"><span data-stu-id="950e7-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="950e7-405">Se <see langword="true" />, grava "standalone=yes"; se <see langword="false" />, ele grava "standalone=no".</span><span class="sxs-lookup"><span data-stu-id="950e7-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="950e7-406">Grava a declaração XML com a versão “1.0” e o atributo autônomo.</span><span class="sxs-lookup"><span data-stu-id="950e7-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-407">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-408">O nível de codificação do documento é determinado por como o gravador é implementado.</span><span class="sxs-lookup"><span data-stu-id="950e7-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="950e7-409">Por exemplo, se um <xref:System.Text.Encoding> especificado no objeto de `XmlTextWriter` construtor, isso determina o valor do atributo de codificação.</span><span class="sxs-lookup"><span data-stu-id="950e7-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="950e7-410">Quando `WriteStartDocument` é chamado o gravador valida que você está escrevendo um documento XML bem formado.</span><span class="sxs-lookup"><span data-stu-id="950e7-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="950e7-411">Por exemplo, ele verifica se a declaração XML é o primeiro nó, um e somente um elemento de nível raiz existe e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="950e7-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="950e7-412">Se esse método não for chamado, o gravador pressupõe um fragmento XML está sendo gravado e se aplica a nenhuma regra de nível raiz.</span><span class="sxs-lookup"><span data-stu-id="950e7-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="950e7-413">Se `WriteStartDocument` foi chamado e, em seguida, o <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método é usado para criar outra declaração XML, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="950e7-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-414">Este não é o primeiro método de gravação chamado após o construtor.</span><span class="sxs-lookup"><span data-stu-id="950e7-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="950e7-415">O prefixo do namespace do elemento.</span><span class="sxs-lookup"><span data-stu-id="950e7-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="950e7-416">O nome local do elemento.</span><span class="sxs-lookup"><span data-stu-id="950e7-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="950e7-417">O URI do namespace a ser associado ao elemento.</span><span class="sxs-lookup"><span data-stu-id="950e7-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="950e7-418">Se este namespace já estiver no escopo e tiver um prefixo associado, o gravador também gravará automaticamente esse prefixo.</span><span class="sxs-lookup"><span data-stu-id="950e7-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="950e7-419">Grava a marca de início especificada e a associa ao prefixo e ao namespace determinados.</span><span class="sxs-lookup"><span data-stu-id="950e7-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-420">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-421">Depois de chamar esse método, você pode gravar atributos ou criar conteúdo usando <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, ou <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> para elementos filho.</span><span class="sxs-lookup"><span data-stu-id="950e7-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="950e7-422">Você pode fechar o elemento com <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> momento em que uma marca de fim é gravada.</span><span class="sxs-lookup"><span data-stu-id="950e7-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-423">O exemplo a seguir grava um livro.</span><span class="sxs-lookup"><span data-stu-id="950e7-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="950e7-424">O gravador está fechado.</span><span class="sxs-lookup"><span data-stu-id="950e7-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-425">Obtém o estado do gravador.</span><span class="sxs-lookup"><span data-stu-id="950e7-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="950e7-426">Um dos valores de <see cref="T:System.Xml.WriteState" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-427">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="950e7-428">O texto a ser gravado.</span><span class="sxs-lookup"><span data-stu-id="950e7-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="950e7-429">Grava o conteúdo de texto especificado.</span><span class="sxs-lookup"><span data-stu-id="950e7-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-430">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-431">`WriteString` faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="950e7-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="950e7-432">Os caracteres `&`, `<`, e `>` são substituídos por `&amp;`, `&lt;`, e `&gt;`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="950e7-433">Valores de caractere em x-0x1F o intervalo de 0 (excluindo o espaço em branco caracteres 0x9 0xA e 0xD) são substituídos por entidades de caractere numérico (`&#0;` por meio de `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="950e7-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="950e7-434">Se `WriteString` é chamado no contexto de um valor de atributo, aspas simples e duplas são substituídas por `&quot;` e `&apos;` respectivamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="950e7-435">Por exemplo, essa cadeia de caracteres de entrada `test<item>test` é gravada como</span><span class="sxs-lookup"><span data-stu-id="950e7-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="950e7-436">Se `text` é `null` ou `String.Empty`, esse método grava um nó de texto sem conteúdo de dados.</span><span class="sxs-lookup"><span data-stu-id="950e7-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-437">O exemplo a seguir grava um fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="950e7-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-438">A cadeia de caracteres contém um par alternativo inválido.</span><span class="sxs-lookup"><span data-stu-id="950e7-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="950e7-439">A alternativa baixa.</span><span class="sxs-lookup"><span data-stu-id="950e7-439">The low surrogate.</span></span> <span data-ttu-id="950e7-440">Deve ser um valor entre <see langword="0xDC00" /> e <see langword="0xDFFF" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="950e7-441">A alternativa alta.</span><span class="sxs-lookup"><span data-stu-id="950e7-441">The high surrogate.</span></span> <span data-ttu-id="950e7-442">Deve ser um valor entre <see langword="0xD800" /> e <see langword="0xDBFF" />.</span><span class="sxs-lookup"><span data-stu-id="950e7-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="950e7-443">Gera e grava a entidade de caracteres alternativos para o par de caracteres alternativos.</span><span class="sxs-lookup"><span data-stu-id="950e7-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-444">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-445">Esse método só é aplicável em sistemas que usam a codificação UTF-16.</span><span class="sxs-lookup"><span data-stu-id="950e7-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="950e7-446">A entidade de caractere substituto é gravada em formato hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="950e7-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="950e7-447">O intervalo de caracteres substitutos é `#x10000` para `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="950e7-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="950e7-448">A fórmula a seguir é usada para gerar a entidade de caractere substituto: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="950e7-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="950e7-449">Para HTML e XML, o conjunto de caracteres do documento (e, portanto, a notação de referências de caractere numérico) são baseados em UCS [ISO 10646].</span><span class="sxs-lookup"><span data-stu-id="950e7-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="950e7-450">Uma referência de caractere numérico único em um documento de origem, portanto, pode em alguns casos corresponder a duas unidades de 16 bits em uma cadeia de caracteres (um substituto alto e um substituto baixo).</span><span class="sxs-lookup"><span data-stu-id="950e7-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="950e7-451">Essas unidades de 16 bits são chamadas de um par substituto.</span><span class="sxs-lookup"><span data-stu-id="950e7-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="950e7-452">Para obter mais informações sobre caracteres ou substitutos, consulte a seção 3.7 do Unicode 3.0/Unicode 2.0 padrão localizado em http://www.unicode.org, ou a seção 2.2 da recomendação W3C XML 1.0 localizado em http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="950e7-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="950e7-453">Um par de caracteres alternativos inválido foi passado.</span><span class="sxs-lookup"><span data-stu-id="950e7-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="950e7-454">A cadeia de caracteres de espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="950e7-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="950e7-455">Grava o espaço em branco determinado.</span><span class="sxs-lookup"><span data-stu-id="950e7-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-456">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-457">Esse método é usado para formatar manualmente seu documento.</span><span class="sxs-lookup"><span data-stu-id="950e7-457">This method is used to manually format your document.</span></span> <span data-ttu-id="950e7-458">Use o <xref:System.Xml.XmlTextWriter.Formatting%2A> propriedade para que o gravador de formatar a saída automaticamente.</span><span class="sxs-lookup"><span data-stu-id="950e7-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-459">O exemplo a seguir usa o `WriteWhitespace` método para controlar como o arquivo é formatado.</span><span class="sxs-lookup"><span data-stu-id="950e7-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="950e7-460">A cadeia de caracteres contém caracteres que não sejam em branco.</span><span class="sxs-lookup"><span data-stu-id="950e7-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-461">Obtém o escopo de <see langword="xml:lang" /> atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="950e7-462">O <see langword="xml:lang" /> ou <see langword="null" /> atual se não houver nenhum <see langword="xml:lang" /> no escopo atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-463">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-464">Esta propriedade permite que um componente descobrir que estado de outro componente deixou o gravador.</span><span class="sxs-lookup"><span data-stu-id="950e7-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="950e7-465">Por exemplo, talvez um componente quer dizer que texto de ajuda de idioma para gerar a outra.</span><span class="sxs-lookup"><span data-stu-id="950e7-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="950e7-466">As informações de idioma são comunicadas escrevendo um `xml:lang` atributo.</span><span class="sxs-lookup"><span data-stu-id="950e7-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="950e7-467">Obtém um <see cref="T:System.Xml.XmlSpace" /> que representa o escopo de <see langword="xml:space" /> atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="950e7-468">Um <see langword="XmlSpace" /> que representa o escopo de <see langword="xml:space" /> atual.</span><span class="sxs-lookup"><span data-stu-id="950e7-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="950e7-469"><list type="table"><listheader><term> Valor</span><span class="sxs-lookup"><span data-stu-id="950e7-469"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="950e7-470"></term><description> Significado</span><span class="sxs-lookup"><span data-stu-id="950e7-470"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="950e7-471"></description></listheader><item><term> Nenhum</span><span class="sxs-lookup"><span data-stu-id="950e7-471"></description></listheader><item><term> None</span></span>  
  
 <span data-ttu-id="950e7-472"></term><description> Esse é o padrão se nenhuma <see langword="xml:space" /> existe escopo.</span><span class="sxs-lookup"><span data-stu-id="950e7-472"></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="950e7-473"></description></item><item><term> Padrão</span><span class="sxs-lookup"><span data-stu-id="950e7-473"></description></item><item><term> Default</span></span>  
  
 <span data-ttu-id="950e7-474"></term><description> O escopo atual é <see langword="xml:space" />= "padrão".</span><span class="sxs-lookup"><span data-stu-id="950e7-474"></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="950e7-475"></description></item><item><term> Preservar</span><span class="sxs-lookup"><span data-stu-id="950e7-475"></description></item><item><term> Preserve</span></span>  
  
 <span data-ttu-id="950e7-476"></term><description> O escopo atual é <see langword="xml:space" />= "preserve".</span><span class="sxs-lookup"><span data-stu-id="950e7-476"></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="950e7-477">Começando com o .NET Framework 2.0, é recomendável que você crie <xref:System.Xml.XmlWriter> instâncias usando o <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método e o <xref:System.Xml.XmlWriterSettings> classe para tirar proveito da nova funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="950e7-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="950e7-478">Esta propriedade permite que um componente descobrir em qual estado a que outro componente deixou o gravador.</span><span class="sxs-lookup"><span data-stu-id="950e7-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="950e7-479">O exemplo a seguir usa o `WriteWhitespace` método para controlar como o arquivo é formatado.</span><span class="sxs-lookup"><span data-stu-id="950e7-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>