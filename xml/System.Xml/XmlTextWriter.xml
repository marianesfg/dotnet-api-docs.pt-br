<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlTextWriter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b2dfec50e813dc928679ed1e8424877f3b9f797b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2dfec50e813dc928679ed1e8424877f3b9f797b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextWriter">
          <source>Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</source>
          <target state="translated">Representa um gravador que fornece um modo rápido não armazenado em cache e somente de encaminhamento para gerar fluxos ou arquivos que contém dados XML em conformidade com o W3C Extensible Markup Language (XML) 1.0 e os Namespaces nas recomendações de XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextWriter">
          <source>Starting with the .NET Framework 2.0, we recommend that you use the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class instead.</source>
          <target state="translated">A partir do .NET Framework 2.0, recomendamos o uso da classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>This class implements the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class.</source>
          <target state="translated">Essa classe implementa o <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source><ph id="ph1">`XmlTextWriter`</ph> maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</source>
          <target state="translated"><ph id="ph1">`XmlTextWriter`</ph> mantém uma pilha de namespace correspondente a todos os namespaces definidos na pilha do elemento atual.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Using <ph id="ph1">`XmlTextWriter`</ph> you can declare namespaces manually.</source>
          <target state="translated">Usando <ph id="ph1">`XmlTextWriter`</ph> você pode declarar namespaces manualmente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The above C# code produces the following output.</source>
          <target state="translated">O código c# acima produz a saída a seguir.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source><ph id="ph1">`XmlTextWriter`</ph> promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</source>
          <target state="translated"><ph id="ph1">`XmlTextWriter`</ph> promove a declaração de namespace para o elemento raiz para evitar que ele duplicado nos dois elementos filho.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The child elements pick up the prefix from the namespace declaration.</source>
          <target state="translated">Os elementos filho pegar o prefixo da declaração de namespace.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source><ph id="ph1">`XmlTextWriter`</ph> also allows you to override the current namespace declaration.</source>
          <target state="translated"><ph id="ph1">`XmlTextWriter`</ph> também permite que você substitua a declaração de namespace atual.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element <ph id="ph1">`&lt;x:node xmlns:x="abc"/&gt;`</ph>.</source>
          <target state="translated">No exemplo a seguir, o namespace URI "123" é substituído por "abc" para produzir o elemento XML <ph id="ph1">`&lt;x:node xmlns:x="abc"/&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>By using the write methods that take a prefix as an argument you can also specify which prefix to use.</source>
          <target state="translated">Usando os métodos de gravação que usam um prefixo como um argumento você também pode especificar qual prefixo a ser usado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text <ph id="ph1">`&lt;x:root xmlns:x="urn:1"&gt;&lt;y:item xmlns:y="urn:1"/&gt;&lt;/x:root&gt;`</ph>.</source>
          <target state="translated">No exemplo a seguir, dois prefixos diferentes são mapeados para o mesmo namespace URI para produzir o texto XML <ph id="ph1">`&lt;x:root xmlns:x="urn:1"&gt;&lt;y:item xmlns:y="urn:1"/&gt;&lt;/x:root&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If there are multiple namespace declarations mapping different prefixes to the same namespace URI, <ph id="ph1">`XmlTextWriter`</ph> walks the stack of namespace declarations backwards and picks the closest one.</source>
          <target state="translated">Se houver várias declarações de namespace mapeamento prefixos diferentes para o mesmo URI de namespace <ph id="ph1">`XmlTextWriter`</ph> examina a pilha de declarações de namespace com versões anteriores e escolhe um mais próximo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>In the above C# example, because the <ph id="ph1">`WriteAttributeString`</ph> call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</source>
          <target state="translated">No c# de exemplo acima, pois o <ph id="ph1">`WriteAttributeString`</ph> chamada não especifica um prefixo, o gravador usa o prefixo de último inserido na pilha de namespace e produz o seguinte XML:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If namespace conflicts occur, <ph id="ph1">`XmlTextWriter`</ph> resolves them by generating alternate prefixes.</source>
          <target state="translated">Se ocorrerem conflitos de namespace, <ph id="ph1">`XmlTextWriter`</ph> resolve-los por meio da geração prefixos alternativos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>For example, if an attribute and element have the same prefix but different namespaces, <ph id="ph1">`XmlWriter`</ph> generates an alternate prefix for the attribute.</source>
          <target state="translated">Por exemplo, se um atributo e elemento tem o mesmo prefixo namespaces mas diferentes, <ph id="ph1">`XmlWriter`</ph> gera um prefixo alternativo para o atributo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The generated prefixes are named <ph id="ph1">`n{i}`</ph> where <ph id="ph2">`i`</ph> is a number beginning at 1.</source>
          <target state="translated">Os prefixos gerados são nomeados <ph id="ph1">`n{i}`</ph> onde <ph id="ph2">`i`</ph> é um número que começa em 1.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The number is reset to 1 for each element.</source>
          <target state="translated">O número é redefinido para 1 para cada elemento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</source>
          <target state="translated">Atributos que estão associados com um URI de namespace devem ter um prefixo (namespaces não se aplicam aos atributos padrão).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</source>
          <target state="translated">Isso está de acordo com a seção 5.2 dos Namespaces W3C na recomendação XML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</source>
          <target state="translated">Se um atributo faz referência a um URI de namespace, mas não especifica um prefixo, o gravador gera um prefixo para o atributo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>When writing an empty element, an additional space is added between tag name and the closing tag, for example <ph id="ph1">`&lt;item /&gt;`</ph>.</source>
          <target state="translated">Ao gravar um elemento vazio, um espaço é adicionado entre o nome da marca e a marca de fechamento, por exemplo <ph id="ph1">`&lt;item /&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>This provides compatibility with older browsers.</source>
          <target state="translated">Isso fornece compatibilidade com navegadores mais antigos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>When a <ph id="ph1">`String`</ph> is used as method parameter, <ph id="ph2">`null`</ph> and <ph id="ph3">`String.Empty`</ph> are equivalent.</source>
          <target state="translated">Quando um <ph id="ph1">`String`</ph> é usada como parâmetro de método <ph id="ph2">`null`</ph> e <ph id="ph3">`String.Empty`</ph> são equivalentes.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source><ph id="ph1">`String.Empty`</ph> follows the W3C rules.</source>
          <target state="translated"><ph id="ph1">`String.Empty`</ph> segue as regras do W3C.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>To write strongly typed data, use the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert data types to string.</source>
          <target state="translated">Para gravar dados fortemente tipados, use o <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> classe para converter tipos de dados de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>For example, the following C# code converts the data from <ph id="ph1">`Double`</ph> to <ph id="ph2">`String`</ph> and writes the element <ph id="ph3">`&lt;price&gt;19.95&lt;/price&gt;`</ph>.</source>
          <target state="translated">Por exemplo, o código c# a seguir converte os dados de <ph id="ph1">`Double`</ph> para <ph id="ph2">`String`</ph> e grava o elemento <ph id="ph3">`&lt;price&gt;19.95&lt;/price&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source><ph id="ph1">`XmlTextWriter`</ph> does not check for the following:</source>
          <target state="translated"><ph id="ph1">`XmlTextWriter`</ph> não verifica o seguinte:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Invalid characters in attribute and element names.</source>
          <target state="translated">Caracteres inválidos em nomes de elementos e atributos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Unicode characters that do not fit the specified encoding.</source>
          <target state="translated">Caracteres Unicode que não se ajustarem à codificação especificada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If the Unicode characters do not fit the specified encoding, the <ph id="ph1">`XmlTextWriter`</ph> does not escape the Unicode characters into character entities.</source>
          <target state="translated">Se os caracteres Unicode que não se ajustarem à codificação especificada, o <ph id="ph1">`XmlTextWriter`</ph> não escapa os caracteres Unicode em entidades de caractere.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Duplicate attributes.</source>
          <target state="translated">Atributos duplicados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Characters in the DOCTYPE public identifier or system identifier.</source>
          <target state="translated">Caracteres de identificador público DOCTYPE ou um identificador de sistema.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Security Considerations</source>
          <target state="translated">Considerações sobre segurança</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The following items are things to consider when working with the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Os seguintes itens são coisas a serem consideradas ao trabalhar com o <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> can disclose path information that you do not want bubbled up to the application.</source>
          <target state="translated">Exceções geradas pelo <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> pode divulgar informações de caminho que você deseja não transferidos até o aplicativo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Your applications must catch exceptions and process them appropriately.</source>
          <target state="translated">Os aplicativos devem capturar exceções e processar-las apropriadamente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>When you pass the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> to another application the underlying stream is exposed to that application.</source>
          <target state="translated">Quando você passa o <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> para outro aplicativo, o fluxo subjacente é exposto ao aplicativo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If you need to pass the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> to a semi-trusted application, you should use an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object created by the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method instead.</source>
          <target state="translated">Se você precisar passar <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> a um aplicativo de confiança parcial, você deve usar um objeto de <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> criado pelo método de <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> methods.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> não valida os dados que são passados para o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>You should not pass arbitrary data to these methods.</source>
          <target state="translated">Você não deve passar dados arbitrários para esses métodos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</source>
          <target state="translated">Se as configurações padrão forem alteradas, não há nenhuma garantia de que a saída gerada é dados XML bem formado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Do not accept supporting components, such as an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object, from an untrusted source.</source>
          <target state="translated">Não aceitar componentes de suporte, como um <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> objeto, de uma fonte não confiável.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextWriter">
          <source>Creates an instance of the <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated">Cria uma instância de <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> to write to.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> no qual ocorrerá a gravação.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It is assumed that the <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> is already set to the correct encoding.</source>
          <target state="translated">Supõe-se que <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> já esteja definido como a codificação correta.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Creates an instance of the <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Cria uma instância da classe <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream to which you want to write.</source>
          <target state="translated">O fluxo no qual você deseja fazer a gravação.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The encoding to generate.</source>
          <target state="translated">A codificação a ser gerada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>If encoding is <ph id="ph1">&lt;see langword="null" /&gt;</ph> it writes out the stream as UTF-8 and omits the encoding attribute from the <ph id="ph2">&lt;see langword="ProcessingInstruction" /&gt;</ph>.</source>
          <target state="translated">Se a codificação for <ph id="ph1">&lt;see langword="null" /&gt;</ph>, ele gravará o fluxo como UTF-8 e omitirá o atributo de codificação do <ph id="ph2">&lt;see langword="ProcessingInstruction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Creates an instance of the <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> class using the specified stream and encoding.</source>
          <target state="translated">Cria uma instância da classe <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> usando o fluxo e a codificação especificados.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The encoding is not supported or the stream cannot be written to.</source>
          <target state="translated">Não há suporte para a codificação ou não é possível gravar no fluxo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The filename to write to.</source>
          <target state="translated">O nome do arquivo para gravação.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>If the file exists, it truncates it and overwrites it with the new content.</source>
          <target state="translated">Se o arquivo existir, ele será truncado e substituído pelo novo conteúdo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The encoding to generate.</source>
          <target state="translated">A codificação a ser gerada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>If encoding is <ph id="ph1">&lt;see langword="null" /&gt;</ph> it writes the file out as UTF-8, and omits the encoding attribute from the <ph id="ph2">&lt;see langword="ProcessingInstruction" /&gt;</ph>.</source>
          <target state="translated">Se a codificação for <ph id="ph1">&lt;see langword="null" /&gt;</ph>, ele gravará o arquivo como UTF-8 e omitirá o atributo de codificação do <ph id="ph2">&lt;see langword="ProcessingInstruction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph> class using the specified file.</source>
          <target state="translated">Cria uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextWriter" /&gt;</ph> usando o arquivo especificado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated">Não há suporte para a codificação; o nome do arquivo está vazio, contém somente espaços em branco ou contém um ou mais caracteres inválidos.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>Access is denied.</source>
          <target state="translated">O acesso foi negado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The filename is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O nome do arquivo é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The directory to write to is not found.</source>
          <target state="translated">O diretório de gravação não foi encontrado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated">O nome do arquivo inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe do rótulo do volume.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">O chamador não tem a permissão necessária.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>Gets the underlying stream object.</source>
          <target state="translated">Obtém o objeto do fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>The stream to which the <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> is writing or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;see langword="XmlTextWriter" /&gt;</ph> was constructed using a <ph id="ph4">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that does not inherit from the <ph id="ph5">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class.</source>
          <target state="translated">O fluxo ao qual o <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> está gravando ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se o <ph id="ph3">&lt;see langword="XmlTextWriter" /&gt;</ph> foi criado usando um <ph id="ph4">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> que não herda da classe <ph id="ph5">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>If the writer was constructed using a <ph id="ph1">`TextWriter`</ph> that is derived from the <ph id="ph2">`StreamWriter`</ph> class, this property is equivalent to the <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Se o gravador foi criado usando um <ph id="ph1">`TextWriter`</ph> que é derivado do <ph id="ph2">`StreamWriter`</ph> classe, essa propriedade é equivalente ao <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>If the writer was constructed using a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, this property returns the <ph id="ph2">`Stream`</ph> passed to the constructor.</source>
          <target state="translated">Se o gravador foi criado usando um <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, essa propriedade retorna o <ph id="ph2">`Stream`</ph> transmitido ao construtor.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.BaseStream">
          <source>If the writer was constructed using a file name, this property returns the <ph id="ph1">`Stream`</ph> representing the file.</source>
          <target state="translated">Se o gravador foi construído usando um nome de arquivo, essa propriedade retorna o <ph id="ph1">`Stream`</ph> que representa o arquivo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.Close">
          <source>Closes this stream and the underlying stream.</source>
          <target state="translated">Fecha este fluxo e o fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Close">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Close">
          <source>Any elements or attributes left open are automatically closed.</source>
          <target state="translated">Os elementos ou atributos deixados abertos são fechados automaticamente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Close">
          <source>This method does not throw any exceptions.</source>
          <target state="translated">Este método não lança exceções.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Close">
          <source>The following example writes an XML fragment.</source>
          <target state="translated">O exemplo a seguir grava um fragmento XML.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.Flush">
          <source>Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">Libera o que está no buffer para os fluxos subjacentes e também libera o fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Flush">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Flush">
          <source>This is called instead of <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Close%2A&gt;</ph> when you want to write more to the underlying stream without losing what is still in the buffer.</source>
          <target state="translated">Isso é chamado em vez de <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Close%2A&gt;</ph> quando quiser gravar mais para o fluxo subjacente sem perder o que é ainda no buffer.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.Flush">
          <source>The following example writes out two XML fragments.</source>
          <target state="translated">O exemplo a seguir grava dois fragmentos XML.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Indicates how the output is formatted.</source>
          <target state="translated">Indica como a saída é formatada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Formatting" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Xml.Formatting" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>The default is <ph id="ph1">&lt;see langword="Formatting.None" /&gt;</ph> (no special formatting).</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="Formatting.None" /&gt;</ph> (sem formatação especial).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>If the <ph id="ph1">`Indented`</ph> option is set, child elements are indented using the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.Indentation%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.IndentChar%2A&gt;</ph> properties.</source>
          <target state="translated">Se o <ph id="ph1">`Indented`</ph> opção for definida, os elementos filho são recuados usando o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.Indentation%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.IndentChar%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Only element content is indented.</source>
          <target state="translated">Conteúdo do elemento é recuado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>The following C# code writes out HTML elements including mixed content:</source>
          <target state="translated">O código c# a seguir grava elementos HTML, inclusive conteúdo misto:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>The above code produces the following output:</source>
          <target state="translated">O código acima produz a seguinte saída:</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>When this is viewed in HTML no white space appears between the bold and italic elements.</source>
          <target state="translated">Quando isso for exibido em HTML sem espaço em branco aparece entre os elementos em negrito e itálicos.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</source>
          <target state="translated">Na verdade, neste exemplo, se Recuar foi adicionado entre esses elementos a palavra "Elefante" será interrompida incorretamente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Writing any text content, excluding <ph id="ph1">`String.Empty`</ph> puts that element into mixed content mode.</source>
          <target state="translated">Gravar qualquer texto conteúdo, exceto <ph id="ph1">`String.Empty`</ph> coloca esse elemento de conteúdo misto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Child elements do not inherit this "mixed" mode status.</source>
          <target state="translated">Elementos filho não herdam esse status de "" misto.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</source>
          <target state="translated">Um elemento filho de um elemento "misto" não recuo, a menos que também contém o conteúdo "misto".</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>Element content (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content)</ph> and mixed content (<ph id="ph2">http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content)</ph> are defined according to the XML 1.0 definitions of these terms.</source>
          <target state="translated">Conteúdo de elemento (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content)</ph> e conteúdo misto (<ph id="ph2">http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content)</ph> são definidas de acordo com as definições de XML 1.0 destes termos.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Formatting">
          <source>The following example writes an XML fragment.</source>
          <target state="translated">O exemplo a seguir grava um fragmento XML.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>Gets or sets how many IndentChars to write for each level in the hierarchy when <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.Formatting" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="Formatting.Indented" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define quantos IndentChars gravar para cada nível da hierarquia quando <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.Formatting" /&gt;</ph> está definido como <ph id="ph2">&lt;see langword="Formatting.Indented" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>Number of <ph id="ph1">&lt;see langword="IndentChars" /&gt;</ph> for each level.</source>
          <target state="translated">Número de <ph id="ph1">&lt;see langword="IndentChars" /&gt;</ph> para cada nível.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>The default is 2.</source>
          <target state="translated">O padrão é 2.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>Indentation is performed on following node types: <ph id="ph1">`DocumentType`</ph>, <ph id="ph2">`Element`</ph>, <ph id="ph3">`Comment`</ph>, <ph id="ph4">`ProcessingInstruction`</ph>, and <ph id="ph5">`CDATASection`</ph>.</source>
          <target state="translated">Recuo é executado nos seguintes tipos de nó: <ph id="ph1">`DocumentType`</ph>, <ph id="ph2">`Element`</ph>, <ph id="ph3">`Comment`</ph>, <ph id="ph4">`ProcessingInstruction`</ph>, e <ph id="ph5">`CDATASection`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>All other node types are not affected.</source>
          <target state="translated">Todos os outros tipos de nó não são afetados.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>The <ph id="ph1">`XmlTextWriter`</ph> does not indent the internal DTD subset.</source>
          <target state="translated">O <ph id="ph1">`XmlTextWriter`</ph> não recua o subconjunto de DTD interno.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>However, you could do the following to apply formatting to the internal DTD subset.</source>
          <target state="translated">No entanto, você pode fazer o seguinte para aplicar formatação para o subconjunto de DTD interno.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>The following example writes an XML fragment.</source>
          <target state="translated">O exemplo a seguir grava um fragmento XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.Indentation">
          <source>Setting this property to a negative value.</source>
          <target state="translated">Definir essa propriedade para um valor negativo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>Gets or sets which character to use for indenting when <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.Formatting" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="Formatting.Indented" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define qual caractere deve ser usado para recuar quando <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.Formatting" /&gt;</ph> é definido como <ph id="ph2">&lt;see langword="Formatting.Indented" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>The character to use for indenting.</source>
          <target state="translated">O caractere a ser usado para o recuo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>The default is space.</source>
          <target state="translated">O padrão é o espaço.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>The <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> allows you to set this property to any character.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="XmlTextWriter" /&gt;</ph> permite que você defina essa propriedade para qualquer caractere.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</source>
          <target state="translated">Para garantir um XML válido, especifique um caractere de espaço em branco válido: 0x9, 0x10, 0x13 ou 0x20.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.IndentChar">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>Namespace URI whose prefix you want to find.</source>
          <target state="translated">URI do namespace cujo prefixo que você deseja localizar.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>Returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">Retorna o prefixo mais próximo definido no escopo atual do namespace para o URI de namespace.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>The matching prefix.</source>
          <target state="translated">O prefixo correspondente.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>Or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching namespace URI is found in the current scope.</source>
          <target state="translated">Ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum URI de namespace correspondente for encontrado no escopo atual.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">O exemplo a seguir grava um livro.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source>Gets or sets a value indicating whether to do namespace support.</source>
          <target state="translated">Obtém ou define um valor que indica se deve-se oferecer suporte ao namespace.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to support namespaces; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para oferecer suporte a namespaces. Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source>This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</source>
          <target state="translated">Essa propriedade determina se o gravador dá suporte a Namespaces W3C na recomendação XML localizada em www.w3.org/TR/REC-xml-names.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.Namespaces">
          <source>You can only change this property when in the <ph id="ph1">&lt;see langword="WriteState.Start" /&gt;</ph> state.</source>
          <target state="translated">Você só pode alterar essa propriedade quando estiver no estado <ph id="ph1">&lt;see langword="WriteState.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>Gets or sets which character to use to quote attribute values.</source>
          <target state="translated">Obtém ou define o caractere a ser usado para colocar valores de atributos entre aspas.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>The character to use to quote attribute values.</source>
          <target state="translated">O caractere a ser usado para colocar valores de atributos entre aspas.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>This must be a single quote (<ph id="ph1">&amp;amp;</ph>#39;) or a double quote (<ph id="ph2">&amp;amp;</ph>#34;).</source>
          <target state="translated">Isso deve ser uma aspa simples (<ph id="ph1">&amp;amp;</ph>#39;) ou aspas duplas (<ph id="ph2">&amp;amp;</ph>#34;).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>The default is a double quote.</source>
          <target state="translated">O padrão é uma aspa dupla.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.QuoteChar">
          <source>Setting this property to something other than either a single or double quote.</source>
          <target state="translated">Configurar essa propriedade como algo diferente de aspas simples ou aspas duplas.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes a ser codificada.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the bytes to write.</source>
          <target state="translated">A posição dentro do buffer que indica o início dos bytes a serem gravados.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">O número de bytes a serem gravados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Encodes the specified binary bytes as base64 and writes out the resulting text.</source>
          <target state="translated">Codifica os bytes binários especificados como base64 e grava o texto resultante.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example encodes an input file using <ph id="ph1">`WriteBase64`</ph> and generates a temporary XML file.</source>
          <target state="translated">O exemplo a seguir codifica um arquivo de entrada usando <ph id="ph1">`WriteBase64`</ph> e gera um arquivo XML temporário.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The temporary XML file is decoded using the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadBase64%2A&gt;</ph> method and compared to the original file.</source>
          <target state="translated">O arquivo XML temporário é decodificado usando o <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.ReadBase64%2A&gt;</ph> método e comparada com o arquivo original.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> é <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">Matriz de bytes a ser codificada.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">A posição no buffer que indica o início dos bytes a serem gravados.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">O número de bytes a serem gravados.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Encodes the specified binary bytes as binhex and writes out the resulting text.</source>
          <target state="translated">Codifica os bytes binários especificados como binhex e grava o texto resultante.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is Closed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> está Fechado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>Text to place inside the CDATA block.</source>
          <target state="translated">O texto a ser colocado no bloco CDATA.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>Writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">Grava um bloco <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> que contém o texto especificado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes an empty CDATA block, for example <ph id="ph4">\&lt;</ph>![CDATA[]]]&gt;&lt;![CDATA[]&gt;.</source>
          <target state="translated">Se <ph id="ph1">`text`</ph> é <ph id="ph2">`null`</ph> ou <ph id="ph3">`String.Empty`</ph>, esse método grava um bloco CDATA vazio, por exemplo <ph id="ph4">\&lt;</ph>! [ CDATA []]] &gt;&lt;! [[CDATA] &gt;.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">O texto poderia resultar em um documento XML malformado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> é <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>Unicode character for which to generate a character entity.</source>
          <target state="translated">O caractere Unicode para a qual gerar uma entidade de caracteres.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>Forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">Força a geração de uma entidade de caracteres para o valor especificado de caracteres Unicode.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>This method writes the Unicode character in hexadecimal character entity reference format.</source>
          <target state="translated">Esse método grava o caractere Unicode em formato de referência de entidade de caractere hexadecimal.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>The following example uses the <ph id="ph1">`WriteCharEntity`</ph> method to write an email address.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`WriteCharEntity`</ph> método grave um endereço de email.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>The character is in the surrogate pair character range, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>; or the text would result in a non-well formed XML document.</source>
          <target state="translated">O caractere está dentro do intervalo de caracteres do par alternativo, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>; ou então, o texto pode resultar em um documento XML malformado.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> é <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Uma matriz de caracteres que contém o texto a ser gravado.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">A posição do buffer que indica o início do texto a ser gravado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">O número de caracteres a serem gravados.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Writes text one buffer at a time.</source>
          <target state="translated">Grava texto um buffer por vez.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>This method can be used to write large amounts of text one buffer at a time.</source>
          <target state="translated">Esse método pode ser usado para gravar grandes quantidades de um buffer de texto por vez.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Special handling must be done to ensure the <ph id="ph1">`WriteChars`</ph> method does not split surrogate pair characters across multiple buffer writes.</source>
          <target state="translated">Tratamento especial deve ser feito para garantir o <ph id="ph1">`WriteChars`</ph> método não divide os caracteres do par substituto em várias gravações de buffer.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The XML specification defines the valid ranges for surrogate pairs.</source>
          <target state="translated">A especificação XML define os intervalos válidos de pares substitutos.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</source>
          <target state="translated">Uma exceção é gerada se caracteres de pares substitutos são gravados que resultaria nos caracteres de par substituto que está sendo divididos em buffer.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; a chamada resulta em caracteres do par alternativo sendo divididos ou na gravação de um par alternativo inválido.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is Closed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> está Fechado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">Texto a colocar dentro do comentário.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>Writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">Grava um comentário <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> que contém o texto especificado.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a <ph id="ph4">`Comment`</ph> with no data content, for example <ph id="ph5">\&lt;</ph>!----&gt;.</source>
          <target state="translated">Se <ph id="ph1">`text`</ph> é <ph id="ph2">`null`</ph> ou <ph id="ph3">`String.Empty`</ph>, esse método grava um <ph id="ph4">`Comment`</ph> sem dados de conteúdo, por exemplo <ph id="ph5">\&lt;</ph>!---&gt;.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>The text would result in a non-well formed XML document</source>
          <target state="translated">O texto pode resultar em um documento XML malformado</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> is <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Xml.XmlTextWriter.WriteState" /&gt;</ph> é <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">O nome do DOCTYPE.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">Isso deve ser não vazio.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">Se for não nulo, ele também grava PUBLIC "pubid" "sysid", em que <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> são substituídos pelo valor dos argumentos fornecidos.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is null and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated">Se <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> for nulo e <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> não for nulo, ele grava SYSTEM "sysid", em que <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> é substituído pelo valor desse argumento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">Se não for nulo, ele gravará [subset], em que subset é substituído pelo valor desse argumento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>Writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">Grava a declaração DOCTYPE com o nome especificado e os atributos opcionais.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This method does not check for invalid characters in <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> or <ph id="ph3">`subset`</ph>.</source>
          <target state="translated">Este método não verifica se há caracteres inválidos no <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> ou <ph id="ph3">`subset`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>It also does not check that the internal subset is well-formed.</source>
          <target state="translated">Ele também não verifica se o subconjunto interno está bem formado.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> não valida os dados que são passados para o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Você não deve passar dados arbitrários para este método.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This method was called outside the prolog (after the root element).</source>
          <target state="translated">Esse método foi chamado fora do prólogo (após o elemento raiz).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>the value for <ph id="ph1">&lt;paramref name="name" /&gt;</ph> would result in invalid XML.</source>
          <target state="translated">o valor de <ph id="ph1">&lt;paramref name="name" /&gt;</ph> resultaria em um XML inválido.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEndAttribute">
          <source>Closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">Fecha a chamada <ph id="ph1">&lt;see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /&gt;</ph> anterior.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndAttribute">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndAttribute">
          <source>If you call <ph id="ph1">`WriteStartAttribute`</ph>, you can close the attribute with this method.</source>
          <target state="translated">Se você chamar <ph id="ph1">`WriteStartAttribute`</ph>, você pode fechar o atributo com esse método.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndAttribute">
          <source>You can also close the attribute by calling <ph id="ph1">`WriteStartAttribute`</ph> again, calling <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, or calling <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph>.</source>
          <target state="translated">Você também pode fechar o atributo chamando <ph id="ph1">`WriteStartAttribute`</ph> novamente, chamando <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, ou chamar <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndAttribute">
          <source>The following example writes out a book.</source>
          <target state="translated">O exemplo a seguir grava um livro.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEndDocument">
          <source>Closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">Fecha os possíveis elementos ou atributos abertos e coloca o gravador de volta no estado Inicial.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndDocument">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndDocument">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEndDocument">
          <source>The XML document is invalid.</source>
          <target state="translated">O documento XML é inválido.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Fecha um elemento e aciona o escopo de namespace correspondente.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndElement">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndElement">
          <source>If the element contains no content a short end tag "/&gt;" is written; otherwise a full end tag is written.</source>
          <target state="translated">Se o elemento não possui nenhum conteúdo curto marca de fim "/ &gt;" é gravado; Caso contrário, uma marca de fim completo será gravada.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEndElement">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
          <source>Name of the entity reference.</source>
          <target state="translated">Nome da referência de entidade.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
          <source>Writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">Grava uma referência de entidade como <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
          <source>The text would result in a non-well formed XML document or <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">O texto pode resultar em um documento XML malformado ou <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">Fecha um elemento e aciona o escopo de namespace correspondente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>This method always writes the full end tag.</source>
          <target state="translated">Esse método sempre grava a marca final completa.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>This is useful when dealing with elements that must include a full end tag.</source>
          <target state="translated">Isso é útil ao lidar com os elementos que devem incluir uma marca de fim completo.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>For example, browsers expect HTML script blocks to be closed with "<ph id="ph1">\&lt;</ph>/script&gt;".</source>
          <target state="translated">Por exemplo, navegadores esperam blocos de script HTML a ser fechado com " <ph id="ph1">\&lt;</ph> /script &gt;".</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>The following example writes out an element with no content.</source>
          <target state="translated">O exemplo a seguir grava um elemento sem conteúdo.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteFullEndElement">
          <source>It uses WriteFullEndElement to write the full end element tag.</source>
          <target state="translated">Ele usa WriteFullEndElement para gravar a marca do elemento final completa.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteName(System.String)">
          <source>Name to write.</source>
          <target state="translated">Nome para gravação.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteName(System.String)">
          <source>Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Grava o nome especificado, garantindo que ele seja um nome válido de acordo com a recomendação do W3C XML 1.0 (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteName(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteName(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> é definido como <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> também verifica se o nome também é válido de acordo com os Namespaces W3C na recomendação XML.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid XML name; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> não é um nome XML válido; ou <ph id="ph2">&lt;paramref name="name" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph> ou <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
          <source>Name to write.</source>
          <target state="translated">Nome para gravação.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
          <source>Writes out the specified name, ensuring it is a valid <ph id="ph1">&lt;see langword="NmToken" /&gt;</ph> according to the W3C XML 1.0 recommendation (<ph id="ph2">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">Grava o nome especificado, garantindo que ele seja um <ph id="ph1">&lt;see langword="NmToken" /&gt;</ph> válido de acordo com a recomendação do W3C XML 1.0 (<ph id="ph2">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid <ph id="ph2">&lt;see langword="NmToken" /&gt;</ph>; or <ph id="ph3">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph4">&lt;see langword="null" /&gt;</ph> or <ph id="ph5">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> não é um <ph id="ph2">&lt;see langword="NmToken" /&gt;</ph> válido; ou <ph id="ph3">&lt;paramref name="name" /&gt;</ph> é <ph id="ph4">&lt;see langword="null" /&gt;</ph> ou <ph id="ph5">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Name of the processing instruction.</source>
          <target state="translated">Nome da instrução de processamento.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Text to include in the processing instruction.</source>
          <target state="translated">Texto a ser incluído na instrução de processamento.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Grava uma instrução de processamento com um espaço entre o nome e o texto da seguinte maneira: <ph id="ph1">&amp;lt;</ph>?nome texto?<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a <ph id="ph4">`ProcessingInstruction`</ph> with no data content, for example <ph id="ph5">\&lt;</ph>?name?&gt;.</source>
          <target state="translated">Se <ph id="ph1">`text`</ph> é <ph id="ph2">`null`</ph> ou <ph id="ph3">`String.Empty`</ph>, esse método grava um <ph id="ph4">`ProcessingInstruction`</ph> sem dados de conteúdo, por exemplo <ph id="ph5">\&lt;</ph>? nome? &gt;.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">O texto poderia resultar em um documento XML malformado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method is being used to create an XML declaration after <ph id="ph1">&lt;see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /&gt;</ph> has already been called.</source>
          <target state="translated">Esse método está sendo usado para criar uma declaração XML após uma chamada a <ph id="ph1">&lt;see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">O nome local a ser gravado.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>The namespace URI to associate with the name.</source>
          <target state="translated">O URI do namespace para associar ao nome.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>Writes out the namespace-qualified name.</source>
          <target state="translated">Grava o nome qualificado do namespace.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>For example, the following Microsoft Visual C# code:</source>
          <target state="translated">Por exemplo, o seguinte código do Microsoft Visual c#:</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>Generates the following output:</source>
          <target state="translated">Gera a saída a seguir:</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> maps to the current default namespace, no prefix is generated.</source>
          <target state="translated">Se <ph id="ph1">`ns`</ph> mapeia para o namespace padrão atual, nenhum prefixo é gerado.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing attribute values, this method generates a prefix if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">Ao gravar valores de atributo, esse método gera um prefixo se <ph id="ph1">`ns`</ph> não foi encontrado.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing element content, it throws an exception if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">Ao gravar o conteúdo do elemento, gera uma exceção se <ph id="ph1">`ns`</ph> não foi encontrado.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>If this writer supports namespaces (<ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (<ph id="ph3">http://www.w3.org/TR/REC-xml-names)</ph>.</source>
          <target state="translated">Se esse gravador dá suporte a namespaces (<ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> é definido como <ph id="ph2">`true`</ph>), esse método também verifica se o nome é válido de acordo com os Namespaces W3C na recomendação XML (<ph id="ph3">http://www.w3.org/TR/REC-xml-names)</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source>The following example writes out a portion of a XSD schema.</source>
          <target state="translated">O exemplo a seguir grava uma parte de um esquema XSD.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is not a valid name according to the W3C Namespaces spec.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> não é um nome válido de acordo com a especificação de Namespaces do W3C.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextWriter">
          <source>Writes raw markup manually.</source>
          <target state="translated">Grava a marcação bruta manualmente.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">A cadeia de caracteres que contém o texto a ser gravado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>Writes raw markup manually from a string.</source>
          <target state="translated">Grava a marcação bruta manualmente de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Esse método não escapar caracteres especiais.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> não valida os dados que são passados para o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Você não deve passar dados arbitrários para este método.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
          <source>The following example writes a string using the <ph id="ph1">`WriteRaw`</ph> method.</source>
          <target state="translated">O exemplo a seguir grava uma cadeia de caracteres usando o <ph id="ph1">`WriteRaw`</ph> método.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">Uma matriz de caracteres que contém o texto a ser gravado.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">A posição no buffer que indica o início do texto a ser escrito.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">O número de caracteres a serem gravados.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Writes raw markup manually from a character buffer.</source>
          <target state="translated">Grava a marcação bruta manualmente de um buffer de caracteres.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>This method does not escape special characters.</source>
          <target state="translated">Esse método não escapar caracteres especiais.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> não valida os dados que são passados para o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">Você não deve passar dados arbitrários para este método.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">O tamanho do buffer menos <ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="Namespace" /&gt;</ph> prefix of the attribute.</source>
          <target state="translated">O prefixo <ph id="ph1">&lt;see langword="Namespace" /&gt;</ph> do atributo.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> do atributo.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> of the attribute</source>
          <target state="translated"><ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> do atributo</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Writes the start of an attribute.</source>
          <target state="translated">Grava o início de um atributo.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>This is a more advanced version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> that allows you to write an attribute value using multiple write methods, such as <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>.</source>
          <target state="translated">Esta é uma versão mais avançada de <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> que permite gravar um valor de atributo usando vários métodos de gravação, como <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">O exemplo a seguir grava um livro.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlTextWriter">
          <source>Writes the XML declaration with the version "1.0".</source>
          <target state="translated">Grava a declaração XML com a versão "1.0".</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlTextWriter">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>Writes the XML declaration with the version "1.0".</source>
          <target state="translated">Grava a declaração XML com a versão "1.0".</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">O nível de codificação do documento é determinado por como o gravador é implementado.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Por exemplo, se um <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> especificado no objeto de <ph id="ph2">`XmlTextWriter`</ph> construtor, isso determina o valor do atributo de codificação.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>This method does not create a standalone attribute.</source>
          <target state="translated">Este método não cria um atributo autônomo.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Quando <ph id="ph1">`WriteStartDocument`</ph> é chamado o gravador valida que você está escrevendo um documento XML bem formado.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</source>
          <target state="translated">Por exemplo, ele verifica se a declaração XML é o primeiro nó, um e somente um elemento de nível raiz existe e assim por diante.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Se esse método não for chamado, o gravador pressupõe um fragmento XML está sendo gravado e se aplica a nenhuma regra de nível raiz.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception is thrown.</source>
          <target state="translated">Se <ph id="ph1">`WriteStartDocument`</ph> foi chamado e, em seguida, o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> método é usado para criar outra declaração XML, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">O exemplo a seguir grava um arquivo XML que representa um livro.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartDocument">
          <source>This is not the first write method called after the constructor.</source>
          <target state="translated">Este não é o primeiro método de gravação chamado após o construtor.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, grava "standalone=yes"; se <ph id="ph2">&lt;see langword="false" /&gt;</ph>, ele grava "standalone=no".</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>Writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">Grava a declaração XML com a versão “1.0” e o atributo autônomo.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">O nível de codificação do documento é determinado por como o gravador é implementado.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">Por exemplo, se um <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> especificado no objeto de <ph id="ph2">`XmlTextWriter`</ph> construtor, isso determina o valor do atributo de codificação.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">Quando <ph id="ph1">`WriteStartDocument`</ph> é chamado o gravador valida que você está escrevendo um documento XML bem formado.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</source>
          <target state="translated">Por exemplo, ele verifica se a declaração XML é o primeiro nó, um e somente um elemento de nível raiz existe e assim por diante.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">Se esse método não for chamado, o gravador pressupõe um fragmento XML está sendo gravado e se aplica a nenhuma regra de nível raiz.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception is thrown.</source>
          <target state="translated">Se <ph id="ph1">`WriteStartDocument`</ph> foi chamado e, em seguida, o <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> método é usado para criar outra declaração XML, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
          <source>This is not the first write method called after the constructor.</source>
          <target state="translated">Este não é o primeiro método de gravação chamado após o construtor.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">O prefixo do namespace do elemento.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">O nome local do elemento.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">O URI do namespace a ser associado ao elemento.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</source>
          <target state="translated">Se este namespace já estiver no escopo e tiver um prefixo associado, o gravador também gravará automaticamente esse prefixo.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>Writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">Grava a marca de início especificada e a associa ao prefixo e ao namespace determinados.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>After calling this method you can either write attributes or create content using <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteStartElement%2A&gt;</ph> for child elements.</source>
          <target state="translated">Depois de chamar esse método, você pode gravar atributos ou criar conteúdo usando <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter.WriteStartElement%2A&gt;</ph> para elementos filho.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>You can close the element with <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph> at which time an end tag is written out.</source>
          <target state="translated">Você pode fechar o elemento com <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph> momento em que uma marca de fim é gravada.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">O exemplo a seguir grava um livro.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The writer is closed.</source>
          <target state="translated">O gravador está fechado.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.WriteState">
          <source>Gets the state of the writer.</source>
          <target state="translated">Obtém o estado do gravador.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.WriteState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.WriteState">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>Text to write.</source>
          <target state="translated">O texto a ser gravado.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>Writes the given text content.</source>
          <target state="translated">Grava o conteúdo de texto especificado.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source><ph id="ph1">`WriteString`</ph> does the following</source>
          <target state="translated"><ph id="ph1">`WriteString`</ph> faz o seguinte:</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>The characters <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, and <ph id="ph3">`&gt;`</ph> are replaced with <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, and <ph id="ph6">`&amp;gt;`</ph>, respectively.</source>
          <target state="translated">Os caracteres <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, e <ph id="ph3">`&gt;`</ph> são substituídos por <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, e <ph id="ph6">`&amp;gt;`</ph>, respectivamente.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (<ph id="ph1">`&amp;#0;`</ph> through <ph id="ph2">`&amp;#0x1F`</ph>).</source>
          <target state="translated">Valores de caractere em x-0x1F o intervalo de 0 (excluindo o espaço em branco caracteres 0x9 0xA e 0xD) são substituídos por entidades de caractere numérico (<ph id="ph1">`&amp;#0;`</ph> por meio de <ph id="ph2">`&amp;#0x1F`</ph>).</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`WriteString`</ph> is called in the context of an attribute value, double and single quotes are replaced with <ph id="ph2">`&amp;quot;`</ph> and <ph id="ph3">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">Se <ph id="ph1">`WriteString`</ph> é chamado no contexto de um valor de atributo, aspas simples e duplas são substituídas por <ph id="ph2">`&amp;quot;`</ph> e <ph id="ph3">`&amp;apos;`</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>For example, this input string <ph id="ph1">`test&lt;item&gt;test`</ph> is written as</source>
          <target state="translated">Por exemplo, essa cadeia de caracteres de entrada <ph id="ph1">`test&lt;item&gt;test`</ph> é gravada como</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a text node with no data content.</source>
          <target state="translated">Se <ph id="ph1">`text`</ph> é <ph id="ph2">`null`</ph> ou <ph id="ph3">`String.Empty`</ph>, esse método grava um nó de texto sem conteúdo de dados.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>The following example writes an XML fragment.</source>
          <target state="translated">O exemplo a seguir grava um fragmento XML.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteString(System.String)">
          <source>The text string contains an invalid surrogate pair.</source>
          <target state="translated">A cadeia de caracteres contém um par alternativo inválido.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">A alternativa baixa.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between <ph id="ph1">&lt;see langword="0xDC00" /&gt;</ph> and <ph id="ph2">&lt;see langword="0xDFFF" /&gt;</ph>.</source>
          <target state="translated">Deve ser um valor entre <ph id="ph1">&lt;see langword="0xDC00" /&gt;</ph> e <ph id="ph2">&lt;see langword="0xDFFF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">A alternativa alta.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between <ph id="ph1">&lt;see langword="0xD800" /&gt;</ph> and <ph id="ph2">&lt;see langword="0xDBFF" /&gt;</ph>.</source>
          <target state="translated">Deve ser um valor entre <ph id="ph1">&lt;see langword="0xD800" /&gt;</ph> e <ph id="ph2">&lt;see langword="0xDBFF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>Generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">Gera e grava a entidade de caracteres alternativos para o par de caracteres alternativos.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This method is only applicable on systems that use UTF-16 encoding.</source>
          <target state="translated">Esse método só é aplicável em sistemas que usam a codificação UTF-16.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The surrogate character entity is written in hexadecimal format.</source>
          <target state="translated">A entidade de caractere substituto é gravada em formato hexadecimal.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The range for surrogate characters is <ph id="ph1">`#x10000`</ph> to <ph id="ph2">`#x10FFFF`</ph>.</source>
          <target state="translated">O intervalo de caracteres substitutos é <ph id="ph1">`#x10000`</ph> para <ph id="ph2">`#x10FFFF`</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The following formula is used to generate the surrogate character entity: (<ph id="ph1">`highChar`</ph><ph id="ph2"> - </ph><ph id="ph3">`0xD800`</ph>) * <ph id="ph4">`0x400`</ph> + (<ph id="ph5">`lowChar`</ph><ph id="ph6"> - </ph><ph id="ph7">`0xDC00`</ph>) + <ph id="ph8">`0x10000`</ph>.</source>
          <target state="translated">A fórmula a seguir é usada para gerar a entidade de caractere substituto: (<ph id="ph1">`highChar`</ph><ph id="ph2"> - </ph><ph id="ph3">`0xD800`</ph>) * <ph id="ph4">`0x400`</ph> + (<ph id="ph5">`lowChar`</ph><ph id="ph6"> - </ph><ph id="ph7">`0xDC00`</ph>) + <ph id="ph8">`0x10000`</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</source>
          <target state="translated">Para HTML e XML, o conjunto de caracteres do documento (e, portanto, a notação de referências de caractere numérico) são baseados em UCS [ISO 10646].</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</source>
          <target state="translated">Uma referência de caractere numérico único em um documento de origem, portanto, pode em alguns casos corresponder a duas unidades de 16 bits em uma cadeia de caracteres (um substituto alto e um substituto baixo).</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>These 16-bit units are referred to as a surrogate pair.</source>
          <target state="translated">Essas unidades de 16 bits são chamadas de um par substituto.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <ph id="ph1">http://www.unicode.org</ph>, or section 2.2 of the W3C XML 1.0 Recommendation located at <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</source>
          <target state="translated">Para obter mais informações sobre caracteres ou substitutos, consulte a seção 3.7 do Unicode 3.0/Unicode 2.0 padrão localizado em <ph id="ph1">http://www.unicode.org</ph>, ou a seção 2.2 da recomendação W3C XML 1.0 localizado em <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An invalid surrogate character pair was passed.</source>
          <target state="translated">Um par de caracteres alternativos inválido foi passado.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">A cadeia de caracteres de espaço em branco.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>Writes out the given white space.</source>
          <target state="translated">Grava o espaço em branco determinado.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>This method is used to manually format your document.</source>
          <target state="translated">Esse método é usado para formatar manualmente seu documento.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Formatting%2A&gt;</ph> property to have the writer format the output automatically.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Formatting%2A&gt;</ph> propriedade para que o gravador de formatar a saída automaticamente.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>The following example uses the <ph id="ph1">`WriteWhitespace`</ph> method to control how the file is formatted.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`WriteWhitespace`</ph> método para controlar como o arquivo é formatado.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
          <source>The string contains non-white space characters.</source>
          <target state="translated">A cadeia de caracteres contém caracteres que não sejam em branco.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">Obtém o escopo de <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph3">&lt;see langword="xml:lang" /&gt;</ph> in the current scope.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> atual se não houver nenhum <ph id="ph3">&lt;see langword="xml:lang" /&gt;</ph> no escopo atual.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>This property allows one component to find out what state another component has left the writer in.</source>
          <target state="translated">Esta propriedade permite que um componente descobrir que estado de outro componente deixou o gravador.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>For example, perhaps one component wants to tell another which language help text to generate.</source>
          <target state="translated">Por exemplo, talvez um componente quer dizer que texto de ajuda de idioma para gerar a outra.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlLang">
          <source>The language information is communicated by writing an <ph id="ph1">`xml:lang`</ph> attribute.</source>
          <target state="translated">As informações de idioma são comunicadas escrevendo um <ph id="ph1">`xml:lang`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> que representa o escopo de <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> que representa o escopo de <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Significado</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> None</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Nenhum</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This is the default if no <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph> scope exists.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esse é o padrão se nenhuma <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph> existe escopo.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Default</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Padrão</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current scope is <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph>="default".</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> O escopo atual é <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph>= "padrão".</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Preserve</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Preservar</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current scope is <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph>="preserve".</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> O escopo atual é <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph>= "preserve".</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source>Starting with the .NET Framework 2.0, we recommend that you create <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.</source>
          <target state="translated">Começando com o .NET Framework 2.0, é recomendável que você crie <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instâncias usando o <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> classe para tirar proveito da nova funcionalidade.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source>This property allows one component to find out in what state another component has left the writer.</source>
          <target state="translated">Esta propriedade permite que um componente descobrir em qual estado a que outro componente deixou o gravador.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlTextWriter.XmlSpace">
          <source>The following example uses the <ph id="ph1">`WriteWhitespace`</ph> method to control how the file is formatted.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`WriteWhitespace`</ph> método para controlar como o arquivo é formatado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>