<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlNodeType.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fc3e0d19c0f8da2af3b0c5e12201fbc9c20e89b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc3e0d19c0f8da2af3b0c5e12201fbc9c20e89b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNodeType">
          <source>Specifies the type of node.</source>
          <target state="translated">Especifica o tipo de nó.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Attribute">
          <source>An attribute (for example, <bpt id="p1">&lt;c&gt;</bpt>id='123'<ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Um atributo (por exemplo, <bpt id="p1">&lt;c&gt;</bpt>id='123'<ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Attribute">
          <source>An <ph id="ph1">`Attribute`</ph> node can have the following child node types: <ph id="ph2">`Text`</ph> and <ph id="ph3">`EntityReference`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`Attribute`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`Text`</ph> e <ph id="ph3">`EntityReference`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Attribute">
          <source>The <ph id="ph1">`Attribute`</ph> node does not appear as the child node of any other node type.</source>
          <target state="translated">O <ph id="ph1">`Attribute`</ph> nó não aparece como o nó filho de qualquer outro tipo de nó.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Attribute">
          <source>It is not considered a child node of an <ph id="ph1">`Element`</ph>.</source>
          <target state="translated">Não é um nó filho de um <ph id="ph1">`Element`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.CDATA">
          <source>A CDATA section (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>![CDATA[my escaped text]]<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma seção CDATA (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>![CDATA[meu texto de escape]]<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.CDATA">
          <source>CDATA sections are used to escape blocks of text that would otherwise be recognized as markup.</source>
          <target state="translated">Seções CDATA são usadas para sair de blocos de texto que seriam reconhecidos como marcação.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.CDATA">
          <source>A <ph id="ph1">`CDATA`</ph> node cannot have any child nodes.</source>
          <target state="translated">Um <ph id="ph1">`CDATA`</ph> nó não pode ter nós filho.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.CDATA">
          <source>It can appear as the child of the <ph id="ph1">`DocumentFragment`</ph>, <ph id="ph2">`EntityReference`</ph>, and <ph id="ph3">`Element`</ph> nodes.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`DocumentFragment`</ph>, <ph id="ph2">`EntityReference`</ph>, e <ph id="ph3">`Element`</ph> nós.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Comment">
          <source>A comment (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!-- my comment --<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Um comentário (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!-- meu comentário --<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Comment">
          <source>A <ph id="ph1">`Comment`</ph> node cannot have any child nodes.</source>
          <target state="translated">Um <ph id="ph1">`Comment`</ph> nó não pode ter nós filho.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Comment">
          <source>It can appear as the child of the <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, and <ph id="ph4">`EntityReference`</ph> nodes.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, e <ph id="ph4">`EntityReference`</ph> nós.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Document">
          <source>A document object that, as the root of the document tree, provides access to the entire XML document.</source>
          <target state="translated">Um objeto de documento que, como a raiz da árvore do documento, fornece acesso a todo o documento XML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Document">
          <source>A <ph id="ph1">`Document`</ph> node can have the following child node types: <ph id="ph2">`XmlDeclaration`</ph>, <ph id="ph3">`Element`</ph> (maximum of one), <ph id="ph4">`ProcessingInstruction`</ph>, <ph id="ph5">`Comment`</ph>, and <ph id="ph6">`DocumentType`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`Document`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`XmlDeclaration`</ph>, <ph id="ph3">`Element`</ph> (máximo de um), <ph id="ph4">`ProcessingInstruction`</ph>, <ph id="ph5">`Comment`</ph>, e <ph id="ph6">`DocumentType`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Document">
          <source>It cannot appear as the child of any node types.</source>
          <target state="translated">Ele não pode aparecer como o filho de qualquer tipo de nó.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.DocumentFragment">
          <source>A document fragment.</source>
          <target state="translated">Um fragmento de documento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.DocumentFragment">
          <source>The <ph id="ph1">`DocumentFragment`</ph> node associates a node or subtree with a document without actually being contained within the document.</source>
          <target state="translated">O <ph id="ph1">`DocumentFragment`</ph> nó associa um nó ou uma subárvore de um documento sem realmente sendo contidos dentro do documento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.DocumentFragment">
          <source>A <ph id="ph1">`DocumentFragment`</ph> node can have the following child node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`ProcessingInstruction`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`Text`</ph>, <ph id="ph6">`CDATA`</ph>, and <ph id="ph7">`EntityReference`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`DocumentFragment`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`Element`</ph>, <ph id="ph3">`ProcessingInstruction`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`Text`</ph>, <ph id="ph6">`CDATA`</ph>, e <ph id="ph7">`EntityReference`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.DocumentFragment">
          <source>It cannot appear as the child of any node types.</source>
          <target state="translated">Ele não pode aparecer como o filho de qualquer tipo de nó.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.DocumentType">
          <source>The document type declaration, indicated by the following tag (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!DOCTYPE...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">A declaração de tipo de documento, indicada pela seguinte marca (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!DOCTYPE...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.DocumentType">
          <source>A <ph id="ph1">`DocumentType`</ph> node can have the following child node types: <ph id="ph2">`Notation`</ph> and <ph id="ph3">`Entity`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`DocumentType`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`Notation`</ph> e <ph id="ph3">`Entity`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.DocumentType">
          <source>It can appear as the child of the <ph id="ph1">`Document`</ph> node.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`Document`</ph> nó.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Element">
          <source>An element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>item<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Um elemento (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>item<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Element">
          <source>An <ph id="ph1">`Element`</ph> node can have the following child node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`Text`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`ProcessingInstruction`</ph>, <ph id="ph6">`CDATA`</ph>, and <ph id="ph7">`EntityReference`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`Element`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`Element`</ph>, <ph id="ph3">`Text`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`ProcessingInstruction`</ph>, <ph id="ph6">`CDATA`</ph>, e <ph id="ph7">`EntityReference`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Element">
          <source>It can be the child of the <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`EntityReference`</ph>, and <ph id="ph4">`Element`</ph> nodes.</source>
          <target state="translated">Ele pode ser o filho do <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`EntityReference`</ph>, e <ph id="ph4">`Element`</ph> nós.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.EndElement">
          <source>An end element tag (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>/item<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma marca de elemento de fim (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>/item<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.EndElement">
          <source><ph id="ph1">`EndElement`</ph> nodes are returned when <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> gets to the end of an element.</source>
          <target state="translated"><ph id="ph1">`EndElement`</ph> nós são retornados quando <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> obtém ao final de um elemento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.EndEntity">
          <source>Returned when <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> gets to the end of the entity replacement as a result of a call to <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ResolveEntity" /&gt;</ph>.</source>
          <target state="translated">Retornado quando <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> chega ao final da substituição de entidade como resultado de uma chamada para <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ResolveEntity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Entity">
          <source>An entity declaration (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!ENTITY...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma declaração de entidade (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!ENTITY...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Entity">
          <source>An <ph id="ph1">`Entity`</ph> node can have child nodes that represent the expanded entity (for example, <ph id="ph2">`Text`</ph> and <ph id="ph3">`EntityReference`</ph> nodes).</source>
          <target state="translated">Um <ph id="ph1">`Entity`</ph> nó pode ter nós filho que representam a entidade expandida (por exemplo, <ph id="ph2">`Text`</ph> e <ph id="ph3">`EntityReference`</ph> nós).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Entity">
          <source>It can appear as the child of the <ph id="ph1">`DocumentType`</ph> node.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`DocumentType`</ph> nó.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.EntityReference">
          <source>A reference to an entity (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;amp;</ph>num;<ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma referência a uma entidade (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;amp;</ph>num;<ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.EntityReference">
          <source>An <ph id="ph1">`EntityReference`</ph> node can have the following child node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`ProcessingInstruction`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`Text`</ph>, <ph id="ph6">`CDATA`</ph>, and <ph id="ph7">`EntityReference`</ph>.</source>
          <target state="translated">Um <ph id="ph1">`EntityReference`</ph> nó pode ter os seguintes tipos de nós filho: <ph id="ph2">`Element`</ph>, <ph id="ph3">`ProcessingInstruction`</ph>, <ph id="ph4">`Comment`</ph>, <ph id="ph5">`Text`</ph>, <ph id="ph6">`CDATA`</ph>, e <ph id="ph7">`EntityReference`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.EntityReference">
          <source>It can appear as the child of the <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, and <ph id="ph4">`EntityReference`</ph> nodes.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, e <ph id="ph4">`EntityReference`</ph> nós.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.None">
          <source>This is returned by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> if a <ph id="ph2">&lt;see langword="Read" /&gt;</ph> method has not been called.</source>
          <target state="translated">Isto é retornado pelo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> se um método <ph id="ph2">&lt;see langword="Read" /&gt;</ph> não foi chamado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Notation">
          <source>A notation in the document type declaration (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!NOTATION...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma notação na declaração de tipo de documento (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>!NOTATION...<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Notation">
          <source>A <ph id="ph1">`Notation`</ph> node cannot have any child nodes.</source>
          <target state="translated">Um <ph id="ph1">`Notation`</ph> nó não pode ter nós filho.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Notation">
          <source>It can appear as the child of the <ph id="ph1">`DocumentType`</ph> node.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`DocumentType`</ph> nó.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.ProcessingInstruction">
          <source>A processing instruction (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>?pi test?<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">Uma instrução de processamento (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>?pi test?<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.ProcessingInstruction">
          <source>A <ph id="ph1">`ProcessingInstruction`</ph> node cannot have any child nodes.</source>
          <target state="translated">Um <ph id="ph1">`ProcessingInstruction`</ph> nó não pode ter nós filho.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.ProcessingInstruction">
          <source>It can appear as the child of the <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, and <ph id="ph4">`EntityReference`</ph> nodes.</source>
          <target state="translated">Ele pode aparecer como o filho de <ph id="ph1">`Document`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, e <ph id="ph4">`EntityReference`</ph> nós.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.SignificantWhitespace">
          <source>White space between markup in a mixed content model or white space within the <bpt id="p1">&lt;c&gt;</bpt>xml:space="preserve"<ept id="p1">&lt;/c&gt;</ept> scope.</source>
          <target state="translated">Espaço em branco entre a marcação em um modelo de conteúdo misto ou espaço em branco dentro do escopo <bpt id="p1">&lt;c&gt;</bpt>xml:space="preserve"<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Text">
          <source>The text content of a node.</source>
          <target state="translated">O conteúdo de texto de um nó.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Text">
          <source>A <ph id="ph1">`Text`</ph> node cannot have any child nodes.</source>
          <target state="translated">Um <ph id="ph1">`Text`</ph> nó não pode ter nós filho.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.Text">
          <source>It can appear as the child node of the <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, and <ph id="ph4">`EntityReference`</ph> nodes.</source>
          <target state="translated">Ele pode aparecer como o nó filho do <ph id="ph1">`Attribute`</ph>, <ph id="ph2">`DocumentFragment`</ph>, <ph id="ph3">`Element`</ph>, e <ph id="ph4">`EntityReference`</ph> nós.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.Whitespace">
          <source>White space between markup.</source>
          <target state="translated">Espaço em branco entre a marcação.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Xml.XmlNodeType.XmlDeclaration">
          <source>The XML declaration (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>?xml version='1.0'?<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</source>
          <target state="translated">A declaração XML (por exemplo, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>?xml version='1.0'?<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> ).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.XmlDeclaration">
          <source>The <ph id="ph1">`XmlDeclaration`</ph> node must be the first node in the document.</source>
          <target state="translated">O <ph id="ph1">`XmlDeclaration`</ph> nó deve ser o primeiro nó no documento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.XmlDeclaration">
          <source>It cannot have children.</source>
          <target state="translated">Ele não pode ter filhos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.XmlDeclaration">
          <source>It is a child of the <ph id="ph1">`Document`</ph> node.</source>
          <target state="translated">Ele é um filho de <ph id="ph1">`Document`</ph> nó.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Xml.XmlNodeType.XmlDeclaration">
          <source>It can have attributes that provide version and encoding information.</source>
          <target state="translated">Ele pode ter atributos que fornecem informações de codificação e de versão.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>