<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76c0bf7204acf4625cdc60ad69785ec23b3c807a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744871" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0e4de-101">Tabela de objetos atomizados de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0e4de-101">Table of atomized string objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-102">Várias classes, como <xref:System.Xml.XmlDocument> e <xref:System.Xml.XmlReader>, use o `XmlNameTable` classe internamente para armazenar nomes de elemento e atributo.</span><span class="sxs-lookup"><span data-stu-id="0e4de-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="0e4de-103">Quando um nome de elemento ou atributo ocorre várias vezes em um documento XML, ele é armazenado somente uma vez no `XmlNameTable`.</span><span class="sxs-lookup"><span data-stu-id="0e4de-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="0e4de-104">Os nomes são armazenados como tipos de objeto do common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="0e4de-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="0e4de-105">Isso permite a um objeto comparações nessas cadeias de caracteres em vez de uma comparação de cadeia de caracteres mais cara.</span><span class="sxs-lookup"><span data-stu-id="0e4de-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="0e4de-106">Esses objetos de cadeia de caracteres são chamados de "cadeias de caracteres atomizadas".</span><span class="sxs-lookup"><span data-stu-id="0e4de-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="0e4de-107">`XmlNameTable` é implementado de <xref:System.Xml.NameTable> classe.</span><span class="sxs-lookup"><span data-stu-id="0e4de-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e4de-108">O exemplo a seguir compara os dois nomes de elemento.</span><span class="sxs-lookup"><span data-stu-id="0e4de-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e4de-109">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e4de-110">Quando substituído em uma classe derivada, atomiza a cadeia de caracteres especificada e adiciona-o ao <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-111">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0e4de-112">O nome a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-112">The name to add.</span></span></param>
        <summary><span data-ttu-id="0e4de-113">Quando substituído em uma classe derivada, atomiza a cadeia de caracteres especificada e adiciona-o ao <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0e4de-114">A nova cadeia de caracteres atomizada ou uma existente se ela já existe.</span><span class="sxs-lookup"><span data-stu-id="0e4de-114">The new atomized string or the existing one if it already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-115">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0e4de-116"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-116"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0e4de-117">A matriz de caracteres que contém o nome a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-117">The character array containing the name to add.</span></span></param>
        <param name="offset"><span data-ttu-id="0e4de-118">O índice de base zero na matriz que especifica o primeiro caractere do nome.</span><span class="sxs-lookup"><span data-stu-id="0e4de-118">Zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="0e4de-119">O número de caracteres no nome.</span><span class="sxs-lookup"><span data-stu-id="0e4de-119">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="0e4de-120">Quando substituído em uma classe derivada, atomiza a cadeia de caracteres especificada e adiciona-o ao <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="0e4de-121">A nova cadeia de caracteres atomizada ou uma existente se ela já existe.</span><span class="sxs-lookup"><span data-stu-id="0e4de-121">The new atomized string or the existing one if it already exists.</span></span> <span data-ttu-id="0e4de-122">Se o comprimento for zero, String.Empty será retornado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-122">If length is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-123">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0e4de-124">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="0e4de-124">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="0e4de-125">- ou -</span><span class="sxs-lookup"><span data-stu-id="0e4de-125">-or-</span></span> 
 <span data-ttu-id="0e4de-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0e4de-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0e4de-127">- ou -</span><span class="sxs-lookup"><span data-stu-id="0e4de-127">-or-</span></span> 
 <span data-ttu-id="0e4de-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0e4de-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0e4de-129">As condições acima não farão com que uma exceção seja gerada se <paramref name="length" /> =0.</span><span class="sxs-lookup"><span data-stu-id="0e4de-129">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0e4de-130"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0e4de-130"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0e4de-131">Quando substituído em uma classe derivada, obtém a cadeia de caracteres atomizada.</span><span class="sxs-lookup"><span data-stu-id="0e4de-131">When overridden in a derived class, gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-132">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-132">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0e4de-133">O nome a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-133">The name to look up.</span></span></param>
        <summary><span data-ttu-id="0e4de-134">Quando substituído em uma classe derivada, obtém a cadeia de caracteres atomizada que contém o mesmo valor daquela especificada.</span><span class="sxs-lookup"><span data-stu-id="0e4de-134">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span></span></summary>
        <returns><span data-ttu-id="0e4de-135">A cadeia de caracteres atomizada ou <see langword="null" />, se ela ainda não tiver sido atomizada.</span><span class="sxs-lookup"><span data-stu-id="0e4de-135">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-136">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-136">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0e4de-137"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0e4de-137"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0e4de-138">A matriz de caracteres que contém o nome a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-138">The character array containing the name to look up.</span></span></param>
        <param name="offset"><span data-ttu-id="0e4de-139">O índice de base zero na matriz que especifica o primeiro caractere do nome.</span><span class="sxs-lookup"><span data-stu-id="0e4de-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="0e4de-140">O número de caracteres no nome.</span><span class="sxs-lookup"><span data-stu-id="0e4de-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="0e4de-141">Quando substituído em uma classe derivada, obtém a cadeia de caracteres atomizada que contém os mesmos caracteres que o intervalo especificado de caracteres na matriz fornecida.</span><span class="sxs-lookup"><span data-stu-id="0e4de-141">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="0e4de-142">A cadeia de caracteres atomizada ou <see langword="null" />, se ela ainda não tiver sido atomizada.</span><span class="sxs-lookup"><span data-stu-id="0e4de-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="0e4de-143">Se <paramref name="length" /> for zero, String.Empty será retornado.</span><span class="sxs-lookup"><span data-stu-id="0e4de-143">If <paramref name="length" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e4de-144">Para obter mais informações sobre cadeias de caracteres atomizadas, consulte <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="0e4de-144">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0e4de-145">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="0e4de-145">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="0e4de-146">- ou -</span><span class="sxs-lookup"><span data-stu-id="0e4de-146">-or-</span></span> 
 <span data-ttu-id="0e4de-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0e4de-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0e4de-148">- ou -</span><span class="sxs-lookup"><span data-stu-id="0e4de-148">-or-</span></span> 
 <span data-ttu-id="0e4de-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="0e4de-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="0e4de-150">As condições acima não farão com que uma exceção seja gerada se <paramref name="length" /> =0.</span><span class="sxs-lookup"><span data-stu-id="0e4de-150">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0e4de-151"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="0e4de-151"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>