<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlNamedNodeMap.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d42ffa7876df9af75cb04f5c0e1a573cf808226.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d42ffa7876df9af75cb04f5c0e1a573cf808226</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNamedNodeMap">
          <source>Represents a collection of nodes that can be accessed by name or index.</source>
          <target state="translated">Representa uma coleção de nós que podem ser acessados por nome ou índice.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source><ph id="ph1">`XmlNamedNodeMap`</ph> is returned by the following three properties.</source>
          <target state="translated"><ph id="ph1">`XmlNamedNodeMap`</ph> é retornado por três propriedades a seguir.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType&gt;</ph> - Returns <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph>, a class which inherits from <ph id="ph3">`XmlNamedNodeMap`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType&gt;</ph> -Retorna <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph>, uma classe que herda de <ph id="ph3">`XmlNamedNodeMap`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Entities%2A?displayProperty=nameWithType&gt;</ph> - Returns an <ph id="ph2">`XmlNamedNodeMap`</ph> containing <ph id="ph3">&lt;xref:System.Xml.XmlEntity&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Entities%2A?displayProperty=nameWithType&gt;</ph> -Retorna um <ph id="ph2">`XmlNamedNodeMap`</ph> contendo <ph id="ph3">&lt;xref:System.Xml.XmlEntity&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source>The <ph id="ph1">`XmlNamedNodeMap`</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">`XmlNamedNodeMap`</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Notations%2A?displayProperty=nameWithType&gt;</ph> - Returns an <ph id="ph2">`XmlNamedNodeMap`</ph> containing <ph id="ph3">&lt;xref:System.Xml.XmlNotation&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.Notations%2A?displayProperty=nameWithType&gt;</ph> -Retorna um <ph id="ph2">`XmlNamedNodeMap`</ph> contendo <ph id="ph3">&lt;xref:System.Xml.XmlNotation&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNamedNodeMap">
          <source>The <ph id="ph1">`XmlNamedNodeMap`</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">`XmlNamedNodeMap`</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNamedNodeMap.Count">
          <source>Gets the number of nodes in the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Obtém o número de nós no <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNamedNodeMap.Count">
          <source>The number of nodes.</source>
          <target state="translated">O número de nós.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNamedNodeMap.Count">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> class (which inherits from <ph id="ph2">`XmlNamedNodeMap`</ph>) to display all the attributes of a book.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> classe (que herda de <ph id="ph2">`XmlNamedNodeMap`</ph>) para exibir todos os atributos de um livro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
          <source>Provides support for the "foreach" style iteration over the collection of nodes in the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Dá suporte à iteração do estilo “foreach” na coleção de nós no <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
          <source>An enumerator object.</source>
          <target state="translated">Um objeto enumerador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
          <source>The following example displays all attributes in the collection.</source>
          <target state="translated">O exemplo a seguir exibe todos os atributos da coleção.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNamedNodeMap">
          <source>Retrieves the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> from the collection of nodes in the <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Recupera o <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> especificado da coleção de nós no <ph id="ph2">&lt;see cref="T:System.Xml.XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
          <source>The qualified name of the node to retrieve.</source>
          <target state="translated">O nome qualificado do nó a ser recuperado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">Ele é comparado com a propriedade <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> do nó correspondente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
          <source>Retrieves an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> specified by name.</source>
          <target state="translated">Recupera um <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> especificado pelo nome.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
          <source>An <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> with the specified name or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching node is not found.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> com o nome especificado ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se um nó correspondente não for encontrado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> class (which inherits from <ph id="ph2">`XmlNamedNodeMap`</ph>) to modify an attribute.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> classe (que herda de <ph id="ph2">`XmlNamedNodeMap`</ph>) para modificar um atributo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
          <source>The local name of the node to retrieve.</source>
          <target state="translated">O nome local do nó a ser recuperado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
          <source>The namespace Uniform Resource Identifier (URI) of the node to retrieve.</source>
          <target state="translated">O URI (Uniform Resource Identifier) do namespace do nó a ser recuperado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
          <source>Retrieves a node with the matching <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">Recupera um nó com <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.LocalName" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph> correspondentes.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> with the matching local name and namespace URI or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching node was not found.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> com correspondência de nome local e de URI de namespace ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se um nó correspondente não foi encontrado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>The index position of the node to retrieve from the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">A posição do índice do nó a ser recuperada do <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is <ph id="ph1">&lt;see cref="P:System.Xml.XmlNamedNodeMap.Count" /&gt;</ph> -1.</source>
          <target state="translated">O índice é baseado em zero, portanto, o índice do primeiro nó é 0 e o índice do último nó é <ph id="ph1">&lt;see cref="P:System.Xml.XmlNamedNodeMap.Count" /&gt;</ph> -1.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>Retrieves the node at the specified index in the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Recupera o nó no índice especificado no <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> at the specified index.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> no índice especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than or equal to the <ph id="ph2">&lt;see cref="P:System.Xml.XmlNamedNodeMap.Count" /&gt;</ph> property, <ph id="ph3">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="index" /&gt;</ph> for menor que 0 ou maior ou igual à propriedade <ph id="ph2">&lt;see cref="P:System.Xml.XmlNamedNodeMap.Count" /&gt;</ph>, <ph id="ph3">&lt;see langword="null" /&gt;</ph> será retornado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> class (which inherits from <ph id="ph2">`XmlNamedNodeMap`</ph>) to display all the attributes of a book.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> classe (que herda de <ph id="ph2">`XmlNamedNodeMap`</ph>) para exibir todos os atributos de um livro.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNamedNodeMap">
          <source>Removes the specified node from the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Remove o nó especificado do <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
          <source>The qualified name of the node to remove.</source>
          <target state="translated">O nome qualificado do nó a ser removido.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
          <source>The name is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">O nome é comparado com a propriedade <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> do nó correspondente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
          <source>Removes the node from the <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Remove o nó do <ph id="ph1">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> removed from this <ph id="ph2">&lt;see langword="XmlNamedNodeMap" /&gt;</ph> or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if a matching node was not found.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> removido deste <ph id="ph2">&lt;see langword="XmlNamedNodeMap" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> se um nó correspondente não foi encontrado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> class (which inherits from <ph id="ph2">`XmlNamedNodeMap`</ph>) to remove an attribute.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> classe (que herda de <ph id="ph2">`XmlNamedNodeMap`</ph>) para remover um atributo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
          <source>The local name of the node to remove.</source>
          <target state="translated">O nome local do nó a ser removido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
          <source>The namespace URI of the node to remove.</source>
          <target state="translated">O URI de namespace do nó a ser removido.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
          <source>Removes a node with the matching <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">Remove um nó com <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.LocalName" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph> correspondentes.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> removed or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching node was not found.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> removido ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se um nó correspondente não foi encontrado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>An <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> to store in the <ph id="ph2">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> a ser armazenado no <ph id="ph2">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>If a node with that name is already present in the map, it is replaced by the new one.</source>
          <target state="translated">Se um nó com esse nome já existir no mapa, ele será substituído pelo novo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> using its <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> property.</source>
          <target state="translated">Adiciona um <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> usando a propriedade <ph id="ph2">&lt;see cref="P:System.Xml.XmlNode.Name" /&gt;</ph> dele.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>If the <ph id="ph1">&lt;paramref name="node" /&gt;</ph> replaces an existing node with the same name, the old node is returned; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">Se o <ph id="ph1">&lt;paramref name="node" /&gt;</ph> substituir um nó existente com o mesmo nome, o nó antigo será retornado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph> será retornado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> class (which inherits from <ph id="ph2">`XmlNamedNodeMap`</ph>) to add an attribute to the collection.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> classe (que herda de <ph id="ph2">`XmlNamedNodeMap`</ph>) para adicionar um atributo à coleção.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;paramref name="node" /&gt;</ph> was created from a different <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> than the one that created the <ph id="ph3">&lt;see langword="XmlNamedNodeMap" /&gt;</ph>; or the <ph id="ph4">&lt;see langword="XmlNamedNodeMap" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="node" /&gt;</ph> foi criado com base em um <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> diferente daquele que criou o <ph id="ph3">&lt;see langword="XmlNamedNodeMap" /&gt;</ph> ou o <ph id="ph4">&lt;see langword="XmlNamedNodeMap" /&gt;</ph> é somente leitura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>