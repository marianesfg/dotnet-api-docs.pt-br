<Type Name="XmlNamedNodeMap" FullName="System.Xml.XmlNamedNodeMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d16d64f16276396cd79d57b9b024fd1ffa2a93d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37481791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlNamedNodeMap : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamedNodeMap extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamedNodeMap" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamedNodeMap&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamedNodeMap : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type XmlNamedNodeMap = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa uma coleção de nós que podem ser acessados por nome ou índice.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XmlNamedNodeMap` é retornado por três propriedades a seguir.  
  
-   <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> -Retorna <xref:System.Xml.XmlAttributeCollection>, uma classe que herda de `XmlNamedNodeMap`.  
  
-   <xref:System.Xml.XmlDocumentType.Entities%2A?displayProperty=nameWithType> -Retorna um `XmlNamedNodeMap` contendo <xref:System.Xml.XmlEntity> objetos. O `XmlNamedNodeMap` é somente leitura.  
  
-   <xref:System.Xml.XmlDocumentType.Notations%2A?displayProperty=nameWithType> -Retorna um `XmlNamedNodeMap` contendo <xref:System.Xml.XmlNotation> objetos. O `XmlNamedNodeMap` é somente leitura.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeList" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamedNodeMap.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.XmlNamedNodeMap.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de nós no <see langword="XmlNamedNodeMap" />.</summary>
        <value>O número de nós.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XmlAttributeCollection> classe (que herda de `XmlNamedNodeMap`) para exibir todos os atributos de um livro.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNamedNodeMap.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dá suporte à iteração do estilo “foreach” na coleção de nós no <see langword="XmlNamedNodeMap" />.</summary>
        <returns>Um objeto enumerador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir exibe todos os atributos da coleção.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNamedItem">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera o <see cref="T:System.Xml.XmlNode" /> especificado da coleção de nós no <see cref="T:System.Xml.XmlNamedNodeMap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNamedItem">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode GetNamedItem (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode GetNamedItem(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamedItem (name As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ GetNamedItem(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetNamedItem : string -&gt; System.Xml.XmlNode&#xA;override this.GetNamedItem : string -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.GetNamedItem name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome qualificado do nó a ser recuperado. Ele é comparado com a propriedade <see cref="P:System.Xml.XmlNode.Name" /> do nó correspondente.</param>
        <summary>Recupera um <see cref="T:System.Xml.XmlNode" /> especificado pelo nome.</summary>
        <returns>Um <see langword="XmlNode" /> com o nome especificado ou <see langword="null" /> se um nó correspondente não for encontrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XmlAttributeCollection> classe (que herda de `XmlNamedNodeMap`) para modificar um atributo.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.GetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.GetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.GetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.GetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedItem">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode GetNamedItem (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode GetNamedItem(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamedItem (localName As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ GetNamedItem(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetNamedItem : string * string -&gt; System.Xml.XmlNode&#xA;override this.GetNamedItem : string * string -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.GetNamedItem (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do nó a ser recuperado.</param>
        <param name="namespaceURI">O URI (Uniform Resource Identifier) do namespace do nó a ser recuperado.</param>
        <summary>Recupera um nó com <see cref="P:System.Xml.XmlNode.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondentes.</summary>
        <returns>Um <see cref="T:System.Xml.XmlNode" /> com correspondência de nome local e de URI de namespace ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Item (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Item(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Item (index As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Item(int index);" />
      <MemberSignature Language="F#" Value="abstract member Item : int -&gt; System.Xml.XmlNode&#xA;override this.Item : int -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.Item index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">A posição do índice do nó a ser recuperada do <see langword="XmlNamedNodeMap" />. O índice é baseado em zero, portanto, o índice do primeiro nó é 0 e o índice do último nó é <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
        <summary>Recupera o nó no índice especificado no <see langword="XmlNamedNodeMap" />.</summary>
        <returns>O <see cref="T:System.Xml.XmlNode" /> no índice especificado. Se <paramref name="index" /> for menor que 0 ou maior ou igual à propriedade <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, <see langword="null" /> será retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XmlAttributeCollection> classe (que herda de `XmlNamedNodeMap`) para exibir todos os atributos de um livro.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveNamedItem">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Remove o nó especificado do <see langword="XmlNamedNodeMap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveNamedItem">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveNamedItem (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveNamedItem(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveNamedItem (name As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveNamedItem(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member RemoveNamedItem : string -&gt; System.Xml.XmlNode&#xA;override this.RemoveNamedItem : string -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.RemoveNamedItem name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome qualificado do nó a ser removido. O nome é comparado com a propriedade <see cref="P:System.Xml.XmlNode.Name" /> do nó correspondente.</param>
        <summary>Remove o nó do <see langword="XmlNamedNodeMap" />.</summary>
        <returns>O <see langword="XmlNode" /> removido deste <see langword="XmlNamedNodeMap" /> ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XmlAttributeCollection> classe (que herda de `XmlNamedNodeMap`) para remover um atributo.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveNamedItem">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveNamedItem (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveNamedItem(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveNamedItem (localName As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveNamedItem(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member RemoveNamedItem : string * string -&gt; System.Xml.XmlNode&#xA;override this.RemoveNamedItem : string * string -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.RemoveNamedItem (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">O nome local do nó a ser removido.</param>
        <param name="namespaceURI">O URI de namespace do nó a ser removido.</param>
        <summary>Remove um nó com <see cref="P:System.Xml.XmlNode.LocalName" /> e <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondentes.</summary>
        <returns>O <see cref="T:System.Xml.XmlNode" /> removido ou <see langword="null" /> se um nó correspondente não foi encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNamedNodeMap.SetNamedItem node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">Um <see langword="XmlNode" /> a ser armazenado no <see langword="XmlNamedNodeMap" />. Se um nó com esse nome já existir no mapa, ele será substituído pelo novo.</param>
        <summary>Adiciona um <see cref="T:System.Xml.XmlNode" /> usando a propriedade <see cref="P:System.Xml.XmlNode.Name" /> dele.</summary>
        <returns>Se o <paramref name="node" /> substituir um nó existente com o mesmo nome, o nó antigo será retornado; caso contrário, <see langword="null" /> será retornado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.Xml.XmlAttributeCollection> classe (que herda de `XmlNamedNodeMap`) para adicionar um atributo à coleção.  
  
 [!code-cpp[Classic WebData XmlNamedNodeMap.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamedNodeMap.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamedNodeMap.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamedNodeMap.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <paramref name="node" /> foi criado com base em um <see cref="T:System.Xml.XmlDocument" /> diferente daquele que criou o <see langword="XmlNamedNodeMap" /> ou o <see langword="XmlNamedNodeMap" /> é somente leitura.</exception>
      </Docs>
    </Member>
  </Members>
</Type>