<Type Name="XmlEntity" FullName="System.Xml.XmlEntity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d92f2c2275bcf1488827d027cc54896d42bb5c2a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39986262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlEntity : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntity extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlEntity" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEntity&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEntity : System::Xml::XmlNode" />
  <TypeSignature Language="F#" Value="type XmlEntity = class&#xA;    inherit XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="52fcb-101">Representa uma declaração de entidade, como &lt;!ENTITY... &gt;.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fcb-101">Represents an entity declaration, such as &lt;!ENTITY... &gt;.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="P:System.Xml.XmlDocumentType.Entities" />
  </Docs>
  <Members>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlEntity.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-102">Obtém o URI (Uniform Resource Identifier) base do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-102">Gets the base Uniform Resource Identifier (URI) of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-103">O local do qual o nó foi carregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-103">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-104">Um documento XML em rede é composto por blocos de dados agregados usando vários mecanismos de inclusão padrão do World Wide Web Consortium (W3C) e, portanto, contém nós que vêm de diferentes locais.</span><span class="sxs-lookup"><span data-stu-id="52fcb-104">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="52fcb-105">O `BaseURI` informa onde vieram esses nós.</span><span class="sxs-lookup"><span data-stu-id="52fcb-105">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="52fcb-106">O valor dessa propriedade varia dependendo do tipo de nó.</span><span class="sxs-lookup"><span data-stu-id="52fcb-106">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="52fcb-107">Nós que são filhos de nós de EntityReference externos retornam a localização da entidade em si.</span><span class="sxs-lookup"><span data-stu-id="52fcb-107">Nodes which are children of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="52fcb-108">Por exemplo, considere o seguinte documento XML:</span><span class="sxs-lookup"><span data-stu-id="52fcb-108">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="52fcb-109">em que a entidade externa `a/b.xml` contém o texto XML `<test>123</test>`.</span><span class="sxs-lookup"><span data-stu-id="52fcb-109">where the external entity `a/b.xml` contains the XML text `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="52fcb-110">Se o documento é carregado a partir http://server/mydata.xml, `BaseURI` retorna o seguinte:</span><span class="sxs-lookup"><span data-stu-id="52fcb-110">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="52fcb-111">Tipo de nó</span><span class="sxs-lookup"><span data-stu-id="52fcb-111">NodeType</span></span>|<span data-ttu-id="52fcb-112">Nome</span><span class="sxs-lookup"><span data-stu-id="52fcb-112">Name</span></span>|<span data-ttu-id="52fcb-113">BaseURI</span><span class="sxs-lookup"><span data-stu-id="52fcb-113">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="52fcb-114">Atributo</span><span class="sxs-lookup"><span data-stu-id="52fcb-114">Attribute</span></span>|<span data-ttu-id="52fcb-115">num</span><span class="sxs-lookup"><span data-stu-id="52fcb-115">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-116">Documento</span><span class="sxs-lookup"><span data-stu-id="52fcb-116">Document</span></span>|<span data-ttu-id="52fcb-117">#document</span><span class="sxs-lookup"><span data-stu-id="52fcb-117">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-118">DocumentType</span><span class="sxs-lookup"><span data-stu-id="52fcb-118">DocumentType</span></span>|<span data-ttu-id="52fcb-119">item</span><span class="sxs-lookup"><span data-stu-id="52fcb-119">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-120">Entidade</span><span class="sxs-lookup"><span data-stu-id="52fcb-120">Entity</span></span>|<span data-ttu-id="52fcb-121">xyz</span><span class="sxs-lookup"><span data-stu-id="52fcb-121">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-122">Elemento</span><span class="sxs-lookup"><span data-stu-id="52fcb-122">Element</span></span>|<span data-ttu-id="52fcb-123">item</span><span class="sxs-lookup"><span data-stu-id="52fcb-123">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-124">EntityReference</span><span class="sxs-lookup"><span data-stu-id="52fcb-124">EntityReference</span></span>|<span data-ttu-id="52fcb-125">xyz</span><span class="sxs-lookup"><span data-stu-id="52fcb-125">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="52fcb-126">Elemento</span><span class="sxs-lookup"><span data-stu-id="52fcb-126">Element</span></span>|<span data-ttu-id="52fcb-127">testar</span><span class="sxs-lookup"><span data-stu-id="52fcb-127">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="52fcb-128">Texto</span><span class="sxs-lookup"><span data-stu-id="52fcb-128">Text</span></span>|<span data-ttu-id="52fcb-129">#text</span><span class="sxs-lookup"><span data-stu-id="52fcb-129">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="52fcb-130">`BaseURI` procura por limites de referência de entidade, portanto, se as entidades são expandidas, essas informações não são preservadas e essa propriedade retorna o local do `XmlDocument` objeto em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="52fcb-130">`BaseURI` looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="52fcb-131">Como um segundo exemplo, considerando o seguinte documento XML:</span><span class="sxs-lookup"><span data-stu-id="52fcb-131">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="52fcb-132">em que o arquivo DTD (definição) do tipo de documento contém o seguinte:</span><span class="sxs-lookup"><span data-stu-id="52fcb-132">where the document type definition (DTD) file contains the following:</span></span>  
  
```  
<!ENTITY xyz "<E1>My Data</E1>">  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="52fcb-133">Se o documento XML é carregado a partir http://localhost/mydata.xml, `BaseURI` retorna o seguinte para cada um de nós:</span><span class="sxs-lookup"><span data-stu-id="52fcb-133">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="52fcb-134">Tipo de nó</span><span class="sxs-lookup"><span data-stu-id="52fcb-134">NodeType</span></span>|<span data-ttu-id="52fcb-135">Nome</span><span class="sxs-lookup"><span data-stu-id="52fcb-135">Name</span></span>|<span data-ttu-id="52fcb-136">BaseURI</span><span class="sxs-lookup"><span data-stu-id="52fcb-136">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="52fcb-137">Documento</span><span class="sxs-lookup"><span data-stu-id="52fcb-137">Document</span></span>|<span data-ttu-id="52fcb-138">#document</span><span class="sxs-lookup"><span data-stu-id="52fcb-138">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="52fcb-139">DocumentType</span><span class="sxs-lookup"><span data-stu-id="52fcb-139">DocumentType</span></span>|<span data-ttu-id="52fcb-140">MyData</span><span class="sxs-lookup"><span data-stu-id="52fcb-140">Mydata</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="52fcb-141">Elemento</span><span class="sxs-lookup"><span data-stu-id="52fcb-141">Element</span></span>|<span data-ttu-id="52fcb-142">contrato de parceiro comercial</span><span class="sxs-lookup"><span data-stu-id="52fcb-142">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="52fcb-143">Entidade</span><span class="sxs-lookup"><span data-stu-id="52fcb-143">Entity</span></span>|<span data-ttu-id="52fcb-144">xyz</span><span class="sxs-lookup"><span data-stu-id="52fcb-144">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="52fcb-145">EntityReference</span><span class="sxs-lookup"><span data-stu-id="52fcb-145">EntityReference</span></span>|<span data-ttu-id="52fcb-146">xyz</span><span class="sxs-lookup"><span data-stu-id="52fcb-146">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="52fcb-147">Atributo</span><span class="sxs-lookup"><span data-stu-id="52fcb-147">Attribute</span></span>|<span data-ttu-id="52fcb-148">woof</span><span class="sxs-lookup"><span data-stu-id="52fcb-148">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="52fcb-149">O URI de base de um atributo padrão é o mesmo que o URI de base do elemento ao qual pertencem.</span><span class="sxs-lookup"><span data-stu-id="52fcb-149">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="52fcb-150">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="52fcb-150">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlEntity.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="52fcb-151">
            <see langword="true" /> para recursivamente clonar a subárvore abaixo do nó especificado; <see langword="false" /> para clonar apenas o próprio nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-151">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fcb-152">Cria uma duplicação deste nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-152">Creates a duplicate of this node.</span>
          </span>
          <span data-ttu-id="52fcb-153">Não é possível clonar nós de entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-153">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="52fcb-154">Chamar este método em um objeto <see cref="T:System.Xml.XmlEntity" /> gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-154">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52fcb-155">Retorna uma cópia do <see cref="T:System.Xml.XmlNode" /> do qual o método é chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-155">Returns a copy of the <see cref="T:System.Xml.XmlNode" /> from which the method is called.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="52fcb-156">Não é possível clonar nós de entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-156">Entity nodes cannot be cloned.</span>
          </span>
          <span data-ttu-id="52fcb-157">Chamar este método em um objeto <see cref="T:System.Xml.XmlEntity" /> gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-157">Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlEntity.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-158">Obtém os valores concatenados do nó de entidade e todos os seus filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-158">Gets the concatenated values of the entity node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-159">Os valores concatenados do nó e de todos os filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-159">The concatenated values of the node and all its children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-160">`XmlEntity` nós são somente leitura.</span><span class="sxs-lookup"><span data-stu-id="52fcb-160">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="52fcb-161">A definição dessa propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="52fcb-161">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="52fcb-162">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="52fcb-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="52fcb-163">Tentativa de definir a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-163">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlEntity.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-164">Obtém a marcação que representa os filhos deste nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-164">Gets the markup representing the children of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-165">Para <see langword="XmlEntity" /> nós, String. Empty será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-165">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-166">`XmlEntity` nós são somente leitura.</span><span class="sxs-lookup"><span data-stu-id="52fcb-166">`XmlEntity` nodes are read-only.</span></span> <span data-ttu-id="52fcb-167">A definição dessa propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="52fcb-167">Setting this property throws an exception.</span></span>  
  
 <span data-ttu-id="52fcb-168">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="52fcb-168">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="52fcb-169">Tentativa de definir a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-169">Attempting to set the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlEntity.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-170">Obtém um valor que indica se o nó é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-170">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-171">
            <see langword="true" /> Se o nó é somente leitura; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-171">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="52fcb-172">Porque <see langword="XmlEntity" /> nós são somente leitura, essa propriedade sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-172">Because <see langword="XmlEntity" /> nodes are read-only, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-173">Um nó somente leitura é um cujas propriedades, atributos ou filhos não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="52fcb-173">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="52fcb-174">Você pode remover um nó somente leitura da árvore e inseri-lo em outro lugar.</span><span class="sxs-lookup"><span data-stu-id="52fcb-174">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlEntity.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-175">Obtém o nome do nó sem o prefixo de namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-175">Gets the name of the node without the namespace prefix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-176">Para <see langword="XmlEntity" /> nós, essa propriedade retorna o nome da entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-176">For <see langword="XmlEntity" /> nodes, this property returns the name of the entity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlEntity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-177">Obtém o nome do nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-177">Gets the name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-178">O nome da entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-178">The name of the entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52fcb-179">O exemplo a seguir exibe informações sobre as entidades declaradas no documento XML.</span><span class="sxs-lookup"><span data-stu-id="52fcb-179">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="52fcb-180">O exemplo usa o arquivo `doment.xml` como entrada.</span><span class="sxs-lookup"><span data-stu-id="52fcb-180">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlEntity.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-181">Obtém o tipo do nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-181">Gets the type of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-182">O tipo de nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-182">The node type.</span>
          </span>
          <span data-ttu-id="52fcb-183">Para <see langword="XmlEntity" /> nós, o valor é XmlNodeType.Entity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-183">For <see langword="XmlEntity" /> nodes, the value is XmlNodeType.Entity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52fcb-184">O exemplo a seguir exibe informações sobre as entidades declaradas no documento XML.</span><span class="sxs-lookup"><span data-stu-id="52fcb-184">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="52fcb-185">O exemplo usa o arquivo `doment.xml` como entrada.</span><span class="sxs-lookup"><span data-stu-id="52fcb-185">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="NotationName">
      <MemberSignature Language="C#" Value="public string NotationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotationName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.NotationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NotationName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotationName : string" Usage="System.Xml.XmlEntity.NotationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-186">Obtém o nome do atributo opcional NDATA na declaração de entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-186">Gets the name of the optional NDATA attribute on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-187">O nome do atributo NDATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-187">The name of the NDATA attribute.</span>
          </span>
          <span data-ttu-id="52fcb-188">Se não houver nenhum NDATA <see langword="null" /> é retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-188">If there is no NDATA, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52fcb-189">O exemplo a seguir exibe informações sobre as entidades declaradas no documento XML.</span><span class="sxs-lookup"><span data-stu-id="52fcb-189">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="52fcb-190">O exemplo usa o arquivo `doment.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="52fcb-190">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public override string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlEntity.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-191">Obtém a marcação que representa este nó e todos os seus filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-191">Gets the markup representing this node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-192">Para <see langword="XmlEntity" /> nós, String. Empty será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-192">For <see langword="XmlEntity" /> nodes, String.Empty is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-193">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="52fcb-193">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicId : string" Usage="System.Xml.XmlEntity.PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-194">Obtém o valor do identificador público na declaração de entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-194">Gets the value of the public identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-195">O identificador público na entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-195">The public identifier on the entity.</span>
          </span>
          <span data-ttu-id="52fcb-196">Se não houver nenhum identificador público, <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-196">If there is no public identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52fcb-197">O exemplo a seguir exibe informações sobre as entidades declaradas no documento XML.</span><span class="sxs-lookup"><span data-stu-id="52fcb-197">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="52fcb-198">O exemplo usa o arquivo `doment.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="52fcb-198">The example uses the file, `doment.xml`, as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntity.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemId : string" Usage="System.Xml.XmlEntity.SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fcb-199">Obtém o valor do identificador do sistema na declaração de entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-199">Gets the value of the system identifier on the entity declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fcb-200">O identificador do sistema na entidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-200">The system identifier on the entity.</span>
          </span>
          <span data-ttu-id="52fcb-201">Se não houver nenhum identificador de sistema, <see langword="null" /> será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-201">If there is no system identifier, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52fcb-202">O exemplo a seguir exibe informações sobre as entidades declaradas no documento XML.</span><span class="sxs-lookup"><span data-stu-id="52fcb-202">The following example displays information on the entities declared in the XML document.</span></span>  
  
 [!code-cpp[XmlEntity#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlEntity/CPP/entities.cpp#1)]
 [!code-csharp[XmlEntity#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlEntity/CS/entities.cs#1)]
 [!code-vb[XmlEntity#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlEntity/VB/entities.vb#1)]  
  
 <span data-ttu-id="52fcb-203">O exemplo usa o arquivo `doment.xml` como entrada.</span><span class="sxs-lookup"><span data-stu-id="52fcb-203">The example uses the file `doment.xml` as input.</span></span>  
  
 [!code-xml[XmlEntity#2](~/samples/snippets/xml/VS_Snippets_Data/XmlEntity/XML/doment.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlEntity.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="52fcb-204">O <see langword="XmlWriter" /> no qual você deseja salvar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-204">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fcb-205">Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-205">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="52fcb-206">Para nós <see langword="XmlEntity" />, esse método não tem nenhum efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-206">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-207">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="52fcb-207">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlEntity.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="52fcb-208">O <see langword="XmlWriter" /> no qual você deseja salvar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-208">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fcb-209">Salva o nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-209">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="52fcb-210">Para nós <see langword="XmlEntity" />, esse método não tem nenhum efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fcb-210">For <see langword="XmlEntity" /> nodes, this method has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fcb-211">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="52fcb-211">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>