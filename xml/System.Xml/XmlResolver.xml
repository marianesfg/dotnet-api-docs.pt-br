<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="063a81fe45fda906eb30bf695a775de9ae846a2b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58746664" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <TypeSignature Language="F#" Value="type XmlResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Resolve recursos XML externos nomeados por um URI (Uniform Resource Identifier).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.XmlResolver> tipo é usado para resolver recursos XML externos, como entidades, definições de tipo de documento (DTDs) ou esquemas. Também é usado para processo incluem e importar elementos encontrados em folhas de estilo do Extensible Stylesheet Language (XSL) ou esquemas XSD (linguagem) de definição de esquema XML.  
  
 <xref:System.Xml.XmlResolver> trata todos os aspectos de negociar a conexão aos recursos, incluindo o tratamento de credenciais de segurança, abrir a conexão à fonte de dados e retornando o recurso na forma de um fluxo ou outro tipo de objeto. O objeto que chama <xref:System.Xml.XmlResolver> tem a tarefa de interpretar o fluxo.  
  
 O <xref:System.Xml> namespace inclui duas implementações concretas de <xref:System.Xml.XmlResolver> classe:  
  
-   <xref:System.Xml.XmlUrlResolver> é o resolvedor padrão para todas as classes no <xref:System.Xml> namespace. Suporta `file://` e os protocolos e as solicitações de `http://` de <xref:System.Net.WebRequest?displayProperty=nameWithType> classe. Para obter exemplos de estender a classe para melhorar o desempenho, consulte o <xref:System.Xml.XmlUrlResolver> página de referência.  
  
-   <xref:System.Xml.XmlSecureResolver> ajuda a proteger outro <xref:System.Xml.XmlResolver> objeto encapsulando o objeto e restringindo os recursos que ele possa acessar. Por exemplo, o <xref:System.Xml.XmlSecureResolver> pode proibir o acesso a sites da Internet específicos ou zonas.  
  
 Você pode criar e especificar seu próprio resolvedor. Se você não especificar um resolvedor, o leitor usa um padrão <xref:System.Xml.XmlUrlResolver> sem credenciais do usuário.  
  
 Você especifica <xref:System.Xml.XmlResolver> para usar definindo a propriedade de <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> e passando o objeto de <xref:System.Xml.XmlReaderSettings> para o método de <xref:System.Xml.XmlReader.Create%2A> .  
  
 Se os recursos são armazenados em um sistema que requer autenticação, você usa o <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> propriedade para especificar as credenciais necessárias.  
  
## <a name="supplying-authentication-credentials"></a>Fornecer credenciais de autenticação  
 O arquivo que contém os dados XML para ler pode ter uma política de acesso restrito. Se a autenticação for necessária para acessar um recurso de rede, use a propriedade de <xref:System.Xml.XmlResolver.Credentials%2A> para especificar as credenciais necessárias. Se o <xref:System.Xml.XmlResolver.Credentials%2A> não está definida, as credenciais são definidas como `null`.  
  
 Por exemplo, suponha que as credenciais são necessárias ao solicitar dados da web para fins de autenticação. A menos que o diretório virtual da web permite o acesso anônimo, você deve definir o <xref:System.Xml.XmlResolver.Credentials%2A> propriedade para fornecer credenciais. O exemplo a seguir cria uma <xref:System.Xml.XmlReader> objeto que usa um <xref:System.Xml.XmlUrlResolver> com credenciais padrão para acessar o http://localhost/bookstore/inventory.xml site.  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 Você pode fornecer credenciais diferentes para diferentes URIs e adicioná-los a um cache. Essas credenciais são usadas para verificar a autenticação para o URIs diferente independentemente da fonte original XML. O exemplo a seguir mostra como adicionar credenciais a um cache.  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a>Considerações sobre segurança  
 Considere os itens a seguir ao trabalhar com o <xref:System.Xml.XmlResolver> classe.  
  
-   os objetos de<xref:System.Xml.XmlResolver> podem conter informações sigilosas como credenciais do usuário. Você deve ter cuidado ao armazenar em cache <xref:System.Xml.XmlResolver> objetos e não deve passar o <xref:System.Xml.XmlResolver> objeto para um componente não confiável.  
  
-   Se você estiver criando uma classe de propriedade que usa a classe de <xref:System.Xml.XmlResolver> , a propriedade deve ser definida como uma propriedade somente de escrita. A propriedade pode ser usada para especificar <xref:System.Xml.XmlResolver> para usar, mas não pode ser usada para retornar um objeto de <xref:System.Xml.XmlResolver> .  
  
-   Se seu aplicativo aceita <xref:System.Xml.XmlResolver> objetos de código não confiável, você não pode presumir que o URI passado para o <xref:System.Xml.XmlResolver.GetEntity%2A> método será o mesmo que aquele retornado pelo <xref:System.Xml.XmlResolver.ResolveUri%2A> método. Classes derivadas de classes de <xref:System.Xml.XmlResolver> podem substituir o método de <xref:System.Xml.XmlResolver.GetEntity%2A> e os dados de retorno que são diferentes do que foi contido no URL original.  
  
-   Seu aplicativo pode atenuar memória ameaças de negação de serviço para o <xref:System.Xml.XmlResolver.GetEntity%2A> método implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream> que limita o número de bytes lidos. Isso ajuda a proteger contra as situações em que o código mal-intencionado tenta passar um fluxo infinito de bytes a serem o <xref:System.Xml.XmlResolver.GetEntity%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Xml.XmlUrlResolver> com credenciais padrão. Um <xref:System.Xml.XmlReader> é usado para ler e exibir o fluxo de dados resultante.  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Documentos e dados XML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor é chamado por construtores de classe derivada para inicializar o estado nesse tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, define as credenciais usadas para autenticar solicitações da Web.</summary>
        <value>As credenciais a serem usadas para autenticar solicitações da Web. Se essa propriedade não estiver definida, o valor assumirá o padrão de <see langword="null" />, isto é, o <see langword="XmlResolver" /> não tem credenciais de usuário.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o diretório virtual não exigir autenticação, essa propriedade não precisa ser definido. Caso contrário, as credenciais do usuário devem ser fornecidas.  
  
 O código c# a seguir define as credenciais no <xref:System.Xml.XmlResolver> objeto.  
  
```csharp  
NetworkCredential nc = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 Você pode associar as credenciais diferentes com diferentes URIs e adicioná-los a um cache. Em seguida, você pode usar as credenciais para verificar a autenticação para URIs diferente independentemente da origem do XML original.  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 Consulte <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> para obter um exemplo que usa essa propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : Uri * string * Type -&gt; obj" Usage="xmlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Não usado no momento.</param>
        <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos System.IO.Stream.</param>
        <summary>Quando substituído em uma classe derivada, mapeia um URI para um objeto que contém o recurso real.</summary>
        <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado quando o chamador deseja mapear um determinado URI para o objeto que contém o recurso real que representa o URI. O tipo de objeto retornado é negociável; No entanto, a implementação sempre deve suportar <xref:System.IO.Stream?displayProperty=nameWithType>.  
  
 Para obter a versão assíncrona deste método, consulte <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.  
  
> [!IMPORTANT]
>  Seu aplicativo pode atenuar memória ameaças de negação de serviço para o <xref:System.Xml.XmlResolver.GetEntity%2A> método implementando um <xref:System.Runtime.InteropServices.ComTypes.IStream> que limita o número de bytes lidos. Isso ajuda a proteger contra as situações em que o código mal-intencionado tenta passar um fluxo infinito de bytes a serem o <xref:System.Xml.XmlResolver.GetEntity%2A> método.  
  
   
  
## Examples  
 Consulte <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> para obter um exemplo usando esse método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" /> não é um tipo <see langword="Stream" />.</exception>
        <exception cref="T:System.UriFormatException">O URI especificado não é um URI absoluto.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="absoluteUri" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Há um erro de tempo de execução (por exemplo, uma conexão de servidor interrompida).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">O URI retornado de <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Não usado no momento.</param>
        <param name="ofObjectToReturn">O tipo de objeto a ser retornado. A versão atual retorna somente objetos <see cref="T:System.IO.Stream" />.</param>
        <summary>Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</summary>
        <returns>Um objeto de fluxo ou <see langword="null" /> se for especificado um tipo diferente de fluxo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa é a versão assíncrona de <xref:System.Xml.XmlResolver.GetEntity%2A>, com a mesma funcionalidade. Para usar esse método, você deve definir a <xref:System.Xml.XmlReaderSettings.Async%2A> sinalizador como `true`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programação assíncrona com Async e Await (C# e Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member ResolveUri : Uri * string -&gt; Uri&#xA;override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">O URI base usado para resolver o URI relativo.</param>
        <param name="relativeUri">O URI a ser resolvido. O URI pode ser absoluto ou relativo. Se for absoluto, esse valor substituirá eficientemente o valor <paramref name="baseUri" />. Se for relativo, ele combinará com a <paramref name="baseUri" /> para tornar um URI absoluto.</param>
        <summary>Quando substituído em uma classe derivada, resolve o URI absoluto dos URIs base e relativo.</summary>
        <returns>O URI absoluto ou <see langword="null" /> se o URI relativo não puder ser resolvido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O URI absoluto pode ser usado como o URI de base para todas as solicitações subsequentes para entidades que são relativas a esse URI.  
  
   
  
## Examples  
 Consulte <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> para obter um exemplo que usa esse método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="relativeUri" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member SupportsType : Uri * Type -&gt; bool&#xA;override this.SupportsType : Uri * Type -&gt; bool" Usage="xmlResolver.SupportsType (absoluteUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">O URI.</param>
        <param name="type">O tipo a ser retornado.</param>
        <summary>Habilita o resolvedor para tipos de retorno diferentes de <see cref="T:System.IO.Stream" />.</summary>
        <returns><see langword="true" /> se houver suporte para o <paramref name="type" />; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>