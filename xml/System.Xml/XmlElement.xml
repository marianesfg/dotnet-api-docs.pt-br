<Type Name="XmlElement" FullName="System.Xml.XmlElement">
  <TypeSignature Language="C#" Value="public class XmlElement : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElement extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlElement" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElement&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElement : System::Xml::XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c94b3-101">Representa um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-101">Represents an element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-102">Elementos são um de nós mais comuns no W3C DOM Document Object Model ().</span><span class="sxs-lookup"><span data-stu-id="c94b3-102">Elements are one of the most common nodes in the W3C Document Object Model (DOM).</span></span> <span data-ttu-id="c94b3-103">Elementos podem ter atributos associados a eles.</span><span class="sxs-lookup"><span data-stu-id="c94b3-103">Elements can have attributes associated with them.</span></span> <span data-ttu-id="c94b3-104">O `XmlElement` classe tem muitos métodos para acessar atributos (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="c94b3-104">The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on).</span></span> <span data-ttu-id="c94b3-105">Você também pode usar o <xref:System.Xml.XmlElement.Attributes%2A> propriedade que retorna um <xref:System.Xml.XmlAttributeCollection> permitindo que você acesse os atributos por nome ou índice da coleção.</span><span class="sxs-lookup"><span data-stu-id="c94b3-105">You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateElement(System.String)" />
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="c94b3-106">O prefixo de namespace; consulte a propriedade <see cref="P:System.Xml.XmlElement.Prefix" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-106">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix" /> property.</span></span></param>
        <param name="localName"><span data-ttu-id="c94b3-107">O nome local; consulte a propriedade <see cref="P:System.Xml.XmlElement.LocalName" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-107">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName" /> property.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-108">O URI do namespace; consulte a propriedade <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-108">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property.</span></span></param>
        <param name="doc"><span data-ttu-id="c94b3-109">O documento XML pai.</span><span class="sxs-lookup"><span data-stu-id="c94b3-109">The parent XML document.</span></span></param>
        <summary><span data-ttu-id="c94b3-110">Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-110">Initializes a new instance of the <see cref="T:System.Xml.XmlElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-111">Não criar uma instância de um <xref:System.Xml.XmlElement> diretamente; em vez disso, use os métodos, como <xref:System.Xml.XmlDocument.CreateElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="c94b3-111">Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-112">Obtém um <see cref="T:System.Xml.XmlAttributeCollection" /> que contém a lista de atributos desse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-112">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></summary>
        <value>
          <span data-ttu-id="c94b3-113">Um <see cref="T:System.Xml.XmlAttributeCollection" /> que contém a lista de atributos desse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-113"><see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-114">A exemplo a seguir usa altera o valor do primeiro atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-114">The following example uses changes the value of the first attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="c94b3-115"><see langword="true" /> para clonar recursivamente a subárvore sob o nó especificado; <see langword="false" /> para clonar apenas o próprio nó (e seus atributos, se o nó for um <see langword="XmlElement" />).</span><span class="sxs-lookup"><span data-stu-id="c94b3-115"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself (and its attributes if the node is an <see langword="XmlElement" />).</span></span></param>
        <summary><span data-ttu-id="c94b3-116">Cria uma duplicação deste nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-116">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="c94b3-117">O nó clonado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-117">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-118">Esse método funciona como um construtor de cópia para nós.</span><span class="sxs-lookup"><span data-stu-id="c94b3-118">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="c94b3-119">O nó duplicado não tem nenhum pai (<xref:System.Xml.XmlNode.ParentNode%2A> retorna `null`).</span><span class="sxs-lookup"><span data-stu-id="c94b3-119">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-120">O exemplo a seguir cria um novo elemento, clona-lo e, em seguida, adiciona os dois elementos em um documento XML.</span><span class="sxs-lookup"><span data-stu-id="c94b3-120">The following example creates a new element, clones it, and then adds both elements into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-121">Retorna o valor de atributo para o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-121">Returns the attribute value for the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-122">O nome do atributo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-122">The name of the attribute to retrieve.</span></span> <span data-ttu-id="c94b3-123">Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-123">This is a qualified name.</span></span> <span data-ttu-id="c94b3-124">Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-124">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="c94b3-125">Retorna o valor do atributo com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-125">Returns the value for the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c94b3-126">O valor do atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-126">The value of the specified attribute.</span></span> <span data-ttu-id="c94b3-127">Uma cadeia de caracteres vazia será retornada se um atributo correspondente não for encontrado ou se o atributo não tiver um valor especificado ou padrão.</span><span class="sxs-lookup"><span data-stu-id="c94b3-127">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-128">O exemplo a seguir verifica se o elemento tem o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-128">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-129">O nome local do atributo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-129">The local name of the attribute to retrieve.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-130">O URI do namespace do atributo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-130">The namespace URI of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="c94b3-131">Retorna o valor do atributo com o nome local e o URI do namespace especificados.</span><span class="sxs-lookup"><span data-stu-id="c94b3-131">Returns the value for the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="c94b3-132">O valor do atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-132">The value of the specified attribute.</span></span> <span data-ttu-id="c94b3-133">Uma cadeia de caracteres vazia será retornada se um atributo correspondente não for encontrado ou se o atributo não tiver um valor especificado ou padrão.</span><span class="sxs-lookup"><span data-stu-id="c94b3-133">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-134">Retorne o <see cref="T:System.Xml.XmlAttribute" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-134">Return the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-135">O nome do atributo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-135">The name of the attribute to retrieve.</span></span> <span data-ttu-id="c94b3-136">Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-136">This is a qualified name.</span></span> <span data-ttu-id="c94b3-137">Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-137">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="c94b3-138">Retorna o <see langword="XmlAttribute" /> com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-138">Returns the <see langword="XmlAttribute" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c94b3-139">O <see langword="XmlAttribute" /> especificado ou <see langword="null" /> se um atributo correspondente não for encontrado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-139">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-140">O exemplo a seguir verifica se o elemento tem o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-140">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-141">O nome local do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-141">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-142">O URI do namespace do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-142">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="c94b3-143">Retorna o <see cref="T:System.Xml.XmlAttribute" /> com o nome do local especificado e o URI do namespace.</span><span class="sxs-lookup"><span data-stu-id="c94b3-143">Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="c94b3-144">O <see langword="XmlAttribute" /> especificado ou <see langword="null" /> se um atributo correspondente não for encontrado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-144">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-145">Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao nome especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-145">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-146">A identificação de nome a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="c94b3-146">The name tag to match.</span></span> <span data-ttu-id="c94b3-147">Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-147">This is a qualified name.</span></span> <span data-ttu-id="c94b3-148">Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-148">It is matched against the <see langword="Name" /> property of the matching node.</span></span> <span data-ttu-id="c94b3-149">O asterisco (\*) é um valor especial que corresponde a todas as marcas.</span><span class="sxs-lookup"><span data-stu-id="c94b3-149">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <summary><span data-ttu-id="c94b3-150">Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlElement.Name" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-150">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />.</span></span></summary>
        <returns><span data-ttu-id="c94b3-151">Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes.</span><span class="sxs-lookup"><span data-stu-id="c94b3-151">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="c94b3-152">A lista está vazia se não houver nenhum nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-152">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-153">Os nós são colocados na ordem em que eles seriam encontrados em uma passagem preorder do <xref:System.Xml.XmlElement> árvore.</span><span class="sxs-lookup"><span data-stu-id="c94b3-153">The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c94b3-154">É recomendável que você use o <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> ou <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> método em vez do <xref:System.Xml.XmlElement.GetElementsByTagName%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c94b3-154">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-155">O exemplo a seguir obtém e exibe todos os títulos de livro.</span><span class="sxs-lookup"><span data-stu-id="c94b3-155">The following example gets and displays all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c94b3-156">O exemplo usa o arquivo de `2books.xml`, como entrada.</span><span class="sxs-lookup"><span data-stu-id="c94b3-156">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-157">O nome local a ser correspondido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-157">The local name to match.</span></span> <span data-ttu-id="c94b3-158">O asterisco (\*) é um valor especial que corresponde a todas as marcas.</span><span class="sxs-lookup"><span data-stu-id="c94b3-158">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-159">O URI do namespace que deverá ser correspondido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-159">The namespace URI to match.</span></span></param>
        <summary><span data-ttu-id="c94b3-160">Retorna um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os elementos descendentes que correspondem ao <see cref="P:System.Xml.XmlElement.LocalName" /> e <see cref="P:System.Xml.XmlElement.NamespaceURI" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="c94b3-160">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="c94b3-161">Um <see cref="T:System.Xml.XmlNodeList" /> que contém uma lista de todos os nós correspondentes.</span><span class="sxs-lookup"><span data-stu-id="c94b3-161">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="c94b3-162">A lista está vazia se não houver nenhum nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-162">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-163">Os nós são colocados na ordem em que eles seriam encontrados em uma passagem preorder do `XmlElement` árvore.</span><span class="sxs-lookup"><span data-stu-id="c94b3-163">The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c94b3-164">É recomendável que você use o <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> ou <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> método em vez do <xref:System.Xml.XmlElement.GetElementsByTagName%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c94b3-164">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-165">Determina se o nó atual tem o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-165">Determines whether the current node has the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-166">O nome do atributo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-166">The name of the attribute to find.</span></span> <span data-ttu-id="c94b3-167">Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-167">This is a qualified name.</span></span> <span data-ttu-id="c94b3-168">Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-168">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="c94b3-169">Determina se o nó atual tem um atributo com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-169">Determines whether the current node has an attribute with the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="c94b3-170"><see langword="true" /> se o nó atual tiver o atributo especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-170"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-171">O exemplo a seguir verifica se o elemento tem o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-171">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-172">O nome local do atributo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-172">The local name of the attribute to find.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-173">O URI do namespace do atributo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-173">The namespace URI of the attribute to find.</span></span></param>
        <summary><span data-ttu-id="c94b3-174">Determina se o nó atual tem um atributo com o nome do local especificado e o URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="c94b3-174">Determines whether the current node has an attribute with the specified local name and namespace URI.</span></span></summary>
        <returns>
          <span data-ttu-id="c94b3-175"><see langword="true" /> se o nó atual tiver o atributo especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-175"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-176">Obtém um valor <see langword="boolean" /> que indica se o nó atual tem algum atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-176">Gets a <see langword="boolean" /> value indicating whether the current node has any attributes.</span></span></summary>
        <value>
          <span data-ttu-id="c94b3-177"><see langword="true" /> Se o nó atual possui atributos; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-177"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-178">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="c94b3-178">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-179">O exemplo a seguir remove todos os atributos do elemento raiz.</span><span class="sxs-lookup"><span data-stu-id="c94b3-179">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-180">Obtém ou define os valores concatenados do nó e todos os seus filhos.</span><span class="sxs-lookup"><span data-stu-id="c94b3-180">Gets or sets the concatenated values of the node and all its children.</span></span></summary>
        <value><span data-ttu-id="c94b3-181">Os valores concatenados do nó e de todos os filhos.</span><span class="sxs-lookup"><span data-stu-id="c94b3-181">The concatenated values of the node and all its children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-182">A definição dessa propriedade substitui todos os filhos com o conteúdo analisado da cadeia de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="c94b3-182">Setting this property replaces all the children with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="c94b3-183">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="c94b3-183">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-184">O exemplo a seguir compara o `InnerText` e <xref:System.Xml.XmlElement.InnerXml%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="c94b3-184">The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-185">Obtém ou define a marcação que representa apenas os filhos deste nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-185">Gets or sets the markup representing just the children of this node.</span></span></summary>
        <value><span data-ttu-id="c94b3-186">A marcação dos filhos deste nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-186">The markup of the children of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-187">A definição dessa propriedade substitui os filhos do nó com o conteúdo analisado da cadeia de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="c94b3-187">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="c94b3-188">A análise é feita no contexto do namespace atual.</span><span class="sxs-lookup"><span data-stu-id="c94b3-188">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="c94b3-189">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="c94b3-189">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-190">O exemplo a seguir compara o <xref:System.Xml.XmlElement.InnerText%2A> e `InnerXml` propriedades.</span><span class="sxs-lookup"><span data-stu-id="c94b3-190">The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c94b3-191">O XML especificado ao definir essa propriedade não está bem formado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-191">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-192">Obtém ou define o formato de marca do elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-192">Gets or sets the tag format of the element.</span></span></summary>
        <value><span data-ttu-id="c94b3-193">Retorna <see langword="true" /> se o elemento está para ser serializada em formato curto marca "&lt;item /&gt;"; <see langword="false" /> para o formato longo "&lt;item&gt;&lt;/item&gt;".</span><span class="sxs-lookup"><span data-stu-id="c94b3-193">Returns <see langword="true" /> if the element is to be serialized in the short tag format "&lt;item/&gt;"; <see langword="false" /> for the long format "&lt;item&gt;&lt;/item&gt;".</span></span>  
  
 <span data-ttu-id="c94b3-194">Ao definir essa propriedade, se for definida como <see langword="true" />, os filhos do elemento serão removidos e o elemento será serializado no formato de marca abreviado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-194">When setting this property, if set to <see langword="true" />, the children of the element are removed and the element is serialized in the short tag format.</span></span> <span data-ttu-id="c94b3-195">Se definido como <see langword="false" />, o valor da propriedade é alterado (independentemente de estarem ou não o elemento tem conteúdo); se o elemento está vazio, ele é serializado no formato longo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-195">If set to <see langword="false" />, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</span></span>  
  
 <span data-ttu-id="c94b3-196">Essa propriedade é uma extensão da Microsoft do DOM (Modelo de Objeto do Documento).</span><span class="sxs-lookup"><span data-stu-id="c94b3-196">This property is a Microsoft extension to the Document Object Model (DOM).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-197">Esta propriedade é uma extensão de modelo de objeto de documento (DOM) da Microsoft.</span><span class="sxs-lookup"><span data-stu-id="c94b3-197">This property is a Microsoft extension of the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-198">O exemplo a seguir adiciona o conteúdo para um elemento vazio.</span><span class="sxs-lookup"><span data-stu-id="c94b3-198">The following example adds content to an empty element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-199">Obtém o nome local do nó atual.</span><span class="sxs-lookup"><span data-stu-id="c94b3-199">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="c94b3-200">O nome do nó atual com o prefixo removido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-200">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="c94b3-201">Por exemplo, <see langword="LocalName" /> é o catálogo para o elemento &lt;bk:book&gt;.</span><span class="sxs-lookup"><span data-stu-id="c94b3-201">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-202">Se o nó não tem um prefixo, `LocalName` é o mesmo que <xref:System.Xml.XmlElement.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="c94b3-202">If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-203">O exemplo a seguir exibe informações sobre o elemento ISBN.</span><span class="sxs-lookup"><span data-stu-id="c94b3-203">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-204">Obtém o nome qualificado do nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-204">Gets the qualified name of the node.</span></span></summary>
        <value><span data-ttu-id="c94b3-205">O nome qualificado do nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-205">The qualified name of the node.</span></span> <span data-ttu-id="c94b3-206">Para nós <see langword="XmlElement" />, esse é o nome de marca do elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-206">For <see langword="XmlElement" /> nodes, this is the tag name of the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-207">O exemplo a seguir exibe informações sobre o elemento ISBN.</span><span class="sxs-lookup"><span data-stu-id="c94b3-207">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlElement.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-208">Obtém o URI do namespace deste nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-208">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="c94b3-209">O URI do namespace deste nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-209">The namespace URI of this node.</span></span> <span data-ttu-id="c94b3-210">Se não houver um URI do namespace, a propriedade retorna a String.Empty.</span><span class="sxs-lookup"><span data-stu-id="c94b3-210">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-211">Este é o namespace que URI especificado no momento da criação.</span><span class="sxs-lookup"><span data-stu-id="c94b3-211">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="c94b3-212">Por exemplo, `NamespaceURI` é urn: exemplos do elemento \<bk:book xmlns:bk = "urn: exemplos" ></span><span class="sxs-lookup"><span data-stu-id="c94b3-212">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-213">O exemplo a seguir exibe informações sobre o elemento ISBN.</span><span class="sxs-lookup"><span data-stu-id="c94b3-213">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-214">Obtém o <see cref="T:System.Xml.XmlNode" /> imediatamente após esse elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-214">Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.</span></span></summary>
        <value><span data-ttu-id="c94b3-215">O <see langword="XmlNode" /> imediatamente após esse elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-215">The <see langword="XmlNode" /> immediately following this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-216">Obtém o tipo do nó atual.</span><span class="sxs-lookup"><span data-stu-id="c94b3-216">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="c94b3-217">O tipo de nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-217">The node type.</span></span> <span data-ttu-id="c94b3-218">Para <see langword="XmlElement" /> nós, esse valor é XmlNodeType.</span><span class="sxs-lookup"><span data-stu-id="c94b3-218">For <see langword="XmlElement" /> nodes, this value is XmlNodeType.Element.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-219">Obtém o <see cref="T:System.Xml.XmlDocument" /> ao qual esse nó pertence.</span><span class="sxs-lookup"><span data-stu-id="c94b3-219">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="c94b3-220">O <see langword="XmlDocument" /> ao qual este elemento pertence.</span><span class="sxs-lookup"><span data-stu-id="c94b3-220">The <see langword="XmlDocument" /> to which this element belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-221">Ao adicionar nós ao nó atual, use o `XmlDocument` retornado pelo `OwnerDocument` propriedade para criar o nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-221">When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-222">O exemplo a seguir insere um novo elemento em um documento XML.</span><span class="sxs-lookup"><span data-stu-id="c94b3-222">The following example inserts a new element into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-223">Obtém o pai deste nó (para os nós que podem ter pais).</span><span class="sxs-lookup"><span data-stu-id="c94b3-223">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="c94b3-224">O <see langword="XmlNode" /> que é o pai do nó atual.</span><span class="sxs-lookup"><span data-stu-id="c94b3-224">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="c94b3-225">Se um nó tiver acabado de ser criado e ainda não foram adicionados à árvore, ou se ele tiver sido removido da árvore, o pai é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-225">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="c94b3-226">Para todos os outros nós, o valor retornado depende do <see cref="P:System.Xml.XmlNode.NodeType" /> do nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-226">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="c94b3-227">A tabela a seguir descreve os possíveis valores retornados para a propriedade <see langword="ParentNode" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-227">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-228">Obtém ou define o prefixo de namespace desse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-228">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="c94b3-229">O prefixo de namespace desse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-229">The namespace prefix of this node.</span></span> <span data-ttu-id="c94b3-230">Se não houver nenhum prefixo, essa propriedade retorna Empty.</span><span class="sxs-lookup"><span data-stu-id="c94b3-230">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-231">A definição dessa propriedade altera o <xref:System.Xml.XmlElement.Name%2A> propriedade, que contém o nome qualificado para um `XmlElement`.</span><span class="sxs-lookup"><span data-stu-id="c94b3-231">Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`.</span></span> <span data-ttu-id="c94b3-232">No entanto, alterar o prefixo não altera o URI do namespace do elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-232">However, changing the prefix does not change the namespace URI of the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-233">O exemplo a seguir exibe informações sobre o elemento ISBN.</span><span class="sxs-lookup"><span data-stu-id="c94b3-233">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-234">Este nó é somente leitura</span><span class="sxs-lookup"><span data-stu-id="c94b3-234">This node is read-only</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c94b3-235">O prefixo especificado contém um caractere inválido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-235">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="c94b3-236">O prefixo especificado está malformado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-236">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="c94b3-237">O namespaceURI deste nó é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-237">The namespaceURI of this node is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c94b3-238">O prefixo especificado é "xml" e o namespaceURI deste nó é diferente de http://www.w3.org/XML/1998/namespace.</span><span class="sxs-lookup"><span data-stu-id="c94b3-238">The specified prefix is "xml" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public override void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c94b3-239">Remove todos os atributos especificados e os filhos do nó atual.</span><span class="sxs-lookup"><span data-stu-id="c94b3-239">Removes all specified attributes and children of the current node.</span></span> <span data-ttu-id="c94b3-240">Os atributos padrão não são removidos.</span><span class="sxs-lookup"><span data-stu-id="c94b3-240">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-241">O exemplo a seguir remove todos os atributos e nós filho do elemento raiz.</span><span class="sxs-lookup"><span data-stu-id="c94b3-241">The following example removes all attributes and child nodes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAttributes">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAllAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAllAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c94b3-242">Remove todos os atributos especificados do elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-242">Removes all specified attributes from the element.</span></span> <span data-ttu-id="c94b3-243">Os atributos padrão não são removidos.</span><span class="sxs-lookup"><span data-stu-id="c94b3-243">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-244">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="c94b3-244">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-245">O exemplo a seguir remove todos os atributos do elemento raiz.</span><span class="sxs-lookup"><span data-stu-id="c94b3-245">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-246">Remove o atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-246">Removes the specified attribute.</span></span> <span data-ttu-id="c94b3-247">(Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</span><span class="sxs-lookup"><span data-stu-id="c94b3-247">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-248">O nome do atributo a ser removido. Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-248">The name of the attribute to remove.This is a qualified name.</span></span> <span data-ttu-id="c94b3-249">Ele é comparado com a propriedade <see langword="Name" /> do nó correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-249">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="c94b3-250">Remove um atributo pelo nome.</span><span class="sxs-lookup"><span data-stu-id="c94b3-250">Removes an attribute by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-251">Se o atributo removido é conhecido por ter um valor padrão, um atributo aparece imediatamente que contém o valor padrão e, se aplicável, o URI de namespace correspondente, o nome local e o prefixo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-251">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-252">O exemplo a seguir remove um atributo de um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-252">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-253">O nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-253">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (localName As String, namespaceURI As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-254">O nome local do atributo a ser removido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-254">The local name of the attribute to remove.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-255">O URI do namespace do atributo a ser removido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-255">The namespace URI of the attribute to remove.</span></span></param>
        <summary><span data-ttu-id="c94b3-256">Remove um atributo com o nome do local e o URI de namespace especificados.</span><span class="sxs-lookup"><span data-stu-id="c94b3-256">Removes an attribute with the specified local name and namespace URI.</span></span> <span data-ttu-id="c94b3-257">(Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</span><span class="sxs-lookup"><span data-stu-id="c94b3-257">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-258">Se o atributo removido é conhecido por ter um valor padrão, um atributo aparece imediatamente que contém o valor padrão e, se aplicável, o URI de namespace correspondente, o nome local e o prefixo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-258">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-259">O exemplo a seguir remove um atributo de um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-259">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-260">O nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-260">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeAt">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveAttributeAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveAttributeAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeAt (i As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveAttributeAt(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="c94b3-261">O índice do nó a ser removido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-261">The index of the node to remove.</span></span> <span data-ttu-id="c94b3-262">O primeiro nó tem índice 0.</span><span class="sxs-lookup"><span data-stu-id="c94b3-262">The first node has index 0.</span></span></param>
        <summary><span data-ttu-id="c94b3-263">Remove o nó do atributo com o índice especificado do elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-263">Removes the attribute node with the specified index from the element.</span></span> <span data-ttu-id="c94b3-264">(Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</span><span class="sxs-lookup"><span data-stu-id="c94b3-264">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="c94b3-265">O nó do atributo removido ou <see langword="null" /> se não houver nenhum nó no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-265">The attribute node removed or <see langword="null" /> if there is no node at the given index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-266">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="c94b3-266">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-267">O exemplo a seguir remove um atributo de um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-267">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-268">Remove um <see cref="T:System.Xml.XmlAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-268">Removes an <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(class System.Xml.XmlAttribute oldAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (oldAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::Xml::XmlAttribute ^ oldAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="oldAttr"><span data-ttu-id="c94b3-269">O nó <see langword="XmlAttribute" /> a ser removido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-269">The <see langword="XmlAttribute" /> node to remove.</span></span> <span data-ttu-id="c94b3-270">Se o atributo removido tiver um valor padrão, ele será substituído imediatamente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-270">If the removed attribute has a default value, it is immediately replaced.</span></span></param>
        <summary><span data-ttu-id="c94b3-271">Remove o <see cref="T:System.Xml.XmlAttribute" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-271">Removes the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="c94b3-272">O <see langword="XmlAttribute" /> removido ou <see langword="null" /> se <paramref name="oldAttr" /> não for um nó do atributo do <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-272">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if <paramref name="oldAttr" /> is not an attribute node of the <see langword="XmlElement" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-273">Este nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-273">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-274">O nome local do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-274">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-275">O URI do namespace do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-275">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="c94b3-276">Remove o <see cref="T:System.Xml.XmlAttribute" /> especificado pelo nome local e URI de namespace.</span><span class="sxs-lookup"><span data-stu-id="c94b3-276">Removes the <see cref="T:System.Xml.XmlAttribute" /> specified by the local name and namespace URI.</span></span> <span data-ttu-id="c94b3-277">(Se o atributo removido tiver um valor padrão, ele será substituído imediatamente).</span><span class="sxs-lookup"><span data-stu-id="c94b3-277">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="c94b3-278">O <see langword="XmlAttribute" /> removido ou <see langword="null" /> se o <see langword="XmlElement" /> não tiver tem um nó de atributo correspondente.</span><span class="sxs-lookup"><span data-stu-id="c94b3-278">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if the <see langword="XmlElement" /> does not have a matching attribute node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c94b3-279">O exemplo a seguir remove um atributo de um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-279">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-280">Este nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-280">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c94b3-281">Obtém o infoset de validação de esquema de postagem que foi atribuído a esse nó como resultado da validação de esquema.</span><span class="sxs-lookup"><span data-stu-id="c94b3-281">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="c94b3-282">Um objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contendo o infoset de validação de esquema de postagem desse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-282">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-283">O <xref:System.Xml.XmlElement.SchemaInfo%2A> propriedade é definida quando este nó é validado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-283">The <xref:System.Xml.XmlElement.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-284">Define o valor do atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-284">Sets the value of the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c94b3-285">O nome do atributo a ser criado ou alterado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-285">The name of the attribute to create or alter.</span></span> <span data-ttu-id="c94b3-286">Este é um nome qualificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-286">This is a qualified name.</span></span> <span data-ttu-id="c94b3-287">Se o nome contiver dois-pontos, ele será analisado em componentes de nome local e prefixo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-287">If the name contains a colon it is parsed into prefix and local name components.</span></span></param>
        <param name="value"><span data-ttu-id="c94b3-288">O valor a ser definido para o atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-288">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="c94b3-289">Define o valor do atributo com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-289">Sets the value of the attribute with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-290">Se um atributo com o mesmo nome já está presente no elemento, seu valor é alterado para `value`.</span><span class="sxs-lookup"><span data-stu-id="c94b3-290">If an attribute with the same name is already present in the element, its value is changed to that of `value`.</span></span> <span data-ttu-id="c94b3-291">`value` é uma cadeia de caracteres simple.</span><span class="sxs-lookup"><span data-stu-id="c94b3-291">`value` is a simple string.</span></span> <span data-ttu-id="c94b3-292">Ela não é analisada como ele está sendo definido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-292">It is not parsed as it is being set.</span></span> <span data-ttu-id="c94b3-293">Qualquer marcação, como a sintaxe para ser reconhecida como uma referência de entidade é tratada como texto literal e precisa ser ignorada corretamente pela implementação quando ele é gravado. Para atribuir um valor de atributo que contém referências de entidade, o usuário deve criar um <xref:System.Xml.XmlAttribute> nó mais qualquer <xref:System.Xml.XmlText> e <xref:System.Xml.XmlEntityReference> nós, a subárvore apropriada de criar e usar <xref:System.Xml.XmlElement.SetAttributeNode%2A> atribuí-lo como o valor de um atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-293">Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="c94b3-294">O nome especificado contém um caractere inválido.</span><span class="sxs-lookup"><span data-stu-id="c94b3-294">The specified name contains an invalid character.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-295">O nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-295">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual string SetAttribute (string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetAttribute(string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttribute (localName As String, namespaceURI As String, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SetAttribute(System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-296">O nome local do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-296">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-297">O URI do namespace do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-297">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="c94b3-298">O valor a ser definido para o atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-298">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="c94b3-299">Define o valor do atributo com o nome do local e o URI de namespace especificados.</span><span class="sxs-lookup"><span data-stu-id="c94b3-299">Sets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="c94b3-300">O valor do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-300">The attribute value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c94b3-301">Adiciona um novo <see cref="T:System.Xml.XmlAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-301">Adds a new <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(class System.Xml.XmlAttribute newAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (newAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::Xml::XmlAttribute ^ newAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newAttr"><span data-ttu-id="c94b3-302">O nó <see langword="XmlAttribute" /> para adicionar à coleção de atributos desse elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-302">The <see langword="XmlAttribute" /> node to add to the attribute collection for this element.</span></span></param>
        <summary><span data-ttu-id="c94b3-303">Adiciona o <see cref="T:System.Xml.XmlAttribute" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-303">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="c94b3-304">Se o atributo substitui um atributo existente com o mesmo nome, o <see langword="XmlAttribute" /> antigo será retornado; caso contrário, <see langword="null" /> é retornado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-304">If the attribute replaces an existing attribute with the same name, the old <see langword="XmlAttribute" /> is returned; otherwise, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-305">Se um atributo com esse nome já está presente no elemento, ele será substituído pelo novo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-305">If an attribute with that name is already present in the element, it is replaced by the new one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c94b3-306">O <paramref name="newAttr" /> foi criado com base em um documento diferente daquele que criou esse nó.</span><span class="sxs-lookup"><span data-stu-id="c94b3-306">The <paramref name="newAttr" /> was created from a different document than the one that created this node.</span></span> <span data-ttu-id="c94b3-307">Ou esse nó é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c94b3-307">Or this node is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c94b3-308">O <paramref name="newAttr" /> já é um atributo de outro objeto <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-308">The <paramref name="newAttr" /> is already an attribute of another <see langword="XmlElement" /> object.</span></span> <span data-ttu-id="c94b3-309">Você deve clonar explicitamente nós de <see langword="XmlAttribute" /> para reutilizá-los em outros objetos <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="c94b3-309">You must explicitly clone <see langword="XmlAttribute" /> nodes to re-use them in other <see langword="XmlElement" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="c94b3-310">O nome local do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-310">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="c94b3-311">O URI do namespace do atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-311">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="c94b3-312">Adiciona o <see cref="T:System.Xml.XmlAttribute" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-312">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="c94b3-313">O <see langword="XmlAttribute" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-313">The <see langword="XmlAttribute" /> to add.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-314">O `XmlAttribute` não tem nenhum filho.</span><span class="sxs-lookup"><span data-stu-id="c94b3-314">The `XmlAttribute` does not have any children.</span></span> <span data-ttu-id="c94b3-315">Use <xref:System.Xml.XmlAttribute.Value%2A> para atribuir um valor de texto para o atributo ou use <xref:System.Xml.XmlNode.AppendChild%2A> (ou um método semelhante) para adicionar filhos para o atributo.</span><span class="sxs-lookup"><span data-stu-id="c94b3-315">Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-316">O exemplo a seguir adiciona um atributo a um elemento.</span><span class="sxs-lookup"><span data-stu-id="c94b3-316">The following example adds an attribute to an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="c94b3-317">O <see langword="XmlWriter" /> no qual você deseja salvar.</span><span class="sxs-lookup"><span data-stu-id="c94b3-317">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="c94b3-318">Salva todos os filhos do nó no <see cref="T:System.Xml.XmlWriter" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-318">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-319">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="c94b3-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-320">O exemplo a seguir exibe o conteúdo do elemento para o console.</span><span class="sxs-lookup"><span data-stu-id="c94b3-320">The following example displays the contents of the element to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="c94b3-321">O <see langword="XmlWriter" /> no qual você deseja salvar.</span><span class="sxs-lookup"><span data-stu-id="c94b3-321">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="c94b3-322">Salva o nó atual no <see cref="T:System.Xml.XmlWriter" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-322">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c94b3-323">Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM).</span><span class="sxs-lookup"><span data-stu-id="c94b3-323">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c94b3-324">O exemplo a seguir adiciona um atributo a um elemento e, em seguida, exibe o elemento modificado.</span><span class="sxs-lookup"><span data-stu-id="c94b3-324">The following example adds an attribute to an element and then displays the modified element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>