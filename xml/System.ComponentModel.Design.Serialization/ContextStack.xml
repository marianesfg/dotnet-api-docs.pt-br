<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ce1f7b0ef9eaa2552df773832d3b3736ad4aa63" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39773670" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextStack sealed" />
  <TypeSignature Language="F#" Value="type ContextStack = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e6822-101">Fornece um objeto de pilha que pode ser usado por um serializador para disponibilizar informações para serializadores aninhados.</span><span class="sxs-lookup"><span data-stu-id="e6822-101">Provides a stack object that can be used by a serializer to make information available to nested serializers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6822-102">Alguns serializadores exigem informações sobre o contexto de um objeto para corretamente persiste seu estado.</span><span class="sxs-lookup"><span data-stu-id="e6822-102">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="e6822-103">O <xref:System.ComponentModel.Design.Serialization.ContextStack> classe permite que um serializador definir os dados sobre o contexto de um objeto que está sendo serializado para uma pilha em que outro serializador pode acessá-lo.</span><span class="sxs-lookup"><span data-stu-id="e6822-103">The <xref:System.ComponentModel.Design.Serialization.ContextStack> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</span></span> <span data-ttu-id="e6822-104">O valor da <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> propriedade é fornecida por um <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> para compartilhar informações de uso para alguns serializadores.</span><span class="sxs-lookup"><span data-stu-id="e6822-104">The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.</span></span>  
  
 <span data-ttu-id="e6822-105">Uma pilha de contexto é útil porque o processo de serializar um documento de design pode ser aninhado profundamente e objetos em cada nível de aninhamento podem exigir informações de contexto para manter corretamente o estado do objeto.</span><span class="sxs-lookup"><span data-stu-id="e6822-105">A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</span></span> <span data-ttu-id="e6822-106">Um serializador pode definir um objeto de contexto à pilha antes de invocar um serializador aninhado.</span><span class="sxs-lookup"><span data-stu-id="e6822-106">A serializer can set a context object to the stack before invoking a nested serializer.</span></span> <span data-ttu-id="e6822-107">Cada objeto definido para a pilha deve ser removido pelo serializador que defini-la depois que uma chamada para um serializador aninhado retorna.</span><span class="sxs-lookup"><span data-stu-id="e6822-107">Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</span></span>  
  
 <span data-ttu-id="e6822-108">Normalmente, os objetos na pilha contêm informações sobre o contexto do objeto atual que está sendo serializado.</span><span class="sxs-lookup"><span data-stu-id="e6822-108">Typically, the objects on the stack contain information about the context of the current object that is being serialized.</span></span> <span data-ttu-id="e6822-109">Um serializador pai adiciona informações de contexto à pilha de sobre o próximo objeto a ser serializado, chama um serializador adequado e, quando o serializador termina a execução no objeto, remove as informações de contexto da pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-109">A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</span></span> <span data-ttu-id="e6822-110">Cabe a implementação de cada serializador para determinar quais objetos serão enviadas por push nessa pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-110">It is up to the implementation of each serializer to determine what objects get pushed on this stack.</span></span>  
  
 <span data-ttu-id="e6822-111">Por exemplo, um objeto com uma propriedade denominada `Enabled` tem um tipo de dados de <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="e6822-111">As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>.</span></span> <span data-ttu-id="e6822-112">Se um serializador grava esse valor em um fluxo de dados, ela talvez seja necessário incluir o contexto ou o tipo da propriedade que está gravando.</span><span class="sxs-lookup"><span data-stu-id="e6822-112">If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</span></span> <span data-ttu-id="e6822-113">O serializador não tem essas informações, no entanto, porque ele só é instruído para gravar o <xref:System.Boolean> valor.</span><span class="sxs-lookup"><span data-stu-id="e6822-113">The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value.</span></span> <span data-ttu-id="e6822-114">Para fornecer essas informações para o serializador, o serializador pai pode enviar por push uma <xref:System.ComponentModel.PropertyDescriptor> que aponta para o `Enabled` propriedade na pilha de contexto.</span><span class="sxs-lookup"><span data-stu-id="e6822-114">To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6822-115">O exemplo de código a seguir demonstra como usar um <xref:System.ComponentModel.Design.Serialization.ContextStack> para enviar por push e, em seguida, remover 10 valores.</span><span class="sxs-lookup"><span data-stu-id="e6822-115">The following code example demonstrates using a <xref:System.ComponentModel.Design.Serialization.ContextStack> to push and then remove 10 values.</span></span>  
  
 [!code-cpp[ContextStackExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="e6822-116">Para obter acesso completo aos recursos do sistema.</span><span class="sxs-lookup"><span data-stu-id="e6822-116">for full access to system resources.</span></span> <span data-ttu-id="e6822-117">Valores de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e6822-117">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="e6822-118">Estado associado:</span><span class="sxs-lookup"><span data-stu-id="e6822-118">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6822-119">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />.</span><span class="sxs-lookup"><span data-stu-id="e6822-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6822-120">O exemplo de código a seguir demonstra como criar um <xref:System.ComponentModel.Design.Serialization.ContextStack> instância.</span><span class="sxs-lookup"><span data-stu-id="e6822-120">The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.</span></span>  
  
 [!code-cpp[ContextStackExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; unit" Usage="contextStack.Append context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e6822-121">Um objeto de contexto a ser acrescentado à pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-121">A context object to append to the stack.</span></span></param>
        <summary><span data-ttu-id="e6822-122">Acrescenta um objeto ao fim da pilha em vez de efetuar push do objeto para o topo da pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-122">Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6822-123">Esse método permite que um serializador para se comunicar com outros serializadores adicionando objetos de dados contextuais que não precisa ser removida na ordem.</span><span class="sxs-lookup"><span data-stu-id="e6822-123">This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</span></span> <span data-ttu-id="e6822-124">Não há nenhuma maneira de remover um objeto que foi acrescentado ao final da pilha sem remover todos os outros objetos.</span><span class="sxs-lookup"><span data-stu-id="e6822-124">There is no way to remove an object that was appended to the end of the stack without removing all other objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6822-125"><paramref name="context" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6822-125"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6822-126">Obtém o objeto atual na pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-126">Gets the current object on the stack.</span></span></summary>
        <value><span data-ttu-id="e6822-127">O objeto atual na pilha, ou <see langword="null" /> se nenhum objeto foram enviados por push.</span><span class="sxs-lookup"><span data-stu-id="e6822-127">The current object on the stack, or <see langword="null" /> if no objects were pushed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6822-128">O objeto atual é o objeto na parte superior da pilha, ou o objeto adicionado pela última vez para a pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-128">The current object is the object at the top of the stack, or the object last added to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6822-129">Obtém ou define o objeto na pilha no nível especificado.</span><span class="sxs-lookup"><span data-stu-id="e6822-129">Gets or sets the object on the stack at the specified level.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(level As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int level); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="e6822-130">O nível do objeto a ser recuperado na pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-130">The level of the object to retrieve on the stack.</span></span> <span data-ttu-id="e6822-131">O nível 0 é o topo da pilha, o nível 1 vem logo abaixo e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="e6822-131">Level 0 is the top of the stack, level 1 is the next down, and so on.</span></span> <span data-ttu-id="e6822-132">Este nível deve ser igual ou maior que 0.</span><span class="sxs-lookup"><span data-stu-id="e6822-132">This level must be 0 or greater.</span></span> <span data-ttu-id="e6822-133">Se o nível for maior que o número de níveis na pilha, <see langword="null" /> será retornado.</span><span class="sxs-lookup"><span data-stu-id="e6822-133">If level is greater than the number of levels on the stack, it returns <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e6822-134">Obtém o objeto na pilha no nível especificado.</span><span class="sxs-lookup"><span data-stu-id="e6822-134">Gets the object on the stack at the specified level.</span></span></summary>
        <value><span data-ttu-id="e6822-135">O objeto na pilha no nível especificado, ou <see langword="null" /> se não existe nenhum objeto nesse nível.</span><span class="sxs-lookup"><span data-stu-id="e6822-135">The object on the stack at the specified level, or <see langword="null" /> if no object exists at that level.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e6822-136"><paramref name="level" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="e6822-136"><paramref name="level" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Type ^] { System::Object ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e6822-137">Um tipo a ser recuperado da pilha de contextos.</span><span class="sxs-lookup"><span data-stu-id="e6822-137">A type to retrieve from the context stack.</span></span></param>
        <summary><span data-ttu-id="e6822-138">Obtém o primeiro objeto na pilha que herda do tipo especificado ou o implementa.</span><span class="sxs-lookup"><span data-stu-id="e6822-138">Gets the first object on the stack that inherits from or implements the specified type.</span></span></summary>
        <value><span data-ttu-id="e6822-139">O primeiro objeto na pilha que herda de ou implementa o tipo especificado, ou <see langword="null" /> se nenhum objeto na pilha implementa o tipo.</span><span class="sxs-lookup"><span data-stu-id="e6822-139">The first object on the stack that inherits from or implements the specified type, or <see langword="null" /> if no object on the stack implements the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6822-140">Uma verificação é feita em cada nível da pilha, procurando por um objeto que implementa ou herda `type`.</span><span class="sxs-lookup"><span data-stu-id="e6822-140">A check is made on each level of the stack, searching for an object that implements or inherits `type`.</span></span> <span data-ttu-id="e6822-141">Se uma correspondência for encontrada, ele será retornado.</span><span class="sxs-lookup"><span data-stu-id="e6822-141">If a match is found, it is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6822-142"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6822-142"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; obj" Usage="contextStack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6822-143">Remove o objeto atual da pilha, retornando seu valor.</span><span class="sxs-lookup"><span data-stu-id="e6822-143">Removes the current object off of the stack, returning its value.</span></span></summary>
        <returns><span data-ttu-id="e6822-144">O objeto removido da pilha; <see langword="null" /> se não houver objetos na pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-144">The object removed from the stack; <see langword="null" /> if no objects are on the stack.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6822-145">O exemplo de código a seguir demonstra a remoção de um valor de um <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="e6822-145">The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Push : obj -&gt; unit" Usage="contextStack.Push context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e6822-146">O objeto de contexto a ser enviado por push para a pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-146">The context object to push onto the stack.</span></span></param>
        <summary><span data-ttu-id="e6822-147">Efetua push ou coloca o objeto especificado na pilha.</span><span class="sxs-lookup"><span data-stu-id="e6822-147">Pushes, or places, the specified object onto the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6822-148">O exemplo de código a seguir demonstra os valores de enviar por push para um <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="e6822-148">The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6822-149"><paramref name="context" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6822-149"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>