<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RootDesignerSerializerAttribute.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f707606a0075d1dc28d159b7409d67e9949f556f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f707606a0075d1dc28d159b7409d67e9949f556f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source>Indicates the base serializer to use for a root designer object.</source>
          <target state="translated">Indica o serializador base a ser usado para um objeto de designer raiz.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute&gt;</ph> indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute&gt;</ph> indica o serializador a ser usado quando o Gerenciador de serialização serializa o documento de design, e se o serializador especificado oferece suporte a recarga automática do documento de design sem primeiro descartar completamente o documento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source>This attribute contains the following significant members:</source>
          <target state="translated">Este atributo contém os seguintes membros significativos:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A&gt;</ph> indicates what serialization object to use to serialize the class at design time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A&gt;</ph> indica o objeto de serialização para serializar a classe em tempo de design.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A&gt;</ph> indicates the fully qualified name of the serialization object's base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A&gt;</ph> indica o nome totalmente qualificado do tipo base do objeto de serialização.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> Indica se o serializador suporta recarregar um documento de design sem interação do usuário para abrir uma nova exibição de designer.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source>The following example code applies a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute&gt;</ph> to a component.</source>
          <target state="translated">O exemplo de código a seguir aplica-se um <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute&gt;</ph> para um componente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> class using the specified attributes.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> usando os atributos especificados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source>The fully qualified name of the data type of the serializer.</source>
          <target state="translated">O nome totalmente qualificado do tipo de dados do serializador.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source>The name of the base type of the serializer.</source>
          <target state="translated">O nome do tipo base do serializador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source>A class can include multiple serializers as they all have different base types.</source>
          <target state="translated">Uma classe pode incluir vários serializadores, já que todos eles têm tipos base diferentes.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this serializer supports dynamic reloading of the document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este serializador dá suporte a recarregamento dinâmico do documento; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> class using the specified attributes.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> usando os atributos especificados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
          <source>Creates a new designer serialization attribute.</source>
          <target state="translated">Cria um novo atributo de designer de serialização.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source>The fully qualified name of the data type of the serializer.</source>
          <target state="translated">O nome totalmente qualificado do tipo de dados do serializador.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source>The name of the base type of the serializer.</source>
          <target state="translated">O nome do tipo base do serializador.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source>A class can include multiple serializers, as they all have different base types.</source>
          <target state="translated">Uma classe pode incluir vários serializadores, já que todos eles têm tipos base diferentes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this serializer supports dynamic reloading of the document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este serializador dá suporte a recarregamento dinâmico do documento; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> class using the specified attributes.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> usando os atributos especificados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
          <source>Creates a new designer serialization attribute.</source>
          <target state="translated">Cria um novo atributo de designer de serialização.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source>The data type of the serializer.</source>
          <target state="translated">O tipo de dados do serializador.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source>The base type of the serializer.</source>
          <target state="translated">O tipo base do serializador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source>A class can include multiple serializers as they all have different base types.</source>
          <target state="translated">Uma classe pode incluir vários serializadores, já que todos eles têm tipos base diferentes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this serializer supports dynamic reloading of the document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este serializador dá suporte a recarregamento dinâmico do documento; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> class using the specified attributes.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /&gt;</ph> usando os atributos especificados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
          <source>Creates a new designer serialization attribute.</source>
          <target state="translated">Cria um novo atributo de designer de serialização.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.</source>
          <target state="translated">Obtém um valor que indica se o serializador raiz dá suporte ao recarregamento do documento de design sem descartar primeiro o host de designer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the root serializer supports reloading; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o serializador raiz dá suporte ao recarregar; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>If this property is set to <ph id="ph1">`false`</ph>, the design document does not automatically perform a reload on behalf of the user.</source>
          <target state="translated">Se essa propriedade é definida como <ph id="ph1">`false`</ph>, o documento de design não executa automaticamente uma recarga em nome do usuário.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>If this property is set to <ph id="ph1">`false`</ph>, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.</source>
          <target state="translated">Se essa propriedade é definida como <ph id="ph1">`false`</ph>, é responsabilidade do usuário reabra a janela do designer de exibição para o documento de design, se uma atualização ou recarregar é desejado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.</source>
          <target state="translated">Alguns serializadores exigem a interação de componentes externos no designer de processo de carregamento para recriar o documento de design.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>These serializers sometimes need to create a new designer host each time the design document is loaded.</source>
          <target state="translated">Esses serializadores, às vezes, precisam criar um novo host designer sempre que o documento de design é carregado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>If this is the situation, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> will be set to <ph id="ph2">`false`</ph>, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.</source>
          <target state="translated">Se esse for o caso, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> será definida como <ph id="ph2">`false`</ph>, e o host do designer deve ser recriado pela interação do usuário (iniciando o designer do documento) após o design do documento é descartado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.</source>
          <target state="translated">Os eventos e serviços que estavam conectados ao host do designer, exceto por meio de desserialização, permanecem não e talvez precise ser definido novamente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt;</ph> é <ph id="ph2">`true`</ph>, o documento de design pode ser recarregado depois que são feitas alterações fora do designer para o código sem fechar a janela do designer e abri-la.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName">
          <source>Gets the fully qualified type name of the base type of the serializer.</source>
          <target state="translated">Obtém o nome totalmente qualificado do tipo base do serializador.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName">
          <source>The name of the base type of the serializer.</source>
          <target state="translated">O nome do tipo base do serializador.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName">
          <source>Gets the fully qualified type name of the serializer.</source>
          <target state="translated">Obtém o nome totalmente qualificado do tipo do serializador.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName">
          <source>The name of the type of the serializer.</source>
          <target state="translated">O nome do tipo do serializador.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
          <source>Gets a unique ID for this attribute type.</source>
          <target state="translated">Obtém uma ID exclusiva para este tipo de atributo.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
          <source>An object containing a unique ID for this attribute type.</source>
          <target state="translated">Um objeto que contém uma ID exclusiva para esse tipo de atributo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
          <source>This property is used by filtering algorithms to identify two attributes that are the same type.</source>
          <target state="translated">Essa propriedade é usada por filtragem de algoritmos para identificar dois atributos que são do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
          <source>For most attributes, this just returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance for the attribute.</source>
          <target state="translated">Para a maioria dos atributos, isso retorna apenas o <ph id="ph1">&lt;xref:System.Type&gt;</ph> instância para o atributo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> overrides this to include the type of the editor base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> substitui isto para incluir o tipo do tipo de base do editor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>