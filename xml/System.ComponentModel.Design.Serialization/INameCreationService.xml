<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f9a92-101">Fornece um serviço que pode gerar nomes exclusivos para objetos.</span><span class="sxs-lookup"><span data-stu-id="f9a92-101">Provides a service that can generate unique names for objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a92-102">Um <xref:System.ComponentModel.Design.Serialization.DesignerLoader> pode implementar esse serviço para fornecer uma maneira para um designer criar novos, nomes exclusivos para objetos.</span><span class="sxs-lookup"><span data-stu-id="f9a92-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="f9a92-103">Se esse serviço não estiver disponível, o designer usa uma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="f9a92-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a92-104">O exemplo de código a seguir fornece um exemplo <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementação.</span><span class="sxs-lookup"><span data-stu-id="f9a92-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="f9a92-105">O serviço pode criar um nome exclusivo baseado em um tipo que não corresponde a todos os nomes no contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="f9a92-106">Ele também pode validar uma cadeia de caracteres do nome especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="f9a92-107">O contêiner em que o novo objeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-107">The container where the new object is added.</span></span></param>
        <param name="dataType"><span data-ttu-id="f9a92-108">O tipo de dados do objeto que recebe o nome.</span><span class="sxs-lookup"><span data-stu-id="f9a92-108">The data type of the object that receives the name.</span></span></param>
        <summary><span data-ttu-id="f9a92-109">Cria um novo nome exclusivo para todos os componentes no contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-109">Creates a new name that is unique to all components in the specified container.</span></span></summary>
        <returns><span data-ttu-id="f9a92-110">Um nome exclusivo para o tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="f9a92-110">A unique name for the data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a92-111">Esse método retorna um nome para o novo objeto que é exclusivo dentro do contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a92-112">O exemplo de código a seguir fornece um exemplo <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> implementação do método.</span><span class="sxs-lookup"><span data-stu-id="f9a92-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="f9a92-113">O método pode criar um nome com base no nome de um tipo especificado que é exclusivo para os nomes dos componentes dentro do contêiner especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="f9a92-114">Esse tipo de serviço geralmente é implementado para criar um nome de objeto exclusivo do nome do tipo de dados, geralmente é acrescentado com um número que permite que o nome para ser um identificador exclusivo.</span><span class="sxs-lookup"><span data-stu-id="f9a92-114">This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier.</span></span> <span data-ttu-id="f9a92-115">Por exemplo, <see langword="ListBox1" /> para um <see langword="ListBox" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f9a92-115">For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f9a92-116">O nome a ser validado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-116">The name to validate.</span></span></param>
        <summary><span data-ttu-id="f9a92-117">Obtém um valor que indica se o nome especificado é válido.</span><span class="sxs-lookup"><span data-stu-id="f9a92-117">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <returns>
          <span data-ttu-id="f9a92-118"><see langword="true" /> se o nome for válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9a92-118"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a92-119">Uma implementação de <xref:System.ComponentModel.Design.Serialization.INameCreationService> pode ter regras que definem os parâmetros para os nomes válidos.</span><span class="sxs-lookup"><span data-stu-id="f9a92-119">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="f9a92-120">Esse método pode ser implementado para validar um nome e aplicar essas regras.</span><span class="sxs-lookup"><span data-stu-id="f9a92-120">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a92-121">O exemplo de código a seguir fornece um exemplo <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementação do método.</span><span class="sxs-lookup"><span data-stu-id="f9a92-121">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="f9a92-122">O método usa um esquema de validação de cadeia de caracteres que examina cada caractere da cadeia de caracteres especificada para determinar se a cadeia de caracteres especificada é um nome válido.</span><span class="sxs-lookup"><span data-stu-id="f9a92-122">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="f9a92-123">O método retorna `true` se a cadeia de caracteres for válida, ou `false` caso contrário.</span><span class="sxs-lookup"><span data-stu-id="f9a92-123">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f9a92-124">O nome a ser validado.</span><span class="sxs-lookup"><span data-stu-id="f9a92-124">The name to validate.</span></span></param>
        <summary><span data-ttu-id="f9a92-125">Obtém um valor que indica se o nome especificado é válido.</span><span class="sxs-lookup"><span data-stu-id="f9a92-125">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9a92-126">Uma implementação de <xref:System.ComponentModel.Design.Serialization.INameCreationService> pode ter regras que definem os parâmetros para os nomes válidos.</span><span class="sxs-lookup"><span data-stu-id="f9a92-126">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="f9a92-127">Esse método pode ser implementado para validar um nome e aplicar essas regras.</span><span class="sxs-lookup"><span data-stu-id="f9a92-127">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="f9a92-128">Esse método é semelhante ao <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, exceto que este método gera uma exceção se o nome é inválido.</span><span class="sxs-lookup"><span data-stu-id="f9a92-128">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="f9a92-129">Isso permite que os implementadores fornecer informações detalhadas na mensagem de exceção.</span><span class="sxs-lookup"><span data-stu-id="f9a92-129">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9a92-130">O exemplo de código a seguir fornece um exemplo <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementação do método que usa um esquema de validação de cadeia de caracteres que examina cada caractere da cadeia de caracteres especificada para determinar se a cadeia de caracteres especificada é um nome válido.</span><span class="sxs-lookup"><span data-stu-id="f9a92-130">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="f9a92-131">O método gera uma exceção se a cadeia de caracteres não é válida.</span><span class="sxs-lookup"><span data-stu-id="f9a92-131">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>