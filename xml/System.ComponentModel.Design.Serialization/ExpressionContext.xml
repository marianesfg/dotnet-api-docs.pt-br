<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionContext.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b43ece75e54589dff9cf246ce425cfe2775514ac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b43ece75e54589dff9cf246ce425cfe2775514ac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Provides a means of passing context state among serializers.</source>
          <target state="translated">Fornece uma maneira de passar o estado de contexto entre serializadores.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> is placed on the context stack and contains the most relevant expression during serialization.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> é colocado na pilha de contexto e contém a expressão mais relevante durante a serialização.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The following C# code demonstrates an assignment.</source>
          <target state="translated">O código c# a seguir demonstra uma atribuição.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>During serialization, several serializers are responsible for creating this single statement.</source>
          <target state="translated">Durante a serialização, vários serializadores são responsáveis por criar essa única instrução.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>One of those serializers is responsible for creating "Hello".</source>
          <target state="translated">Um desses serializadores é responsável pela criação de "Olá".</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>There are times when that serializer may need to know the context in which it is creating its expression.</source>
          <target state="translated">Há ocasiões em que o serializador pode precisa saber o contexto no qual ele está criando sua expressão.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>In the previous example, this context is not needed.</source>
          <target state="translated">No exemplo anterior, não é necessário neste contexto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The following C# code shows a situation in which knowledge of the context is necessary.</source>
          <target state="translated">O código c# a seguir mostra uma situação em que é necessário conhecer o contexto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</source>
          <target state="translated">Nesse caso, o serializador responsável por criar a expressão de recurso precisa ser informado sobre os nomes dos objetos de destino.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> class can be used for this.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> classe pode ser usada para isso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</source>
          <target state="translated">Como cada serializador cria uma expressão e invoca um serializador para lidar com uma parte menor da instrução como um todo, o serializador envia um contexto de expressão na pilha de contexto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Each expression context has a parent property that locates the next expression context on the stack.</source>
          <target state="translated">O contexto de cada expressão tem uma propriedade de pai que localiza o contexto de expressão Avançar na pilha.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>This provides a convenient traversal capability.</source>
          <target state="translated">Isso fornece um recurso conveniente de passagem.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.ExpressionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression.</source>
          <target state="translated">A expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression type.</source>
          <target state="translated">O tipo da expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>The given code expression owner.</source>
          <target state="translated">O proprietário da expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class with the given expression and owner.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> com a expressão e proprietário fornecidos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> é <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression.</source>
          <target state="translated">A expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression type.</source>
          <target state="translated">O tipo da expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression owner.</source>
          <target state="translated">O proprietário da expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>The given code expression preset value.</source>
          <target state="translated">O valor predefinido da expressão de código fornecida.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> class with a current value.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /&gt;</ph> com um valor atual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="expression" /&gt;</ph>, <ph id="ph2">&lt;paramref name="expressionType" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="owner" /&gt;</ph> é <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
          <source>Gets the expression this context represents.</source>
          <target state="translated">Obtém a expressão que esse contexto representa.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
          <source>The expression this context represents.</source>
          <target state="translated">A expressão que representa neste contexto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the expression.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da expressão.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da expressão.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
          <source>You can use <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> to determine if a cast is needed when assigning to the expression.</source>
          <target state="translated">Você pode usar <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> para determinar se uma conversão é necessária ao atribuir a expressão.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>Gets the object owning this expression.</source>
          <target state="translated">Obtém o objeto que possui essa expressão.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>The object owning this expression.</source>
          <target state="translated">O objeto que possui essa expressão.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
          <source>If the expression is a property reference to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of an instance of <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`button1`</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A&gt;</ph> returns <ph id="ph5">`button1`</ph>.</source>
          <target state="translated">Se a expressão for uma referência de propriedade para o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriedade de uma instância de <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> chamado <ph id="ph3">`button1`</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A&gt;</ph> retorna <ph id="ph5">`button1`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>Gets the preset value of an expression.</source>
          <target state="translated">Obtém o valor predefinido de uma expressão.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The preset value of this expression, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not assigned.</source>
          <target state="translated">O valor predefinido dessa expressão, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se não atribuído.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>Contains the preset value of an expression, should one exist.</source>
          <target state="translated">Contém o valor predefinido de uma expressão, um existe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>For example, if the expression is a property reference expression referring to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> property contains the instance of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property.</source>
          <target state="translated">Por exemplo, se a expressão for uma expressão de referência de propriedade referenciando o <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>, o <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> propriedade contém a instância do <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>This is because the property is read-only and preset by the object to contain a value.</source>
          <target state="translated">Isso ocorre porque a propriedade é somente leitura e predefinida pelo objeto para conter um valor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>On the other hand, a property such as <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> does not have a preset value and therefore the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Por outro lado, uma propriedade como <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> não tem um valor predefinido e, portanto, o <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> propriedade retorna <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The following C# code shows how serializers can use this information to guide serialization.</source>
          <target state="translated">O código c# a seguir mostra como serializadores podem usar essas informações para orientar a serialização.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The serializer of the <ph id="ph1">&lt;xref:System.Windows.Forms.Padding&gt;</ph> structure needs to be informed if it should generate the first or second form.</source>
          <target state="translated">O serializador do <ph id="ph1">&lt;xref:System.Windows.Forms.Padding&gt;</ph> estrutura precisa ser informado se ele deve gerar o primeiro ou segundo formulário.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The first form is generated by default.</source>
          <target state="translated">O primeiro formulário é gerado por padrão.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
          <source>The second form is only generated if there is an <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> on the context stack that contains a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> equal to the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Padding&gt;</ph> currently being serialized.</source>
          <target state="translated">O segundo formulário é gerado apenas se houver um <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph> na pilha de contexto que contém um <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A&gt;</ph> igual ao valor da <ph id="ph3">&lt;xref:System.Windows.Forms.Padding&gt;</ph> que está sendo serializado atualmente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>