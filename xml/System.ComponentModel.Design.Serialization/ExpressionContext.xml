<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f21c8d79188df3ecb9df91effbfa1a48e870be7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39841832" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <TypeSignature Language="F#" Value="type ExpressionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="04e47-101">Fornece uma maneira de passar o estado de contexto entre serializadores.</span><span class="sxs-lookup"><span data-stu-id="04e47-101">Provides a means of passing context state among serializers.</span></span> <span data-ttu-id="04e47-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="04e47-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e47-103">Um <xref:System.ComponentModel.Design.Serialization.ExpressionContext> é colocado na pilha de contexto e contém a expressão mais relevante durante a serialização.</span><span class="sxs-lookup"><span data-stu-id="04e47-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="04e47-104">O código C# a seguir demonstra uma atribuição.</span><span class="sxs-lookup"><span data-stu-id="04e47-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="04e47-105">Durante a serialização, vários serializadores serão responsáveis por criar essa única instrução.</span><span class="sxs-lookup"><span data-stu-id="04e47-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="04e47-106">Um desses serializadores é responsável pela criação de "Hello".</span><span class="sxs-lookup"><span data-stu-id="04e47-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="04e47-107">Há ocasiões em que o que o serializador pode precisa saber o contexto no qual ele está criando sua expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="04e47-108">No exemplo anterior, não é necessário neste contexto.</span><span class="sxs-lookup"><span data-stu-id="04e47-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="04e47-109">O código C# a seguir mostra uma situação em que é necessário conhecer o contexto.</span><span class="sxs-lookup"><span data-stu-id="04e47-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="04e47-110">Nesse caso, o serializador responsável por criar a expressão de recurso precisa ser informado sobre os nomes dos objetos de destino.</span><span class="sxs-lookup"><span data-stu-id="04e47-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="04e47-111">O <xref:System.ComponentModel.Design.Serialization.ExpressionContext> classe pode ser usado para isso.</span><span class="sxs-lookup"><span data-stu-id="04e47-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="04e47-112">Como cada serializador cria uma expressão e invoca um serializador para lidar com uma pequena parte da instrução, como um todo, o serializador envia um contexto de expressão na pilha de contexto.</span><span class="sxs-lookup"><span data-stu-id="04e47-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="04e47-113">Cada contexto de expressão tem uma propriedade pai que localiza o contexto de expressão Avançar na pilha.</span><span class="sxs-lookup"><span data-stu-id="04e47-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="04e47-114">Isso fornece uma funcionalidade conveniente de passagem.</span><span class="sxs-lookup"><span data-stu-id="04e47-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04e47-115">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />.</span><span class="sxs-lookup"><span data-stu-id="04e47-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="04e47-116">A expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-116">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="04e47-117">O tipo da expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-117">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="04e47-118">O proprietário da expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-118">The given code expression owner.</span></span></param>
        <summary><span data-ttu-id="04e47-119">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> com a expressão e proprietário fornecidos.</span><span class="sxs-lookup"><span data-stu-id="04e47-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04e47-120"><paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04e47-120"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner, presetValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="04e47-121">A expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-121">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="04e47-122">O tipo da expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-122">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="04e47-123">O proprietário da expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-123">The given code expression owner.</span></span></param>
        <param name="presetValue"><span data-ttu-id="04e47-124">O valor predefinido da expressão de código fornecida.</span><span class="sxs-lookup"><span data-stu-id="04e47-124">The given code expression preset value.</span></span></param>
        <summary><span data-ttu-id="04e47-125">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> com um valor atual.</span><span class="sxs-lookup"><span data-stu-id="04e47-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04e47-126"><paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04e47-126"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.CodeDom.CodeExpression" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04e47-127">Obtém a expressão que esse contexto representa.</span><span class="sxs-lookup"><span data-stu-id="04e47-127">Gets the expression this context represents.</span></span></summary>
        <value><span data-ttu-id="04e47-128">A expressão neste contexto representa.</span><span class="sxs-lookup"><span data-stu-id="04e47-128">The expression this context represents.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04e47-129">Obtém o <see cref="T:System.Type" /> da expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-129">Gets the <see cref="T:System.Type" /> of the expression.</span></span></summary>
        <value><span data-ttu-id="04e47-130">O <see cref="T:System.Type" /> da expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-130">The <see cref="T:System.Type" /> of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e47-131">Você pode usar <xref:System.ComponentModel.Design.Serialization.ExpressionContext> para determinar se uma conversão é necessária ao atribuir a expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04e47-132">Obtém o objeto que possui essa expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-132">Gets the object owning this expression.</span></span></summary>
        <value><span data-ttu-id="04e47-133">O objeto que possui essa expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-133">The object owning this expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e47-134">Se a expressão for uma referência de propriedade para o <xref:System.Windows.Forms.Control.Text%2A> propriedade de uma instância do <xref:System.Windows.Forms.Button> chamado `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> retorna `button1`.</span><span class="sxs-lookup"><span data-stu-id="04e47-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PresetValue : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04e47-135">Obtém o valor predefinido de uma expressão.</span><span class="sxs-lookup"><span data-stu-id="04e47-135">Gets the preset value of an expression.</span></span></summary>
        <value><span data-ttu-id="04e47-136">O valor predefinido de nesta expressão, ou <see langword="null" /> se não atribuído.</span><span class="sxs-lookup"><span data-stu-id="04e47-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04e47-137">Contém o valor predefinido de uma expressão, um existe.</span><span class="sxs-lookup"><span data-stu-id="04e47-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="04e47-138">Por exemplo, se a expressão for uma expressão de referência de propriedade referindo-se para o <xref:System.Windows.Forms.Control.Controls%2A> propriedade de um <xref:System.Windows.Forms.Button>, o <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> propriedade contém a instância da <xref:System.Windows.Forms.Control.Controls%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="04e47-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="04e47-139">Isso ocorre porque a propriedade é somente leitura e predefinido pelo objeto para conter um valor.</span><span class="sxs-lookup"><span data-stu-id="04e47-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="04e47-140">Por outro lado, uma propriedade como <xref:System.Windows.Forms.Control.Text%2A> ou <xref:System.Windows.Forms.Control.Visible%2A> não tem um valor predefinido e, portanto, o <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> propriedade retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="04e47-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="04e47-141">O código C# a seguir mostra como os serializadores podem usar essas informações para orientar a serialização.</span><span class="sxs-lookup"><span data-stu-id="04e47-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="04e47-142">O serializador do <xref:System.Windows.Forms.Padding> estrutura precisa ser informado se ele deve gerar o primeiro ou o segundo formulário.</span><span class="sxs-lookup"><span data-stu-id="04e47-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="04e47-143">O primeiro formulário é gerado por padrão.</span><span class="sxs-lookup"><span data-stu-id="04e47-143">The first form is generated by default.</span></span> <span data-ttu-id="04e47-144">A segunda forma é gerada apenas se não houver um <xref:System.ComponentModel.Design.Serialization.ExpressionContext> na pilha de contexto que contém uma <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> igual ao valor da <xref:System.Windows.Forms.Padding> no momento que está sendo serializado.</span><span class="sxs-lookup"><span data-stu-id="04e47-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>