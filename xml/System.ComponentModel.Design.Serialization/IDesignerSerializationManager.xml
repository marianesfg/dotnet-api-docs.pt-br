<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerSerializationManager.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57e155ce2e90f730b64dded3e22d19f11e73ab215.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e155ce2e90f730b64dded3e22d19f11e73ab215</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>Provides an interface that can manage design-time serialization.</source>
          <target state="translated">Fornece uma interface que pode gerenciar a serialização no tempo de design.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>A designer can utilize <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to access services useful to managing design-time serialization processes.</source>
          <target state="translated">Um designer pode utilizar <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> para acessar os serviços úteis para o gerenciamento de processos de serialização de tempo de design.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">Por exemplo, uma classe que implementa o Gerenciador de serialização designer pode usar essa interface para criar objetos, procurar tipos, identificar os objetos e personalizar a serialização de tipos específicos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> to serialize and deserialize Code DOM statements.</source>
          <target state="translated">O exemplo a seguir ilustra como usar <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> para serializar e desserializar de instruções de código DOM.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The serialization provider to add.</source>
          <target state="translated">O provedor de serialização a ser adicionado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">Adiciona o provedor de serialização especificado ao gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>This method adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">Este método adiciona um provedor de serialização personalizada para o Gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">Provedores de serialização podem fornecer serializadores personalizados para um determinado tipo de objeto ou conjunto de tipos de objetos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">Durante a serialização, cada provedor de serialização personalizada é consultado para retornar um serializador para um tipo de dados específico, se ele pode fornecer um.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">O Gerenciador de serialização usa o serializador personalizado fornecido por esse método antes de usar o serializador padrão para um tipo específico.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">Obtém uma área de armazenamento baseada em pilha e definida pelo usuário que é útil para a comunicação entre os serializadores.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> that stores data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> que armazena dados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>This storage area provides communication of object context information to serializers.</source>
          <target state="translated">Essa área de armazenamento fornece comunicação das informações de contexto de objeto para serializadores.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
          <source>Context information about objects that are being serialized can be stored and accessed through this <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated">Informações de contexto sobre objetos que estão sendo serializada podem ser armazenadas e acessadas por meio <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The data type to create.</source>
          <target state="translated">O tipo de dados a ser criado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">Os argumentos a serem passados ao construtor desse tipo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The name of the object.</source>
          <target state="translated">O nome do objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>This name can be used to access the object later through <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>.</source>
          <target state="translated">Esse nome pode ser usado para acessar o objeto posteriormente por meio de <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="null" /&gt;</ph> for passado, o objeto ainda assim será criado, mas não poderá ser acessado por nome.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, this object is added to the design container.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, esse objeto será adicionado ao contêiner de design.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The object must implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> for this to have any effect.</source>
          <target state="translated">O objeto deve implementar <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> para que isso tenha algum efeito.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">Cria uma instância do tipo especificado e adiciona-a a uma coleção de instâncias nomeadas.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The newly created object instance.</source>
          <target state="translated">A instância de objeto recém-criada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Objects that implement <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> are added to the design-time container if the <ph id="ph2">`addToContainer`</ph> parameter is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Os objetos que implementam <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> são adicionados ao contêiner de tempo de design se o <ph id="ph2">`addToContainer`</ph> parâmetro é <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>The name of the object to retrieve.</source>
          <target state="translated">O nome do objeto a ser recuperado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>Gets an instance of a created object of the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if that object does not exist.</source>
          <target state="translated">Obtém uma instância de um objeto criado do nome especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se esse objeto não existir.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>An instance of the object with the given name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object by that name can be found.</source>
          <target state="translated">Uma instância do objeto com o nome fornecido ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se nenhum objeto com esse nome pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
          <source>The name of the object to retrieve must have been set through a prior call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">O nome do objeto a ser recuperada deve ser definido por meio de uma chamada anterior ao <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>The object to retrieve the name for.</source>
          <target state="translated">O objeto para o qual recuperar o nome.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>Gets the name of the specified object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object has no name.</source>
          <target state="translated">Obtém o nome do objeto especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o objeto não tiver nome.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
          <source>The name of the object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object is unnamed.</source>
          <target state="translated">O nome do objeto ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o objeto não tiver um nome.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">O tipo do objeto para o qual obter o serializador.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">O tipo do serializador a ser recuperado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">Obtém um serializador do tipo solicitado para o tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>An instance of the requested serializer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no appropriate serializer can be located.</source>
          <target state="translated">Uma instância do serializador solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum serializador adequado pode ser localizado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">O nome totalmente qualificado do tipo a ser carregado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>Gets a type of the specified name.</source>
          <target state="translated">Obtém um tipo do nome especificado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
          <source>An instance of the type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be loaded.</source>
          <target state="translated">Uma instância do tipo ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o tipo não pode ser carregado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>Indicates custom properties that can be serializable with available serializers.</source>
          <target state="translated">Indica as propriedades personalizadas que podem ser serializáveis com serializadores disponíveis.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> containing the properties to be serialized.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que contém as propriedades a serem serializados.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>This property can contain an empty collection.</source>
          <target state="translated">Essa propriedade pode conter uma coleção vazia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A serializer should never assume that such properties exist.</source>
          <target state="translated">Um serializador nunca assuma que existem tais propriedades.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>A derived class or implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> defines the set of properties that are exposed here.</source>
          <target state="translated">Uma classe derivada ou implementação de <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> define o conjunto de propriedades que são expostas aqui.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>This property can be populated by user code.</source>
          <target state="translated">Essa propriedade pode ser preenchida pelo código do usuário.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>It may be sufficient to call <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> to populate this collection.</source>
          <target state="translated">Ele pode ser suficiente chamar <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> para preencher essa coleção.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
          <source>The serialization manager must return an empty collection if no custom properties exist.</source>
          <target state="translated">O Gerenciador de serialização deve retornar uma coleção vazia se não existem propriedades personalizadas.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The provider to remove.</source>
          <target state="translated">O provedor a ser removido.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>This object must have been added using <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /&gt;</ph>.</source>
          <target state="translated">Esse objeto deverá ter sido adicionado usando <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Removes a custom serialization provider from the serialization manager.</source>
          <target state="translated">Remove um provedor de serialização personalizado do gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>The error to report.</source>
          <target state="translated">O erro a ser relatado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>This information object can be of any object type.</source>
          <target state="translated">Este objeto de informações pode ser de qualquer tipo de objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">Se for uma exceção, a mensagem da exceção será extraída e relatada ao usuário.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If it is any other type, <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> is called to display the information to the user.</source>
          <target state="translated">Se for qualquer outro tipo, <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> será chamado para exibir as informações para o usuário.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>Reports an error in serialization.</source>
          <target state="translated">Relata um erro na serialização.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If the serialization manager supports logging multiple errors in its implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A&gt;</ph>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</source>
          <target state="translated">Se o Gerenciador de serialização oferece suporte ao registro em log vários erros em sua implementação de <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A&gt;</ph>, ele pode armazenar o objeto de informações de erro para um relatório futuro em que todos os erros podem ser exibidos ao mesmo tempo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If this method stores multiple errors, serialization can continue after a call to this method.</source>
          <target state="translated">Se esse método armazena vários erros, serialização pode continuar após uma chamada para esse método.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</source>
          <target state="translated">Se esse método não oferece suporte a vários erros de registro em log, esse método deve lançar uma exceção, que anula a serialização.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>The serialization manager should never throw an exception for errors encountered during serialization.</source>
          <target state="translated">O Gerenciador de serialização nunca deve lançar uma exceção de erros encontrados durante a serialização.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>It should only throw an exception during deserialization.</source>
          <target state="translated">Ele só deve lançar uma exceção durante a desserialização.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
          <source>Otherwise, users become confused because saving the document should never fail.</source>
          <target state="translated">Caso contrário, os usuários fiquem confusos porque salvar o documento nunca devem falhar.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>Occurs when <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /&gt;</ph> cannot locate the specified name in the serialization manager's name table.</source>
          <target state="translated">Ocorre quando <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /&gt;</ph> não consegue localizar o nome especificado na tabela de nomes do gerenciador de serialização.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</source>
          <target state="translated">Esse evento fornece uma maneira para um serializador criar um objeto sob demanda, para que o serializador não tem a criação do objeto de ordem pela dependência.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
          <source>The delegate for this event is cleared immediately after serialization or deserialization is complete.</source>
          <target state="translated">O representante para esse evento é apagado imediatamente após a serialização ou desserialização for concluída.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Occurs when serialization is complete.</source>
          <target state="translated">Ocorre quando a serialização é concluída.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>This event is raised when serialization or deserialization is complete.</source>
          <target state="translated">Esse evento é gerado quando a serialização ou desserialização é concluída.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</source>
          <target state="translated">Em geral, o código de serialização é gravado para emitir os dados de serialização e não geralmente exigem relacionados ao estado de verificação e de processamento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event, and clear the data after serialization.</source>
          <target state="translated">Se for necessário manter os dados de estado durante a serialização, os dados podem ser definidos e acessados por um serializador, que pode escutar o <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> evento e limpar os dados após a serialização.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</source>
          <target state="translated">Restaurando o estado apropriado após serialização pode ser importante porque serializadores podem ser reutilizados durante a serialização e dados de estado abandonados ou fluxos abertos podem não estar corretos.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</source>
          <target state="translated">Por exemplo, se um serializador precisar gravar em outro arquivo, como um arquivo de recurso, é ineficiente para projetar o serializador para fechar o arquivo quando terminar.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Serializing an object graph usually requires several serializers.</source>
          <target state="translated">Serializar um gráfico de objeto geralmente requer várias serializadores.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>The resource file would be opened and closed many times.</source>
          <target state="translated">O arquivo de recurso seria aberto e fechado muitas vezes.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
          <source>Instead, the resource file can be closed at the end of serialization by an object that listened to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event.</source>
          <target state="translated">Em vez disso, o arquivo de recurso pode ser fechado no final da serialização, um objeto que escuta o <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>The object instance to name.</source>
          <target state="translated">A instância do objeto a nomear.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>The name to give the instance.</source>
          <target state="translated">O nome a ser atribuído à instância.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">Define o nome do objeto especificado existente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>This method is useful when it is necessary to create and then name an instance of an object without using <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">Esse método é útil quando é necessário criar e, em seguida, nomear uma instância de um objeto sem usar <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
          <source>An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</source>
          <target state="translated">Uma exceção é gerada se você tentar renomear um objeto existente ou se você tentar dê um novo objeto um nome que já está em uso.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>