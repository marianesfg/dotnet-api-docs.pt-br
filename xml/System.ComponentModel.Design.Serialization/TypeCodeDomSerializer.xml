<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65c87864b4321c7a14ca30be60b486679a4325c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bd0f7-101">Serializa um objeto para um novo tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd0f7-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0f7-102">O <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classe executa as mesmas tarefas que um <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, mas serializar um objeto por meio dessa classe define um novo tipo.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd0f7-103">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="bd0f7-104">O gerenciador de serialização a ser usado para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="bd0f7-105">Declaração de tipo a ser usada para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd0f7-106">Desserializa a declaração de tipo especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd0f7-107">O objeto raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0f7-108">O <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> método desserializa uma declaração de tipo de código anteriormente serializado.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="bd0f7-109">A tabela a seguir mostra que a implementação do padrão de tarefas executa.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="bd0f7-110">Tarefa</span><span class="sxs-lookup"><span data-stu-id="bd0f7-110">Task</span></span>|<span data-ttu-id="bd0f7-111">Descrição</span><span class="sxs-lookup"><span data-stu-id="bd0f7-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="bd0f7-112">Verificações de diferenciação de maiusculas e minúsculas</span><span class="sxs-lookup"><span data-stu-id="bd0f7-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="bd0f7-113">A implementação procura um <xref:System.CodeDom.Compiler.CodeDomProvider> serviço para decidir se ele deve tratar membros como maiusculas e minúsculas ou maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="bd0f7-114">Classificação de instrução</span><span class="sxs-lookup"><span data-stu-id="bd0f7-114">Statement Sorting</span></span>|<span data-ttu-id="bd0f7-115">Todas as variáveis de membro e variáveis locais de métodos de inicialização são armazenadas em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="bd0f7-116">Em seguida, cada instrução em um método de inicialização é adicionada a uma coleção de instrução agrupada de acordo com seu lado esquerdo, para que todas as instruções de atribuição ou operando em uma determinada variável são agrupadas sob essa variável.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="bd0f7-117">Variáveis com nenhuma instrução são descartados.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="bd0f7-118">Desserialização</span><span class="sxs-lookup"><span data-stu-id="bd0f7-118">Deserialization</span></span>|<span data-ttu-id="bd0f7-119">As coleções de instrução para cada variável de acordo com a variável desserializadas.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="bd0f7-120">A tabela a seguir mostra os serviços de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> método requer.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="bd0f7-121">Serviço</span><span class="sxs-lookup"><span data-stu-id="bd0f7-121">Service</span></span>|<span data-ttu-id="bd0f7-122">Descrição</span><span class="sxs-lookup"><span data-stu-id="bd0f7-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="bd0f7-123">Enquanto não é estritamente necessária, o serviço, se disponível, é usado para determinar se a serialização deve ser entre maiusculas e minúsculas ou maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="bd0f7-124">Se um objeto não existe na tabela de nome durante a desserialização, uma consulta para <xref:System.ComponentModel.IContainer> é feita.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="bd0f7-125">Se esta consulta for bem-sucedida, o contêiner é verificado para o objeto.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="bd0f7-126">O contêiner também é usado como um substituto para um argumento de contêiner necessário pelos componentes.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd0f7-127">
            <paramref name="manager" /> ou <paramref name="typeDecl" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="bd0f7-128">O gerenciador de serialização a ser usado para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="bd0f7-129">A declaração de tipo a ser usada para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bd0f7-130">O valor a ser usado para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd0f7-131">Retorna o método em que as instruções usadas para serializar o membro são armazenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd0f7-132">O método usado para emitir todo o código de inicialização para o membro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0f7-133">O <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> método retorna o método para emitir todo o código de inicialização para o membro especificado.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="bd0f7-134">A implementação padrão retorna um construtor vazio.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="bd0f7-135">Se for o mesmo método a ser retornado para vários valores, a mesma instância do método deve ser retornada.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="bd0f7-136">Você pode usar o <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dicionário lembrar métodos que você criou.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="bd0f7-137">O `typeDecl` parâmetro também pode ser usado para adicionar métodos de infraestrutura.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="bd0f7-138">Por exemplo, se você quiser emitir um método separado para cada objeto, você precisa de um único método que chama todos esses métodos de.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="bd0f7-139">Esse método pode ser adicionado à declaração de tipo de código, conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd0f7-140">
            <paramref name="manager" />, <paramref name="typeDecl" /> ou <paramref name="value" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="bd0f7-141">O gerenciador de serialização a ser usado para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="bd0f7-142">A declaração de tipo a ser usada para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd0f7-143">Retorna uma matriz de métodos a ser interpretada durante a desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd0f7-144">Uma matriz <see cref="T:System.CodeDom.CodeMemberMethod" /> de métodos a ser interpretada durante a desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0f7-145">A implementação padrão retorna uma matriz de elemento único com o construtor nele.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd0f7-146">
            <paramref name="manager" /> ou <paramref name="typeDecl" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="bd0f7-147">O gerenciador de serialização a ser usado para serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="bd0f7-148">O objeto a ser serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="bd0f7-149">Coleção opcional de membros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="bd0f7-150">Pode ser <see langword="null" /> ou vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd0f7-151">Serializa a raiz do objeto, criando uma nova declaração de tipo que define a raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd0f7-152">Um <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que define o objeto raiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd0f7-153">O <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método serializa o objeto raiz específico e a coleção opcional de membros para criar uma nova definição de tipo.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="bd0f7-154">Se o `members` coleção contém valores, esses valores são serializados.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="bd0f7-155">Próprios valores podem serializar como variáveis de membro ou variáveis locais.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="bd0f7-156">Essa determinação é feita por meio de pesquisa para uma propriedade de extensão no objeto chamado `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="bd0f7-157">Se `true`, um membro é gerado.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-157">If `true`, a member is generated.</span></span> <span data-ttu-id="bd0f7-158">Caso contrário, uma variável local é gerada.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="bd0f7-159">Para sua conveniência, o `members` coleção pode conter o objeto raiz.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="bd0f7-160">Nesse caso, o objeto raiz também não é adicionado como um membro ou uma variável local.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="bd0f7-161">O nome do tipo retornado é obtido do nome do objeto raiz, se fosse um objeto nomeado.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="bd0f7-162">Caso contrário, um nome é gerado do nome do tipo simples da classe raiz.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="bd0f7-163">A tabela a seguir mostra as tarefas executadas pela implementação padrão da <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="bd0f7-164">Tarefa</span><span class="sxs-lookup"><span data-stu-id="bd0f7-164">Task</span></span>|<span data-ttu-id="bd0f7-165">Descrição</span><span class="sxs-lookup"><span data-stu-id="bd0f7-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="bd0f7-166">A propagação de contexto</span><span class="sxs-lookup"><span data-stu-id="bd0f7-166">Context Seeding</span></span>|<span data-ttu-id="bd0f7-167">O contexto de serialização é inicializado com dados incluindo o <xref:System.ComponentModel.Design.Serialization.RootContext> e <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="bd0f7-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="bd0f7-168">Serialização de membro</span><span class="sxs-lookup"><span data-stu-id="bd0f7-168">Member Serialization</span></span>|<span data-ttu-id="bd0f7-169">Em seguida, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> percorre todos os membros e chamadas <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="bd0f7-170">Como a serialização é feita oportunamente no <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, isso garante que os serialização não é feita de duas vezes.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="bd0f7-171">Serialização de raiz</span><span class="sxs-lookup"><span data-stu-id="bd0f7-171">Root Serialization</span></span>|<span data-ttu-id="bd0f7-172">Em seguida, o objeto raiz é serializado e suas instruções são adicionadas à coleção de instrução.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="bd0f7-173">Integração de instrução</span><span class="sxs-lookup"><span data-stu-id="bd0f7-173">Statement Integration</span></span>|<span data-ttu-id="bd0f7-174">Depois que todos os objetos são serializados, os <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método ordena as instruções e os adiciona a um método retornado de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="bd0f7-175">Por fim, um construtor é gerado que chama todos os métodos retornados de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="bd0f7-176">A tabela a seguir mostra os objetos de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método coloca na pilha de contexto.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="bd0f7-177">Instância</span><span class="sxs-lookup"><span data-stu-id="bd0f7-177">Instance</span></span>|<span data-ttu-id="bd0f7-178">Descrição</span><span class="sxs-lookup"><span data-stu-id="bd0f7-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="bd0f7-179">Este serializador.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-179">This serializer.</span></span> <span data-ttu-id="bd0f7-180">Derivando de classes pode ser útil para adicionar propriedades públicas para essa classe.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="bd0f7-181">O tipo que está sendo criado.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-181">The type being created.</span></span> <span data-ttu-id="bd0f7-182">A maioria dos objetos não precisam de acesso direto a este.</span><span class="sxs-lookup"><span data-stu-id="bd0f7-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd0f7-183">
            <paramref name="manager" /> ou <paramref name="root" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd0f7-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>