<Type Name="MemberRelationshipService" FullName="System.ComponentModel.Design.Serialization.MemberRelationshipService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e52f132c63ccae1ad7bf0585b6edd1711c4e5bbc" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37698059" /></Metadata><TypeSignature Language="C#" Value="public abstract class MemberRelationshipService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberRelationshipService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberRelationshipService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberRelationshipService abstract" />
  <TypeSignature Language="F#" Value="type MemberRelationshipService = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d413d-101">Fornece a classe base para relacionar um membro a outro.</span><span class="sxs-lookup"><span data-stu-id="d413d-101">Provides the base class for relating one member to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d413d-102">Designers se serializam ao código por meio de um mecanismo de pesquisa por meio de valores de propriedade dinâmica de objetos e gera esses valores como código.</span><span class="sxs-lookup"><span data-stu-id="d413d-102">Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</span></span> <span data-ttu-id="d413d-103">Portanto, por exemplo, o texto de um botão é gerado no seguinte formato.</span><span class="sxs-lookup"><span data-stu-id="d413d-103">So, for example, the text of a button is generated in the following format.</span></span>  
  
```csharp  
this.okButton.Text = "OK";  
```  
  
 <span data-ttu-id="d413d-104">Uma das limitações desse esquema é que é difícil recuperar uma propriedade de outro local.</span><span class="sxs-lookup"><span data-stu-id="d413d-104">One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</span></span> <span data-ttu-id="d413d-105">Por exemplo, ele é muito difícil de emitir o código no seguinte formato, porque pode contar com a única coisa que o gerador de código é o valor na propriedade.</span><span class="sxs-lookup"><span data-stu-id="d413d-105">For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</span></span>  
  
```csharp  
this.titleLabel.Text = this.Text;  
```  
  
   
  
## Examples  
 <span data-ttu-id="d413d-106">O <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> simplifica a recuperação de um valor da propriedade de outro local.</span><span class="sxs-lookup"><span data-stu-id="d413d-106">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> simplifies retrieval of a property value from another location.</span></span> <span data-ttu-id="d413d-107">Um designer pode acessar esse serviço para determinar que um membro é atribuído o valor de outro.</span><span class="sxs-lookup"><span data-stu-id="d413d-107">A designer can access this service to dictate that one member is assigned the value of another.</span></span> <span data-ttu-id="d413d-108">O gerador de código procura por tais relações ao gerar o código e, se uma relação entre os dois membros for encontrada o gerador de código, ele emite código para a relação, em vez de pesquisar o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="d413d-108">The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value.</span></span> <span data-ttu-id="d413d-109">Usando a atribuição de texto anterior como exemplo, o código a seguir mostra o código de tempo usado para estabelecer uma relação de design de exemplo.</span><span class="sxs-lookup"><span data-stu-id="d413d-109">Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.</span></span>  
  
```csharp  
object titleLabel, form;  
PropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)["Text"];  
PropertyDescriptor formText = TypeDescriptor.GetProperties(form)["Text"];  
MemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  
ms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="d413d-110"><para>O <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> classe é <see langword="abstract" />. Implementar uma versão concreta varia de acordo com os tipos de membros que têm suporte. Por exemplo, relacionando um evento para outro pode exigir uma implementação diferente relacionadas a uma propriedade para outro. Implementando o serviço exige as seguintes etapas:-implemente <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> para retornar <see langword="true" /> para relações que dão suporte a você.  -Rastrear alterações para a relação de origem e atribua o valor é alterado para a relação de destino.</para></span><span class="sxs-lookup"><span data-stu-id="d413d-110"><para>The <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class is <see langword="abstract" />. Implementing a concrete version varies depending on the types of members that are supported. For example, relating one event to another might require a different implementation than relating one property to another. Implementing the service requires the following steps:  -   Implement <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> to return <see langword="true" /> for relationships that you support.  -   Track changes to the source relationship and assign value changes into the target relationship.</para></span></span></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberRelationshipService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MemberRelationshipService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d413d-111">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />.</span><span class="sxs-lookup"><span data-stu-id="d413d-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRelationship (source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::Serialization::MemberRelationship GetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source);" />
      <MemberSignature Language="F#" Value="abstract member GetRelationship : System.ComponentModel.Design.Serialization.MemberRelationship -&gt; System.ComponentModel.Design.Serialization.MemberRelationship&#xA;override this.GetRelationship : System.ComponentModel.Design.Serialization.MemberRelationship -&gt; System.ComponentModel.Design.Serialization.MemberRelationship" Usage="memberRelationshipService.GetRelationship source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d413d-112">A relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-112">The source relationship.</span></span></param>
        <summary><span data-ttu-id="d413d-113">Obtém uma relação para a relação de origem especificada.</span><span class="sxs-lookup"><span data-stu-id="d413d-113">Gets a relationship to the given source relationship.</span></span></summary>
        <returns><span data-ttu-id="d413d-114">Uma relação com <paramref name="source" /> ou <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />, se não houver uma relação.</span><span class="sxs-lookup"><span data-stu-id="d413d-114">A relationship to <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if no relationship exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d413d-115">A implementação padrão armazena as relações em um dicionário usando referências fracas e, portanto, a tabela de relação não manter objetos ativos.</span><span class="sxs-lookup"><span data-stu-id="d413d-115">The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d413d-116">Estabelece uma relação entre um objeto de origem e de destino.</span><span class="sxs-lookup"><span data-stu-id="d413d-116">Establishes a relationship between a source and target object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(source As MemberRelationship) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::ComponentModel::Design::Serialization::MemberRelationship] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::ComponentModel::Design::Serialization::MemberRelationship source); void set(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ComponentModel.Design.Serialization.MemberRelationship) : System.ComponentModel.Design.Serialization.MemberRelationship with get, set" Usage="System.ComponentModel.Design.Serialization.MemberRelationshipService.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d413d-117">A relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-117">The source relationship.</span></span> <span data-ttu-id="d413d-118">Este é o lado esquerdo de uma atribuição de relacionamento.</span><span class="sxs-lookup"><span data-stu-id="d413d-118">This is the left-hand side of a relationship assignment.</span></span></param>
        <summary><span data-ttu-id="d413d-119">Estabelece uma relação entre um objeto de origem e de destino.</span><span class="sxs-lookup"><span data-stu-id="d413d-119">Establishes a relationship between a source and target object.</span></span></summary>
        <value><span data-ttu-id="d413d-120">A relação atual associada <paramref name="source" />, ou <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> se não houver nenhuma relação.</span><span class="sxs-lookup"><span data-stu-id="d413d-120">The current relationship associated with <paramref name="source" />, or <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> if there is no relationship.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d413d-121">Se <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> é atribuída à fonte de qualquer relação existente é removida.</span><span class="sxs-lookup"><span data-stu-id="d413d-121">If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d413d-122"><paramref name="source" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d413d-122"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d413d-123"><paramref name="source" /> está vazio ou a relação não é compatível com o serviço.</span><span class="sxs-lookup"><span data-stu-id="d413d-123"><paramref name="source" /> is empty, or the relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(object, class System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(sourceOwner As Object, sourceMember As MemberDescriptor) As MemberRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::MemberRelationship default[System::Object ^, System::ComponentModel::MemberDescriptor ^] { System::ComponentModel::Design::Serialization::MemberRelationship get(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember); void set(System::Object ^ sourceOwner, System::ComponentModel::MemberDescriptor ^ sourceMember, System::ComponentModel::Design::Serialization::MemberRelationship value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj * System.ComponentModel.MemberDescriptor) : System.ComponentModel.Design.Serialization.MemberRelationship with get, set" Usage="System.ComponentModel.Design.Serialization.MemberRelationshipService.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="sourceOwner"><span data-ttu-id="d413d-124">O proprietário de uma relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-124">The owner of a source relationship.</span></span></param>
        <param name="sourceMember"><span data-ttu-id="d413d-125">O membro de uma relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-125">The member of a source relationship.</span></span></param>
        <summary><span data-ttu-id="d413d-126">Estabelece uma relação entre um objeto de origem e de destino.</span><span class="sxs-lookup"><span data-stu-id="d413d-126">Establishes a relationship between a source and target object.</span></span></summary>
        <value><span data-ttu-id="d413d-127">Um <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> encapsulando a relação entre um objeto de origem e destino, de estrutura ou <see langword="null" /> se não houver nenhuma relação.</span><span class="sxs-lookup"><span data-stu-id="d413d-127">A <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> structure encapsulating the relationship between a source and target object, or <see langword="null" /> if there is no relationship.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d413d-128"><paramref name="sourceOwner" /> ou <paramref name="sourceMember" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d413d-128"><paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d413d-129"><paramref name="sourceOwner" /> ou <paramref name="sourceMember" /> está vazio ou a relação não é compatível com o serviço.</span><span class="sxs-lookup"><span data-stu-id="d413d-129"><paramref name="sourceOwner" /> or <paramref name="sourceMember" /> is empty, or the relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRelationship">
      <MemberSignature Language="C#" Value="protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetRelationship (source As MemberRelationship, relationship As MemberRelationship)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberSignature Language="F#" Value="abstract member SetRelationship : System.ComponentModel.Design.Serialization.MemberRelationship * System.ComponentModel.Design.Serialization.MemberRelationship -&gt; unit&#xA;override this.SetRelationship : System.ComponentModel.Design.Serialization.MemberRelationship * System.ComponentModel.Design.Serialization.MemberRelationship -&gt; unit" Usage="memberRelationshipService.SetRelationship (source, relationship)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d413d-130">A relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-130">The source relationship.</span></span></param>
        <param name="relationship"><span data-ttu-id="d413d-131">A relação a ser definida na origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-131">The relationship to set into the source.</span></span></param>
        <summary><span data-ttu-id="d413d-132">Cria uma relação entre a relação de destino e o objeto de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-132">Creates a relationship between the source object and target relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d413d-133">O <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> método limpa qualquer relação existente se o parâmetro de relação é <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>.</span><span class="sxs-lookup"><span data-stu-id="d413d-133">The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>.</span></span> <span data-ttu-id="d413d-134">A implementação padrão armazena as relações em um dicionário de usar referências fracas para que a tabela de relação não manter objetos ativos.</span><span class="sxs-lookup"><span data-stu-id="d413d-134">The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d413d-135">A relação não é compatível com o serviço.</span><span class="sxs-lookup"><span data-stu-id="d413d-135">The relationship is not supported by the service.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsRelationship">
      <MemberSignature Language="C#" Value="public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SupportsRelationship (source As MemberRelationship, relationship As MemberRelationship) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SupportsRelationship(System::ComponentModel::Design::Serialization::MemberRelationship source, System::ComponentModel::Design::Serialization::MemberRelationship relationship);" />
      <MemberSignature Language="F#" Value="abstract member SupportsRelationship : System.ComponentModel.Design.Serialization.MemberRelationship * System.ComponentModel.Design.Serialization.MemberRelationship -&gt; bool" Usage="memberRelationshipService.SupportsRelationship (source, relationship)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d413d-136">A relação de origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-136">The source relationship.</span></span></param>
        <param name="relationship"><span data-ttu-id="d413d-137">A relação a ser definida na origem.</span><span class="sxs-lookup"><span data-stu-id="d413d-137">The relationship to set into the source.</span></span></param>
        <summary><span data-ttu-id="d413d-138">Obtém um valor que indica se há suporte para a relação informada.</span><span class="sxs-lookup"><span data-stu-id="d413d-138">Gets a value indicating whether the given relationship is supported.</span></span></summary>
        <returns><span data-ttu-id="d413d-139"><see langword="true" /> se houver compatibilidade com uma relação entre os dois objetos determinados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d413d-139"><see langword="true" /> if a relationship between the given two objects is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>