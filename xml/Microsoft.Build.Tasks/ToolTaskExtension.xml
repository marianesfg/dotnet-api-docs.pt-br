<Type Name="ToolTaskExtension" FullName="Microsoft.Build.Tasks.ToolTaskExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92b45bdc21a629a466455e04616c7c103db815b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ToolTaskExtension : Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTaskExtension extends Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTaskExtension&#xA;Inherits ToolTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTaskExtension abstract : Microsoft::Build::Utilities::ToolTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.ToolTask</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2a274-101">Abrange métodos de utilitário estendido para criar uma tarefa que encapsula uma ferramenta de linha de comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a274-101">Comprises extended utility methods for constructing a task that wraps a command line tool.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddCommandLineCommands">
      <MemberSignature Language="C#" Value="protected internal virtual void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddCommandLineCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddCommandLineCommands (commandLine As CommandLineBuilderExtension)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddCommandLineCommands(Microsoft::Build::Tasks::CommandLineBuilderExtension ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine">
          <span data-ttu-id="2a274-102">O <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> a preencher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-102">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a274-103">Preenche o <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> especificado com as opções e outras informações que a ferramenta de linha de comando deve executar da linha de comando e não de um arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-103">Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool must run from the command line and not from a response file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddResponseFileCommands">
      <MemberSignature Language="C#" Value="protected internal virtual void AddResponseFileCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddResponseFileCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddResponseFileCommands (commandLine As CommandLineBuilderExtension)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddResponseFileCommands(Microsoft::Build::Tasks::CommandLineBuilderExtension ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine">
          <span data-ttu-id="2a274-104">O <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> a preencher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-104">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a274-105">Preenche o <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> especificado com as opções e outras informações que a ferramenta de linha de comando pode executar de um arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-105">Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool can run from a response file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Bag">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Hashtable Bag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Bag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Bag As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::Hashtable ^ Bag { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a274-106">Obtém a coleção de parâmetros usados pela classe de tarefa derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-106">Gets the collection of parameters used by the derived task class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a274-107">A coleção de parâmetros usada pela classe derivada de tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-107">The collection of parameters used by the derived task class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected override string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GenerateCommandLineCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a274-108">Obtém as opções e outras informações que a ferramenta de linha de comando deve executar diretamente da linha de comando e não de um arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-108">Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a274-109">Uma cadeia de caracteres contendo as opções e outras informações que a ferramenta de linha de comando deve executar diretamente da linha de comando e não de um arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-109">A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected override string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GenerateResponseFileCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a274-110">Obtém a opção usada pela ferramenta de linha de comando para especificar o arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-110">Gets the switch used by the command line tool to specify the response file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a274-111">A opção usada pela ferramenta de linha de comando para especificar o arquivo de resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-111">The switch used by the command line tool to specify the response file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetBoolParameterWithDefault">
      <MemberSignature Language="C#" Value="protected internal bool GetBoolParameterWithDefault (string parameterName, bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool GetBoolParameterWithDefault(string parameterName, bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetBoolParameterWithDefault (parameterName As String, defaultValue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool GetBoolParameterWithDefault(System::String ^ parameterName, bool defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="2a274-112">O nome do parâmetro a retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-112">The name of the parameter to return.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="2a274-113">O valor a ser retornado se <c>parameterName</c> não existir no <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-113">The value to return if <c>parameterName</c> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a274-114">Obtém o valor do parâmetro booliano especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-114">Gets the value of the specified Boolean parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a274-115">O valor do parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-115">The parameter value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a274-116">Se `parameterName` não existe no <xref:Microsoft.Build.Tasks.ToolTaskExtension.Bag%2A>, `defaultValue` será retornado.</span><span class="sxs-lookup"><span data-stu-id="2a274-116">If `parameterName` does not exist in the <xref:Microsoft.Build.Tasks.ToolTaskExtension.Bag%2A>, `defaultValue` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetIntParameterWithDefault">
      <MemberSignature Language="C#" Value="protected internal int GetIntParameterWithDefault (string parameterName, int defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance int32 GetIntParameterWithDefault(string parameterName, int32 defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetIntParameterWithDefault (parameterName As String, defaultValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; int GetIntParameterWithDefault(System::String ^ parameterName, int defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="2a274-117">O nome do parâmetro a retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-117">The name of the parameter to return.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="2a274-118">O valor a ser retornado se <c>parameterName</c> não existir no <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-118">The value to return if <c>parameterName</c> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a274-119">Obtém o valor do parâmetro inteiro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-119">Gets the value of the specified integer parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a274-120">O valor do parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-120">The parameter value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a274-121">Se `parameterName` não existe no <xref:Microsoft.Build.Tasks.ToolTaskExtension.Bag%2A>, `defaultValue` será retornado.</span><span class="sxs-lookup"><span data-stu-id="2a274-121">If `parameterName` does not exist in the <xref:Microsoft.Build.Tasks.ToolTaskExtension.Bag%2A>, `defaultValue` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected override bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a274-122">Retorna se esta ToolTask registrou algum erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-122">Returns whether this ToolTask has logged any errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a274-123">
            <see langword="true" /> Se ToolTask conectado erros, <see langword="false" /> se contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-123">
              <see langword="true" /> if the ToolTask logged errors, <see langword="false" /> if otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Utilities.TaskLoggingHelper Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Utilities.TaskLoggingHelper Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.ToolTaskExtension.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As TaskLoggingHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Utilities::TaskLoggingHelper ^ Log { Microsoft::Build::Utilities::TaskLoggingHelper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.TaskLoggingHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a274-124">Obtém uma instância de uma classe <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> que contém métodos de registro em log da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-124">Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a274-125">Uma instância de um <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> classe que contém métodos de registro em log da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a274-125">An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>