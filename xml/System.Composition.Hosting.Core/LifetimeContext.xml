<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LifetimeContext.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6df31d56ae5b6086311f6e6e39a28e33806ed5c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6df31d56ae5b6086311f6e6e39a28e33806ed5c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Represents a node in the lifetime tree.</source>
          <target state="translated">Representa um nó na árvore de tempo de vida.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The <ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> object is the unit of sharing for shared parts.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> objeto é a unidade de compartilhamento para partes compartilhados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</source>
          <target state="translated">Ele controla a disposição das partes associadas e pode ser usado para recuperar instâncias, ou como parte de uma operação de composição existente ou como base para uma nova operação de composição.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</source>
          <target state="translated">Um contexto de tempo de vida individual pode ser marcado para conter as partes que são restritas pelos limites do compartilhamento específicos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</source>
          <target state="translated">Este objeto contém duas partes do estado compartilhado protegido independentemente: compartilhado instâncias da parte e associado a instâncias de parte.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</source>
          <target state="translated">Uma instância de parte compartilhada é livre de bloqueios, legível e não resulta em problemas se ele é adicionado ao durante o descarte.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It is protected by being locked itself.</source>
          <target state="translated">Ele é protegido por que está sendo bloqueado em si.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Activation logic is unavoidably called under this lock.</source>
          <target state="translated">Inevitavelmente, lógica de ativação é chamada sob esse bloqueio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is always protected by locking <ph id="ph1">&lt;see langword="this" /&gt;</ph>, and should never be written to after disposal.</source>
          <target state="translated">Uma instância de parte associado esteja sempre protegida por meio do bloqueio <ph id="ph1">&lt;see langword="this" /&gt;</ph>e nunca deve ser gravado após descarte.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> under a lock in the <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> method.</source>
          <target state="translated">Uma instância de parte associado é definida como <ph id="ph1">&lt;see langword="null" /&gt;</ph> em um bloqueio no <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</source>
          <target state="translated">Se a gravação foram permitida após descarte de uma instância de parte associada, resultaria em partes descartáveis não sendo lançadas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The dispose method on a bound part is called outside of the lock.</source>
          <target state="translated">O método dispose em uma parte associada é chamado fora o bloqueio.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The part.</source>
          <target state="translated">A parte.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>Binds the lifetime of a disposable part to this lifetime context.</source>
          <target state="translated">Associa o tempo de vida de uma parte descartável para este contexto de tempo de vida.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The operation was performed on a disposed object.</source>
          <target state="translated">A operação foi executada em um objeto descartado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>Generates an identifier that can be used to locate shared part instances.</source>
          <target state="translated">Gera um identificador que pode ser usado para localizar instâncias de partes compartilhadas.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>A new unique identifier.</source>
          <target state="translated">Um novo identificador exclusivo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.Dispose">
          <source>Releases the lifetime context and any part instances bound to it.</source>
          <target state="translated">Libera o contexto de tempo de vida e quaisquer instâncias de parte associadas a ele.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The sharing boundary to find a lifetime context within.</source>
          <target state="translated">O limite de compartilhamento dentro do qual se deve localizar um contexto de tempo de vida.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Finds the broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">Localiza o contexto de tempo de vida mais amplo em todos os limites de compartilhamento especificados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">O contexto de tempo de vida mais amplo em todos os limites de compartilhamento especificados.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Currently, the root cannot be a boundary.</source>
          <target state="translated">Atualmente, a raiz não pode ser um limite.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The ID of the shared part.</source>
          <target state="translated">A ID da parte compartilhada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An operation in which to create a part, if necessary.</source>
          <target state="translated">Uma operação na qual será criada uma parte, caso seja necessário.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An activator that can activate a new part instance, if necessary.</source>
          <target state="translated">Um ativador que pode ativar uma nova instância da parte, caso necessário.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</source>
          <target state="translated">Recupera uma instância de parte compartilhada com a ID especificada ou, se a instância de parte não puder ser encontrada, criará e compartilhará uma instância de parte usando o criador especificado na operação especificada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The new or retrieved part.</source>
          <target state="translated">A parte nova ou recuperada.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>This method is lock-free if the part instance already exists.</source>
          <target state="translated">Esse método é livre de bloqueios se já existir uma instância da parte.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</source>
          <target state="translated">Se a instância da parte deve ser criada, um bloqueio será levado que serializará outras gravações que usam esse método (leituras simultâneas continuará sem bloqueio e seguro).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</source>
          <target state="translated">É importante que a composição e, portanto, aquisição de bloqueio, é estritamente folha-para-raiz na árvore de tempo de vida.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">Retorna a representação de cadeia de caracteres desse objeto <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">A representação de cadeia de caracteres desse objeto <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>The contract.</source>
          <target state="translated">O contrato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>After this method returns, contains the contract instance if available; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Depois que este método retornar, conterá a instância de contrato, caso esteja disponível. Caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>Retrieves a contract instance from the composition context.</source>
          <target state="translated">Recupera uma instância de contrato do contexto de composição.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance was retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, se a instância tiver sido recuperada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>