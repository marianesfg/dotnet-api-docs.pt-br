<Type Name="LifetimeContext" FullName="System.Composition.Hosting.Core.LifetimeContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6df31d56ae5b6086311f6e6e39a28e33806ed5c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LifetimeContext : System.Composition.CompositionContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LifetimeContext extends System.Composition.CompositionContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.LifetimeContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeContext&#xA;Inherits CompositionContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeContext sealed : System::Composition::CompositionContext, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.CompositionContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="48dcd-101">Representa um nó na árvore de tempo de vida.</span>
      <span class="sxs-lookup">
        <span data-stu-id="48dcd-101">Represents a node in the lifetime tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="48dcd-102">O <xref:System.Composition.Hosting.Core.LifetimeContext> objeto é a unidade de compartilhamento para partes compartilhados.</span><span class="sxs-lookup"><span data-stu-id="48dcd-102">The <xref:System.Composition.Hosting.Core.LifetimeContext> object is the unit of sharing for shared parts.</span></span> <span data-ttu-id="48dcd-103">Ele controla a disposição das partes associadas e pode ser usado para recuperar instâncias, ou como parte de uma operação de composição existente ou como base para uma nova operação de composição.</span><span class="sxs-lookup"><span data-stu-id="48dcd-103">It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</span></span> <span data-ttu-id="48dcd-104">Um contexto de tempo de vida individual pode ser marcado para conter as partes que são restritas pelos limites do compartilhamento específicos.</span><span class="sxs-lookup"><span data-stu-id="48dcd-104">An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</span></span>

<span data-ttu-id="48dcd-105">Este objeto contém duas partes do estado compartilhado protegido independentemente: compartilhado instâncias da parte e associado a instâncias de parte.</span><span class="sxs-lookup"><span data-stu-id="48dcd-105">This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</span></span> <span data-ttu-id="48dcd-106">Uma instância de parte compartilhada é livre de bloqueios, legível e não resulta em problemas se ele é adicionado ao durante o descarte.</span><span class="sxs-lookup"><span data-stu-id="48dcd-106">A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</span></span> <span data-ttu-id="48dcd-107">Ele é protegido por que está sendo bloqueado em si.</span><span class="sxs-lookup"><span data-stu-id="48dcd-107">It is protected by being locked itself.</span></span> <span data-ttu-id="48dcd-108">Inevitavelmente, lógica de ativação é chamada sob esse bloqueio.</span><span class="sxs-lookup"><span data-stu-id="48dcd-108">Activation logic is unavoidably called under this lock.</span></span> <span data-ttu-id="48dcd-109">Uma instância de parte associado esteja sempre protegida por meio do bloqueio <see langword="this" />e nunca deve ser gravado após descarte.</span><span class="sxs-lookup"><span data-stu-id="48dcd-109">A bound part instance is always protected by locking <see langword="this" />, and should never be written to after disposal.</span></span> <span data-ttu-id="48dcd-110">Uma instância de parte associado é definida como <see langword="null" /> em um bloqueio no <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> método.</span><span class="sxs-lookup"><span data-stu-id="48dcd-110">A bound part instance is set to <see langword="null" /> under a lock in the <xref:System.Composition.Hosting.Core.LifetimeContext.Dispose> method.</span></span> <span data-ttu-id="48dcd-111">Se a gravação foram permitida após descarte de uma instância de parte associada, resultaria em partes descartáveis não sendo lançadas.</span><span class="sxs-lookup"><span data-stu-id="48dcd-111">If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</span></span> <span data-ttu-id="48dcd-112">O método dispose em uma parte associada é chamado fora o bloqueio.</span><span class="sxs-lookup"><span data-stu-id="48dcd-112">The dispose method on a bound part is called outside of the lock.</span></span> 
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBoundInstance">
      <MemberSignature Language="C#" Value="public void AddBoundInstance (IDisposable instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBoundInstance(class System.IDisposable instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBoundInstance (instance As IDisposable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBoundInstance(IDisposable ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="48dcd-113">A parte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-113">The part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48dcd-114">Associa o tempo de vida de uma parte descartável para este contexto de tempo de vida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-114">Binds the lifetime of a disposable part to this lifetime context.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="48dcd-115">A operação foi executada em um objeto descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-115">The operation was performed on a disposed object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllocateSharingId">
      <MemberSignature Language="C#" Value="public static int AllocateSharingId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AllocateSharingId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateSharingId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AllocateSharingId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48dcd-116">Gera um identificador que pode ser usado para localizar instâncias de partes compartilhadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-116">Generates an identifier that can be used to locate shared part instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dcd-117">Um novo identificador exclusivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-117">A new unique identifier.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48dcd-118">Libera o contexto de tempo de vida e quaisquer instâncias de parte associadas a ele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-118">Releases the lifetime context and any part instances bound to it.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindContextWithin">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.LifetimeContext FindContextWithin (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.LifetimeContext FindContextWithin(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindContextWithin (sharingBoundary As String) As LifetimeContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::LifetimeContext ^ FindContextWithin(System::String ^ sharingBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.LifetimeContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary">
          <span data-ttu-id="48dcd-119">O limite de compartilhamento dentro do qual se deve localizar um contexto de tempo de vida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-119">The sharing boundary to find a lifetime context within.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48dcd-120">Localiza o contexto de tempo de vida mais amplo em todos os limites de compartilhamento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-120">Finds the broadest lifetime context within all of the specified sharing boundaries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dcd-121">O contexto de tempo de vida mais amplo em todos os limites de compartilhamento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-121">The broadest lifetime context within all of the specified sharing boundaries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dcd-122">Atualmente, a raiz não pode ser um limite.</span><span class="sxs-lookup"><span data-stu-id="48dcd-122">Currently, the root cannot be a boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public object GetOrCreate (int sharingId, System.Composition.Hosting.Core.CompositionOperation operation, System.Composition.Hosting.Core.CompositeActivator creator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOrCreate(int32 sharingId, class System.Composition.Hosting.Core.CompositionOperation operation, class System.Composition.Hosting.Core.CompositeActivator creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreate (sharingId As Integer, operation As CompositionOperation, creator As CompositeActivator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOrCreate(int sharingId, System::Composition::Hosting::Core::CompositionOperation ^ operation, System::Composition::Hosting::Core::CompositeActivator ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingId" Type="System.Int32" />
        <Parameter Name="operation" Type="System.Composition.Hosting.Core.CompositionOperation" />
        <Parameter Name="creator" Type="System.Composition.Hosting.Core.CompositeActivator" />
      </Parameters>
      <Docs>
        <param name="sharingId">
          <span data-ttu-id="48dcd-123">A ID da parte compartilhada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-123">The ID of the shared part.</span>
          </span>
        </param>
        <param name="operation">
          <span data-ttu-id="48dcd-124">Uma operação na qual será criada uma parte, caso seja necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-124">An operation in which to create a part, if necessary.</span>
          </span>
        </param>
        <param name="creator">
          <span data-ttu-id="48dcd-125">Um ativador que pode ativar uma nova instância da parte, caso necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-125">An activator that can activate a new part instance, if necessary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48dcd-126">Recupera uma instância de parte compartilhada com a ID especificada ou, se a instância de parte não puder ser encontrada, criará e compartilhará uma instância de parte usando o criador especificado na operação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-126">Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dcd-127">A parte nova ou recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-127">The new or retrieved part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48dcd-128">Esse método é livre de bloqueios se já existir uma instância da parte.</span><span class="sxs-lookup"><span data-stu-id="48dcd-128">This method is lock-free if the part instance already exists.</span></span> <span data-ttu-id="48dcd-129">Se a instância da parte deve ser criada, um bloqueio será levado que serializará outras gravações que usam esse método (leituras simultâneas continuará sem bloqueio e seguro).</span><span class="sxs-lookup"><span data-stu-id="48dcd-129">If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</span></span> <span data-ttu-id="48dcd-130">É importante que a composição e, portanto, aquisição de bloqueio, é estritamente folha-para-raiz na árvore de tempo de vida.</span><span class="sxs-lookup"><span data-stu-id="48dcd-130">It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48dcd-131">Retorna a representação de cadeia de caracteres desse objeto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-131">Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dcd-132">A representação de cadeia de caracteres desse objeto <see cref="T:System.Composition.Hosting.Core.LifetimeContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-132">The string representation of this <see cref="T:System.Composition.Hosting.Core.LifetimeContext" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public override bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="48dcd-133">O contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-133">The contract.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="48dcd-134">Depois que este método retornar, conterá a instância de contrato, caso esteja disponível. Caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-134">After this method returns, contains the contract instance if available; otherwise, <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48dcd-135">Recupera uma instância de contrato do contexto de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-135">Retrieves a contract instance from the composition context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48dcd-136">
            <see langword="true" />, se a instância tiver sido recuperada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="48dcd-136">
              <see langword="true" /> if the instance was retrieved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>