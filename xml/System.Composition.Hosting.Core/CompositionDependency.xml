<Type Name="CompositionDependency" FullName="System.Composition.Hosting.Core.CompositionDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cacc0fa3d630d0dc20c7158856d60340a788453b" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49141996" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompositionDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.CompositionDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionDependency" />
  <TypeSignature Language="F#" Value="type CompositionDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma dependência que uma parte deve ter para cumprir uma <see cref="T:System.Composition.Hosting.Core.ExportDescriptorPromise" />. Essa classe é usada pelo mecanismo de composição durante a inicialização para determinar se a composição pode ser feita e, se não puder, que erro deve ser fornecido.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.CompositionContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Composition.Hosting.Core.CompositionContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionDependency.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As CompositionContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Composition::Hosting::Core::CompositionContract ^ Contract { System::Composition::Hosting::Core::CompositionContract ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.Composition.Hosting.Core.CompositionContract" Usage="System.Composition.Hosting.Core.CompositionDependency.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o contrato exigido pela dependência.</summary>
        <value>O contrato exigido pela dependência.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrerequisite">
      <MemberSignature Language="C#" Value="public bool IsPrerequisite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrerequisite" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionDependency.IsPrerequisite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrerequisite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrerequisite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrerequisite : bool" Usage="System.Composition.Hosting.Core.CompositionDependency.IsPrerequisite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a dependência é um pré-requisito que deve ser atendido antes que as exportações possam ser recuperadas da parte dependente.</summary>
        <value>
          <see langword="true" /> Se a dependência é um pré-requisito. Caso contrário, <see langword="false" />.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Missing">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.Core.CompositionDependency Missing (System.Composition.Hosting.Core.CompositionContract contract, object site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.Core.CompositionDependency Missing(class System.Composition.Hosting.Core.CompositionContract contract, object site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionDependency.Missing(System.Composition.Hosting.Core.CompositionContract,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Missing (contract As CompositionContract, site As Object) As CompositionDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Composition::Hosting::Core::CompositionDependency ^ Missing(System::Composition::Hosting::Core::CompositionContract ^ contract, System::Object ^ site);" />
      <MemberSignature Language="F#" Value="static member Missing : System.Composition.Hosting.Core.CompositionContract * obj -&gt; System.Composition.Hosting.Core.CompositionDependency" Usage="System.Composition.Hosting.Core.CompositionDependency.Missing (contract, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="site" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">"&gt;O contrato exigido pela dependência.</param>
        <param name="site">Um marcador usado para identificar a dependência individual entre as demais na parte dependente.</param>
        <summary>Constrói um espaço reservado para uma dependência ausente.</summary>
        <returns>A dependência que age como um espaço reservado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma dependência ausente é um erro. Uma dependência ausente é diferente de uma dependência opcional.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oversupplied">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.Core.CompositionDependency Oversupplied (System.Composition.Hosting.Core.CompositionContract contract, System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt; targets, object site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.Core.CompositionDependency Oversupplied(class System.Composition.Hosting.Core.CompositionContract contract, class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorPromise&gt; targets, object site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionDependency.Oversupplied(System.Composition.Hosting.Core.CompositionContract,System.Collections.Generic.IEnumerable{System.Composition.Hosting.Core.ExportDescriptorPromise},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Oversupplied (contract As CompositionContract, targets As IEnumerable(Of ExportDescriptorPromise), site As Object) As CompositionDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Composition::Hosting::Core::CompositionDependency ^ Oversupplied(System::Composition::Hosting::Core::CompositionContract ^ contract, System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::ExportDescriptorPromise ^&gt; ^ targets, System::Object ^ site);" />
      <MemberSignature Language="F#" Value="static member Oversupplied : System.Composition.Hosting.Core.CompositionContract * seq&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt; * obj -&gt; System.Composition.Hosting.Core.CompositionDependency" Usage="System.Composition.Hosting.Core.CompositionDependency.Oversupplied (contract, targets, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;" />
        <Parameter Name="site" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">O contrato exigido pela dependência.</param>
        <param name="targets">Uma coleção de valores fornecidos.</param>
        <param name="site">Um marcador para a dependência.</param>
        <summary>Constrói um espaço reservado para uma dependência que tem muitos valores fornecidos.</summary>
        <returns>A dependência do espaço reservado.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Satisfied">
      <MemberSignature Language="C#" Value="public static System.Composition.Hosting.Core.CompositionDependency Satisfied (System.Composition.Hosting.Core.CompositionContract contract, System.Composition.Hosting.Core.ExportDescriptorPromise target, bool isPrerequisite, object site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Composition.Hosting.Core.CompositionDependency Satisfied(class System.Composition.Hosting.Core.CompositionContract contract, class System.Composition.Hosting.Core.ExportDescriptorPromise target, bool isPrerequisite, object site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionDependency.Satisfied(System.Composition.Hosting.Core.CompositionContract,System.Composition.Hosting.Core.ExportDescriptorPromise,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Satisfied (contract As CompositionContract, target As ExportDescriptorPromise, isPrerequisite As Boolean, site As Object) As CompositionDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Composition::Hosting::Core::CompositionDependency ^ Satisfied(System::Composition::Hosting::Core::CompositionContract ^ contract, System::Composition::Hosting::Core::ExportDescriptorPromise ^ target, bool isPrerequisite, System::Object ^ site);" />
      <MemberSignature Language="F#" Value="static member Satisfied : System.Composition.Hosting.Core.CompositionContract * System.Composition.Hosting.Core.ExportDescriptorPromise * bool * obj -&gt; System.Composition.Hosting.Core.CompositionDependency" Usage="System.Composition.Hosting.Core.CompositionDependency.Satisfied (contract, target, isPrerequisite, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="target" Type="System.Composition.Hosting.Core.ExportDescriptorPromise" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="site" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">O contrato exigido pela dependência.</param>
        <param name="target">O destino de dependência. Uma <see cref="T:System.Composition.Hosting.Core.ExportDescriptorPromise" /> da outra parte da qual essa parte é dependente.</param>
        <param name="isPrerequisite">
          <see langword="true" /> para indicar se a dependência é um pré-requisito que deve ser atendido antes que as exportação possam ser recuperadas da parte dependente, caso contrário, <see langword="false" />.</param>
        <param name="site">Um marcador usado para identificar a dependência individual entre as demais na parte dependente.</param>
        <summary>Constrói uma dependência no destino especificado.</summary>
        <returns>A dependência construída.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public object Site { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Site" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionDependency.Site" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Site As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Site { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Site : obj" Usage="System.Composition.Hosting.Core.CompositionDependency.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um marcador usado para identificar a dependência entre as demais na parte dependente.</summary>
        <value>O marcador.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.ExportDescriptorPromise Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Composition.Hosting.Core.ExportDescriptorPromise Target" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionDependency.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As ExportDescriptorPromise" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Composition::Hosting::Core::ExportDescriptorPromise ^ Target { System::Composition::Hosting::Core::ExportDescriptorPromise ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Composition.Hosting.Core.ExportDescriptorPromise" Usage="System.Composition.Hosting.Core.CompositionDependency.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.ExportDescriptorPromise</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a promessa do descritor de exportação na qual a dependência está.</summary>
        <value>A promessa do descritor de exportação.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionDependency.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compositionDependency.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a representação de cadeia de caracteres desse objeto <see cref="T:System.Composition.Hosting.Core.CompositionDependency" />.</summary>
        <returns>A representação da cadeia de caracteres de <see cref="T:System.Composition.Hosting.Core.CompositionDependency" />.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>