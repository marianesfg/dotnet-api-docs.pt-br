<Type Name="ProjectUsingTaskParameterElement" FullName="Microsoft.Build.Construction.ProjectUsingTaskParameterElement">
  <TypeSignature Language="C#" Value="public class ProjectUsingTaskParameterElement : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectUsingTaskParameterElement extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectUsingTaskParameterElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectUsingTaskParameterElement&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectUsingTaskParameterElement : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Name={Name} ParameterType={ParameterType} Output={Output} Required={Required}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71a04-101">Representa um parâmetro de uma tarefa embutida.</span><span class="sxs-lookup"><span data-stu-id="71a04-101">Represents a parameter of an inline task.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public override string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-102">Obtém uma condição não existente, que é implicitamente verdadeira.</span><span class="sxs-lookup"><span data-stu-id="71a04-102">Gets a nonexistent condition, which is implicitly true.</span></span></summary>
        <value><span data-ttu-id="71a04-103">Retorna um nulo.</span><span class="sxs-lookup"><span data-stu-id="71a04-103">Returns a null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public override Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-104">Não use.</span><span class="sxs-lookup"><span data-stu-id="71a04-104">Do not use.</span></span> <span data-ttu-id="71a04-105">O atributo Condition é inexistente para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="71a04-105">The Condition attribute is nonexistent for this element.</span></span> <span data-ttu-id="71a04-106">Get lança um erro interno.</span><span class="sxs-lookup"><span data-stu-id="71a04-106">Get throws an internal error.</span></span></summary>
        <value><span data-ttu-id="71a04-107">Lança um erro interno e retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="71a04-107">Throws an internal error and returns null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-108">Obtém e define o nome do parâmetro dessa tarefa embutida.</span><span class="sxs-lookup"><span data-stu-id="71a04-108">Gets and sets the name of the parameter of this inline task.</span></span></summary>
        <value><span data-ttu-id="71a04-109">Retorna o nome do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="71a04-109">Returns the name of the parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public string Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Output" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Output { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-110">Obtém ou define o atributo Output opcional dessa tarefa embutida.</span><span class="sxs-lookup"><span data-stu-id="71a04-110">Gets or sets the optional Output attribute of this inline task.</span></span></summary>
        <value><span data-ttu-id="71a04-111">Retorna o valor do atributo de saída.</span><span class="sxs-lookup"><span data-stu-id="71a04-111">Returns the value of the Output attribute.</span></span> <span data-ttu-id="71a04-112">Retorna uma cadeia de caracteres vazia caso o atributo não esteja presente.</span><span class="sxs-lookup"><span data-stu-id="71a04-112">Returns an empty string if the attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a04-113">Representa um sinalizador booleano que, se `true`, indica que esse parâmetro é uma entrada e um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="71a04-113">Represents a boolean flag that, if `true`, indicates that this parameter is both an input and an output parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation OutputLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation OutputLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.OutputLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ OutputLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-114">O local do atributo Output neste elemento, se houver.</span><span class="sxs-lookup"><span data-stu-id="71a04-114">Location of the Output attribute on this element, if any.</span></span></summary>
        <value><span data-ttu-id="71a04-115">Local de atributo de saída retorna.</span><span class="sxs-lookup"><span data-stu-id="71a04-115">Returns Output attribute location.</span></span> <span data-ttu-id="71a04-116">Caso não haja esse atributo, retorna o local do elemento, em vez do local do atributo padrão.</span><span class="sxs-lookup"><span data-stu-id="71a04-116">If there is no such attribute, returns the location of the element, instead of the location of the default attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public string ParameterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-117">Obtém ou define o atributo Type dessa tarefa embutida.</span><span class="sxs-lookup"><span data-stu-id="71a04-117">Gets or sets the Type attribute of this inline task.</span></span></summary>
        <value><span data-ttu-id="71a04-118">Retorna o valor do atributo de tipo.</span><span class="sxs-lookup"><span data-stu-id="71a04-118">Returns the value of the Type attribute.</span></span> <span data-ttu-id="71a04-119">Retorna uma cadeia de caracteres vazia caso o atributo não esteja presente.</span><span class="sxs-lookup"><span data-stu-id="71a04-119">Returns an empty string if the attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a04-120">Indica o tipo do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="71a04-120">Indicates the type of the parameter.</span></span> <span data-ttu-id="71a04-121">O significado de um tipo depende da fábrica de tarefas dessa tarefa embutida.</span><span class="sxs-lookup"><span data-stu-id="71a04-121">The meaning of a type depends on the task factory of this inline task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterTypeLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ParameterTypeLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ParameterTypeLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterTypeLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterTypeLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ParameterTypeLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-122">Local do atributo ParameterType neste elemento, se houver.</span><span class="sxs-lookup"><span data-stu-id="71a04-122">Location of the ParameterType attribute on this element, if any.</span></span></summary>
        <value><span data-ttu-id="71a04-123">Retorna o local de atributo ParameterType.</span><span class="sxs-lookup"><span data-stu-id="71a04-123">Returns ParameterType attribute location.</span></span> <span data-ttu-id="71a04-124">Caso não haja esse atributo, retorna o local do elemento, em vez do local do atributo padrão.</span><span class="sxs-lookup"><span data-stu-id="71a04-124">If there is no such attribute, returns the location of the element, instead of the location of the default attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="public string Required { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Required" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required" />
      <MemberSignature Language="VB.NET" Value="Public Property Required As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Required { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-125">Obtém ou define o atributo Required</span><span class="sxs-lookup"><span data-stu-id="71a04-125">Gets or sets the Required attribute</span></span></summary>
        <value><span data-ttu-id="71a04-126">Retorna o valor do atributo necessário.</span><span class="sxs-lookup"><span data-stu-id="71a04-126">Returns the value of the Required attribute.</span></span> <span data-ttu-id="71a04-127">Retorna uma cadeia de caracteres vazia caso o atributo não esteja presente.</span><span class="sxs-lookup"><span data-stu-id="71a04-127">Returns an empty string if the attribute is not present.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a04-128">Representa um sinalizador booliano que, se "true", indica que esse parâmetro é necessário.</span><span class="sxs-lookup"><span data-stu-id="71a04-128">Represents a boolean flag that, if "true", indicates that this parameter is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation RequiredLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation RequiredLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.RequiredLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ RequiredLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a04-129">O local do atributo Required neste elemento, se houver.</span><span class="sxs-lookup"><span data-stu-id="71a04-129">Location of the Required attribute on this element, if any.</span></span></summary>
        <value><span data-ttu-id="71a04-130">Local de atributo retorna necessária.</span><span class="sxs-lookup"><span data-stu-id="71a04-130">Returns Required attribute location.</span></span> <span data-ttu-id="71a04-131">Caso não haja esse atributo, retorna o local do elemento, em vez do local do atributo padrão.</span><span class="sxs-lookup"><span data-stu-id="71a04-131">If there is no such attribute, returns the location of the element, instead of the location of the default attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>