<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f22e935ada6e9dcedccb9ec4a3248eafd0c5bd7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30548760" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="96fac-101">Define a classe base opcional para serviços Web XML, que fornece acesso direto a objetos do ASP.NET comuns, como estado de sessão e de aplicativo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96fac-101">Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-102">Se você não precisar de acesso a objetos comuns do ASP.NET, você ainda pode criar um serviço Web XML sem derivando de <xref:System.Web.Services.WebService>.</span><span class="sxs-lookup"><span data-stu-id="96fac-102">If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from <xref:System.Web.Services.WebService>.</span></span> <span data-ttu-id="96fac-103">Objetos ASP.NET adicionais podem ser acessados por meio de <xref:System.Web.Services.WebService.Context%2A>.</span><span class="sxs-lookup"><span data-stu-id="96fac-103">Additional ASP.NET objects can be accessed through <xref:System.Web.Services.WebService.Context%2A>.</span></span>  
  
 <span data-ttu-id="96fac-104">Métodos de serviço da Web em XML que têm o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propriedade do <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> definida como `true`, não têm acesso a seus <xref:System.Web.HttpContext>.</span><span class="sxs-lookup"><span data-stu-id="96fac-104">XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property of either <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> set to `true`, do not have access to their <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="96fac-105">Assim, acessar qualquer uma das propriedades do <xref:System.Web.Services.WebService> classe, de dentro desse método de serviço da Web em XML, retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="96fac-105">As such, accessing any of the properties of the <xref:System.Web.Services.WebService> class, from within that XML Web service method, return `null`.</span></span>  
  
 <span data-ttu-id="96fac-106">Se você estiver usando métodos do .NET Framework versão 1.0 XML Web Services que tenham o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> atributo aplicado a eles com o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propriedade de conjunto para `true`, não têm acesso a seus <xref:System.Web.HttpContext> usando estático <xref:System.Web.HttpContext.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-106">If you are using the .NET Framework version 1.0 XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property.</span></span> <span data-ttu-id="96fac-107">Para acessar o <xref:System.Web.HttpContext>, derive a classe que implementa o método de serviço da Web em XML de <xref:System.Web.Services.WebService> e acessar o <xref:System.Web.Services.WebService.Context%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-107">To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the <xref:System.Web.Services.WebService.Context%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96fac-108">O exemplo a seguir cria um serviço Web XML, derivando de <xref:System.Web.Services.WebService>, para usar o <xref:System.Web.Services.WebService.Context%2A> propriedade para obter a hora da solicitação no servidor.</span><span class="sxs-lookup"><span data-stu-id="96fac-108">The example below creates an XML Web service, deriving from <xref:System.Web.Services.WebService>, in order to use the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96fac-109">Inicializa uma nova instância da classe <see cref="T:System.Web.Services.WebService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-109">Initializes a new instance of the <see cref="T:System.Web.Services.WebService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-110">Obtém o objeto do aplicativo para a solicitação HTTP atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-110">Gets the application object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-111">Um objeto <see cref="T:System.Web.HttpApplicationState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-111">An <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-112">Os XML Web services podem usar o estado do aplicativo e o estado da sessão.</span><span class="sxs-lookup"><span data-stu-id="96fac-112">XML Web services can use both application state and session state.</span></span> <span data-ttu-id="96fac-113">Estado do aplicativo é mantido em todas as sessões acessando um serviço da Web em XML, independentemente de quando o estado da sessão é desativado para um método (usando o <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propriedade o <xref:System.Web.Services.WebMethodAttribute>).</span><span class="sxs-lookup"><span data-stu-id="96fac-113">Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96fac-114">O exemplo a seguir demonstra um contador incrementar a contagem de toda vez que um navegador chama o método de serviço da Web em XML.</span><span class="sxs-lookup"><span data-stu-id="96fac-114">The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-115">Obtém o ASP.NET <see cref="T:System.Web.HttpContext" /> para a solicitação atual, que encapsula todo o contexto específico de HTTP usado pelo servidor HTTP para processar solicitações da Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-115">Gets the ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-116">O ASP.NET <see cref="T:System.Web.HttpContext" /> da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-116">The ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-117">Métodos de serviço da Web em XML que tenham o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> atributo aplicado a eles com o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propriedade de conjunto para `true`, não têm acesso a seus <xref:System.Web.HttpContext> usando estático <xref:System.Web.HttpContext.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-117">XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property.</span></span> <span data-ttu-id="96fac-118">Para acessar o <xref:System.Web.HttpContext>, derive a classe que implementa o método de serviço da Web em XML de <xref:System.Web.Services.WebService> e acessar o <xref:System.Web.Services.WebService.Context%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-118">To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the <xref:System.Web.Services.WebService.Context%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96fac-119">O exemplo abaixo usa o <xref:System.Web.Services.WebService.Context%2A> propriedade para obter a hora da solicitação no servidor.</span><span class="sxs-lookup"><span data-stu-id="96fac-119">The Example below uses the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="96fac-120">
            <paramref name="Context" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-120">
              <paramref name="Context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-121">Obtém o <see cref="T:System.Web.HttpServerUtility" /> da solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-121">Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-122">Um objeto <see cref="T:System.Web.HttpServerUtility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-122">An <see cref="T:System.Web.HttpServerUtility" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-123">O <xref:System.Web.HttpServerUtility> classe fornece vários métodos que podem ser usados no processamento de solicitações da Web, incluindo <xref:System.Web.HttpServerUtility.CreateObject%2A> (para instanciar objetos COM).</span><span class="sxs-lookup"><span data-stu-id="96fac-123">The <xref:System.Web.HttpServerUtility> class provides several methods that can be used in the processing of Web requests, including <xref:System.Web.HttpServerUtility.CreateObject%2A> (for instantiating COM objects).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96fac-124">O exemplo a seguir retorna o nome do computador do servidor Web usando o <xref:System.Web.Services.WebService.Server%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-124">The example below returns the computer name of the Web server using the <xref:System.Web.Services.WebService.Server%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-125">Obtém a instância <see cref="T:System.Web.SessionState.HttpSessionState" /> para a solicitação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-125">Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> instance for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-126">Um <see cref="T:System.Web.SessionState.HttpSessionState" /> que representa o objeto de estado de sessão ASP.NET para a sessão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-126">An <see cref="T:System.Web.SessionState.HttpSessionState" /> representing the ASP.NET session state object for the current session.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96fac-127">O exemplo abaixo usa o estado de sessão para determinar quantas vezes uma determinada sessão acessa o método de serviço da Web em XML `SessionHitCounter`.</span><span class="sxs-lookup"><span data-stu-id="96fac-127">The example below uses session state to determine how many times a particular session accesses the XML Web service method `SessionHitCounter`.</span></span> <span data-ttu-id="96fac-128">Neste exemplo, o <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> propriedade o <xref:System.Web.Services.WebMethodAttribute> é definido como `true` para obter acesso ao estado de sessão.</span><span class="sxs-lookup"><span data-stu-id="96fac-128">In this example, the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute> is set to `true` in order to gain access to session state.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-129">Obtém a versão do protocolo SOAP usada para criar a solicitação SOAP para o serviço Web XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-129">Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-130">Um dos valores de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-130">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span>
          </span>
          <span data-ttu-id="96fac-131">O padrão é <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-131">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-132">Se o protocolo SOAP não foi usado para se comunicar com o serviço da Web em XML, como HTTP GET ou POST HTTP, o valor de <xref:System.Web.Services.WebService.SoapVersion%2A> é de propriedade <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.</span><span class="sxs-lookup"><span data-stu-id="96fac-132">If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the <xref:System.Web.Services.WebService.SoapVersion%2A> property is <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.</span></span>  
  
 <span data-ttu-id="96fac-133">Para XML Web services que não derivam de <xref:System.Web.Services.WebService> classe, a versão do protocolo SOAP usada para fazer a solicitação SOAP para o serviço ser também podem ser acessados usando a entrada "WebServiceSoapVersion" do XML Web o <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96fac-133">For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the "WebServiceSoapVersion" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="96fac-134">Se a entrada é do tipo <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</span><span class="sxs-lookup"><span data-stu-id="96fac-134">That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96fac-135">Obtém o objeto <see cref="P:System.Web.HttpContext.User" /> do servidor ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-135">Gets the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object.</span>
          </span>
          <span data-ttu-id="96fac-136">Pode ser usado para autenticar se um usuário está autorizado a executar a solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-136">Can be used to authenticate whether a user is authorized to execute the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96fac-137">Uma <see cref="T:System.Security.Principal.IPrincipal" /> que representa o objeto <see cref="P:System.Web.HttpContext.User" /> do servidor ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96fac-137">A <see cref="T:System.Security.Principal.IPrincipal" /> representing the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96fac-138">Serviços de informações da Internet (IIS) e o .NET Framework precisam ser configurado para autenticação para que o <xref:System.Web.Services.WebService.User%2A> propriedade para que seja significativo.</span><span class="sxs-lookup"><span data-stu-id="96fac-138">Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the <xref:System.Web.Services.WebService.User%2A> property to be meaningful.</span></span> <span data-ttu-id="96fac-139">A autenticação é o processo de aceitar credenciais de um usuário e validar essas credenciais em alguma autoridade.</span><span class="sxs-lookup"><span data-stu-id="96fac-139">Authentication is the process of accepting credentials from a user and validating those credentials against some authority.</span></span> <span data-ttu-id="96fac-140">Se as credenciais forem válidas, você tem uma identidade autenticada.</span><span class="sxs-lookup"><span data-stu-id="96fac-140">If the credentials are valid, you have an authenticated identity.</span></span> <span data-ttu-id="96fac-141">Autenticação no .NET Framework está configurada com a colocação de entradas no arquivo Web. config.</span><span class="sxs-lookup"><span data-stu-id="96fac-141">Authentication in the .NET Framework is configured by placing entries in the web.config file.</span></span>  
  
 <span data-ttu-id="96fac-142">O exemplo a seguir demonstra as entradas de você colocar o arquivo Web. config para habilitar a autenticação do Windows.</span><span class="sxs-lookup"><span data-stu-id="96fac-142">The following example demonstrates the entries you place in the web.config file to enable Windows authentication.</span></span>  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 <span data-ttu-id="96fac-143">Para obter mais informações sobre como configurar a segurança para um serviço Web XML, consulte [ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).</span><span class="sxs-lookup"><span data-stu-id="96fac-143">For more information on setting up security for an XML Web service see [&#91;\<topic://cpconSecuringASPNETWebServices>&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96fac-144">O exemplo a seguir procura o nome de usuário autenticado e retorna esse nome.</span><span class="sxs-lookup"><span data-stu-id="96fac-144">The example below looks up the authenticated user name and returns that name.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>