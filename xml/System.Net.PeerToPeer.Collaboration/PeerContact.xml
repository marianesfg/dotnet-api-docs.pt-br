<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fffb020fb9bdc89e55c5f141b33198183d16dc8" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55401272" /></Metadata><TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um par para o qual um usuário recuperou informações estendidas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um contato representa um par confiável. Um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto deve ser criado para um par remoto ou <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> para um usuário colaborar com o par remoto quando ele está fora do escopo "Pessoas ao meu redor". Um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto pode existir como um aplicativo em execução em um computador remoto ou o usuário de um computador remoto. Uma instância dessa classe pode ser adicionada para o <xref:System.Net.PeerToPeer.Collaboration.ContactManager> que armazena as informações de contato de uma maneira persistente.  
  
 O convite de um aplicativo de um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> é autenticados e criptografados. A caixa de diálogo de interface do usuário para aceitar ou rejeitar o convite de um contato do par também indica que o emissor é confiável.  
  
 Assinando um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto significa que um par remoto pode ver seus aplicativos registrados, objetos e informações de presença. Para se inscrever em uma <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, o chamador deve estar conectado para a infraestrutura de colaboração ponto a ponto via <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> ou conectado por meio da interface do usuário do Windows.  Todas as outras operações não exigem a entrada.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="streamingContext">O destino de serialização associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Nenhum construtor público está definido para esta classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma instância desse objeto pode ser obtida de <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> ou <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Esse evento será gerado sempre que um aplicativo associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> tiver sido alterado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o X509Certificate (chave pública) para o par identificado por esta instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>O X509Certificate (chave pública) para o par identificado por esse <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instância. O valor padrão desta propriedade é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres que representa o nome de exibição do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see cref="T:System.String" /> que representa o nome de exibição deste <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. A menos que explicitamente especificado, o valor padrão para todas as propriedades é <see langword="null" /> para tipos de referência.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um nome de exibição pode ser usado para diferenciar os contatos em um <xref:System.Net.PeerToPeer.Collaboration.ContactManager> nas instâncias onde um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> pode ter vários endereços de email, ou se houver vários pares com o mesmo nome de exibição.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
        <summary>Libera os recursos não gerenciados e libera opcionalmente os recursos gerenciados usados pelo objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> deixa uma sessão de colaboração, determinados objetos não são mais necessários.  Se este contato tinha sido colaborando com quaisquer outros pontos de extremidade registrados não diretamente com o host do par e o host espera continuar a colaborar com eles, o host deve registrar esses pontos de extremidade dentro de um aplicativo ou em seu <xref:System.Net.PeerToPeer.Collaboration.ContactManager> antes como descartar isso <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o endereço de email associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see cref="T:System.Net.Mail.MailAddress" /> objeto que contém o endereço de email associado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Net.Mail.MailAddress> objeto é usado para representar o endereço de email.  Gerenciador de contatos permite vários endereços de email dentro de uma instância. O valor padrão desta propriedade é `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se o <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> deste objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> é equivalente ao nome de outro objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retorna `true` se especificado <xref:System.Object> tem o mesmo <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> como a instância atual, caso contrário `false`. Esse método também retornará `false` se os parâmetros passados são `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">A instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a ser testada quanto à igualdade.</param>
        <summary>Compara o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> com a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> especificada.</summary>
        <returns><see langword="true" /> se a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fornecida tiver dados correspondentes. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalização não ocorre nas cadeias de caracteres antes da comparação.  Normalização de todas as deve ter sido concluída durante ou antes de construir o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Compara a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> com o objeto especificado.</param>
        <summary>Compara a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> com o objeto especificado.</summary>
        <returns><see langword="true" /> se a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fornecida tiver dados correspondentes. Caso contrário, <see langword="false" />. Este método também retornará <see langword="false" /> se o parâmetro passado for <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Outros objetos que podem ser comparados com <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos incluem nomes de host do par, nomes de par relativo, e nomes desencapsulado dos outros <xref:System.Net.PeerToPeer> objetos.  
  
 Normalização não ocorre nas cadeias de caracteres antes da comparação.  Normalização de todas as deve ter sido concluída durante ou antes de construir o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">O primeiro <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a ser comparado.</param>
        <param name="objB">O segundo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> a ser comparado.</param>
        <summary>Determina se as instâncias <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> especificadas são consideradas iguais.</summary>
        <returns><see langword="true" /> se as instâncias <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> fornecidas tiverem dados correspondentes. Caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso pode ser usado para determinar se um <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> está em uso simultaneamente por dois pares remotos diferentes.  
  
 Outros objetos que podem ser comparados com <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos incluem nomes de host do par, nomes de par relativo, e nomes desencapsulado dos outros <xref:System.Net.PeerToPeer> objetos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">A codificação de XML usada para reconstruir o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Cria uma instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> com base nos dados XML fornecidos.</summary>
        <returns>Uma cadeia de caracteres que representa o modelo de objeto XML para codificar a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres para passar como o parâmetro deve ser obtido da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>.  
  
 Essa classe destina-se a ser uma implementação simples de um modelo de objeto XML simples para uso dentro da infraestrutura de colaboração e não para uso como um modelo de objeto XML geral.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro não pode ser <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 
-   O parâmetro não é um objeto <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> válido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera os objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> que foram registrados pelo par remoto no cache local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa funcionalidade é exposta somente sobre o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Essa funcionalidade não é exposta em qualquer outro tipo de ponto a ponto por motivos de segurança.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera os objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> que foram registrados pelo par remoto no cache local.</summary>
        <returns>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> do cache local. Se os aplicativos associados não forem encontrados para o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, será retornada uma coleção de tamanho zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 Essa funcionalidade é exposta somente sobre o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Essa funcionalidade não é exposta em qualquer outro tipo de ponto a ponto por motivos de segurança.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">O <see cref="T:System.Guid" /> do aplicativo par a ser recuperado.</param>
        <summary>Obtém a coleção de objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> com o <see cref="T:System.Guid" /> especificado do cache local.</summary>
        <returns>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> do cache local. Se nenhum aplicativo for encontrado com o <paramref name="applicationId" /> especificado, será retornada uma coleção de tamanho zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 Essa funcionalidade é exposta somente sobre o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Essa funcionalidade não é exposta em qualquer outro tipo de ponto a ponto por motivos de segurança.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Contém informações de ponto de extremidade associadas ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtém o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado.</summary>
        <returns>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Se os aplicativos não estiverem associados ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado, será retornada uma coleção de tamanho zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 Essa funcionalidade é exposta somente sobre o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Essa funcionalidade não é exposta em qualquer outro tipo de ponto a ponto por motivos de segurança.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
        <param name="applicationId">Contém informações do aplicativo associadas ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtém o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado.</summary>
        <returns>A coleção de objetos de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> associados ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
Se os aplicativos identificados pela ID não forem encontrados para o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ou se a ID do ponto de extremidade for <see langword="null" /> ou inválida, será retornada uma coleção de tamanho zero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 Essa funcionalidade é exposta somente sobre o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classe.  Essa funcionalidade não é exposta em qualquer outro tipo de ponto a ponto por motivos de segurança.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o código hash de uma instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>Um código de hash do inteiro assinado de 32 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse valor de código hash é usado para comparar programaticamente as instâncias desse tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contém os dados serializados associados ao objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contém o destino do fluxo serializado associado ao objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um tipo derivado deve chamar o <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> método do tipo base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém a coleção de objetos pares de um cache local.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade do qual recuperar objetos.</param>
        <summary>Obtém o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> registrado pelo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado e armazenado no cache local.</summary>
        <returns>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Se nenhum aplicativo estiver associado ao ponto de extremidade, uma coleção de tamanho zero (0) será retornada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade do qual recuperar objetos.</param>
        <param name="objectId">O <see cref="T:System.Guid" /> do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> a ser recuperado.</param>
        <summary>Obtém a coleção de objetos pares registrados pelo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado e registrados no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> identificado pelo <see cref="T:System.Guid" /> especificado.</summary>
        <returns>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Se nenhum aplicativo estiver associado ao ponto de extremidade, uma coleção de tamanho zero (0) será retornada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> associados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> método deve ser chamado antes de chamar esse método.  
  
 Enquanto o chamador não é necessário entrar para a infraestrutura de colaboração para esse método seja concluído com êxito, uma chamada bem-sucedida para <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ou uma da <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos devem ter sido concluídos enquanto o chamador foi conectado anteriormente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   O par de chamada não está inscrito no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   O par de chamada ainda não chamou o método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envia um convite para ingressar na atividade de colaboração ponto a ponto patrocinada pelo remetente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envia um convite para ingressar na colaboração ponto a ponto patrocinada pelo remetente.</summary>
        <returns>Um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> do par que recebeu o convite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> do aplicativo atual não existe.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade para receber o convite.</param>
        <summary>Envia um convite para um ponto de extremidade específico para ingressar na colaboração ponto a ponto com o remetente do convite.</summary>
        <returns>Um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> do ponto de extremidade de par que recebeu o convite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />.  
  
-   O aplicativo em execução no momento não está registrado na infraestrutura de colaboração ponto a ponto.  
  O 
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> especificado pelo objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não é válido.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> para o qual o convite é enviado.</param>
        <param name="message">Uma mensagem a ser enviada para o par remoto com o convite do aplicativo.</param>
        <param name="invitationData">Um blob de dados definido pelo usuário a ser associado ao convite.  O tamanho não pode ser maior que 16.384 bytes.</param>
        <summary>Envia o convite especificado para ingressar no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> especificado patrocinado pelo remetente.</summary>
        <returns>Um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> do par que recebeu o convite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> do aplicativo atual não existe ou está vazio.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade ou o par remoto para o qual enviar o convite.</param>
        <param name="applicationToInvite">O aplicativo para o qual o convite é enviado.</param>
        <param name="message">Uma mensagem a ser enviada para o par remoto com o convite do aplicativo.  A mensagem não pode ter mais de 255 caracteres Unicode.</param>
        <param name="invitationData">Um blob de dados definido pelo usuário a ser associado ao convite.  O tamanho não pode ser maior que 16.384 bytes.</param>
        <summary>Envia o convite especificado para o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado ingressar no aplicativo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> especificado patrocinado pelo remetente.</summary>
        <returns>Um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> do par que recebeu o convite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O ponto de extremidade no <paramref name="PeerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">O objeto -   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> não pode ser vazio.  
  Objetos 
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não podem ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> do aplicativo atual não existe ou está vazio.</exception>
        <block subset="none" type="usage"><para>Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia uma operação de convite assíncrona para que um ponto de extremidade ingresse em um aplicativo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinado pelo remetente do convite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">O objeto definido pelo usuário a ser passado para o retorno de chamada da operação assíncrona. Usado também para identificar a operação assíncrona para cancelamento. Este parâmetro deve ser especificado e é exclusivo em todas as operações de convite assíncronas em andamento.</param>
        <summary>Inicia uma operação de convite assíncrona para que um ponto de extremidade ingresse em um aplicativo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinado pelo remetente do convite. O convite é identificado usando o <see cref="T:System.Object" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   O <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> do aplicativo atual não existe ou está vazio.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> não pode ser <see langword="null." /></exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade ou o par remoto para o qual enviar o convite.</param>
        <param name="userToken">O objeto definido pelo usuário a ser passado para o retorno de chamada da operação assíncrona. Usado também para identificar a operação assíncrona para cancelamento. Este parâmetro deve ser especificado e é exclusivo em todas as operações de convite assíncronas em andamento.</param>
        <summary>Inicia uma operação de convite assíncrona para o ponto de extremidade de par especificado ingressar em um aplicativo <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinado pelo remetente do convite. O convite é identificado usando o <see cref="T:System.Object" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> não pode ser <see langword="null." />  
  
-   O ponto de extremidade no <paramref name="peerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">O objeto <paramref name="peerEndPoint" /> não pode ser <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O <see cref="T:System.Guid" /> do aplicativo atual não existe ou está vazio.</exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">O aplicativo para o qual o convite é enviado.</param>
        <param name="message">Uma mensagem a ser enviada para o par remoto com o convite do aplicativo.  A mensagem não pode ter mais de 255 caracteres Unicode.</param>
        <param name="invitationData">Um blob de dados definido pelo usuário a ser associado ao convite.  O tamanho não pode ser maior que 16.384 bytes.</param>
        <param name="userToken">O objeto definido pelo usuário a ser passado para o retorno de chamada da operação assíncrona. Usado também para identificar a operação assíncrona para cancelamento. Este parâmetro deve ser especificado e é exclusivo em todas as operações de convite assíncronas em andamento.</param>
        <summary>Inicia uma operação de convite assíncrona para os pontos de extremidade de par especificados ingressarem em um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> de colaboração especificado patrocinado pelo remetente do convite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> não pode ser <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   O <see cref="T:System.Guid" /> do aplicativo atual não existe ou está vazio.  
  
-   A coleção de pontos de extremidade está vazia ou <see langword="null." /></exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">O ponto de extremidade ou o par remoto para o qual enviar o convite.</param>
        <param name="message">Uma mensagem a ser enviada para o par remoto com o convite do aplicativo.  A mensagem não pode ter mais de 255 caracteres Unicode.</param>
        <param name="invitationData">Um blob de dados definido pelo usuário a ser associado ao convite.  O tamanho não pode ser maior que 16.384 bytes.</param>
        <param name="applicationToInvite">O aplicativo para o qual o convite é enviado.</param>
        <param name="userToken">O objeto definido pelo usuário a ser passado para o retorno de chamada da operação assíncrona. Usado também para identificar a operação assíncrona para cancelamento. Este parâmetro deve ser especificado e é exclusivo em todas as operações de convite assíncronas em andamento.</param>
        <summary>Inicia uma operação de convite assíncrona para o <paramref name="peerEndPoint" /> especificado ingressar em um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> de colaboração especificado patrocinado pelo remetente do convite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador não é necessário entrar para o <xref:System.Net.PeerToPeer.Collaboration> infra-estrutura para esse método concluída com êxito. Um <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> do convidado não é o mesmo que o convidado aceitar o convite de colaboração. Se um convite é enviado para um par remoto que não tenha instalado o aplicativo, o convite foi recusado automaticamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> não pode ser null.  
  
-   O ponto de extremidade especificado por <paramref name="peerEndPoint" /> não pode ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">Os objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> não podem ser <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> do aplicativo atual não existe ou está vazio.</exception>
        <block subset="none" type="usage"><para>Sobrecargas adicionais são definidas na <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> classe em vez de subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Chamar esse método requer um <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> atual está assinado ou não assinado em um ponto de extremidade. Como alternativa, esta propriedade obtém ou define um valor que especifica se o host do par atual ou o aplicativo host assinou ou cancelou a assinatura neste <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see langword="true" /> Se este <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> assina esse ponto de extremidade, <see langword="false" /> se o contato não assinou ou cancelou a assinatura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em muitos casos, um <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> não é o mesmo que um host do par. Um host do par tem uma instância dentro de <xref:System.Net.PeerToPeer.Collaboration.ContactManager> do par remoto, e o relacionamento é que eles convidou o par de colaborar.  Um ponto de extremidade tem um "Me" da instância dentro de seu próprio Gerenciador de contatos e o host do par, mas a relação não for especificada.  
  
 Se o host do par a <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, e o contato do par não escolhe <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>, sua <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> pode ter um valor de bloqueado, em vez de excluir sua entrada do host do Gerenciador de contatos.  
  
 Há uma relação muitos-para-muitos entre pares locais, pares remotos, hosts de ponto a ponto e assinaturas.  As assinaturas são por usuário, em vez de processo, aplicativo ou por domínio. Consequentemente, as assinaturas associadas com um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> são a lista de contatos que ele assinou do objeto e do qual ele espera que as atualizações.  Os contatos tiveram atualizado seu próprio aplicativo, objeto e informações de presença, ou eles atualizados informações sobre contatos no <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
 Essa propriedade sempre retorna `true` se o objeto for um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> que representa o local ou "Me" contato, uma vez que um contato sempre está inscrito em si.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres que representa o <paramref name="Nickname" /> do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see cref="T:System.String" /> que representa o apelido do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. O valor padrão desta propriedade é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um apelido pode ser usado para um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> caso haja vários pares com o mesmo nome de exibição do objeto.  Uma sessão de colaboração também pode usar o apelido para designar pares remotos comumente usados em maiores esforços de colaboração.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento será sinalizado sempre que um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> tiver sido alterado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> a ser passado para os representantes associados ao evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</param>
        <summary>Aciona o evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alterações de aplicativo ocorrem quando um aplicativo é iniciado, registrado ou desregistrado da infraestrutura de colaboração.  Eles também ocorrem quando colegas ingressarem ou sair de uma sessão de colaboração ou alteram locais de ponto de extremidade de rede.  Alterações de escopo de ponto a ponto também podem fazer uma alteração em um aplicativo.  
  
 As classes que herdam dessa classe podem substituir esse método para executar tarefas adicionais quando o evento ocorre.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Em uma classe derivada, certifique-se de chamar a implementação de classe base desse método para que os representantes registrados recebam o evento.</para></block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">O tipo de alteração de objeto especificada pelo <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
        <summary>Gera o evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> quando um <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> é adicionado, atualizado ou removido por um par remoto.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> a ser passado para os representantes associados ao evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />.</param>
        <summary>Gerará o evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> quando o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> de um par tiver sido alterado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alterações de presença ocorrem quando um sinais de ponto a ponto fora de um aplicativo, um aplicativo é registrado ou desregistrado da infraestrutura de colaboração ou cancela a assinatura de um par de um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> ou <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> ou <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> associado ao evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</param>
        <summary>Aciona o evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As classes que herdam dessa classe podem substituir esse método para executar mais tarefas quando o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> evento ocorre.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Uma classe derivada deve chamar a implementação da classe base desse método para que os representantes registrados recebam o evento.</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associado a este <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>O <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> coleção associada a este <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. O valor padrão desta propriedade é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> é um par local, o par remoto ou par de host para o contato de ponto a ponto representado por esta instância não é relevante para a presença do <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> o ponto de extremidade <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> ou o <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra o uso adequado de <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> propriedade:  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Net.PeerToPeer.PeerName" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value><see cref="T:System.String" /> que representa o <see cref="T:System.Net.PeerToPeer.PeerName" /> do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. A menos que explicitamente especificado, o valor padrão para todas as propriedades é <see langword="null" /> para tipos de referência.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não há dois contatos no catálogo de endereços podem ter o mesmo <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento será gerado sempre que o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> tiver alterado seu status de presença.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Assina o par de chamada no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e, como resultado, o par receberá quaisquer eventos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futuros associados ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> as atualizações ocorrem de forma assíncrona após o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> método foi bem-sucedida. Como resultado, é possível que um <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> a ser adicionado à coleção de um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> antes de associado <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> é fornecido.  
  
 Para monitorar essas alterações, é recomendável que o usuário tenha uma assinatura para os eventos relevantes; Por exemplo, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O par de chamada não está conectado a Pessoas ao meu Redor.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />. A falha pode ter ocorrido devido a uma incapacidade de estabelecer uma conexão TCP com o par.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> é exposto aos eventos de colaboração associados ao par ou ao aplicativo que tem a propriedade do <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> no qual este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> reside.</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> valor de enumeração que especifica se este <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> é exposto aos eventos de colaboração que pertencem ao host ponto a ponto ou aplicativo de hospedagem. A menos que explicitamente especificado, o valor padrão para todas as propriedades é <see langword="null" /> para tipos de referência.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir essa propriedade como <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed> significa que o par remoto especificado por este <xref:System.Net.PeerToPeer.Collaboration.PeerContact> pode ver os aplicativos registrados, objetos e informações de presença para o usuário ou aplicativo que possui o <xref:System.Net.PeerToPeer.Collaboration.ContactManager> no qual este <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto reside.  
  
 Essa propriedade não tem nenhum efeito um <xref:System.Net.PeerToPeer.Collaboration.PeerContact> instância que representa o local ou "Me" contato, como um contato sempre está inscrito em si.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
foi descartado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Um <see cref="T:System.Object" /> definido pelo usuário que contém informações sobre a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />.</param>
        <summary>Assina de maneira assíncrona o par de chamada no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e, como resultado, o par receberá quaisquer eventos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futuros associados ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> é gerado após a conclusão dessa operação. Se as atividades de colaboração não precisam ser assíncronas, o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> método deve ser usado em vez disso.  
  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="UserToken" /> não pode ser <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">O par de chamada não está conectado a Pessoas ao meu Redor.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">O identificador <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> duplicado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gerado quando uma operação de assinatura tiver sido concluída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando esse evento é acionado, a propriedade de erro sobre o <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> objeto deve ser examinado para determinar se o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> processo foi concluído com êxito.  
  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contém os dados serializados associados ao objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contém o destino do fluxo serializado associado ao objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e retorna os dados necessários para serializar a instância <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma representação <see cref="T:System.String" /> do <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> associado ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>A representação <see cref="T:System.String" /> do <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serializa o <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> em uma cadeia de caracteres XML para o armazenamento persistente ou para a transferência de rede.</summary>
        <returns>Uma codificação XML do <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Não é possível concluir a operação <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove uma assinatura no <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> e, como resultado, o par de chamada não receberá mais eventos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> associados ao <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o par de chamada não está inscrito para o <xref:System.Net.PeerToPeer.Collaboration.PeerContact> especificado o resultado é não operacional. Um par de chamada pode verificar se ele assina eventos para o par identificado por essa instância com o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> propriedade.  
  
 Chamar esse método requer um <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Esse estado é criado quando inicia a sessão de colaboração ponto a ponto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> foi descartado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>