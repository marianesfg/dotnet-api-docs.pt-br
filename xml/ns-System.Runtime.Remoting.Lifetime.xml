<Namespace Name="System.Runtime.Remoting.Lifetime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ac8c7510ea8c5026f390f2936bebfb8b315c4f4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30735630" /></Metadata><Docs>
    <summary>O namespace <see cref="N:System.Runtime.Remoting.Lifetime" /> contém classes que gerenciam o tempo de vida de objetos remotos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tradicionalmente, a coleta de lixo distribuída usa contagens de referência e executar o ping para o controle sobre o tempo de vida de objetos. Isso funciona bem quando há alguns clientes por serviço, mas não escala bem quando há milhares de clientes por serviço. O serviço de tempo de vida de comunicação remota associa uma concessão com cada serviço e exclui um serviço quando seu tempo de concessão expira. O serviço de tempo de vida pode assumir a função de um coletor de lixo tradicional distribuída, e ele também ajusta bem quando os números de clientes por servidor aumenta.  
  
 Cada domínio de aplicativo contém um Gerenciador de concessão é responsável por controlar as concessões em seu domínio. Todas as concessões são examinadas periodicamente para tempos de concessão expirada. Se uma concessão expirar, um ou mais dos patrocinadores de concessão são invocados e terá a oportunidade de renovar a concessão. Se nenhum dos patrocinadores decide renovar a concessão, o Gerenciador de concessão remove a concessão e o objeto pode ser coletado pelo coletor de lixo. O Gerenciador de concessão mantém uma lista de concessão com concessões classificadas por tempo restante da concessão. As concessões com o menor tempo restante são armazenadas na parte superior da lista.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>