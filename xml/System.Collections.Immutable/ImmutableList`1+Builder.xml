<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableList`1+Builder.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5306457b56ab4b2273eb07eecea5c4f9fbc8b4028.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">306457b56ab4b2273eb07eecea5c4f9fbc8b4028</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.</source>
          <target state="translated">Representa uma lista que muda com pouca ou nenhuma alocação de memória e que pode produzir ou criar instâncias de lista imutável de maneira muito eficiente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>Pacote NuGet<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>sobre coleções imutáveis e como instalá-las<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Builder">
          <source>Although <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> and other methods already provide fast bulk change operations on the list, the <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> class allows multiple combinations of changes to be made to a list with equal efficiency.</source>
          <target state="translated">Embora <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType&gt;</ph> e outros métodos já fornecem as operações de alteração em massa rápida na lista, o <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> classe permite que várias combinações de alterações a serem feitas para uma lista com eficiência igual.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>The item to add to the list.</source>
          <target state="translated">O item a ser adicionado à lista.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)">
          <source>Adds an item to the immutable list.</source>
          <target state="translated">Adiciona um item à lista imutável.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to add to the end of the list.</source>
          <target state="translated">Os elementos a serem adicionados ao final da lista.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Adds a series of elements to the end of this list.</source>
          <target state="translated">Adiciona uma série de elementos no final dessa lista.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The object to locate.</source>
          <target state="translated">O objeto a ser localizado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">O valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Pesquisa um elemento em toda a <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> usando o comparador padrão e retorna o índice baseado em zero do elemento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">O índice baseado em zero do item na <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, se o item for encontrado; caso contrário, um número negativo que seja o complemento bit a bit do índice do próximo elemento que for maior que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Caso o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> não contenha o valor especificado, o método retorna um inteiro negativo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Ao inserir o valor para o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">O objeto a ser localizado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Esse valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">A implementação a ser usada na comparação de elementos ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para o comparador padrão.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the entire <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Pesquisa um elemento em toda a <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> usando o comparador especificado e retorna o índice baseado em zero do elemento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">O índice baseado em zero do item na <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, se o item for encontrado; caso contrário, um número negativo que seja o complemento bit a bit do índice do próximo elemento que for maior que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Caso o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> não contenha o valor especificado, o método retorna um inteiro negativo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Ao inserir o valor para o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">O índice baseado em zero inicial do intervalo a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to search.</source>
          <target state="translated">O tamanho do intervalo a ser procurado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The object to locate.</source>
          <target state="translated">O objeto a ser localizado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Esse valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> for the default comparer.</source>
          <target state="translated">A implementação a ser usada na comparação de elementos ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para o comparador padrão.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>Searches the specified range of the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Pesquisa um elemento no intervalo especificado da <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> usando o comparador especificado e retorna o índice baseado em zero do elemento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based index of item in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">O índice baseado em zero do item na <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph>, se o item for encontrado; caso contrário, um número negativo que seja o complemento bit a bit do índice do próximo elemento que for maior que <ph id="ph2">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Caso o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> não contenha o valor especificado, o método retorna um inteiro negativo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <source>When inserting the value into the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Ao inserir o valor para o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Clear">
          <source>Removes all items from the immutable list.</source>
          <target state="translated">Remove todos os itens da lista imutável.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>The object to locate in the list.</source>
          <target state="translated">O objeto a ser localizado na lista.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source>Determines whether the immutable list contains a specific value.</source>
          <target state="translated">Determina se a lista imutável contém um valor específico.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is found in the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o item for encontrado na lista; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The type of the output of the delegate converter function.</source>
          <target state="translated">O tipo de saída da função de conversor de delegado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>The converter function.</source>
          <target state="translated">A função de conversor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>Creates a new immutable list from the list represented by this builder by using the converter function.</source>
          <target state="translated">Cria uma nova lista imutável com base na lista representada por esse construtor, usando a função de conversor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})">
          <source>A new immutable list from the list represented by this builder.</source>
          <target state="translated">Uma nova lista imutável com base na lista representada por este construtor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">A matriz unidimensional que é o destino dos elementos copiados da lista imutável.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copia toda a lista imutável em uma matriz unidimensional compatível, começando pelo início da matriz de destino.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">A matriz unidimensional que é o destino dos elementos copiados da lista imutável.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in array at which copying begins.</source>
          <target state="translated">O índice de base zero na matriz no qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copia toda a lista imutável para uma matriz unidimensional compatível, iniciando no índice especificado da matriz de destino.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in the source immutable list at which copying begins.</source>
          <target state="translated">O índice baseado em zero na lista imutável de origem em que a cópia começa.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the immutable list.</source>
          <target state="translated">A matriz unidimensional que é o destino dos elementos copiados da lista imutável.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">O número de elementos a serem copiados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <source>Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copia toda a lista imutável para uma matriz unidimensional compatível, iniciando no índice especificado da matriz de destino.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>Gets the number of elements in this immutable list.</source>
          <target state="translated">Obtém o número de elementos nessa lista imutável.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Count">
          <source>The number of elements in this list.</source>
          <target state="translated">O número de elementos nesta lista.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">O delegado que define as condições dos elementos a serem pesquisados.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source>Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Determina se a lista imutável contém elementos que correspondem às condições definidas pelo predicado especificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a lista imutável contiver um ou mais elementos que correspondem às condições definidas pelo predicado especificado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna a primeira ocorrência em toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})">
          <source>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">O primeiro elemento que corresponde às condições definidas pelo predicado especificado, se encontrado; caso contrário, o valor padrão para o tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to search for.</source>
          <target state="translated">O delegado que define as condições dos elementos a serem pesquisados.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>Retrieves all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Recupera todos os elementos que correspondem às condições definidas pelo predicado especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})">
          <source>An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.</source>
          <target state="translated">Uma lista imutável contendo todos os elementos que correspondem às condições definidas pelo predicado especificado, se encontrado; caso contrário, uma lista imutável vazia.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência em toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Pesquisa um elemento que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado ao último elemento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Pesquisa um elemento que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável, que começa no índice especificado e contém o número de elementos especificado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the first occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa um elemento que corresponda às condições definidas pelo predicado especificado e retorna a primeira ocorrência em toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})">
          <source>The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">O último elemento que corresponde às condições definidas pelo predicado especificado, se encontrado; caso contrário, o valor padrão para o tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência em toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">O delegado que define as condições do elemento a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Pesquisa por um elemento que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na lista imutável que contém o número de elementos especificado e termina no índice especificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <source>The zero-based index of the last occurrence of an element that matches the conditions defined by <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <ph id="ph1">&lt;paramref name="match" /&gt;</ph>, se for encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>The delegate to perform on each element of the list.</source>
          <target state="translated">O delegado a ser executado em cada elemento da lista.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})">
          <source>Performs the specified action on each element of the list.</source>
          <target state="translated">Executa a ação especificada em cada elemento da lista.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator">
          <source>An enumerator that can be used to iterate through the list.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar na lista.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The zero-based index at which the range starts.</source>
          <target state="translated">O índice baseado em zero no qual é iniciado o intervalo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">O número de elementos no intervalo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>Creates a shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Cria uma cópia superficial de um intervalo de elementos na lista imutável de origem.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)">
          <source>A shallow copy of a range of elements in the source immutable list.</source>
          <target state="translated">Uma cópia superficial de um intervalo de elementos na lista imutável de origem.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dentro do intervalo de elementos na lista imutável, se encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado até o último elemento.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the last element, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do <ph id="ph1">&lt;paramref name="index" /&gt;</ph> até o último elemento, se for encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência em um intervalo de elementos na lista imutável que começa no índice especificado e contém o número de elementos especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência do item no intervalo de elementos na lista imutável que começa em <ph id="ph1">&lt;paramref name="index" /&gt;</ph> e contém a <ph id="ph2">&lt;paramref name="count" /&gt;</ph> de número de elementos, se encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">O número de elementos a serem pesquisados.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">O comparador de valor a ser usado para comparar a igualdade de elementos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência em um intervalo de elementos no <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /&gt;</ph> que começa no índice especificado e contém o número de elementos especificado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência do item no intervalo de elementos na lista imutável que começa em <ph id="ph1">&lt;paramref name="index" /&gt;</ph> e contém a <ph id="ph2">&lt;paramref name="count" /&gt;</ph> de número de elementos, se encontrado; caso contrário, –1</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>The object to insert into the immutable list.</source>
          <target state="translated">O objeto a ser inserido na lista imutável.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)">
          <source>Inserts an item to the immutable list at the specified index.</source>
          <target state="translated">Insere um item na lista imutável no índice especificado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual os novos elementos devem ser inseridos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements should be inserted into the immutable list.</source>
          <target state="translated">A coleção cujos elementos devem ser inseridos na lista imutável.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The collection itself cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, but it can contain elements that are null, if type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is a reference type.</source>
          <target state="translated">A coleção em si não pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>, mas pode conter elementos que sejam nulos se o tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> for um tipo de referência.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the elements of a collection into the immutable list at the specified index.</source>
          <target state="translated">Insere os elementos de uma coleção na lista imutável no índice especificado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The index of the item to get or set.</source>
          <target state="translated">O índice do item a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>Gets or sets the value for a given index in the list.</source>
          <target state="translated">Obtém ou define o valor de um determinado índice na lista.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)">
          <source>The value at the specified index.</source>
          <target state="translated">O valor no índice especificado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire immutable list, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> em toda a lista imutável, se encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that extends from the first element to <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento até <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, se encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa inversa.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na lista imutável que contém o número de elementos especificado e termina no índice especificado.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)">
          <source>The zero-based index of the last occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the immutable list that contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements and ends at <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, if found; otherwise, –1.</source>
          <target state="translated">O índice baseado em zero da última ocorrência do <ph id="ph1">&lt;paramref name="item" /&gt;</ph> no intervalo de elementos na lista imutável que contém a <ph id="ph2">&lt;paramref name="count" /&gt;</ph> de número de elementos e termina no <ph id="ph3">&lt;paramref name="index" /&gt;</ph>, se encontrado; caso contrário, –1.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the immutable list.</source>
          <target state="translated">O objeto a ser localizado na lista imutável.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements to search.</source>
          <target state="translated">O número de elementos a serem pesquisados.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value comparer to use for comparing elements for equality.</source>
          <target state="translated">O comparador de valor a ser usado para comparar a igualdade de elementos.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na lista imutável que contém o número de elementos especificado e termina no índice especificado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph2">&lt;paramref name="count" /&gt;</ph> number of elements, if found; otherwise, –1</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência do item no intervalo de elementos na lista imutável que começa em <ph id="ph1">&lt;paramref name="index" /&gt;</ph> e contém a <ph id="ph2">&lt;paramref name="count" /&gt;</ph> de número de elementos, se encontrado; caso contrário, –1</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>The object to remove from the list.</source>
          <target state="translated">O objeto a ser removido da lista.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the immutable list.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico da lista imutável.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the list; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o item tiver sido removido com êxito da lista; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if item is not found in the list.</source>
          <target state="translated">Esse método também retornará <ph id="ph1">&lt;see langword="false" /&gt;</ph> se o item não for encontrado na lista.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">O delegado que define as condições dos elementos a serem removidos.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Remove todos os elementos que correspondem às condições definidas pelo predicado especificado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})">
          <source>The number of elements removed from the immutable list.</source>
          <target state="translated">O número de elementos removidos da lista imutável.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove from the list.</source>
          <target state="translated">O índice baseado em zero do item a ser removido da lista.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index of the immutable list.</source>
          <target state="translated">Remove o item no índice especificado da lista imutável.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse">
          <source>Reverses the order of the elements in the entire immutable list.</source>
          <target state="translated">Inverte a ordem dos elementos em toda a lista imutável.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">O índice inicial baseado em zero do intervalo a ser revertido.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">O número de elementos no intervalo a serem revertidos.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)">
          <source>Reverses the order of the elements in the specified range of the immutable list.</source>
          <target state="translated">Inverte a ordem dos elementos no intervalo especificado da lista imutável.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort">
          <source>Sorts the elements in the entire immutable list by using the default comparer.</source>
          <target state="translated">Classifica os elementos em toda a lista imutável usando o comparador padrão.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">A implementação a ser usada na comparação de elementos ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o comparador padrão (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparer.</source>
          <target state="translated">Classifica os elementos em toda a lista imutável usando o comparador especificado.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>The object to use when comparing elements.</source>
          <target state="translated">O objeto a ser usado na comparação de elementos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})">
          <source>Sorts the elements in the entire immutable list by using the specified comparison object.</source>
          <target state="translated">Classifica os elementos em toda a lista imutável usando o objeto de comparação especificado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">O índice inicial baseado em zero do intervalo a ser classificado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The length of the range to sort.</source>
          <target state="translated">O tamanho do intervalo a ser classificado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The implementation to use when comparing elements, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</source>
          <target state="translated">A implementação a ser usada na comparação de elementos ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o comparador padrão (<ph id="ph2">&lt;see cref="P:System.Collections.Generic.Comparer`1.Default" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Sorts the elements in a range of elements in the immutable list  by using the specified comparer.</source>
          <target state="translated">Classifica os elementos em um intervalo de elementos na lista imutável usando o comparador especificado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether this instance is read-only.</source>
          <target state="translated">Obtém um valor que indica se essa instância é somente leitura.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Always <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt> é sempre<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the list.</source>
          <target state="translated">A matriz unidimensional que é o destino dos elementos copiados da lista.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the list to an array, starting at a particular array index.</source>
          <target state="translated">Copia os elementos da lista em uma matriz, começando em um índice de matriz específico.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated">True se o acesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é sincronizado (thread-safe); caso contrário, false.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The object to add to the list.</source>
          <target state="translated">O objeto a ser adicionado à lista.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">Adiciona um item à lista.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
          <target state="translated">A posição na qual o novo elemento foi inserido, ou -1 para indicar que o item não foi inserido na coleção.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>Removes all items from the list.</source>
          <target state="translated">Remove todos os itens da lista.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">O objeto a ser localizado na lista.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specific value.</source>
          <target state="translated">Determina se a lista contém um valor específico.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the list; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> for encontrado na lista; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The object to locate in the list.</source>
          <target state="translated">O objeto a ser localizado na lista.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the list.</source>
          <target state="translated">Determina o índice de um item específico na lista.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">O índice de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> se encontrado na lista; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The object to insert into the list.</source>
          <target state="translated">O objeto a ser inserido na lista.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">Insere um item na lista no índice especificado.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, false.</source>
          <target state="translated">True se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um fixa tamanho; caso contrário, false.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, false.</source>
          <target state="translated">True se o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> é somente leitura; caso contrário, false.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>The index.</source>
          <target state="translated">O índice.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the specified index.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> no índice especificado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>The object to remove from the list.</source>
          <target state="translated">O objeto a ser removido da lista.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the list.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico da lista.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Builder&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>Creates an immutable list based on the contents of this instance.</source>
          <target state="translated">Cria uma lista imutável de acordo com o conteúdo dessa instância.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>An immutable list.</source>
          <target state="translated">Uma lista imutável.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable">
          <source>This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</source>
          <target state="translated">Esse método é uma operação (n) e abordagens de tempo (1) como o número de mutações reais para o conjunto desde a última chamada para esse método de abordagens 0.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions to check against the elements.</source>
          <target state="translated">O delegado que define as condições a serem verificadas nos elementos.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>Determines whether every element in the immutable list matches the conditions defined by the specified predicate.</source>
          <target state="translated">Determina se cada elemento da lista imutável coincide com as condições definidas pelo predicado especificado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se cada elemento da lista imutável corresponder às condições definidas pelo predicado especificado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})">
          <source>If the list has no elements, the return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se a lista não tiver elementos, o valor retornado será <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>