<Type Name="ImmutableStack" FullName="System.Collections.Immutable.ImmutableStack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f24dd192fab73e69fc3ea1ef9de5810584162c5d" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52615172" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableStack" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableStack abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableStack = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="814d1-101">Fornece um conjunto de métodos de inicialização para instâncias da classe <see cref="T:System.Collections.Immutable.ImmutableStack`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="814d1-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableStack`1" /> class.</span>
      </span>
      <span data-ttu-id="814d1-102">**Pacote NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">sobre coleções imutáveis e como instalá-las</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="814d1-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="814d1-103">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="814d1-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableStack&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="814d1-104">O tipo de item a ser armazenado na pilha imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-104">The type of items to be stored in the immutable stack.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="814d1-105">Cria uma pilha imutável vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-105">Creates an empty immutable stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814d1-106">Uma pilha imutável vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-106">An empty immutable stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableStack&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="814d1-107">O tipo de itens na pilha imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-107">The type of items in the immutable stack.</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="814d1-108">O item com o qual preencher previamente a pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-108">The item to prepopulate the stack with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814d1-109">Cria uma nova pilha imutável que contém o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-109">Creates a new immutable stack that contains the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814d1-110">Uma nova coleção imutável que contém o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-110">A new immutable collection that contains the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableStack&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="814d1-111">O tipo de itens na pilha imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-111">The type of items in the immutable stack.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="814d1-112">Uma matriz que contém os itens com os quais preencher previamente a pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-112">An array that contains the items to prepopulate the stack with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814d1-113">Cria uma nova pilha imutável que contém a matriz especificada de itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-113">Creates a new immutable stack that contains the specified array of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814d1-114">Uma nova pilha imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-114">A new immutable stack that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableStack&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="814d1-115">O tipo de itens na pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-115">The type of items in the stack.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="814d1-116">Os itens a serem adicionados à pilha antes que ela seja imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-116">The items to add to the stack before it's immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814d1-117">Cria uma nova pilha imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-117">Creates a new immutable stack that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814d1-118">Uma pilha imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-118">An immutable stack that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableStack&lt;T&gt; Pop&lt;T&gt; (this System.Collections.Immutable.IImmutableStack&lt;T&gt; stack, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableStack`1&lt;!!T&gt; Pop&lt;T&gt;(class System.Collections.Immutable.IImmutableStack`1&lt;!!T&gt; stack, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Pop(Of T) (stack As IImmutableStack(Of T), ByRef value As T) As IImmutableStack(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableStack&lt;T&gt; ^ Pop(System::Collections::Immutable::IImmutableStack&lt;T&gt; ^ stack, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member Pop : System.Collections.Immutable.IImmutableStack&lt;'T&gt; *  -&gt; System.Collections.Immutable.IImmutableStack&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableStack.Pop (stack, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableStack&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Immutable.IImmutableStack&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="814d1-119">O tipo dos itens contidos na pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-119">The type of items contained in the stack.</span>
          </span>
        </typeparam>
        <param name="stack">
          <span data-ttu-id="814d1-120">A pilha a ser modificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-120">The stack to modify.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="814d1-121">O item a ser removido da pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-121">The item to remove from the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814d1-122">Remove o item especificado de uma pilha imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-122">Removes the specified item from an immutable stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814d1-123">Uma pilha; nunca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814d1-123">A stack; never <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>