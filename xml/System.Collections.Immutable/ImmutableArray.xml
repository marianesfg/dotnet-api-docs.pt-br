<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1208bb5d705153aa266e8a932bb8edd94e4b6ac7" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65002560" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f70e-101">Fornece métodos para criar uma matriz que é imutável, o que significa que ela não pode ser alterada depois de criada.</span><span class="sxs-lookup"><span data-stu-id="0f70e-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span></span>  
  
 <span data-ttu-id="0f70e-102">**Pacote NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">sobre coleções imutáveis e como instalá-las</see>)</span><span class="sxs-lookup"><span data-stu-id="0f70e-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="0f70e-103">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="0f70e-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-104">O tipo de elemento armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-104">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="0f70e-105">A matriz classificada para pesquisar.</span><span class="sxs-lookup"><span data-stu-id="0f70e-105">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="0f70e-106">O objeto a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-106">The object to search for.</span></span></param>
        <summary><span data-ttu-id="0f70e-107">Pesquisa um elemento especificado na matriz classificada imutável usando o comparador padrão e retorna o índice baseado em zero do elemento, se ele é encontrado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="0f70e-108">O índice baseado em zero do item na matriz, se o item for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f70e-109"><paramref name="value" /> não implementa <see cref="T:System.IComparable" /> ou a pesquisa encontra um elemento que não implementa <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-109"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-110">O tipo de elemento armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-110">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="0f70e-111">A matriz classificada para pesquisar.</span><span class="sxs-lookup"><span data-stu-id="0f70e-111">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="0f70e-112">O objeto a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-112">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="0f70e-113">A implementação de comparador a ser usada na comparação de elementos ou nulo para usar o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="0f70e-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="0f70e-114">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento, se ele é encontrado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="0f70e-115">O índice baseado em zero do item na matriz, se o item for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f70e-116"><paramref name="comparer" /> é nulo e <paramref name="value" /> não implementa <see cref="T:System.IComparable" /> ou a pesquisa encontra um elemento que não implementa <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-116"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-117">O tipo de elemento armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-117">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="0f70e-118">A matriz classificada para pesquisar.</span><span class="sxs-lookup"><span data-stu-id="0f70e-118">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="0f70e-119">O índice inicial do intervalo a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-119">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-120">O tamanho do intervalo a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-120">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="0f70e-121">O objeto a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-121">The object to search for.</span></span></param>
        <summary><span data-ttu-id="0f70e-122">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento, se ele é encontrado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="0f70e-123">O índice baseado em zero do item na matriz, se o item for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f70e-124"><paramref name="value" /> não implementa <see cref="T:System.IComparable" /> ou a pesquisa encontra um elemento que não implementa <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-124"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f70e-125"><paramref name="index" /> e <paramref name="length" /> não especificam um intervalo válido em <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-125"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0f70e-126"><paramref name="index" /> é menor que o limite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-126"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>
        
<span data-ttu-id="0f70e-127">- ou -</span><span class="sxs-lookup"><span data-stu-id="0f70e-127">-or-</span></span>

<span data-ttu-id="0f70e-128"><paramref name="length" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="0f70e-128"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-129">O tipo de elemento armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-129">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="0f70e-130">A matriz classificada para pesquisar.</span><span class="sxs-lookup"><span data-stu-id="0f70e-130">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="0f70e-131">O índice inicial do intervalo a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-131">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-132">O tamanho do intervalo a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-132">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="0f70e-133">O objeto a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-133">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="0f70e-134">O comparador a ser usado na comparação da igualdade de elementos ou <see langword="null" /> para usar o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="0f70e-134">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="0f70e-135">Pesquisa um elemento especificado em uma matriz classificada imutável e retorna o índice baseado em zero do elemento.</span><span class="sxs-lookup"><span data-stu-id="0f70e-135">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="0f70e-136">O índice baseado em zero do item na matriz, se o item for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-136">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f70e-137"><paramref name="comparer" /> é nulo e <paramref name="value" /> não implementa <see cref="T:System.IComparable" /> ou a pesquisa encontra um elemento que não implementa <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-137"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f70e-138"><paramref name="index" /> e <paramref name="length" /> não especificam um intervalo válido em <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-138"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>
        
<span data-ttu-id="0f70e-139">- ou -</span><span class="sxs-lookup"><span data-stu-id="0f70e-139">-or-</span></span>

<span data-ttu-id="0f70e-140"><paramref name="comparer" /> é <see langword="null" />, e <paramref name="value" /> é de um tipo que não é compatível com os elementos de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-140"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0f70e-141"><paramref name="index" /> é menor que o limite inferior de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-141"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>

<span data-ttu-id="0f70e-142">- ou -</span><span class="sxs-lookup"><span data-stu-id="0f70e-142">-or-</span></span>

<span data-ttu-id="0f70e-143"><paramref name="length" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="0f70e-143"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-144">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-144">The type of elements stored in the array.</span></span></typeparam>
        <summary><span data-ttu-id="0f70e-145">Cria uma matriz imutável vazia.</span><span class="sxs-lookup"><span data-stu-id="0f70e-145">Creates an empty immutable array.</span></span></summary>
        <returns><span data-ttu-id="0f70e-146">Uma matriz imutável vazia.</span><span class="sxs-lookup"><span data-stu-id="0f70e-146">An empty immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-147">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-147">The type of elements stored in the array.</span></span></typeparam>
        <param name="item"><span data-ttu-id="0f70e-148">O objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-148">The object to store in the array.</span></span></param>
        <summary><span data-ttu-id="0f70e-149">Cria uma matriz imutável que contém o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-149">Creates an immutable array that contains the specified object.</span></span></summary>
        <returns><span data-ttu-id="0f70e-150">Uma matriz imutável que contém o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="0f70e-150">An immutable array that contains the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-151">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-151">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="0f70e-152">A matriz de objetos com os quais preencher a matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-152">The array of objects to populate the array with.</span></span></param>
        <summary><span data-ttu-id="0f70e-153">Cria uma matriz imutável com base na matriz de objetos especificada.</span><span class="sxs-lookup"><span data-stu-id="0f70e-153">Creates an immutable array from the specified array of objects.</span></span></summary>
        <returns><span data-ttu-id="0f70e-154">Uma matriz imutável que contém a matriz de itens.</span><span class="sxs-lookup"><span data-stu-id="0f70e-154">An immutable array that contains the array of items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-155">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-155">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="0f70e-156">O primeiro objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-156">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="0f70e-157">O segundo objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-157">The second object to store in the array.</span></span></param>
        <summary><span data-ttu-id="0f70e-158">Cria uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-158">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="0f70e-159">Uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-159">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-160">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-160">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="0f70e-161">A matriz de origem dos objetos.</span><span class="sxs-lookup"><span data-stu-id="0f70e-161">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="0f70e-162">O índice do primeiro elemento a ser copiado de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-162">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-163">O número de elementos de <paramref name="items" /> a ser incluído nessa matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-163">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="0f70e-164">Cria uma matriz imutável com os objetos especificados de outra matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-164">Creates an immutable array with the specified objects from another immutable array.</span></span></summary>
        <returns><span data-ttu-id="0f70e-165">Uma matriz imutável que contém os objetos especificados da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-165">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-166">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-166">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="0f70e-167">O primeiro objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-167">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="0f70e-168">O segundo objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-168">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="0f70e-169">O terceiro objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-169">The third object to store in the array.</span></span></param>
        <summary><span data-ttu-id="0f70e-170">Cria uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-170">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="0f70e-171">Uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-171">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-172">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-172">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="0f70e-173">A matriz de origem dos objetos.</span><span class="sxs-lookup"><span data-stu-id="0f70e-173">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="0f70e-174">O índice do primeiro elemento a ser copiado de <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-174">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-175">O número de elementos de <paramref name="items" /> a ser incluído nessa matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-175">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="0f70e-176">Cria uma matriz imutável com objetos especificados de outra matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-176">Creates an immutable array with specified objects from another array.</span></span></summary>
        <returns><span data-ttu-id="0f70e-177">Uma matriz imutável que contém os objetos especificados da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-177">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-178">O tipo de elementos armazenados na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-178">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="0f70e-179">O primeiro objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-179">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="0f70e-180">O segundo objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-180">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="0f70e-181">O terceiro objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-181">The third object to store in the array.</span></span></param>
        <param name="item4"><span data-ttu-id="0f70e-182">O quarto objeto a ser armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-182">The fourth object to store in the array.</span></span></param>
        <summary><span data-ttu-id="0f70e-183">Cria uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-183">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="0f70e-184">Uma matriz imutável que contém os objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-184">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-185">O tipo de elementos armazenados no construtor.</span><span class="sxs-lookup"><span data-stu-id="0f70e-185">The type of elements stored in the builder.</span></span></typeparam>
        <summary><span data-ttu-id="0f70e-186">Cria uma matriz mutável que pode ser convertida em uma <see cref="T:System.Collections.Immutable.ImmutableArray" /> sem alocação de nova memória.</span><span class="sxs-lookup"><span data-stu-id="0f70e-186">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="0f70e-187">Uma matriz mutável do tipo especificado que pode ser convertida com eficiência em uma matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-187">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-188">O tipo de elementos armazenados no construtor.</span><span class="sxs-lookup"><span data-stu-id="0f70e-188">The type of elements stored in the builder.</span></span></typeparam>
        <param name="initialCapacity"><span data-ttu-id="0f70e-189">A capacidade inicial do construtor.</span><span class="sxs-lookup"><span data-stu-id="0f70e-189">The initial capacity of the builder.</span></span></param>
        <summary><span data-ttu-id="0f70e-190">Cria uma matriz mutável que pode ser convertida em uma <see cref="T:System.Collections.Immutable.ImmutableArray" /> sem alocação de nova memória.</span><span class="sxs-lookup"><span data-stu-id="0f70e-190">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="0f70e-191">Uma matriz mutável do tipo especificado que pode ser convertida com eficiência em uma matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-191">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0f70e-192">O tipo de elemento armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-192">The type of element stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="0f70e-193">Os elementos a serem adicionados à matriz.</span><span class="sxs-lookup"><span data-stu-id="0f70e-193">The elements to add to the array.</span></span></param>
        <summary><span data-ttu-id="0f70e-194">Cria uma nova <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> preenchida com os itens especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-194">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span></span></summary>
        <returns><span data-ttu-id="0f70e-195">Uma matriz imutável que contém os itens especificados.</span><span class="sxs-lookup"><span data-stu-id="0f70e-195">An immutable array that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="0f70e-196">A matriz de origem com a qual inicializar a matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-196">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="0f70e-197">A função a ser aplicada a cada elemento da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-197">The function to apply to each element from the source array.</span></span></param>
        <summary><span data-ttu-id="0f70e-198">Inicializa uma nova instância do struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-198">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f70e-199">Essa sobrecarga permite a criação eficiente de um <xref:System.Collections.Immutable.ImmutableArray%601> com base em um existente <xref:System.Collections.Immutable.ImmutableArray%601>, em que precisa de uma função de mapeamento a ser aplicado a cada elemento da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-199">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="0f70e-200">A matriz de origem com a qual inicializar a matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-200">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="0f70e-201">O índice do primeiro elemento da matriz de origem a ser incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-201">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-202">O número de elementos da matriz de origem a ser incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-202">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="0f70e-203">A função a ser aplicada a cada elemento da matriz de origem incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-203">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <summary><span data-ttu-id="0f70e-204">Inicializa uma nova instância do struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-204">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f70e-205">Essa sobrecarga permite a criação eficiente de um <xref:System.Collections.Immutable.ImmutableArray%601> com base em uma fatia de existente <xref:System.Collections.Immutable.ImmutableArray%601>, em que precisa de uma função de mapeamento a ser aplicado a cada elemento da matriz de origem incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-205">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="0f70e-206">A matriz de origem com a qual inicializar a matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-206">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="0f70e-207">A função a ser aplicada a cada elemento da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-207">The function to apply to each element from the source array.</span></span></param>
        <param name="arg"><span data-ttu-id="0f70e-208">Um argumento a ser passado para a função de mapeamento do seletor.</span><span class="sxs-lookup"><span data-stu-id="0f70e-208">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="0f70e-209">Inicializa uma nova instância do struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-209">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f70e-210">Essa sobrecarga permite a criação eficiente de um <xref:System.Collections.Immutable.ImmutableArray%601> com base em um existente <xref:System.Collections.Immutable.ImmutableArray%601>, em que precisa de uma função de mapeamento a ser aplicado a cada elemento da matriz de origem.</span><span class="sxs-lookup"><span data-stu-id="0f70e-210">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="0f70e-211">A matriz de origem com a qual inicializar a matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-211">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="0f70e-212">O índice do primeiro elemento da matriz de origem a ser incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-212">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="0f70e-213">O número de elementos da matriz de origem a ser incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-213">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="0f70e-214">A função a ser aplicada a cada elemento da matriz de origem incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-214">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <param name="arg"><span data-ttu-id="0f70e-215">Um argumento a ser passado para a função de mapeamento do seletor.</span><span class="sxs-lookup"><span data-stu-id="0f70e-215">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="0f70e-216">Inicializa uma nova instância do struct <see cref="T:System.Collections.Immutable.ImmutableArray`1" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-216">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f70e-217">Essa sobrecarga permite a criação eficiente de um <xref:System.Collections.Immutable.ImmutableArray%601> com base em uma fatia de existente <xref:System.Collections.Immutable.ImmutableArray%601>, em que precisa de uma função de mapeamento a ser aplicado a cada elemento da matriz de origem incluído na matriz resultante.</span><span class="sxs-lookup"><span data-stu-id="0f70e-217">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="0f70e-218">O tipo dos elementos contidos no <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="0f70e-218">The type of elements contained in <paramref name="items" />.</span></span></typeparam>
        <param name="items"><span data-ttu-id="0f70e-219">A coleção de objetos a serem copiados na matriz imutável.</span><span class="sxs-lookup"><span data-stu-id="0f70e-219">The collection of objects to copy to the immutable array.</span></span></param>
        <summary><span data-ttu-id="0f70e-220">Cria uma matriz imutável com base na coleção especificada.</span><span class="sxs-lookup"><span data-stu-id="0f70e-220">Creates an immutable array from the specified collection.</span></span></summary>
        <returns><span data-ttu-id="0f70e-221">Uma matriz imutável que contém a coleção especificada de objetos.</span><span class="sxs-lookup"><span data-stu-id="0f70e-221">An immutable array that contains the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TSource&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Immutable::ImmutableArray&lt;TSource&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : System.Collections.Immutable.ImmutableArray&lt;'Source&gt;.Builder -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;+Builder" RefType="this" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>