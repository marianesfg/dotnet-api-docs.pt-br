<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IImmutableList`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572b2fd1fceb7eff332be2255f1f5473e2c04a5ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72b2fd1fceb7eff332be2255f1f5473e2c04a5ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The type of elements in the list.</source>
          <target state="translated">O tipo dos elementos na lista.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Represents a list of elements that cannot be modified.</source>
          <target state="translated">Representa uma lista de elementos que não pode ser modificada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>Pacote NuGet<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>sobre coleções imutáveis e como instalá-las<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>When you add or remove items from an <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, a copy of the original list is created, with the changes applied..</source>
          <target state="translated">Quando você adicionar ou remover itens de um <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, uma cópia da lista original é criada, com as alterações sejam aplicadas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Incremental changes to a list share as much memory as possible with earlier versions of a list and enable garbage collection to clean up any unique list data that is no longer being referenced.</source>
          <target state="translated">Alterações incrementais para uma lista compartilham o máximo de memória possível com versões anteriores de uma lista e habilitar a coleta de lixo limpar os dados de lista exclusivo que não está sendo referenciados.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>To create a new list, use the Create method.</source>
          <target state="translated">Para criar uma nova lista, use o método Create.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> has no public constructor, as this would create an empty immutable list.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> não tem construtor público, pois isso criaria uma lista vazia de imutável.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You should create a new list using the Create method.</source>
          <target state="translated">Você deve criar uma nova lista usando o método Create.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You can add new items to a copy of the original list using the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> methods.</source>
          <target state="translated">Você pode adicionar novos itens a uma cópia da lista original usando o <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, e <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>The object to add to the list.</source>
          <target state="translated">O objeto a ser adicionado à lista.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>Makes a copy of the list, and adds the specified object to the end of the  copied list.</source>
          <target state="translated">Faz uma cópia da lista e adiciona o objeto especificado ao final da lista copiada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>A new list with the object added, or this list if the object is already in the list.</source>
          <target state="translated">Uma nova lista com o objeto adicionado ou essa lista se o objeto já estiver na lista.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The objects to add to the list.</source>
          <target state="translated">Os objetos a serem adicionados à lista.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Makes a copy of the list and adds the specified objects to the end of the copied list.</source>
          <target state="translated">Faz uma cópia da lista e adiciona os objetos especificados ao final da lista copiada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>A new list with the elements added, or this list if the elements already exist in the list.</source>
          <target state="translated">Uma nova lista com os elementos adicionados ou essa lista se os elementos já existirem na lista.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>Creates  a list with all the items removed, but with the same sorting and ordering semantics as this list.</source>
          <target state="translated">Cria uma lista com todos os itens removidos, mas com a mesma semântica de classificação e ordenação desta lista.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>An empty list that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">Uma lista vazia que tem as mesmas semânticas de classificação e ordenação que essa instância.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser localizado no <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">Esse valor pode ser nulo para tipos de referência.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting indes of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O comparador de igualdade a ser usado para localizar <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência em um intervalo de elementos no <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> que começa no índice especificado e contém o número de elementos especificado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at <ph id="ph3">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph4">&lt;paramref name="count" /&gt;</ph> number of elements if found; otherwise -1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> no intervalo de elementos na <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> que começa em <ph id="ph3">&lt;paramref name="index" /&gt;</ph> e contém o número de elementos <ph id="ph4">&lt;paramref name="count" /&gt;</ph>, se encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which to insert the value.</source>
          <target state="translated">O índice baseado em zero no qual inserir o valor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">O objeto a ser inserido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>Inserts the specified element at the specified index in the immutable list.</source>
          <target state="translated">Insere o elemento especificado no índice especificado na lista imutável.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>A new immutable list that includes the specified element.</source>
          <target state="translated">Uma nova lista imutável que inclui o elemento especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual os novos elementos devem ser inseridos.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to insert.</source>
          <target state="translated">Os elementos a serem inseridos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the specified elements at the specified index in the immutable list.</source>
          <target state="translated">Insere os elementos especificados no índice especificado na lista imutável.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable list that includes the specified elements.</source>
          <target state="translated">Uma nova lista imutável que inclui os elementos especificados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the list.</source>
          <target state="translated">O objeto a ser localizado na lista.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">O índice inicial com base em zero da pesquisa.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (zero) é válido em uma lista vazia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">O número de elementos na seção a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to match <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O comparador de igualdade para corresponder com <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> que contém o número de elementos especificado e termina no índice especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to remove from the list.</source>
          <target state="translated">O objeto a ser removido da lista.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O comparador de igualdade a ser usado para localizar o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the first occurrence of a specified object from this immutable list.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto especificado dessa lista imutável.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the specified object removed.</source>
          <target state="translated">Retorna uma nova lista com o objeto especificado removido.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">O delegado que define as condições dos elementos a serem removidos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">Remove todos os elementos que correspondem às condições definidas pelo predicado especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">Uma nova lista imutável com os elementos removidos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>The index of the element to remove.</source>
          <target state="translated">O índice do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the immutable list.</source>
          <target state="translated">Remove o elemento no índice especificado da lista imutável.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>A new list with the element removed.</source>
          <target state="translated">Uma nova lista com o elemento removido.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The objects to remove from the list.</source>
          <target state="translated">Os objetos a serem removidos da lista.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to determine if <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept> match any objects in the list.</source>
          <target state="translated">O comparador de igualdade a ser usado para determinar se <bpt id="p1">&lt;c&gt;</bpt>itens<ept id="p1">&lt;/c&gt;</ept> corresponde a todos os objetos na lista.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the specified object from the list.</source>
          <target state="translated">Remove o objeto especificado da lista.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new immutable list with the specified objects removed, if <ph id="ph1">&lt;paramref name="items" /&gt;</ph> matched objects in the list.</source>
          <target state="translated">Uma nova lista imutável com os objetos especificados removidos, se <ph id="ph1">&lt;paramref name="items" /&gt;</ph> tiver correspondido a objetos na lista.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">O índice inicial baseado em zero do intervalo de elementos a serem removidos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">O número de elementos a serem removidos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated">Remove um intervalo de elementos do <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">Uma nova lista imutável com os elementos removidos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to be replaced.</source>
          <target state="translated">O elemento a ser substituído.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to replace the  the first occurrence of <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> with</source>
          <target state="translated">O elemento com o qual substituir a primeira ocorrência de <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use for matching <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O comparador de igualdade a ser usado para a correspondência com <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the first matching element in the list replaced with the specified element.</source>
          <target state="translated">Retorna uma nova lista com o elemento de primeira correspondência na lista substituída pelo elemento especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new list that contains <ph id="ph1">&lt;paramref name="newValue" /&gt;</ph>, even if <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph> is the same as <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated">Uma nova lista que contém <ph id="ph1">&lt;paramref name="newValue" /&gt;</ph>, mesmo que <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph> seja o mesmo que <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> does not exist in the list.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> não existe na lista.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The position in the list of the element to replace.</source>
          <target state="translated">A posição na lista do elemento a ser substituído.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The element to replace the old element with.</source>
          <target state="translated">O elemento pelo qual substituir o elemento antigo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>Replaces an element in the list at a given position with the specified element.</source>
          <target state="translated">Substitui um elemento na lista na posição especificada, pelo elemento especificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>A new list that contains the new element, even if the element at the specified location is the same as the new element.</source>
          <target state="translated">Uma nova lista que contém o novo elemento, mesmo que o elemento no local especificado seja o mesmo que o novo elemento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>