<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96b1e-101">Fornece um conjunto de métodos de inicialização para instâncias da classe <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="96b1e-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span></span>  
  
 <span data-ttu-id="96b1e-102">**Pacote NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">sobre coleções imutáveis e como instalá-las</see>)</span><span class="sxs-lookup"><span data-stu-id="96b1e-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="96b1e-103">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="96b1e-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-104">O tipo das chaves no dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-104">The type of the keys in the immutable dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-105">O tipo dos valores no dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-105">The type of the values in the immutable dictionary.</span></span></typeparam>
        <param name="map"><span data-ttu-id="96b1e-106">O dicionário imutável a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-106">The immutable dictionary to search.</span></span></param>
        <param name="key"><span data-ttu-id="96b1e-107">A chave a ser localizada no dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-107">The key to locate in the immutable dictionary.</span></span></param>
        <param name="value"><span data-ttu-id="96b1e-108">O valor a ser localizado na chave especificada, se a chave for encontrada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-108">The value to locate on the specified key, if the key is found.</span></span></param>
        <summary><span data-ttu-id="96b1e-109">Determina se o dicionário imutável especificado contém o par chave/valor especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span></span></summary>
        <returns>
          <span data-ttu-id="96b1e-110"><see langword="true" /> se o mapa contiver o par chave/valor especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96b1e-110"><see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-111">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-111">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-112">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-112">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="96b1e-113">Cria um dicionário imutável vazio.</span><span class="sxs-lookup"><span data-stu-id="96b1e-113">Creates an empty immutable dictionary.</span></span></summary>
        <returns><span data-ttu-id="96b1e-114">Um dicionário imutável vazio.</span><span class="sxs-lookup"><span data-stu-id="96b1e-114">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-115">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-115">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-116">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-116">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-117">A implementação a ser usada para determinar a igualdade de chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-117">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-118">Cria um dicionário imutável vazio que usa o comparador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-118">Creates an empty immutable dictionary that uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="96b1e-119">Um dicionário imutável vazio.</span><span class="sxs-lookup"><span data-stu-id="96b1e-119">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-120">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-120">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-121">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-121">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-122">A implementação a ser usada para determinar a igualdade de chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-122">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="96b1e-123">A implementação a ser usada para determinar igualdade de valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-123">The implementation to use to determine the equality of values in the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-124">Cria um dicionário imutável vazio que usa os comparadores de chave e valor especificados.</span><span class="sxs-lookup"><span data-stu-id="96b1e-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="96b1e-125">Um dicionário imutável vazio.</span><span class="sxs-lookup"><span data-stu-id="96b1e-125">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-126">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-126">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-127">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-127">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="96b1e-128">Cria um novo construtor de dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-128">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="96b1e-129">O novo construtor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-129">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-130">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-130">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-131">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-131">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-132">O comparador de chave.</span><span class="sxs-lookup"><span data-stu-id="96b1e-132">The key comparer.</span></span></param>
        <summary><span data-ttu-id="96b1e-133">Cria um novo construtor de dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-133">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="96b1e-134">O novo construtor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-134">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-135">O tipo de chaves armazenadas pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-135">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-136">O tipo de valores armazenados pelo dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-136">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-137">O comparador de chave.</span><span class="sxs-lookup"><span data-stu-id="96b1e-137">The key comparer.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="96b1e-138">O comparador de valor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-138">The value comparer.</span></span></param>
        <summary><span data-ttu-id="96b1e-139">Cria um novo construtor de dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-139">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="96b1e-140">O novo construtor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-140">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-141">O tipo de chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-141">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-142">O tipo de valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-142">The type of values in the dictionary.</span></span></typeparam>
        <param name="items"><span data-ttu-id="96b1e-143">Os itens usados para preencher o dicionário antes de que ele seja imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-143">The items used to populate the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="96b1e-144">Cria um novo dicionário imutável que contém os itens especificados.</span><span class="sxs-lookup"><span data-stu-id="96b1e-144">Creates a new immutable dictionary that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="96b1e-145">Um novo dicionário imutável que contém os itens especificados.</span><span class="sxs-lookup"><span data-stu-id="96b1e-145">A new immutable dictionary that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-146">O tipo de chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-146">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-147">O tipo de valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-147">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-148">A implementação de comparador a ser usada para comparar as chaves quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="96b1e-148">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="items"><span data-ttu-id="96b1e-149">Os itens a serem adicionados ao dicionário antes que ele seja imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-149">The items to add to the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="96b1e-150">Cria um novo dicionário imutável que contém os itens especificados e usa o comparador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="96b1e-151">Um novo dicionário imutável que contém os itens especificados e usa o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-152">O tipo de chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-152">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-153">O tipo de valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-153">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="96b1e-154">A implementação de comparador a ser usada para comparar as chaves quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="96b1e-154">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="96b1e-155">A implementação de comparador a ser usada para comparar os valores quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="96b1e-155">The comparer implementation to use to compare values for equality.</span></span></param>
        <param name="items"><span data-ttu-id="96b1e-156">Os itens a serem adicionados ao dicionário antes que ele seja imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-156">The items to add to the dictionary before it’s immutable.</span></span></param>
        <summary><span data-ttu-id="96b1e-157">Cria um novo dicionário imutável que contém os itens especificados e usa o comparador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="96b1e-158">Um novo dicionário imutável que contém os itens especificados e usa o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-159">Tipo da chave.</span><span class="sxs-lookup"><span data-stu-id="96b1e-159">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-160">Tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-160">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="96b1e-161">O dicionário do qual recuperar o valor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-161">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="96b1e-162">A chave a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-162">The key to search for.</span></span></param>
        <summary><span data-ttu-id="96b1e-163">Obtém o valor de uma determinada chave, se uma chave correspondente existir no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-163">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="96b1e-164">O valor da chave ou <c>default(TValue)</c> se nenhuma chave correspondente for encontrada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-165">Tipo da chave.</span><span class="sxs-lookup"><span data-stu-id="96b1e-165">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-166">Tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-166">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="96b1e-167">O dicionário do qual recuperar o valor.</span><span class="sxs-lookup"><span data-stu-id="96b1e-167">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="96b1e-168">A chave a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-168">The key to search for.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="96b1e-169">O valor padrão a ser retornado se nenhuma chave correspondente for encontrada no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-169">The default value to return if no matching key is found in the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-170">Obtém o valor de uma determinada chave, se uma chave correspondente existir no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-170">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="96b1e-171">O valor da chave ou <paramref name="defaultValue" /> se nenhuma chave correspondente for encontrada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-172">O tipo das chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-172">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-173">O tipo dos valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-173">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-174">A sequência de pares chave/valor a ser enumerada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-174">The sequence of key/value pairs to enumerate.</span></span></param>
        <summary><span data-ttu-id="96b1e-175">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="96b1e-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="96b1e-176">Um dicionário imutável que contém os pares chave/valor na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-177">O tipo das chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-177">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-178">O tipo dos valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-178">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-179">A sequência de pares chave/valor a ser enumerada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-179">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="96b1e-180">O comparador de chave a ser usado ao criar o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-180">The key comparer to use when building the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-181">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo, usando o comparador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="96b1e-182">Um dicionário imutável que contém os pares chave/valor na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="96b1e-183">O tipo das chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-183">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-184">O tipo dos valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-184">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-185">A sequência de pares chave/valor a ser enumerada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-185">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="96b1e-186">O comparador de chave a ser usado ao criar o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-186">The key comparer to use when building the immutable dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="96b1e-187">O comparador de valor a ser usado para o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-187">The value comparer to use for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-188">Enumera uma sequência de pares chave/valor e produz um dicionário imutável de seu conteúdo, usando os comparadores de chave e valor especificados.</span><span class="sxs-lookup"><span data-stu-id="96b1e-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="96b1e-189">Um dicionário imutável que contém os pares chave/valor na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="96b1e-190">O tipo de elemento na coleção de origem.</span><span class="sxs-lookup"><span data-stu-id="96b1e-190">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="96b1e-191">O tipo de chave no dicionário imutável resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-191">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-192">A coleção de origem usada para gerar o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-192">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="96b1e-193">A função usada para transformar chaves para o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-193">The function used to transform keys for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-194">Constrói um dicionário imutável de uma coleção existente de elementos, aplicando uma função de transformação nas chaves de origem.</span><span class="sxs-lookup"><span data-stu-id="96b1e-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span></span></summary>
        <returns><span data-ttu-id="96b1e-195">O dicionário imutável que contém elementos de <paramref name="source" />, com chaves transformadas pela aplicação de <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="96b1e-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="96b1e-196">O tipo de elemento na coleção de origem.</span><span class="sxs-lookup"><span data-stu-id="96b1e-196">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="96b1e-197">O tipo de chave no dicionário imutável resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-197">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-198">A coleção de origem usada para gerar o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-198">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="96b1e-199">A função usada para transformar chaves para o dicionário imutável.</span><span class="sxs-lookup"><span data-stu-id="96b1e-199">The function used to transform keys for the immutable dictionary.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="96b1e-200">O comparador de chave a ser usado para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-200">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-201">Constrói um dicionário imutável com base em alguma transformação de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-201">Constructs an immutable dictionary based on some transformation of a sequence.</span></span></summary>
        <returns><span data-ttu-id="96b1e-202">O dicionário imutável que contém elementos de <paramref name="source" />, com chaves transformadas pela aplicação de <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="96b1e-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="96b1e-203">O tipo dos elementos na sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-203">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="96b1e-204">O tipo das chaves no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-204">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-205">O tipo dos valores no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-205">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-206">A sequência a ser enumerada para gerar o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-206">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="96b1e-207">A função que produzirá a chave para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-207">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="96b1e-208">A função que produzirá o valor para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-208">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <summary><span data-ttu-id="96b1e-209">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="96b1e-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="96b1e-210">Um dicionário imutável que contém os itens na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-210">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="96b1e-211">O tipo dos elementos na sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-211">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="96b1e-212">O tipo das chaves no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-212">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-213">O tipo dos valores no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-213">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-214">A sequência a ser enumerada para gerar o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-214">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="96b1e-215">A função que produzirá a chave para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-215">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="96b1e-216">A função que produzirá o valor para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-216">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="96b1e-217">O comparador de chave a ser usado para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-217">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-218">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo usando o comparador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="96b1e-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="96b1e-219">Um dicionário imutável que contém os itens na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-219">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="96b1e-220">O tipo dos elementos na sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-220">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="96b1e-221">O tipo das chaves no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-221">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="96b1e-222">O tipo dos valores no dicionário resultante.</span><span class="sxs-lookup"><span data-stu-id="96b1e-222">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="96b1e-223">A sequência a ser enumerada para gerar o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-223">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="96b1e-224">A função que produzirá a chave para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-224">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="96b1e-225">A função que produzirá o valor para o dicionário de cada elemento de sequência.</span><span class="sxs-lookup"><span data-stu-id="96b1e-225">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="96b1e-226">O comparador de chave a ser usado para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-226">The key comparer to use for the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="96b1e-227">O comparador de valor a ser usado para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="96b1e-227">The value comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="96b1e-228">Enumera e transforma uma sequência e produz um dicionário imutável com base em seu conteúdo usando os comparadores de chave e valor especificados.</span><span class="sxs-lookup"><span data-stu-id="96b1e-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="96b1e-229">Um dicionário imutável que contém os itens na sequência especificada.</span><span class="sxs-lookup"><span data-stu-id="96b1e-229">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>