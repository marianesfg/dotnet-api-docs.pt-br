<Type Name="ImmutableQueue&lt;T&gt;" FullName="System.Collections.Immutable.ImmutableQueue&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfb18834c372e3103d1de4f40f9ad09874348fc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36712454" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImmutableQueue&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Immutable.IImmutableQueue&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImmutableQueue`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableQueue`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableQueue(Of T)&#xA;Implements IEnumerable(Of T), IImmutableQueue(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ImmutableQueue sealed : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Immutable::IImmutableQueue&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ImmutableQueue&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IImmutableQueue&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="8ccdd-101">O tipo dos elementos na fila.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ccdd-101">The type of elements in the queue.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8ccdd-102">Represents an immutable queue.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ccdd-102">Represents an immutable queue.</span>
      </span>
      <span data-ttu-id="8ccdd-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ccdd-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="8ccdd-104">Este tipo Ã© thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ccdd-104">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableQueue&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableQueue`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As ImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Collections.Immutable.ImmutableQueue&lt;'T&gt;" Usage="immutableQueue.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-105">Removes all objects from the immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-105">Removes all objects from the immutable queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-106">The empty immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-106">The empty immutable queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableQueue&lt;T&gt; Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableQueue`1&lt;!T&gt; Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As ImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; System.Collections.Immutable.ImmutableQueue&lt;'T&gt;" Usage="immutableQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-107">Removes the element at the beginning of the immutable queue, and returns the new queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-107">Removes the element at the beginning of the immutable queue, and returns the new queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-108">The new immutable queue; never <c>null</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-108">The new immutable queue; never <c>null</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableQueue&lt;T&gt; Dequeue (out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableQueue`1&lt;!T&gt; Dequeue([out] !T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.Dequeue(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue (ByRef value As T) As ImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ Dequeue([Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.Dequeue :  -&gt; System.Collections.Immutable.ImmutableQueue&lt;'T&gt;" Usage="immutableQueue.Dequeue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8ccdd-109">When this method returns, contains the element from the beginning of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-109">When this method returns, contains the element from the beginning of the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ccdd-110">Removes the item at the beginning of the immutable queue, and returns the new queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-110">Removes the item at the beginning of the immutable queue, and returns the new queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-111">The new immutable queue with the beginning element removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-111">The new immutable queue with the beginning element removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableQueue&lt;T&gt; Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Immutable.ImmutableQueue`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableQueue`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As ImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ Empty { System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Collections.Immutable.ImmutableQueue&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableQueue&lt;'T&gt;.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-112">Gets an empty immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-112">Gets an empty immutable queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ccdd-113">Uma fila imutÃ¡vel vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-113">An empty immutable queue.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableQueue&lt;T&gt; Enqueue (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableQueue`1&lt;!T&gt; Enqueue(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enqueue (value As T) As ImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ Enqueue(T value);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : 'T -&gt; System.Collections.Immutable.ImmutableQueue&lt;'T&gt;" Usage="immutableQueue.Enqueue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8ccdd-114">The element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-114">The element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ccdd-115">Adds an element to the end of the immutable queue, and returns the new queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-115">Adds an element to the end of the immutable queue, and returns the new queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-116">The new immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-116">The new immutable queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableQueue&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableQueue`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableQueue(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableQueue&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableQueue&lt;'T&gt;.Enumerator" Usage="immutableQueue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableQueue&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-117">Returns an enumerator that iterates through the immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-117">Returns an enumerator that iterates through the immutable queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-118">An enumerator that can be used to iterate through the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-118">An enumerator that can be used to iterate through the queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableQueue`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.ImmutableQueue&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Immutable.IImmutableQueue`1.IsEmpty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-119">Gets a value that indicates whether this immutable queue is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-119">Gets a value that indicates whether this immutable queue is empty.</span>
          </span>
          <span data-ttu-id="8ccdd-120">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-120">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ccdd-121">
            <see langword="true" /> Se essa fila estÃ¡ vazia. Caso contrÃ¡rio, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-121">
              <see langword="true" /> if this queue is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; 'T&#xA;override this.Peek : unit -&gt; 'T" Usage="immutableQueue.Peek " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableQueue`1.Peek</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-122">Returns the element at the beginning of the immutable queue without removing it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-122">Returns the element at the beginning of the immutable queue without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-123">The element at the beginning of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-123">The element at the beginning of the queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekRef">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.T&amp; PeekRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.T&amp; modreq(System.Runtime.InteropServices.InAttribute) PeekRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.PeekRef" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekRef () As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::T&amp; ^ PeekRef();" />
      <MemberSignature Language="F#" Value="member this.PeekRef : unit -&gt; System.Collections.Immutable.T&amp;" Usage="immutableQueue.PeekRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.T&amp;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-124">Returns an enumerator that iterates through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-124">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-125">An enumerator  that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-125">An enumerator  that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ccdd-126">Este membro Ã© uma implementaÃ§Ã£o do membro de interface explÃ­cita.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-126">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8ccdd-127">Ele sÃ³ pode ser usado quando a instÃ¢ncia de <xref:System.Collections.Immutable.ImmutableQueue%601> Ã© convertida em uma interface de <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-127">It can be used only when the <xref:System.Collections.Immutable.ImmutableQueue%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-128">Returns an enumerator that iterates through a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-128">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-129">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-129">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ccdd-130">Este membro Ã© uma implementaÃ§Ã£o do membro de interface explÃ­cita.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-130">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8ccdd-131">Ele sÃ³ pode ser usado quando a instÃ¢ncia de <xref:System.Collections.Immutable.ImmutableQueue%601> Ã© convertida em uma interface de <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-131">It can be used only when the <xref:System.Collections.Immutable.ImmutableQueue%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableQueue&lt;T&gt; IImmutableQueue&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.System#Collections#Immutable#IImmutableQueue&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Function Clear () As IImmutableQueue(Of T) Implements IImmutableQueue(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Clear() = System::Collections::Immutable::IImmutableQueue&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableQueue`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-132">Removes all elements from the immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-132">Removes all elements from the immutable queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-133">The empty immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-133">The empty immutable queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ccdd-134">Este membro Ã© uma implementaÃ§Ã£o do membro de interface explÃ­cita.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-134">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8ccdd-135">Ele sÃ³ pode ser usado quando a instÃ¢ncia de <xref:System.Collections.Immutable.ImmutableQueue%601> Ã© convertida em uma interface de <xref:System.Collections.Immutable.IImmutableQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-135">It can be used only when the <xref:System.Collections.Immutable.ImmutableQueue%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableQueue%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Dequeue">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableQueue&lt;T&gt; IImmutableQueue&lt;T&gt;.Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.System#Collections#Immutable#IImmutableQueue&lt;T&gt;#Dequeue" />
      <MemberSignature Language="VB.NET" Value="Function Dequeue () As IImmutableQueue(Of T) Implements IImmutableQueue(Of T).Dequeue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Dequeue() = System::Collections::Immutable::IImmutableQueue&lt;T&gt;::Dequeue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableQueue`1.Dequeue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ccdd-136">Removes the element at the beginning of the immutable queue, and returns the new queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-136">Removes the element at the beginning of the immutable queue, and returns the new queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-137">The new immutable queue; never <c>null</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-137">The new immutable queue; never <c>null</c>.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ccdd-138">Este membro Ã© uma implementaÃ§Ã£o do membro de interface explÃ­cita.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-138">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8ccdd-139">Ele sÃ³ pode ser usado quando a instÃ¢ncia de <xref:System.Collections.Immutable.ImmutableQueue%601> Ã© convertida em uma interface de <xref:System.Collections.Immutable.IImmutableQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-139">It can be used only when the <xref:System.Collections.Immutable.ImmutableQueue%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableQueue%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Enqueue">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableQueue&lt;T&gt; IImmutableQueue&lt;T&gt;.Enqueue (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Enqueue(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableQueue`1.System#Collections#Immutable#IImmutableQueue&lt;T&gt;#Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Enqueue (value As T) As IImmutableQueue(Of T) Implements IImmutableQueue(Of T).Enqueue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ System.Collections.Immutable.IImmutableQueue&lt;T&gt;.Enqueue(T value) = System::Collections::Immutable::IImmutableQueue&lt;T&gt;::Enqueue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8ccdd-140">The element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-140">The element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ccdd-141">Adds an element to the end of the immutable queue, and returns the new queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-141">Adds an element to the end of the immutable queue, and returns the new queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ccdd-142">The new immutable queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ccdd-142">The new immutable queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ccdd-143">Este membro Ã© uma implementaÃ§Ã£o do membro de interface explÃ­cita.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-143">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8ccdd-144">Ele sÃ³ pode ser usado quando a instÃ¢ncia de <xref:System.Collections.Immutable.ImmutableQueue%601> Ã© convertida em uma interface de <xref:System.Collections.Immutable.IImmutableQueue%601>.</span><span class="sxs-lookup"><span data-stu-id="8ccdd-144">It can be used only when the <xref:System.Collections.Immutable.ImmutableQueue%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableQueue%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>