<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5888fa17277839d32b39cc4502c5568328b8411f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="25239-101">Fornece um conjunto de métodos de inicialização para instâncias da classe <see cref="T:System.Collections.Immutable.ImmutableList`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25239-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
      <span data-ttu-id="25239-102">**Pacote NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">sobre coleções imutáveis e como instalá-las</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="25239-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="25239-103">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25239-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-104">O tipo de item a ser armazenado em de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-104">The type of items to be stored in the .</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="25239-105">Cria uma lista imutável vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-105">Creates an empty immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-106">Uma lista imutável vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-106">An empty .</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-107">O tipo de itens em de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-107">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="25239-108">O item com o qual preencher previamente a lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-108">The item to prepopulate the list with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-109">Cria uma nova lista imutável que contém o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-109">Creates a new immutable list that contains the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-110">Uma nova lista imutável que contém o item especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-110">A new  that contains the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-111">O tipo de itens em de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-111">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="25239-112">Uma matriz que contém os itens com os quais preencher previamente a lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-112">An array that contains the items to prepopulate the list with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-113">Cria uma nova lista imutável que contém a matriz especificada de itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-113">Creates a new immutable list that contains the specified array of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-114">Uma nova lista imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-114">A new immutable list that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-115">O tipo de itens armazenados na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-115">The type of items stored by the collection.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="25239-116">Cria um novo construtor de lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-116">Creates a new immutable list builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-117">O construtor de coleção imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-117">The immutable collection builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-118">O tipo de itens em de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-118">The type of items in the .</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="25239-119">Os itens a serem adicionados à lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-119">The items to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-120">Cria uma nova lista imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-120">Creates a new immutable list that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-121">Retorna uma lista imutável que contém os itens especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-121">Returns an immutable list that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-122">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-122">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-123">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-123">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-124">O objeto a ser localizado na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-124">The object to locate in the list.</span>
          </span>
          <span data-ttu-id="25239-125">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-125">The value can be null for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-126">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro da lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-127">O índice baseado em zero da primeira ocorrência do item dentro do intervalo de elementos na lista, que se estende do índice até o último elemento, se for encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-128">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-128">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-129">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-129">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-130">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-130">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-131">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-131">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="25239-132">O comparador de igualdade a ser usado na pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-132">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-133">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro da lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-134">O índice baseado em zero da primeira ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do índice até o último elemento, se for encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-135">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-135">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-136">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-136">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-137">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-137">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-138">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-138">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="25239-139">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-139">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="25239-140">0 (zero) é válido em uma lista vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-140">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-141">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado até o último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-142">O índice baseado em zero da primeira ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do índice até o último elemento, se for encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-143">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-143">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-144">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-144">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-145">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-145">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-146">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-146">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="25239-147">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-147">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="25239-148">0 (zero) é válido em uma lista vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-148">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="25239-149">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-149">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-150">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na lista imutável que se estende do índice especificado até o último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-151">O índice baseado em zero da primeira ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do índice até o último elemento, se for encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-152">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-152">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-153">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-153">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-154">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-154">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-155">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-155">The value can be null for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-156">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de toda a lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-157">O índice baseado em zero da última ocorrência do item em toda a lista imutável, se encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-158">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-158">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-159">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-159">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-160">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-160">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-161">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-161">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="25239-162">O comparador de igualdade a ser usado na pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-162">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-163">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de toda a lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-164">O índice baseado em zero da última ocorrência do item em toda a lista imutável, se encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-165">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-165">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-166">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-166">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-167">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-167">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-168">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-168">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="25239-169">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-169">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-170">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-171">O índice baseado em zero da última ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento até o índice, se encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-172">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-172">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-173">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-173">The list to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="25239-174">O objeto a ser localizado na lista imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-174">The object to locate in the Immutable list.</span>
          </span>
          <span data-ttu-id="25239-175">O valor pode ser nulo para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-175">The value can be null for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="25239-176">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-176">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="25239-177">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-177">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-178">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento ao índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-179">O índice baseado em zero da última ocorrência do item dentro do intervalo de elementos na lista imutável que se estende do primeiro elemento até o índice, se encontrado; caso contrário, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-180">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-180">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-181">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-181">The list to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="25239-182">O valor a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-182">The value to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-183">Remove o valor especificado dessa lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-183">Removes the specified value from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-184">Uma nova lista imutável com o elemento removido ou essa lista se o elemento não estiver nela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-184">A new immutable list with the element removed, or this list if the element is not in this list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-185">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-185">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-186">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-186">The list to search.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="25239-187">Os itens a serem removidos se correspondências forem encontradas nessa lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-187">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-188">Remove os valores especificados dessa lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-188">Removes the specified values from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-189">Uma nova lista imutável com os elementos removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-189">A new immutable list with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="25239-190">O tipo de itens na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-190">The type of items in the list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="25239-191">A lista a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-191">The list to search.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="25239-192">O elemento a ser substituído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-192">The element to replace.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="25239-193">O elemento pelo qual substituir o elemento antigo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-193">The element to replace the old element with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-194">Substitui o primeiro elemento igual na lista pelo elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-194">Replaces the first equal element in the list with the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-195">A nova lista – mesmo que o valor que está sendo substituído seja igual ao novo valor daquela posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-195">The new list -- even if the value being replaced is equal to the new value for that position.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="25239-196">Gerado quando o valor antigo não existe na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-196">Thrown when the old value does not exist in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="25239-197">O tipo dos elementos na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-197">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="25239-198">A sequência a ser enumerada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-198">The sequence to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25239-199">Enumera uma sequência e produz uma lista imutável de seu conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-199">Enumerates a sequence and produces an immutable list of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25239-200">Uma lista imutável que contém os itens na sequência especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25239-200">An immutable list that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>