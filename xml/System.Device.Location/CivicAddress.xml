<Type Name="CivicAddress" FullName="System.Device.Location.CivicAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed883b014f8dd05e189dd811706107664d9f1ca8" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35230365" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CivicAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CivicAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Device.Location.CivicAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class CivicAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class CivicAddress" />
  <AssemblyInfo>
    <AssemblyName>System.Device</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5340d-101">Representa um endereço civil.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5340d-101">Represents a civic address.</span>
      </span>
      <span data-ttu-id="5340d-102">Um endereço civil pode incluir campos como endereço, CEP, estado e país ou região.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5340d-102">A civic address can include fields such as street address, postal code, state/province, and country or region.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5340d-103">Um endereço civil para um local pode ser obtido um <xref:System.Device.Location.GeoCoordinate> usando uma classe que implementa <xref:System.Device.Location.ICivicAddressResolver>.</span><span class="sxs-lookup"><span data-stu-id="5340d-103">A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.</span></span>  
  
 <span data-ttu-id="5340d-104">O <xref:System.Device.Location.CivicAddressResolver> classe fornece uma implementação padrão que retorna o endereço civil que corresponde a um <xref:System.Device.Location.GeoCoordinate>, se o local de origem fornece ambos coordenam dados, bem como dados de endereço civil.</span><span class="sxs-lookup"><span data-stu-id="5340d-104">The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.</span></span>  
  
 <span data-ttu-id="5340d-105"><xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> Retorna um <xref:System.Device.Location.CivicAddress> para o local atual.</span><span class="sxs-lookup"><span data-stu-id="5340d-105"><xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location.</span></span>  <span data-ttu-id="5340d-106">Se o local de origem é não é possível resolver a posição da coordenada para um endereço civil, <xref:System.Device.Location.CivicAddress.Unknown> será retornado.</span><span class="sxs-lookup"><span data-stu-id="5340d-106">If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5340d-107">O exemplo a seguir mostra como resolver um <xref:System.Device.Location.CivicAddress> de um <xref:System.Device.Location.GeoCoordinate> local de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="5340d-107">The following example shows how to resolve a <xref:System.Device.Location.CivicAddress> from a <xref:System.Device.Location.GeoCoordinate> location synchronously.</span></span>  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#1)]  
  
 <span data-ttu-id="5340d-108">O exemplo a seguir mostra como resolver um <xref:System.Device.Location.CivicAddress> de um <xref:System.Device.Location.GeoCoordinate> local de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="5340d-108">The following example shows how to resolve a <xref:System.Device.Location.CivicAddress> from a <xref:System.Device.Location.GeoCoordinate> location asynchronously.</span></span>  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/cs/resolvecivicaddressasync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/vb/resolvecivicaddressasync.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-109">Inicializa uma nova instância da classe <see cref="T:System.Device.Location.CivicAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-109">Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CivicAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.CivicAddress.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CivicAddress();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5340d-110">Inicializa uma nova instância da classe <see cref="T:System.Device.Location.CivicAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-110">Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddress" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5340d-111">Todos os campos sejam inicializados para <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="5340d-111">All fields are initialized to <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CivicAddress (string addressLine1, string addressLine2, string building, string city, string countryRegion, string floorLevel, string postalCode, string stateProvince);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string addressLine1, string addressLine2, string building, string city, string countryRegion, string floorLevel, string postalCode, string stateProvince) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (addressLine1 As String, addressLine2 As String, building As String, city As String, countryRegion As String, floorLevel As String, postalCode As String, stateProvince As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CivicAddress(System::String ^ addressLine1, System::String ^ addressLine2, System::String ^ building, System::String ^ city, System::String ^ countryRegion, System::String ^ floorLevel, System::String ^ postalCode, System::String ^ stateProvince);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addressLine1" Type="System.String" />
        <Parameter Name="addressLine2" Type="System.String" />
        <Parameter Name="building" Type="System.String" />
        <Parameter Name="city" Type="System.String" />
        <Parameter Name="countryRegion" Type="System.String" />
        <Parameter Name="floorLevel" Type="System.String" />
        <Parameter Name="postalCode" Type="System.String" />
        <Parameter Name="stateProvince" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressLine1">
          <span data-ttu-id="5340d-112">Uma cadeia de caracteres que contém a primeira linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-112">A string containing the first line of the street address.</span>
          </span>
        </param>
        <param name="addressLine2">
          <span data-ttu-id="5340d-113">Uma cadeia de caracteres que contém a segunda linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-113">A string containing the second line of the street address.</span>
          </span>
        </param>
        <param name="building">
          <span data-ttu-id="5340d-114">Uma cadeia de caracteres que contém o número ou nome do prédio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-114">A string containing the building name or number.</span>
          </span>
        </param>
        <param name="city">
          <span data-ttu-id="5340d-115">Uma cadeia de caracteres que contém a cidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-115">A string containing the city.</span>
          </span>
        </param>
        <param name="countryRegion">
          <span data-ttu-id="5340d-116">Uma cadeia de caracteres que contém o país ou região.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-116">A string containing the country or region.</span>
          </span>
        </param>
        <param name="floorLevel">
          <span data-ttu-id="5340d-117">Uma cadeia de caracteres que contém o número do andar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-117">A string containing the floor number.</span>
          </span>
        </param>
        <param name="postalCode">
          <span data-ttu-id="5340d-118">Uma cadeia de caracteres que contém o código postal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-118">A string containing the postal code.</span>
          </span>
        </param>
        <param name="stateProvince">
          <span data-ttu-id="5340d-119">Uma cadeia de caracteres que contém o estado ou província.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-119">A string containing the state or province.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5340d-120">Inicializa uma nova instância da classe <see cref="T:System.Device.Location.CivicAddress" /> usando informações de endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-120">Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddress" /> class using address information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5340d-121">Pelo menos um parâmetro deve ser uma cadeia de caracteres não vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-121">At least one parameter must be a non-empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddressLine1">
      <MemberSignature Language="C#" Value="public string AddressLine1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLine1" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.AddressLine1" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressLine1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLine1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-122">Obtém ou define a primeira linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-122">Gets or sets the first line of the address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-123">Retorna a primeira linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-123">Returns the first line of the address.</span>
          </span>
          <span data-ttu-id="5340d-124">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-124">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLine2">
      <MemberSignature Language="C#" Value="public string AddressLine2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLine2" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.AddressLine2" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressLine2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLine2 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-125">Obtém ou define a segunda linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-125">Gets or sets the second line of the address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-126">Retorna a segunda linha do endereço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-126">Returns the second line of the address.</span>
          </span>
          <span data-ttu-id="5340d-127">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-127">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Building">
      <MemberSignature Language="C#" Value="public string Building { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Building" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.Building" />
      <MemberSignature Language="VB.NET" Value="Public Property Building As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Building { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-128">Obtém ou define o número ou nome do prédio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-128">Gets or sets the building name or number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-129">Retorna o nome de construção ou número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-129">Returns the building name or number.</span>
          </span>
          <span data-ttu-id="5340d-130">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-130">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="City">
      <MemberSignature Language="C#" Value="public string City { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string City" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.City" />
      <MemberSignature Language="VB.NET" Value="Public Property City As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ City { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-131">Obtém ou define o nome da cidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-131">Gets or sets the name of the city.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-132">Retorna o nome da cidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-132">Returns the name of the city.</span>
          </span>
          <span data-ttu-id="5340d-133">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-133">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountryRegion">
      <MemberSignature Language="C#" Value="public string CountryRegion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CountryRegion" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.CountryRegion" />
      <MemberSignature Language="VB.NET" Value="Public Property CountryRegion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CountryRegion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-134">Obtém ou define o país ou região do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-134">Gets or sets the country or region of the location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-135">Retorna o código de país ou região.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-135">Returns the country or region code.</span>
          </span>
          <span data-ttu-id="5340d-136">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-136">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5340d-137">O país ou região normalmente é representada por um código de país de ISO 3166 de duas letras.</span><span class="sxs-lookup"><span data-stu-id="5340d-137">The country or region is typically represented by a two-letter ISO-3166 country code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FloorLevel">
      <MemberSignature Language="C#" Value="public string FloorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FloorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.FloorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FloorLevel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FloorLevel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-138">Obtém ou define o andar do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-138">Gets or sets the floor level of the location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-139">Retorna uma cadeia de caracteres que contém o nível do chão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-139">Returns a string that contains the floor level.</span>
          </span>
          <span data-ttu-id="5340d-140">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-140">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-141">Obtém um valor que indica se o <see cref="T:System.Device.Location.CivicAddress" /> contém dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-141">Gets a value that indicates whether the <see cref="T:System.Device.Location.CivicAddress" /> contains data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-142">
            <see langword="true" /> se o <see cref="T:System.Device.Location.CivicAddress" /> for igual a <see cref="F:System.Device.Location.CivicAddress.Unknown" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-142">
              <see langword="true" /> if the <see cref="T:System.Device.Location.CivicAddress" /> is equal to <see cref="F:System.Device.Location.CivicAddress.Unknown" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5340d-143">O exemplo a seguir usa <xref:System.Device.Location.CivicAddress.IsUnknown%2A> para verificar a <xref:System.Device.Location.CivicAddress> que é retornado de <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> antes do endereço civil é impresso.</span><span class="sxs-lookup"><span data-stu-id="5340d-143">The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.</span></span>  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#2)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostalCode">
      <MemberSignature Language="C#" Value="public string PostalCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostalCode" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.PostalCode" />
      <MemberSignature Language="VB.NET" Value="Public Property PostalCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PostalCode { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-144">Obtém ou define o CEP do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-144">Gets or sets the postal code of the location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-145">Retorna o código postal do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-145">Returns the postal code of the location.</span>
          </span>
          <span data-ttu-id="5340d-146">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-146">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateProvince">
      <MemberSignature Language="C#" Value="public string StateProvince { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateProvince" />
      <MemberSignature Language="DocId" Value="P:System.Device.Location.CivicAddress.StateProvince" />
      <MemberSignature Language="VB.NET" Value="Public Property StateProvince As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateProvince { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-147">Obtém ou define o estado ou província do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-147">Gets or sets the state or province of the location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5340d-148">Retorna o estado ou província do local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-148">Returns the state or province of the location.</span>
          </span>
          <span data-ttu-id="5340d-149">Se os dados não forem fornecidos, retornará <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-149">If the data is not provided, returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="public static readonly System.Device.Location.CivicAddress Unknown;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Device.Location.CivicAddress Unknown" />
      <MemberSignature Language="DocId" Value="F:System.Device.Location.CivicAddress.Unknown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Unknown As CivicAddress " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Device::Location::CivicAddress ^ Unknown;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Location.CivicAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5340d-150">Representa um <see cref="T:System.Device.Location.CivicAddress" /> que não contém nenhum dado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5340d-150">Represents a <see cref="T:System.Device.Location.CivicAddress" /> that contains no data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5340d-151">Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> para verificar se um <xref:System.Device.Location.CivicAddress> contém dados.</span><span class="sxs-lookup"><span data-stu-id="5340d-151">Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5340d-152">O exemplo a seguir usa <xref:System.Device.Location.CivicAddress.IsUnknown%2A> para verificar a <xref:System.Device.Location.CivicAddress> que é retornado de <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> antes do endereço civil é impresso.</span><span class="sxs-lookup"><span data-stu-id="5340d-152">The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.</span></span>  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#2)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>