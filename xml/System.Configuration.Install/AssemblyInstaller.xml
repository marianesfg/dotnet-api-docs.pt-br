<Type Name="AssemblyInstaller" FullName="System.Configuration.Install.AssemblyInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c75cfab28d9d0333059d4009efabcd0fc9939cb2" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58699980" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyInstaller extends System.Configuration.Install.Installer" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.AssemblyInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInstaller&#xA;Inherits Installer" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInstaller : System::Configuration::Install::Installer" />
  <TypeSignature Language="F#" Value="type AssemblyInstaller = class&#xA;    inherit Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Carrega um assembly e executa todos os instaladores nele.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Configuration.Install.AssemblyInstaller> é criado, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. As propriedades desse objeto são definidas e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos são chamados para instalar o `MyAssembly.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller/CPP/assemblyinstaller.cpp#1)]
 [!code-csharp[AssemblyInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller/CS/assemblyinstaller.cs#1)]
 [!code-vb[AssemblyInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller/VB/assemblyinstaller.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.AssemblyInstaller" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.AssemblyInstaller" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra a <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos do <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Uma <xref:System.Configuration.Install.AssemblyInstaller> é criado, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. As propriedades desse objeto são definidas e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos são chamados para instalar o `MyAssembly_Install.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (System.Reflection.Assembly assembly, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::Reflection::Assembly ^ assembly, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : System.Reflection.Assembly * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (assembly, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assembly">O <see cref="T:System.Reflection.Assembly" /> a instalar.</param>
        <param name="commandLine">A linha de comando a ser usada ao criar um novo objeto <see cref="T:System.Configuration.Install.InstallContext" /> para a instalação do assembly. Pode ser um valor nulo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.AssemblyInstaller" /> e especifica tanto o assembly a ser instalado quanto a linha de comando a ser usada ao criar um novo objeto <see cref="T:System.Configuration.Install.InstallContext" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string filename, string[] commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string[] commandLine) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, commandLine As String())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ filename, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string fileName, string[] commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string[] commandLine) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, commandLine As String())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ fileName, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (fileName, commandLine)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (fileName, commandLine)" FrameworkAlternate="netframework-2.0;netframework-1.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="commandLine" Type="System.String[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="filename">O nome de arquivo do assembly a ser instalado.</param>
        <param name="fileName">O nome de arquivo do assembly a ser instalado.</param>
        <param name="commandLine">A linha de comando a ser usada ao criar um novo objeto <see cref="T:System.Configuration.Install.InstallContext" /> para a instalação do assembly. Pode ser um valor nulo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.AssemblyInstaller" /> e especifica tanto o nome do arquivo do assembly a ser instalado quanto a linha de comando a ser usada ao criar um novo objeto <see cref="T:System.Configuration.Install.InstallContext" /> para a instalação do assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Configuration.Install.AssemblyInstaller> é criado, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor com o assembly a ser instalado e a matriz de argumentos de linha de comando como parâmetros.  
  
 [!code-cpp[AssemblyInstaller_Uninstall#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#1)]
 [!code-csharp[AssemblyInstaller_Uninstall#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#1)]
 [!code-vb[AssemblyInstaller_Uninstall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o assembly a ser instalado.</summary>
        <value>Um <see cref="T:System.Reflection.Assembly" /> que define o assembly a ser instalado.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">O valor da propriedade é <see langword="null" />.</exception>
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="CheckIfInstallable">
      <MemberSignature Language="C#" Value="public static void CheckIfInstallable (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIfInstallable(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckIfInstallable (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckIfInstallable(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member CheckIfInstallable : string -&gt; unit" Usage="System.Configuration.Install.AssemblyInstaller.CheckIfInstallable assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">O assembly no qual pesquisar instaladores.</param>
        <summary>Verifica para ver se o assembly especificado pode ser instalado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A> método determina se o assembly especificado pode ser instalado. Para evitar uma exceção é lançada, o arquivo deve atender aos seguintes critérios:  
  
-   O arquivo existe.  
  
-   O arquivo é um assembly do .NET Framework.  
  
-   Os tipos públicos podem ser lidos do arquivo.  
  
-   Há pelo menos uma classe pública, não abstrata que estende o <xref:System.Configuration.Install.Installer> e contém o <xref:System.ComponentModel.RunInstallerAttribute.Yes> atributo.  
  
-   Uma instância de cada instalador pode ser criada.  
  
> [!NOTE]
>  Se o assembly é válido, mas não contém nenhuma instaladores, uma exceção é lançada. Esse comportamento difere do que no momento da instalação, quando não é um erro ao instalar um assembly vazio.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A> método é aplicado a um assembly existente e não existente e os resultados da chamada são exibidos no console.  
  
 [!code-cpp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CPP/assemblyinstaller_checkifinstallable.cpp#1)]
 [!code-csharp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CS/assemblyinstaller_checkifinstallable.cs#1)]
 [!code-vb[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/VB/assemblyinstaller_checkifinstallable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">O assembly especificado não pode ser instalado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public string[] CommandLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandLine As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommandLine { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string[] with get, set" Usage="System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a linha de comando a ser usada ao criar um novo objeto <see cref="T:System.Configuration.Install.InstallContext" /> para a instalação do assembly.</summary>
        <value>Uma matriz do tipo <see cref="T:System.String" /> que representa a linha de comando para usar ao criar um novo <see cref="T:System.Configuration.Install.InstallContext" /> objeto para a instalação do assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, o <xref:System.Configuration.Install.AssemblyInstaller.CommandLine%2A> propriedade de um <xref:System.Configuration.Install.AssemblyInstaller> é definido como o nome do arquivo de log.  
  
 [!code-cpp[AssemblyInstaller_Rollback#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#3)]
 [!code-csharp[AssemblyInstaller_Rollback#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#3)]
 [!code-vb[AssemblyInstaller_Rollback#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Collections.IDictionary" /> que contém o estado do computador após todos os instaladores na coleção terem sido executados.</param>
        <summary>Conclui a transação de instalação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é chamado somente se o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> métodos de todos os instaladores nesta instância <xref:System.Configuration.Install.InstallerCollection> tenha êxito. Esse método, em seguida, chama o <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> método de cada instalador na coleção.  
  
 Store todas as informações que você talvez precise fazer um correta operação em que o estado salvo de desinstalação <xref:System.Collections.IDictionary>, que é passado para o <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir demonstra a <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos do <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Uma <xref:System.Configuration.Install.AssemblyInstaller> classe é criada, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. As propriedades desse objeto são definidas e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos são chamados para instalar o `MyAssembly_Install.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="savedState" /> é <see langword="null" />.  
  
- ou - 
O <see cref="T:System.Collections.IDictionary" /> de estado salvo pode estar corrompido.  
  
- ou - 
Não foi possível encontrar um arquivo.</exception>
        <exception cref="T:System.Exception">Ocorreu um erro no manipulador de eventos <see cref="E:System.Configuration.Install.Installer.Committing" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu um erro no manipulador de eventos <see cref="E:System.Configuration.Install.Installer.Committed" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu uma exceção durante a fase <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> da instalação. A exceção é ignorada e a instalação continua. No entanto, o aplicativo pode não funcionar corretamente após a instalação ser concluída.  
  
- ou - 
Os tipos de instalador não foram encontrados em um dos assemblies.  
  
- ou - 
Não foi possível criar uma instância de um dos tipos de instalador.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Ocorreu uma exceção durante a fase <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> da instalação. A exceção é ignorada e a instalação continua. No entanto, o aplicativo pode não funcionar corretamente após a instalação ser concluída.</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o texto de ajuda para todos os instaladores na coleção de instalador.</summary>
        <value>O texto de ajuda para todos os instaladores na coleção de instalador, incluindo a descrição do que faz cada instalador e as opções de linha de comando (para o programa de instalação) que podem ser passadas para e entendidas por cada instalador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um exemplo de um programa de instalação é o utilitário InstallUtil.exe.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Configuration.Install.AssemblyInstaller.HelpText%2A> propriedade de um <xref:System.Configuration.Install.AssemblyInstaller> é exibido no console.  
  
 [!code-cpp[AssemblyInstaller_HelpText#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#2)]
 [!code-csharp[AssemblyInstaller_HelpText#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#2)]
 [!code-vb[AssemblyInstaller_HelpText#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Install savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Collections.IDictionary" /> usado para salvar as informações necessárias para realizar uma confirmação, reversão ou operação de desinstalação.</param>
        <summary>Realiza a instalação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método chama o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> método de cada instalador contido no <xref:System.Configuration.Install.Installer.Installers%2A> propriedade dessa instância. O <xref:System.Collections.IDictionary> objeto especificado pelo `savedState` parâmetro é atualizado para refletir o status da instalação depois que executaram os instaladores contidos. Se todos os as <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> métodos falharem, o <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> método é chamado. Caso contrário, o <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> método é chamado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra a <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos do <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Um objeto do <xref:System.Configuration.Install.AssemblyInstaller> classe é criada, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. As propriedades desse objeto são definidas e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> e <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> métodos são chamados para instalar o assembly 'MyAssembly_Install.exe'.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="savedState" /> é <see langword="null" />.  
  
- ou - 
Não foi possível encontrar um arquivo.</exception>
        <exception cref="T:System.Exception">Ocorreu uma exceção no manipulador de evento <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu uma exceção no manipulador de evento <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> de um dos instaladores na coleção.  
  
- ou - 
Os tipos de instalador não foram encontrados em um dos assemblies.  
  
- ou - 
Não foi possível criar uma instância de um dos tipos de instalador.</exception>
        <block subset="none" type="usage"><para>O <see cref="T:System.Collections.IDictionary" /> especificado pelo <paramref name="savedState" /> parâmetro deve estar vazio quando passados para o <see cref="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" /> método.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caminho do assembly a ser instalado.</summary>
        <value>O caminho do assembly a ser instalado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, uma <xref:System.Configuration.Install.AssemblyInstaller> é criado, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. O <xref:System.Configuration.Install.AssemblyInstaller.Path%2A> propriedades desse objeto são definidas.  
  
 [!code-cpp[AssemblyInstaller_Rollback#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#2)]
 [!code-csharp[AssemblyInstaller_Rollback#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#2)]
 [!code-vb[AssemblyInstaller_Rollback#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Collections.IDictionary" /> que contém o estado de pré-instalação do computador.</param>
        <summary>Restaura o computador para o estado em que estava antes da instalação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma reversão restaura o computador para o estado em que estava antes da ocorrência da instalação. O <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> método é chamado se o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> método isso <xref:System.Configuration.Install.Installer> instância ou de qualquer instalador no instalador coleção não seja executada corretamente. Quaisquer exceções geradas por chamar o <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> método de um instalador na coleção são ignorados e a reversão dos outros instaladores continua.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> método é chamado para desfazer o processo de instalação no assembly especificado.  
  
 [!code-cpp[AssemblyInstaller_Rollback#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#1)]
 [!code-csharp[AssemblyInstaller_Rollback#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#1)]
 [!code-vb[AssemblyInstaller_Rollback#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="savedState" /> é <see langword="null" />.  
  
- ou - 
O <see cref="T:System.Collections.IDictionary" /> de estado salvo pode estar corrompido.  
  
- ou - 
Não foi possível encontrar um arquivo.</exception>
        <exception cref="T:System.Exception">Ocorreu uma exceção no manipulador de evento <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu uma exceção no manipulador de evento <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu uma exceção durante a fase <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> da instalação. A exceção é ignorada e a reversão continua. No entanto, o computador pode não ser totalmente revertido para seu estado inicial após a conclusão da reversão.  
  
- ou - 
Os tipos de instalador não foram encontrados em um dos assemblies.  
  
- ou - 
Não foi possível criar uma instância de um dos tipos de instalador.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Ocorreu uma exceção durante a fase <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> da instalação. A exceção é ignorada e a reversão continua. No entanto, o computador pode não ser totalmente revertido para seu estado inicial após a conclusão da reversão.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Um <see cref="T:System.Collections.IDictionary" /> que contém o estado do computador após a instalação.</param>
        <summary>Remove uma instalação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chame esse método para remover uma instalação concluída anteriormente. Se o <xref:System.Configuration.Install.Installer.Uninstall%2A> método falha para um dos instaladores na coleção, ele ainda será chamado para instaladores restantes. Uma falha na desinstalação não reverter o computador ao seu estado de pré-desinstalação.  
  
> [!NOTE]
>  Embora o <xref:System.Configuration.Install.Installer.Install%2A> e <xref:System.Configuration.Install.Installer.Commit%2A> métodos salvar o estado do computador após as instalações, o arquivo que contém o <xref:System.Collections.IDictionary> da `savedState` parâmetro pode ter sido excluído em algum momento depois que a instalação foi concluída. Se o arquivo for excluído, o `savedState` parâmetro é `null`.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> método é chamado após a instalação e confirmar o assembly passado como o parâmetro para o construtor.  
  
 [!code-cpp[AssemblyInstaller_Uninstall#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#2)]
 [!code-csharp[AssemblyInstaller_Uninstall#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#2)]
 [!code-vb[AssemblyInstaller_Uninstall#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <see cref="T:System.Collections.IDictionary" /> de estado salvo pode estar corrompido.  
  
- ou - 
Não foi possível encontrar um arquivo.</exception>
        <exception cref="T:System.Exception">Ocorreu um erro no manipulador de eventos <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu um erro no manipulador de eventos <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> de um dos instaladores na coleção.  
  
- ou - 
Ocorreu uma exceção durante a desinstalação. A exceção é ignorada e a desinstalação continua. No entanto, o aplicativo pode não ser totalmente desinstalado após a conclusão da desinstalação.  
  
- ou - 
Os tipos de instalador não foram encontrados em um dos assemblies.  
  
- ou - 
Não foi possível criar uma instância de um dos tipos de instalador.  
  
- ou - 
Não foi possível excluir um arquivo.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Ocorreu uma exceção durante a desinstalação. A exceção é ignorada e a desinstalação continua. No entanto, o aplicativo pode não ser totalmente desinstalado após a conclusão da desinstalação.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseNewContext">
      <MemberSignature Language="C#" Value="public bool UseNewContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNewContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNewContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNewContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNewContext : bool with get, set" Usage="System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se deve ser criado um novo objeto <see cref="T:System.Configuration.Install.InstallContext" /> para a instalação do assembly.</summary>
        <value><see langword="true" /> Se um novo <see cref="T:System.Configuration.Install.InstallContext" /> objeto deve ser criado para a instalação do assembly; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir essa propriedade como `true` cria um novo arquivo chamado "{nome do Assembly}. InstallLog"para registrar mensagens para esse assembly. Definindo <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A> para `false` impede que o novo arquivo que está sendo criado.  
  
   
  
## Examples  
 No exemplo a seguir, uma <xref:System.Configuration.Install.AssemblyInstaller> é criado, invocando o <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> construtor. O <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A> propriedade desse objeto é definida como `true` e o <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> método é invocado no `MyAssembly_HelpText.exe` assembly. Devido a isso, as mensagens de log são exibidas no console.  
  
 [!code-cpp[AssemblyInstaller_HelpText#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#1)]
 [!code-csharp[AssemblyInstaller_HelpText#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#1)]
 [!code-vb[AssemblyInstaller_HelpText#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>