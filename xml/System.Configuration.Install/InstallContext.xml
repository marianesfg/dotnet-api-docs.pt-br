<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="490aa1005f294d7655c6ef034b3a59f0c10bc3a4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37689884" /></Metadata><TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e6bee-101">Contém informações sobre a instalação atual.</span><span class="sxs-lookup"><span data-stu-id="e6bee-101">Contains information about the current installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-102">Normalmente, um <xref:System.Configuration.Install.InstallContext> é criado por uma instalação executável, como InstallUtil.exe, que instala os assemblies.</span><span class="sxs-lookup"><span data-stu-id="e6bee-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="e6bee-103">O programa de instalação invoca o <xref:System.Configuration.Install.InstallContext> construtor, passando o caminho do arquivo de log padrão e os parâmetros de linha de comando.</span><span class="sxs-lookup"><span data-stu-id="e6bee-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="e6bee-104">Antes de chamar seus <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, ou <xref:System.Configuration.Install.Installer.Uninstall%2A> métodos, o programa de instalação define as <xref:System.Configuration.Install.Installer.Context%2A> propriedade de um <xref:System.Configuration.Install.Installer> à instância do <xref:System.Configuration.Install.InstallContext>.</span><span class="sxs-lookup"><span data-stu-id="e6bee-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="e6bee-105">Antes de chamar esses métodos, um <xref:System.Configuration.Install.Installer> que contém uma coleção de instalador na <xref:System.Configuration.Install.Installer.Installers%2A> conjuntos de propriedades de <xref:System.Configuration.Install.Installer.Context%2A> propriedade de cada instalador independente.</span><span class="sxs-lookup"><span data-stu-id="e6bee-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="e6bee-106">O <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade contém uma versão analisada da linha de comando que é inserida para executar o executável de instalação.</span><span class="sxs-lookup"><span data-stu-id="e6bee-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="e6bee-107">A propriedade contém informações como o caminho para um arquivo de log, se deseja exibir informações de log no console e se deseja mostrar uma interface do usuário durante a instalação.</span><span class="sxs-lookup"><span data-stu-id="e6bee-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="e6bee-108">Chame o <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> método para descobrir se um parâmetro de linha de comando é `true`.</span><span class="sxs-lookup"><span data-stu-id="e6bee-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="e6bee-109">Use o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> método para gravar mensagens de status para o arquivo de log de instalação e o console.</span><span class="sxs-lookup"><span data-stu-id="e6bee-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6bee-110">O exemplo a seguir demonstra a <xref:System.Configuration.Install.InstallContext.%23ctor%2A> construtores, o <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade e o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> e <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> métodos do <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="e6bee-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="e6bee-111">Quando o <xref:System.Configuration.Install.Installer.Install%2A> método do instalador é chamado, ele verifica se há parâmetros da linha de comando.</span><span class="sxs-lookup"><span data-stu-id="e6bee-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="e6bee-112">Dependendo do que, ele exibe as mensagens de progresso ao console e também salva-o para o arquivo de log especificado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="e6bee-113">Quando o programa é invocado sem argumentos, vazia <xref:System.Configuration.Install.InstallContext> é criado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="e6bee-114">Quando "/ arquivo de log" e "/ LogtoConsole" forem especificados, o <xref:System.Configuration.Install.InstallContext> é criado, passando os respectivos argumentos a serem <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6bee-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6bee-115">Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.InstallContext" />.</span><span class="sxs-lookup"><span data-stu-id="e6bee-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6bee-116">Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.InstallContext" />.</span><span class="sxs-lookup"><span data-stu-id="e6bee-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-117">Essa sobrecarga não cria um arquivo de log para a instalação.</span><span class="sxs-lookup"><span data-stu-id="e6bee-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="e6bee-118">Este exemplo mostra como usar uma das versões sobrecarregadas do <xref:System.Configuration.Install.InstallContext> construtor.</span><span class="sxs-lookup"><span data-stu-id="e6bee-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="e6bee-119">Para obter outros exemplos que possam estar disponíveis, consulte os tópicos de sobrecarga individuais.</span><span class="sxs-lookup"><span data-stu-id="e6bee-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="e6bee-120">Quando o programa é invocado sem argumentos, vazia <xref:System.Configuration.Install.InstallContext> é criado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath"><span data-ttu-id="e6bee-121">O caminho para o arquivo de log para esta instalação ou <see langword="null" />, caso nenhum arquivo de log deva ser criado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span></span></param>
        <param name="commandLine"><span data-ttu-id="e6bee-122">Os parâmetros de linha de comando inseridos ao executar o programa de instalação ou <see langword="null" />, se nenhum tiver sido inserido.</span><span class="sxs-lookup"><span data-stu-id="e6bee-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span></span></param>
        <summary><span data-ttu-id="e6bee-123">Inicializa uma nova instância da classe <see cref="T:System.Configuration.Install.InstallContext" /> e cria um arquivo de log para a instalação.</span><span class="sxs-lookup"><span data-stu-id="e6bee-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-124">Se a instalação usa [Installutil.exe (ferramenta de instalação)](~/docs/framework/tools/installutil-exe-installer-tool.md), esse construtor cria um arquivo de log no caminho especificado e analisa a matriz de parâmetros de linha de comando para o <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e6bee-124">If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="e6bee-125">Se um caminho de arquivo de log é especificado nos parâmetros de linha de comando, ele é usado para criar o arquivo.</span><span class="sxs-lookup"><span data-stu-id="e6bee-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="e6bee-126">Se o argumento de arquivo de log não for especificado na linha de comando, o valor da `logFilePath` parâmetro é usado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="e6bee-127">Para suprimir a criação de um arquivo de log, passar o "/ logfile =" parâmetro de linha de comando.</span><span class="sxs-lookup"><span data-stu-id="e6bee-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6bee-128">Este exemplo é um trecho do exemplo na visão geral de classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="e6bee-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="e6bee-129">Quando "/ arquivo de log" e "/ LogtoConsole" forem especificados, o <xref:System.Configuration.Install.InstallContext> é criado, passando os respectivos argumentos a serem <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6bee-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><span data-ttu-id="e6bee-130"><para>Passe o caminho de arquivo de log padrão no <paramref name="logFilePath" /> parâmetro ao chamar esse construtor. Isso é onde o arquivo de log é criado, a menos que o parâmetro de linha de comando /logfile é usado quando o executável de instalação é executada.</para></span><span class="sxs-lookup"><span data-stu-id="e6bee-130"><para>Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor. This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</para></span></span></block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="e6bee-131">O nome do parâmetro de linha de comando a verificar.</span><span class="sxs-lookup"><span data-stu-id="e6bee-131">The name of the command-line parameter to check.</span></span></param>
        <summary><span data-ttu-id="e6bee-132">Determina se o parâmetro de linha de comando especificado é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6bee-132">Determines whether the specified command-line parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="e6bee-133"><see langword="true" /> se o parâmetro especificado for definido como "sim", "true", "1" ou uma cadeia de caracteres vazia (""); caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6bee-133"><see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-134">Esse método acessa o <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade, que contém uma versão analisada dos parâmetros de linha de comando, para determinar se o parâmetro especificado é `true`.</span><span class="sxs-lookup"><span data-stu-id="e6bee-134">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6bee-135">Este exemplo é um trecho do exemplo na classe visão geral de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="e6bee-135">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="e6bee-136">Ele usa o <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> método para descobrir se o `LogtoConsole` parâmetro foi definido.</span><span class="sxs-lookup"><span data-stu-id="e6bee-136">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="e6bee-137">Se `yes`, em seguida, usará o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> método para gravar mensagens de status para o arquivo de log de instalação e o console.</span><span class="sxs-lookup"><span data-stu-id="e6bee-137">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e6bee-138">A mensagem a ser gravada.</span><span class="sxs-lookup"><span data-stu-id="e6bee-138">The message to write.</span></span></param>
        <summary><span data-ttu-id="e6bee-139">Grava uma mensagem para o console e para o arquivo de log para a instalação.</span><span class="sxs-lookup"><span data-stu-id="e6bee-139">Writes a message to the console and to the log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-140">Um instalador pode chamar esse método para gravar o progresso ou outras informações de status para o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="e6bee-140">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="e6bee-141">Se os parâmetros de linha de comando especificam que uma interface do usuário deve ser exibida, o instalador deve mostrar caixas de mensagem ou fazer consultas além de chamar o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e6bee-141">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="e6bee-142">Texto escrito para o arquivo de log não será visto pelo usuário, a menos que InstallUtil.exe é usado para executar a instalação e "/ LogToConsole = true" é especificado na linha de comando.</span><span class="sxs-lookup"><span data-stu-id="e6bee-142">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6bee-143">Este exemplo é um trecho do exemplo na visão geral de classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="e6bee-143">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="e6bee-144">Ele usa o <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> método para descobrir se o `LogtoConsole` parâmetro foi definido.</span><span class="sxs-lookup"><span data-stu-id="e6bee-144">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="e6bee-145">Se `yes`, em seguida, usará o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> método para gravar mensagens de status para o arquivo de log de instalação e o console.</span><span class="sxs-lookup"><span data-stu-id="e6bee-145">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6bee-146">Obtém os parâmetros de linha de comando que foram inseridos quando o InstallUtil.exe foi executado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-146">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span></span></summary>
        <value><span data-ttu-id="e6bee-147">Um <see cref="T:System.Collections.Specialized.StringDictionary" /> que representa os parâmetros de linha de comando que foram inseridos quando o executável de instalação foi executado.</span><span class="sxs-lookup"><span data-stu-id="e6bee-147">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6bee-148">Quando um novo <xref:System.Configuration.Install.InstallContext> é criado, a linha de comando parâmetros são analisados no <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e6bee-148">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="e6bee-149">As chaves e os valores dos parâmetros são cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e6bee-149">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6bee-150">Este exemplo é um trecho do exemplo na visão geral de classe de <xref:System.Configuration.Install.InstallContext> classe.</span><span class="sxs-lookup"><span data-stu-id="e6bee-150">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="e6bee-151">O exemplo recupera o <xref:System.Configuration.Install.InstallContext.Parameters%2A> propriedade para ver se qualquer argumento de linha de comando foi inserido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="e6bee-151">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="e6bee-152">Ele também usa o <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> método para descobrir se o `LogtoConsole` parâmetro foi definido.</span><span class="sxs-lookup"><span data-stu-id="e6bee-152">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="e6bee-153">Se `yes`, em seguida, usará o <xref:System.Configuration.Install.InstallContext.LogMessage%2A> método para gravar mensagens de status para o arquivo de log de instalação e o console.</span><span class="sxs-lookup"><span data-stu-id="e6bee-153">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="e6bee-154">Uma matriz que contém os parâmetros de linha de comando.</span><span class="sxs-lookup"><span data-stu-id="e6bee-154">An array containing the command-line parameters.</span></span></param>
        <summary><span data-ttu-id="e6bee-155">Analisa os parâmetros de linha de comando em um dicionário de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e6bee-155">Parses the command-line parameters into a string dictionary.</span></span></summary>
        <returns><span data-ttu-id="e6bee-156">Um <see cref="T:System.Collections.Specialized.StringDictionary" /> que contém os parâmetros de linha de comando analisados.</span><span class="sxs-lookup"><span data-stu-id="e6bee-156">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>