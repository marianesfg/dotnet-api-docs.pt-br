<Type Name="PrintProperty" FullName="System.Printing.IndexedProperties.PrintProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a349ae4da7d0743739dac87394831953cec2126" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36547826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PrintProperty : IDisposable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PrintProperty extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Printing.IndexedProperties.PrintProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrintProperty&#xA;Implements IDeserializationCallback, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintProperty abstract : IDisposable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type PrintProperty = class&#xA;    interface IDisposable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f8bf8-101">Representa uma propriedade (e o valor da propriedade) de um componente de hardware ou de software do sistema de impressão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8bf8-101">Represents a property (and the value of the property) of a printing system hardware or software component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8bf8-102">O exemplo a seguir mostra como usar essa classe para descobrir em tempo de execução as propriedades e os tipos dessas propriedades, de um objeto do sistema de impressão, sem o uso de reflexão.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-102">The following example shows how to use this class to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintProperty (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintProperty(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Printing.IndexedProperties.PrintProperty : string -&gt; System.Printing.IndexedProperties.PrintProperty" Usage="new System.Printing.IndexedProperties.PrintProperty attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="f8bf8-103">O nome da propriedade que este objeto representa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-103">The name of the property that this object represents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8bf8-104">Inicializa uma nova instância da classe <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-104">Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8bf8-105">O `attributeName` deve ser digitado exatamente como o nome de alguma propriedade específica de um objeto do sistema de impressão, incluindo maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-105">The `attributeName` should be spelled exactly the same as the name of some particular property of a print system object, including casing.</span></span> <span data-ttu-id="f8bf8-106">Por exemplo, o <xref:System.Printing.PrintQueue.QueuePort%2A> propriedade de um <xref:System.Printing.PrintQueue> objeto deve ser escrito "QueuePort", não "PrintPort", "Port" ou "Queueport".</span><span class="sxs-lookup"><span data-stu-id="f8bf8-106">For example, the <xref:System.Printing.PrintQueue.QueuePort%2A> property of a <xref:System.Printing.PrintQueue> object must be spelled "QueuePort", not "PrintPort", "Port", or "Queueport".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-107">Libera os recursos que estão sendo usados pelo <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-107">Releases the resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="printProperty.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-108">Libera todos os recursos que estão sendo usados pelo <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-108">Releases all resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="printProperty.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>
          <span data-ttu-id="f8bf8-109">Libera os recursos não gerenciados que estão sendo usados pelo <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> e libera opcionalmente o recurso gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-109">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8bf8-110">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-110">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f8bf8-111">`Dispose()` invoca o protegido `Dispose(Boolean)` método com o parâmetro booliano sem nome definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-111">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="f8bf8-112"><xref:System.Object.Finalize%2A> invoca `Dispose` com o parâmetro definido `false`.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-112"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="f8bf8-113">Quando o parâmetro booliano é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Printing.IndexedProperties.PrintProperty> referências.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-113">When the Boolean parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Printing.IndexedProperties.PrintProperty> references.</span></span> <span data-ttu-id="f8bf8-114">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-114">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f8bf8-115">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-115">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PrintProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PrintProperty ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="printProperty.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-116">Permite que um <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> tente liberar recursos e executar outras operações de limpeza antes que <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> seja recuperado pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-116">Enables a <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> to attempt to free resources and to perform other cleanup operations before the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected virtual void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member InternalDispose : bool -&gt; unit&#xA;override this.InternalDispose : bool -&gt; unit" Usage="printProperty.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f8bf8-117">
            <see langword="true" /> para liberar os recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas os recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-117">
              <see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8bf8-118">Libera os recursos não gerenciados que estão sendo usados pelo <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> e libera opcionalmente os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-118">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool with get, set" Usage="System.Printing.IndexedProperties.PrintProperty.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-119">Obtém ou define um valor que indica se o objeto foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-119">Gets or sets a value that indicates whether the object has been disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8bf8-120">
            <see langword="true" /> Se o objeto foi descartado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-120">
              <see langword="true" /> if the object has been disposed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f8bf8-121">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="protected bool IsInitialized { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsInitialized {  void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Printing.IndexedProperties.PrintProperty.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-122">Obtém ou define um valor que indica se o objeto foi inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-122">Gets or sets a value that indicates whether the object has been initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8bf8-123">
            <see langword="true" /> Se o objeto foi inicializado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-123">
              <see langword="true" /> if the object has been initialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f8bf8-124">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-124">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Printing.IndexedProperties.PrintProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-125">Quando substituído em uma classe derivada, obtém o nome da propriedade representada pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-125">When overridden in a derived class, gets the name of the property that the object represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8bf8-126">Um <see cref="T:System.String" /> que representa o nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-126">A <see cref="T:System.String" /> that represents the name of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8bf8-127">O exemplo a seguir mostra como usar essa propriedade para descobrir em tempo de execução as propriedades e os tipos dessas propriedades, de um objeto do sistema de impressão, sem o uso de reflexão.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-127">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="printProperty.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="f8bf8-128">A fonte do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-128">The source of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8bf8-129">Quando substituído em uma classe derivada, implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e gera o evento de desserialização quando a desserialização é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-129">When overridden in a derived class, implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Printing.IndexedProperties.PrintProperty.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8bf8-130">Quando substituído em uma classe derivada, obtém ou define o valor da propriedade representada pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8bf8-130">When overridden in a derived class, gets or sets the value of the property that the object represents.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8bf8-131">O exemplo a seguir mostra como usar essa propriedade para descobrir em tempo de execução as propriedades e os tipos dessas propriedades, de um objeto do sistema de impressão, sem o uso de reflexão.</span><span class="sxs-lookup"><span data-stu-id="f8bf8-131">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>