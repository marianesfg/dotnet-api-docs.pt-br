<Type Name="XamlTypeName" FullName="System.Xaml.Schema.XamlTypeName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eabd7c4da97ea97889897665c6c34914b93c62f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeName" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeName" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeName" />
  <TypeSignature Language="F#" Value="type XamlTypeName = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="66443-101">Provides a means to specify a XAML type in terms of name and namespace.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66443-101">Provides a means to specify a XAML type in terms of name and namespace.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-102"><xref:System.Xaml.XamlType> é a classe de tipo de informações do sistema de tipo XAML, enquanto <xref:System.Xaml.Schema.XamlTypeName> é a mais de uma estrutura de dados que fornece maneiras diferentes de especificação de tipo.</span><span class="sxs-lookup"><span data-stu-id="66443-102"><xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas <xref:System.Xaml.Schema.XamlTypeName> is more of a data structure that provides different ways of specifying that type.</span></span> <span data-ttu-id="66443-103"><xref:System.Xaml.Schema.XamlTypeName> também fornece métodos auxiliares estáticos para gerar um <xref:System.Xaml.Schema.XamlTypeName> resolvendo um identificador de tipo existente em um namespace XAML.</span><span class="sxs-lookup"><span data-stu-id="66443-103"><xref:System.Xaml.Schema.XamlTypeName> also provides static helper methods for generating a <xref:System.Xaml.Schema.XamlTypeName> by resolving an existing type identifier in a XAML namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66443-104">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-104">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66443-105">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-105">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName xamlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="66443-106">An existing <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-106">An existing <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-107">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on an existing <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-107">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on an existing <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-108">
            <paramref name="xamlType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-108">
              <paramref name="xamlType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="66443-109">The XAML namespace that contains name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-109">The XAML namespace that contains name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="66443-110">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-110">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt; typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String, typeArguments As IEnumerable(Of XamlTypeName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string * seq&lt;System.Xaml.Schema.XamlTypeName&gt; -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt;" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="66443-112">The XAML namespace that contains <c>name</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-112">The XAML namespace that contains <c>name</c>.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="66443-113">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-113">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="66443-114">An array of type arguments, each of which must be a <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-114">An array of type arguments, each of which must be a <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-115">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings as well as an array of type arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-115">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings as well as an array of type arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-116">Isso é a assinatura a ser usada se você estiver especificando um tipo genérico e argumentos de tipo para esse tipo.</span><span class="sxs-lookup"><span data-stu-id="66443-116">This is the signature to use if you are specifying a generic type and type arguments for that type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66443-117">Gets the name used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-117">Gets the name used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66443-118">O nome do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-118">The name of the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-119">Se um <xref:System.Xaml.XamlType> foi usado para construir esse <xref:System.Xaml.Schema.XamlTypeName>, o valor de <xref:System.Xaml.Schema.XamlTypeName.Name%2A> é <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="66443-119">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Name%2A> is <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66443-120">Gets the XAML namespace identifier used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-120">Gets the XAML namespace identifier used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66443-121">O identificador do namespace de XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-121">The XAML namespace identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-122">Se um <xref:System.Xaml.XamlType> foi usado para construir esse <xref:System.Xaml.Schema.XamlTypeName>, o valor de <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> é `xamlType.GetXamlNamespaces()[0]`.</span><span class="sxs-lookup"><span data-stu-id="66443-122">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> is `xamlType.GetXamlNamespaces()[0]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Schema.XamlTypeName Parse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (typeName As String, namespaceResolver As IXamlNamespaceResolver) As XamlTypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Schema::XamlTypeName ^ Parse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Xaml.Schema.XamlTypeName" Usage="System.Xaml.Schema.XamlTypeName.Parse (typeName, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="66443-123">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-123">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="66443-124">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-124">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-125">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-125">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-126">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-126">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-127">
            <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-127">
              <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="66443-128">String cannot be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-128">String cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; ParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver) As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ ParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member ParseList : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.ParseList (typeNameList, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="66443-129">A string that contains multiple types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-129">A string that contains multiple types.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="66443-130">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-130">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-131">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-131">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-132">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-132">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-133">Aparentes BNF para o nome de tipo aninhado ou analisar vários tipo nome habilitado por esse método é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="66443-133">The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:</span></span>  
  
```  
NestedTypeName = Name | Name '+' NestedTypeName  
TypeName = NestedTypeName | NestedTypeName ‘[]’  
XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs  
TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’  
XamlTypeNameList = XamlTypeName XamlTypeNameList1  
XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-134">
            <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-134">
              <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="66443-135">String cannot be parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-135">String cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66443-136">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-136">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlTypeName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66443-137">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-137">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-138">The equivalent string representation of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-138">The equivalent string representation of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-139">Esta assinatura é equivalente a chamar <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passando `null` para `prefixLookup`.</span><span class="sxs-lookup"><span data-stu-id="66443-139">This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`.</span></span> <span data-ttu-id="66443-140">s</span><span class="sxs-lookup"><span data-stu-id="66443-140">s</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Xaml.INamespacePrefixLookup -&gt; string" Usage="xamlTypeName.ToString prefixLookup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="prefixLookup">
          <span data-ttu-id="66443-141">A service reference for prefix lookup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-141">A service reference for prefix lookup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-142">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-142">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-143">A prefixed usage string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-143">A prefixed usage string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="66443-144">
            <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> for this <see cref="T:System.Xaml.Schema.XamlTypeName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-144">
              <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> for this <see cref="T:System.Xaml.Schema.XamlTypeName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="66443-145">-or-  <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-145">-or-  <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> is not valid.</span>
          </span>
          <span data-ttu-id="66443-146">-or-  Could not look up the prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-146">-or-  Could not look up the prefix.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeNameList, class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (typeNameList As IList(Of XamlTypeName), prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeNameList, System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; * System.Xaml.INamespacePrefixLookup -&gt; string" Usage="System.Xaml.Schema.XamlTypeName.ToString (typeNameList, prefixLookup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" />
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="66443-147">A list of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-147">A list of types.</span>
          </span>
        </param>
        <param name="prefixLookup">
          <span data-ttu-id="66443-148">A service reference for prefix lookup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-148">A service reference for prefix lookup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-149">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-149">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-150">A concatenated string of all type results.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-150">A concatenated string of all type results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-151">
            <paramref name="prefixLookup" /> or <paramref name="typeNameList" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-151">
              <paramref name="prefixLookup" /> or <paramref name="typeNameList" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Xaml.Schema.XamlTypeName&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (typeName As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As XamlTypeName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Xaml::Schema::XamlTypeName ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParse (typeName, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Xaml.Schema.XamlTypeName&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="66443-152">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-152">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="66443-153">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-153">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="66443-154">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-154">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-155">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-155">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-156">
            <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-156">
              <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-157">
            <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-157">
              <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C#" Value="public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt;&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As IList(Of XamlTypeName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParseList : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParseList (typeNameList, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="66443-158">A string that contains multiple types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-158">A string that contains multiple types.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="66443-159">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-159">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="66443-160">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-160">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66443-161">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-161">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66443-162">
            <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-162">
              <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="66443-163">
            <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-163">
              <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66443-164">Gets the type arguments used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-164">Gets the type arguments used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66443-165">Os argumentos de tipo, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-165">The type arguments, if any.</span>
          </span>
          <span data-ttu-id="66443-166">Pode ser nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66443-166">May be null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66443-167">Se um <xref:System.Xaml.XamlType> foi usado para construir esse <xref:System.Xaml.Schema.XamlTypeName>, o valor de <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> é formado pela <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="66443-167">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>