<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="79077-101">Fornece um ponto de extensão que pode construir instâncias de um tipo XAML por meio de técnicas que não reflexão e construtores.</span><span class="sxs-lookup"><span data-stu-id="79077-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-102">A finalidade de <xref:System.Xaml.Schema.XamlTypeInvoker> é habilitar um trabalho que não depende de como totalmente os recursos CLR como atributos CLR, informações de reflexão por meio de tempo de execução de um sistema de tipo XAML extensível e esquemas <xref:System.Type> e <xref:System.Reflection.MemberInfo>, e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="79077-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="79077-103">As subclasses de <xref:System.Xaml.Schema.XamlTypeInvoker> são usados como parâmetros de entrada para os construtores alternativos de classes de esquema XAML como <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="79077-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="79077-104">Você subclasse <xref:System.Xaml.XamlType> e passar o <xref:System.Xaml.Schema.XamlTypeInvoker> por meio do construtor base.</span><span class="sxs-lookup"><span data-stu-id="79077-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="79077-105">Junto com a definição de um <xref:System.Xaml.Schema.XamlTypeInvoker> para o construtor, você também deve fornecer substituições para pelo menos alguns do `Lookup` métodos de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="79077-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="79077-106"><xref:System.Xaml.Schema.XamlTypeInvoker> tem uma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="79077-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="79077-107">A implementação padrão segue um modelo semelhante para a implementação padrão de tipos de esquema XAML <xref:System.Xaml.XamlType> e <xref:System.Xaml.XamlMember>: o sistema de tipos CLR é usado para instanciação, valores e pesquisas, incluindo o uso de atributos CLR, <xref:System.Type> e <xref:System.Reflection.MemberInfo>, e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="79077-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="79077-108"><xref:System.Xaml.Schema.XamlTypeInvoker> fornece métodos para instanciação básica (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) e métodos que são relevantes para os tipos de onde o <xref:System.Xaml.XamlType> representa uma coleção, um dicionário ou uma matriz (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="79077-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79077-109">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79077-110">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-111">A implementação padrão está vazia.</span><span class="sxs-lookup"><span data-stu-id="79077-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="79077-112">Este construtor é chamado internamente para fornecer um valor para <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="79077-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="79077-113">Para uma <xref:System.Xaml.Schema.XamlTypeInvoker> subclasse, espera-se que você use o <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> assinatura para a construção ou fornecer uma substituição que chama <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> como base.</span><span class="sxs-lookup"><span data-stu-id="79077-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="79077-114">Fornecendo o <xref:System.Xaml.XamlType> implementa uma padrão padrão onde <xref:System.Xaml.Schema.XamlTypeInvoker> é imutável.</span><span class="sxs-lookup"><span data-stu-id="79077-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="79077-115">O valor <see cref="T:System.Xaml.XamlType" /> para o tipo específico de XAML relevante a este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="79077-116">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> com base em um <see cref="T:System.Xaml.XamlType" /> fornecido.</span><span class="sxs-lookup"><span data-stu-id="79077-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-117">Este construtor é chamado internamente com base no <xref:System.Xaml.XamlType> onde o <xref:System.Xaml.Schema.XamlTypeInvoker> é usado para a construção.</span><span class="sxs-lookup"><span data-stu-id="79077-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="79077-118">O `type` fornecidos aqui são relevantes para as chamadas para todos os outros método <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="79077-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79077-119"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-119"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="79077-120">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="item"><span data-ttu-id="79077-121">O item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="79077-121">The item to add.</span></span></param>
        <summary><span data-ttu-id="79077-122">Adiciona o item fornecido a uma instância do tipo relevante a esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-123">Você só deve chamar esse método em um <xref:System.Xaml.XamlType> que representa uma coleção.</span><span class="sxs-lookup"><span data-stu-id="79077-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="79077-124">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.</span><span class="sxs-lookup"><span data-stu-id="79077-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="79077-125">**-ou-**</span><span class="sxs-lookup"><span data-stu-id="79077-125">**-or-**</span></span>  
  
 <span data-ttu-id="79077-126">Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção.</span><span class="sxs-lookup"><span data-stu-id="79077-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79077-127"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-127"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="79077-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-129">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="79077-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="79077-130">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="79077-131">Internamente, as chamadas de implementação de base <see cref="P:System.Xaml.XamlType.IsCollection" />e gera se o resultado for <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79077-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="79077-132">A implementação base não precisa necessariamente usar seu próprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementação.</span><span class="sxs-lookup"><span data-stu-id="79077-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="79077-133">Primeiro, uma conversão de <paramref name="instance" /> para <see cref="T:System.Collections.IList" /> é tentada.</span><span class="sxs-lookup"><span data-stu-id="79077-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span></span> <span data-ttu-id="79077-134">Se isso tiver êxito, uma chamada para <see cref="M:System.Collections.IList.Add(System.Object)" /> é feita e o método retorna.</span><span class="sxs-lookup"><span data-stu-id="79077-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="79077-135">Caso contrário, a implementação base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> invocar subjacente <see langword="Add" /> método, conforme obtidas de uma chamada para <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
 <span data-ttu-id="79077-136">A implementação base nenhuma exceção é gerada nesse nível se <paramref name="item" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span></span> <span data-ttu-id="79077-137">Ainda é possível que subjacente <see langword="Add" /> método gerará uma exceção quando invocado.</span><span class="sxs-lookup"><span data-stu-id="79077-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="79077-138">Outras exceções de tempo de execução são possíveis se <see cref="P:System.Xaml.XamlType.ItemType" /> não retornar um resultado válido.</span><span class="sxs-lookup"><span data-stu-id="79077-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="79077-139">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="key"><span data-ttu-id="79077-140">Chave de dicionário para o item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="79077-140">Dictionary key for the item to add.</span></span></param>
        <param name="item"><span data-ttu-id="79077-141">O valor do item a adicionar.</span><span class="sxs-lookup"><span data-stu-id="79077-141">The item value to add.</span></span></param>
        <summary><span data-ttu-id="79077-142">Adiciona o valor de chave e item fornecido a uma instância do tipo que é relevante para esse <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-143">Você só deve chamar esse método em um <xref:System.Xaml.XamlType> que representa um dicionário.</span><span class="sxs-lookup"><span data-stu-id="79077-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="79077-144">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.</span><span class="sxs-lookup"><span data-stu-id="79077-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="79077-145">**-ou-**</span><span class="sxs-lookup"><span data-stu-id="79077-145">**-or-**</span></span>  
  
 <span data-ttu-id="79077-146">Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é um dicionário.</span><span class="sxs-lookup"><span data-stu-id="79077-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79077-147"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="79077-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-149">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="79077-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="79077-150">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="79077-151">Internamente, as chamadas de implementação de base <see cref="P:System.Xaml.XamlType.IsDictionary" />e gera se o resultado for <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79077-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="79077-152">A implementação base não precisa necessariamente usar seu próprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementação.</span><span class="sxs-lookup"><span data-stu-id="79077-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="79077-153">Primeiro, uma conversão de <paramref name="instance" /> para <see cref="T:System.Collections.IDictionary" /> é tentada.</span><span class="sxs-lookup"><span data-stu-id="79077-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span></span> <span data-ttu-id="79077-154">Se isso tiver êxito, uma chamada para <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> é feita e o método retorna.</span><span class="sxs-lookup"><span data-stu-id="79077-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="79077-155">Caso contrário, a implementação base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> invocar subjacente <see langword="Add" /> método, conforme obtidas de uma chamada para <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
 <span data-ttu-id="79077-156">A implementação base nenhuma exceção é gerada nesse nível se <paramref name="item" /> ou <paramref name="key" /> são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span></span> <span data-ttu-id="79077-157">Ainda é possível que subjacente <see langword="Add" /> método gerará uma exceção quando invocado.</span><span class="sxs-lookup"><span data-stu-id="79077-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="79077-158">Outras exceções de tempo de execução são possíveis se <see cref="P:System.Xaml.XamlType.ItemType" /> não retornar um resultado válido.</span><span class="sxs-lookup"><span data-stu-id="79077-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="79077-159">Uma matriz de objetos que fornecem o <see langword="x:ConstructorArgs" /> para a instância.</span><span class="sxs-lookup"><span data-stu-id="79077-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span></span> <span data-ttu-id="79077-160">Pode ser <see langword="null" /> para tipos que não exigem nem usam <see langword="x:ConstructorArgs" />.</span><span class="sxs-lookup"><span data-stu-id="79077-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span></span></param>
        <summary><span data-ttu-id="79077-161">Cria uma instância do objeto com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <returns><span data-ttu-id="79077-162">A instância criada com base no <see cref="T:System.Xaml.XamlType" /> iniciado pela construção para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="79077-163">Não foi possível resolver um construtor.</span><span class="sxs-lookup"><span data-stu-id="79077-163">Could not resolve a constructor.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-164">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="79077-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="79077-165">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="79077-166"><see cref="T:System.Xaml.XamlType" /> para o tipo de item que é usado pelo método <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="79077-166"><see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span></span></param>
        <summary><span data-ttu-id="79077-167">Retorna o método <see langword="Add" /> relevante para um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é relevante a uma coleção ou a um dicionário.</span><span class="sxs-lookup"><span data-stu-id="79077-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span></span></summary>
        <returns><span data-ttu-id="79077-168">Informações <see cref="T:System.Reflection.MethodInfo" /> de CLR para o método <see langword="Add" /> ou nulo.</span><span class="sxs-lookup"><span data-stu-id="79077-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-169">Esse método deve retornar `null` para casos onde o <xref:System.Xaml.XamlType> para este <xref:System.Xaml.Schema.XamlTypeInvoker> não é uma coleção gravável ou dicionário.</span><span class="sxs-lookup"><span data-stu-id="79077-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="79077-170">Especificamente, deve retornar `null` para casos onde <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> retorna `None`.</span><span class="sxs-lookup"><span data-stu-id="79077-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="79077-171">Se você não estiver acessando um sistema de tipo XAML totalmente confiável, esse método tem o potencial de falso relatório <xref:System.Reflection.MethodInfo> informações para chamadores.</span><span class="sxs-lookup"><span data-stu-id="79077-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79077-172"><paramref name="contentType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-172"><paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-173">Retorna a implementação base <see langword="null" /> para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="79077-174">Ele também retorna <see langword="null" /> se <see cref="P:System.Xaml.XamlType.ItemType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="79077-175">Coleções XAML podem tem mais de um <see langword="Add" /> método, como uma coleção de XAML potencialmente pode dar suporte a mais de um tipo de conteúdo (consulte <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, ou consulte <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> para obter informações sobre uma implementação desse conceito no WPF).</span><span class="sxs-lookup"><span data-stu-id="79077-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span></span> <span data-ttu-id="79077-176">A implementação padrão usa a lógica interna para retornar a melhor correspondência com base em assinaturas e o tipo de fornecido <paramref name="contentType" />.</span><span class="sxs-lookup"><span data-stu-id="79077-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79077-177">Retorna um objeto que representa um método que pode fazer a enumeração sobre itens.</span><span class="sxs-lookup"><span data-stu-id="79077-177">Returns an object representing a method that can enumerate over items.</span></span></summary>
        <returns>
          <span data-ttu-id="79077-178"><see cref="T:System.Reflection.MethodInfo" /> para um método de enumerador ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-178"><see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-179">Deve retornar `null` para casos onde <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> retorna `None`.</span><span class="sxs-lookup"><span data-stu-id="79077-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="79077-180">Se você não estiver acessando um sistema de tipo XAML totalmente confiável, esse método tem o potencial de falso relatório <xref:System.Reflection.MethodInfo> informações para chamadores.</span><span class="sxs-lookup"><span data-stu-id="79077-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-181">A implementação base chama um método auxiliar interno.</span><span class="sxs-lookup"><span data-stu-id="79077-181">The base implementation calls an internal helper method.</span></span> <span data-ttu-id="79077-182">Auxiliar retorna <see langword="null" /> para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="79077-183">Ele também retorna <see langword="null" /> para casos onde <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> retorna <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="79077-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="79077-184">Uma instância do tipo especificado pelo <see cref="T:System.Xaml.XamlType" /> usado para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="79077-185">Retorna um objeto <see cref="T:System.Collections.IEnumerator" /> que representa o conjunto de itens.</span><span class="sxs-lookup"><span data-stu-id="79077-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span></span></summary>
        <returns><span data-ttu-id="79077-186">Um objeto <see cref="T:System.Collections.IEnumerator" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="79077-187">Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlType" /> desconhecido.</span><span class="sxs-lookup"><span data-stu-id="79077-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="79077-188">**-ou-**</span><span class="sxs-lookup"><span data-stu-id="79077-188">**-or-**</span></span>  
  
 <span data-ttu-id="79077-189">Invocado esse método em um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> em que o tipo relevante não é uma coleção ou dicionário.</span><span class="sxs-lookup"><span data-stu-id="79077-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79077-190"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-190"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="79077-191">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="79077-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="79077-192">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlType" />, que inclui casos onde o <see cref="P:System.Xaml.XamlType.UnderlyingType" /> do <see cref="T:System.Xaml.XamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79077-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="79077-193">A implementação base não precisa necessariamente usar seu próprio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementação.</span><span class="sxs-lookup"><span data-stu-id="79077-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span></span> <span data-ttu-id="79077-194">Primeiro, uma conversão de <paramref name="instance" /> para <see cref="T:System.Collections.IEnumerable" /> é tentada.</span><span class="sxs-lookup"><span data-stu-id="79077-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span></span> <span data-ttu-id="79077-195">Se isso tiver êxito, uma chamada para <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> é feita e o método retorna que o valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="79077-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span></span> <span data-ttu-id="79077-196">Caso contrário, a implementação base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> invocar subjacente <see langword="GetEnumerator" /> método, conforme obtidas de uma chamada para <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> para este <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79077-197">Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.Windows.Markup.MarkupExtension" /> implementado.</span><span class="sxs-lookup"><span data-stu-id="79077-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <value><span data-ttu-id="79077-198">Uma implementação do manipulador que manipula nesse caso.</span><span class="sxs-lookup"><span data-stu-id="79077-198">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-199">O manipulador de eventos é baseado no <xref:System.EventHandler%601> restrita com <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="79077-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="79077-200">O valor retornado invoca o <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> comportamento do <xref:System.Xaml.XamlType> que o <xref:System.Xaml.Schema.XamlTypeInvoker> se baseia.</span><span class="sxs-lookup"><span data-stu-id="79077-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="79077-201">O valor de retorno é `null` para um <xref:System.Xaml.Schema.XamlTypeInvoker> que se baseia no desconhecido <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="79077-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79077-202">Obtém o manipulador a ser usado quando um <see cref="T:System.Xaml.XamlObjectWriter" /> chama um <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</span><span class="sxs-lookup"><span data-stu-id="79077-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span></span></summary>
        <value><span data-ttu-id="79077-203">Uma implementação do manipulador que manipula nesse caso.</span><span class="sxs-lookup"><span data-stu-id="79077-203">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-204">O manipulador de eventos é baseado no <xref:System.EventHandler%601> restrita com <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="79077-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="79077-205">O valor retornado invoca o <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> comportamento do <xref:System.Xaml.XamlType> que o <xref:System.Xaml.Schema.XamlTypeInvoker> se baseia.</span><span class="sxs-lookup"><span data-stu-id="79077-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="79077-206">O valor de retorno é `null` para um <xref:System.Xaml.Schema.XamlTypeInvoker> que se baseia no desconhecido <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="79077-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79077-207">Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconhecido, que não foi totalmente implementado.</span><span class="sxs-lookup"><span data-stu-id="79077-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <value><span data-ttu-id="79077-208">Um valor estático que representa desconhecido, não é totalmente implementado <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="79077-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79077-209">Fornecer esse valor para um <xref:System.Xaml.Schema.XamlTypeInvoker> parâmetro de System. XAML definido API geralmente fará com que o código de chamada a gerar exceções.</span><span class="sxs-lookup"><span data-stu-id="79077-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>