<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase"><span data-ttu-id="ddd81-101">A CLR classe base para o conversor específico que este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> representa.</span><span class="sxs-lookup"><span data-stu-id="ddd81-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span></span> <span data-ttu-id="ddd81-102">Normalmente isso é um dos seguintes: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span><span class="sxs-lookup"><span data-stu-id="ddd81-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span></span></typeparam>
    <summary><span data-ttu-id="ddd81-103">Fornece uma superfície de API comum para técnicas que geram valores de serialização ou de inicialização para o XAML baseado em uma entrada que não seja o tipo de destino eventual.</span><span class="sxs-lookup"><span data-stu-id="ddd81-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span></span> <span data-ttu-id="ddd81-104">Isso inclui extensões de marcação e conversores de tipo.</span><span class="sxs-lookup"><span data-stu-id="ddd81-104">This includes markup extensions and type converters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-105">As instâncias desse tipo são retornadas pelos métodos da API do esquema XAML, como <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="ddd81-106">A implementação de <xref:System.Xaml.Schema.XamlValueConverter%601> fornece inversão de controle para o assembly System. XAML, para que o sistema básico de esquema e o tipo XAML não precisa tomar dependências de valor diferente técnicas de conversão que normalmente são implementações em outros assemblies.</span><span class="sxs-lookup"><span data-stu-id="ddd81-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="ddd81-107">Um <xref:System.Xaml.Schema.XamlValueConverter%601> pode ser construída com um tipo de implementação nulo, mas como uma <xref:System.Xaml.Schema.XamlValueConverter%601> retornará `null` para <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="ddd81-108">Assinaturas de construtor para <xref:System.Xaml.Schema.XamlValueConverter%601> usar um `converterType` parâmetro que faz referência ao tipo específico que implementa o comportamento de conversão.</span><span class="sxs-lookup"><span data-stu-id="ddd81-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="ddd81-109">Para que estejam funcionando adequadamente <xref:System.Xaml.Schema.XamlValueConverter%601> (que possui um não nulo <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), o `converterType` tipo deve ser conversíveis para o `TConverterBase` restrição.</span><span class="sxs-lookup"><span data-stu-id="ddd81-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="ddd81-110">Uma condição de incompatibilidade não é imposta pelo construtores, mas pode produzir um <xref:System.InvalidCastException> em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="ddd81-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ddd81-111">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="ddd81-112">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="ddd81-113">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <summary><span data-ttu-id="ddd81-114">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" /> e o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="ddd81-115">O <see cref="T:System.Type" /> que implementa o comportamento do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="ddd81-116">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <param name="name"><span data-ttu-id="ddd81-117">O nome da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ddd81-117">The string name.</span></span></param>
        <summary><span data-ttu-id="ddd81-118">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, com base em um conversor que implementa <see cref="T:System.Type" />, o tipo de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um nome de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ddd81-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-119">Se `name` é fornecido como `null`, um nome padrão é gerado com base em uma `converterType` ou `targetType`.</span><span class="sxs-lookup"><span data-stu-id="ddd81-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ddd81-120">Todos os três parâmetros são <see langword="null" /> (pelo menos um deve ser não nulo).</span><span class="sxs-lookup"><span data-stu-id="ddd81-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd81-121">Obtém uma instância criada da implementação do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-121">Gets a created instance of the converter implementation.</span></span></summary>
        <value><span data-ttu-id="ddd81-122">Uma instância criada da implementação do conversor, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-122">A created instance of the converter implementation, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> chama a implementação padrão protegido de <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> para obter seu valor (e podem acessar um valor armazenado se <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> já foi chamado uma vez neste <xref:System.Xaml.Schema.XamlValueConverter%601>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="ddd81-124">Um <xref:System.Xaml.Schema.XamlValueConverter%601> pode ser construída com um tipo de implementação nulo, mas como uma <xref:System.Xaml.Schema.XamlValueConverter%601> retornará `null` para <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd81-125">Obtém o <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></summary>
        <value><span data-ttu-id="ddd81-126">O <see cref="T:System.Type" /> para a classe que implementa o comportamento do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddd81-127">Retorna uma instância da implementação do conversor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-127">Returns an instance of the converter implementation.</span></span></summary>
        <returns><span data-ttu-id="ddd81-128">Uma instância da implementação do conversor ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-128">An instance of the converter implementation, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> está protegida.</span><span class="sxs-lookup"><span data-stu-id="ddd81-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="ddd81-130">Para obter uma instância do conversor com uma API pública, obtenha o valor de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="ddd81-131">Um <xref:System.Xaml.Schema.XamlValueConverter%601> pode ser construída com um tipo de implementação nulo, mas como uma <xref:System.Xaml.Schema.XamlValueConverter%601> retornará `null` para <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="ddd81-132">O conversor não implementou o tipo de base correto.</span><span class="sxs-lookup"><span data-stu-id="ddd81-132">Converter did not implement the correct base type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ddd81-133">Determina se esta instância de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um objeto têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ddd81-134">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="ddd81-134">The object to compare.</span></span></param>
        <summary><span data-ttu-id="ddd81-135">Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e um objeto especificado, que também deve ser um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="ddd81-136"><see langword="true" /> se <paramref name="obj" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-136"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ddd81-137">O <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> de comparação.</span><span class="sxs-lookup"><span data-stu-id="ddd81-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span></span></param>
        <summary><span data-ttu-id="ddd81-138">Determina se esta instância do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e outro objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="ddd81-139"><see langword="true" /> se <paramref name="other" /> for um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-139"><see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddd81-140">Retorna o código hash para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="ddd81-141">Um código hash inteiro.</span><span class="sxs-lookup"><span data-stu-id="ddd81-141">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd81-142">Obtém um nome de cadeia de caracteres para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="ddd81-143">Um nome de cadeia de caracteres para este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-144">O valor dessa propriedade é estabelecido por um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="ddd81-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="ddd81-145">Um parâmetro de construtor (consulte <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="ddd81-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="ddd81-146">Lógica interna que processa outras entradas do construtor e uma cadeia de caracteres de formulários.</span><span class="sxs-lookup"><span data-stu-id="ddd81-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="ddd81-147">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="ddd81-148">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ddd81-149">Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="ddd81-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="ddd81-150"><see langword="true" /> se o valor de <paramref name="converter1" /> for o mesmo que o valor de <paramref name="converter2" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-150"><see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="ddd81-151">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="ddd81-152">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ddd81-153">Determina se dois objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados têm valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="ddd81-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="ddd81-154"><see langword="true" /> se o valor de <paramref name="converter1" /> for diferente do valor de <paramref name="converter2" />, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-154"><see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd81-155">Obtém o <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="ddd81-156">O <see cref="T:System.Xaml.XamlType" /> de destino do <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddd81-157">Retorna uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="ddd81-158">Uma <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span><span class="sxs-lookup"><span data-stu-id="ddd81-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd81-159">O <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> valor é baseado no <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddd81-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>