<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06593ac583c0f24c3b973fbdbfba42e69f84af7c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27caf-101">Fornece um ponto de extensão que pode acessar as características de um membro XAML por meio de técnicas que não são de reflexão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27caf-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-102">A finalidade de <xref:System.Xaml.Schema.XamlMemberInvoker> é habilitar um trabalho que não depende de como totalmente os recursos CLR como atributos CLR, informações de reflexão por meio de tempo de execução de um sistema de tipo XAML extensível e esquemas <xref:System.Type> e <xref:System.Reflection.MemberInfo>, e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="27caf-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="27caf-103">As subclasses de <xref:System.Xaml.Schema.XamlMemberInvoker> são usados como parâmetros de entrada para os construtores alternativos de classes de esquema XAML como <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="27caf-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="27caf-104">Você subclasse <xref:System.Xaml.XamlMember> e passar o <xref:System.Xaml.Schema.XamlMemberInvoker> por meio do construtor base.</span><span class="sxs-lookup"><span data-stu-id="27caf-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="27caf-105">Junto com a definição de um <xref:System.Xaml.Schema.XamlMemberInvoker> para o construtor, você também deve fornecer substituições para pelo menos alguns do `Lookup` métodos de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="27caf-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="27caf-106"><xref:System.Xaml.Schema.XamlMemberInvoker> tem uma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="27caf-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="27caf-107">A implementação padrão segue um modelo semelhante para a implementação padrão de tipos de esquema XAML <xref:System.Xaml.XamlType> e <xref:System.Xaml.XamlMember>: o sistema de tipos CLR é usado para instanciação, valores e pesquisas, incluindo o uso de atributos CLR, <xref:System.Type> e <xref:System.Reflection.MemberInfo>, e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="27caf-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="27caf-108"><xref:System.Xaml.Schema.XamlMemberInvoker> fornece métodos para get básico e operações de conjunto (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="27caf-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="27caf-109">Ele também fornece as propriedades <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> e <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, mas eles não são virtuais.</span><span class="sxs-lookup"><span data-stu-id="27caf-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27caf-110">É possível obter um <xref:System.Xaml.Schema.XamlMemberInvoker> valor que representa uma diretiva XAML, que é implementada como uma classe privada na implementação System. XAML.</span><span class="sxs-lookup"><span data-stu-id="27caf-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="27caf-111">Se você tentar chamar <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> ou <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> neste chamador, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="27caf-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27caf-112">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27caf-113">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-114">A implementação padrão está vazia.</span><span class="sxs-lookup"><span data-stu-id="27caf-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="27caf-115">Este construtor é chamado internamente para fornecer um valor para <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="27caf-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="27caf-116">Para uma <xref:System.Xaml.Schema.XamlMemberInvoker> subclasse, espera-se que você use o <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> assinatura para a construção ou fornecer uma substituição que chama <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> como base.</span><span class="sxs-lookup"><span data-stu-id="27caf-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="27caf-117">Fornecendo o <xref:System.Xaml.XamlMember> implementa uma padrão padrão onde <xref:System.Xaml.Schema.XamlMemberInvoker> é imutável.</span><span class="sxs-lookup"><span data-stu-id="27caf-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="27caf-118">O valor do <see cref="T:System.Xaml.XamlMember" /> para o membro XAML específico, relevante a este <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27caf-119">Inicializa uma nova instância da classe <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> com base em um <see cref="T:System.Xaml.XamlMember" /> fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-120">Este construtor é chamado internamente com base no <xref:System.Xaml.XamlMember> onde o <xref:System.Xaml.Schema.XamlMemberInvoker> é usado para a construção.</span><span class="sxs-lookup"><span data-stu-id="27caf-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27caf-121">
            <paramref name="member" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-121">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="27caf-122">Uma instância do tipo de proprietário para o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-122">An instance of the owner type for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27caf-123">Obtém um valor da propriedade relevante de uma instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-123">Gets a value of the relevant property from an instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27caf-124">O valor da propriedade solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-124">The requested property value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27caf-125">
            <paramref name="instance" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-125">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="27caf-126">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="27caf-127">**- ou -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-127">**-or-**</span>
          </span>
          <span data-ttu-id="27caf-128">Esse método foi invocado em um membro somente gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-128">Invoked this method on a write-only member.</span>
          </span>
          <span data-ttu-id="27caf-129">**- ou -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-129">**-or-**</span>
          </span>
          <span data-ttu-id="27caf-130">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-130">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27caf-131">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="27caf-132">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlMember" />, que inclui casos onde o <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> do <see cref="T:System.Xaml.XamlMember" /> é <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="27caf-133">A implementação base lança <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> é <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="27caf-134">Para propriedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> é <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) a implementação padrão chama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passando <see langword="null" /> como o primeiro parâmetro e empacotado <paramref name="instance" /> no segundo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span>
            </span>
            <span data-ttu-id="27caf-135">Propriedades não-estático, ele chama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> e encaminha o <paramref name="instance" /> como o primeiro parâmetro e um pacote vazio como o segundo parâmetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="27caf-136">Uma instância do tipo de proprietário para o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-136">An instance of the owner type for the member.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="27caf-137">O valor da propriedade a ser definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-137">The property value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27caf-138">Define um valor da propriedade relevante em uma instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-138">Sets a value of the relevant property on an instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27caf-139">
            <paramref name="instance" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-139">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="27caf-140">Esse método foi invocado em um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se baseia em um <see cref="T:System.Xaml.XamlMember" /> desconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="27caf-141">**- ou -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-141">**-or-**</span>
          </span>
          <span data-ttu-id="27caf-142">Esse método foi invocado em um membro somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-142">Invoked this method on a read-only member.</span>
          </span>
          <span data-ttu-id="27caf-143">**- ou -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-143">**-or-**</span>
          </span>
          <span data-ttu-id="27caf-144">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-144">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="27caf-145">A implementação base inclui uma chamada para o auxiliar interno <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="27caf-146">Sempre gera este auxiliar para casos em que um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> baseia desconhecido <see cref="T:System.Xaml.XamlMember" />, que inclui casos onde o <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> do <see cref="T:System.Xaml.XamlMember" /> é <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="27caf-147">A implementação base lança <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> é <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="27caf-148">Para propriedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> é <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) a implementação padrão chama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passando <see langword="null" /> como o primeiro parâmetro e empacotamento <paramref name="instance" /> e <paramref name="value" /> como o segundo parâmetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span>
            </span>
            <span data-ttu-id="27caf-149">Propriedades não-estático, ele chama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> e encaminha <paramref name="instance" /> como primeiro parâmetro e <paramref name="value" /> como segundo parâmetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="27caf-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="27caf-150">A instância com a propriedade a ser examinada quanto à persistência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-150">The instance with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27caf-151">Indica se o valor deve ser persistido ao longo dos processos de serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-151">Indicates whether the value needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27caf-152">Um valor da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-152">A value of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-153">A implementação padrão retorna <xref:System.Xaml.Schema.ShouldSerializeResult.Default> se for o próprio membro XAML <xref:System.Xaml.XamlMember.IsUnknown%2A>, ou se nenhum CLR-reflexão relevante `ShouldSerialize` método foi encontrado no membro subjacente por meio de reflexão do padrão.</span><span class="sxs-lookup"><span data-stu-id="27caf-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27caf-154">Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que obtém valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27caf-155">O <see cref="T:System.Reflection.MethodInfo" /> para o CLR método que obtém valores de propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-156">Esta propriedade depende da chamada <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> sobre a construção de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="27caf-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="27caf-157">Para desconhecido <xref:System.Xaml.XamlMember>, ou para casos onde <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> retorna `null`, essa propriedade retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="27caf-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27caf-158">Obtém a <see cref="T:System.Reflection.MethodInfo" /> para o método do CLR que define valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27caf-159">O <see cref="T:System.Reflection.MethodInfo" /> para o CLR o método que define valores para a propriedade que é relevante para esse <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-160">Esta propriedade depende da chamada <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> sobre a construção de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="27caf-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="27caf-161">Para desconhecido <xref:System.Xaml.XamlMember>, ou para casos onde <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> retorna `null`, essa propriedade retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="27caf-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27caf-162">Fornece um valor estático que representa um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconhecido, que não foi totalmente implementado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27caf-163">Um valor estático que representa desconhecido, não é totalmente implementado <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27caf-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27caf-164">Fornecer esse valor para um <xref:System.Xaml.Schema.XamlMemberInvoker> parâmetro de System. XAML definido API geralmente fará com que o código de chamada a gerar exceções.</span><span class="sxs-lookup"><span data-stu-id="27caf-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>