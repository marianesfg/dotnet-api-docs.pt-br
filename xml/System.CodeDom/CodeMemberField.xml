<Type Name="CodeMemberField" FullName="System.CodeDom.CodeMemberField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d2d12346971e80fc4df59bb5418433e281b5ed7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMemberField : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMemberField extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMemberField" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMemberField&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMemberField : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a730f-101">Representa uma declaração para um campo de um tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a730f-101">Represents a declaration for a field of a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a730f-102"><xref:System.CodeDom.CodeMemberField> pode ser usado para representar a declaração de um campo de um tipo.</span><span class="sxs-lookup"><span data-stu-id="a730f-102"><xref:System.CodeDom.CodeMemberField> can be used to represent the declaration for a field of a type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a730f-103">O exemplo a seguir demonstra o uso de um <xref:System.CodeDom.CodeMemberField> para declarar um campo do tipo `string` chamado `testStringField`.</span><span class="sxs-lookup"><span data-stu-id="a730f-103">The following example demonstrates use of a <xref:System.CodeDom.CodeMemberField> to declare a field of type `string` named `testStringField`.</span></span>  
  
 [!code-cpp[CodeMemberFieldExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberFieldExample/CPP/codememberfieldexample.cpp#2)]
 [!code-csharp[CodeMemberFieldExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldExample/CS/codememberfieldexample.cs#2)]
 [!code-vb[CodeMemberFieldExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldExample/VB/codememberfieldexample.vb#2)]  
  
 [!code-cpp[CodeMemberFieldPublicConstExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeMemberFieldPublicConstExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/CS/class1.cs#1)]
 [!code-vb[CodeMemberFieldPublicConstExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldPublicConstExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a730f-104">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMemberField" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-104">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a730f-105">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMemberField" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-105">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (System.CodeDom.CodeTypeReference type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As CodeTypeReference, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(System::CodeDom::CodeTypeReference ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a730f-106">Um objeto que indica o tipo do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-106">An object that indicates the type of the field.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a730f-107">O nome do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-107">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a730f-108">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMemberField" /> usando o nome e tipo do campo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (string type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(System::String ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a730f-109">O tipo do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-109">The type of the field.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a730f-110">O nome do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-110">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a730f-111">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMemberField" /> usando o nome e tipo do campo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a730f-112">Se o `type` parâmetro faz referência a um tipo genérico, ela deve seguir as convenções de sintaxe para tipos genéricos.</span><span class="sxs-lookup"><span data-stu-id="a730f-112">If the `type` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="a730f-113">Tipos genéricos são formatados da seguinte maneira: o nome do tipo, seguido por um acento grave ("'"), seguido por uma contagem de argumentos de tipo genérico, seguido pelos parâmetros delimitados por colchetes.</span><span class="sxs-lookup"><span data-stu-id="a730f-113">Generic types are formatted as follows: the name of the type, followed by a grave accent ("\`"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a730f-114">Você deve usar colchetes ([]) e não os c# colchetes angulares (<>) para delimitar os parâmetros genéricos.</span><span class="sxs-lookup"><span data-stu-id="a730f-114">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="a730f-115">Para evitar a possibilidade de cometer um erro de sintaxe, considere o uso de <xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29> construtor que usa um tipo em vez de uma cadeia de caracteres como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a730f-115">To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMemberField (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMemberField(Type ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a730f-116">O tipo do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-116">The type of the field.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a730f-117">O nome do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-117">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a730f-118">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMemberField" /> usando o nome e tipo do campo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-118">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitExpression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression InitExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression InitExpression" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberField.InitExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property InitExpression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ InitExpression { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a730f-119">Obtém ou define a expressão de inicialização para o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-119">Gets or sets the initialization expression for the field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a730f-120">A expressão de inicialização para o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-120">The initialization expression for the field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a730f-121">O exemplo a seguir demonstra o uso do <xref:System.CodeDom.CodeMemberField.InitExpression%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="a730f-121">The following example demonstrates the use of the <xref:System.CodeDom.CodeMemberField.InitExpression%2A> property.</span></span>  
  
 [!code-csharp[CodeMemberFieldInit#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberFieldInit/CS/program.cs#1)]
 [!code-vb[CodeMemberFieldInit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberFieldInit/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMemberField.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a730f-122">Obtém ou define o tipo do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-122">Gets or sets the type of the field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a730f-123">O tipo do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a730f-123">The type of the field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>