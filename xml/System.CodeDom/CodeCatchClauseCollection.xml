<Type Name="CodeCatchClauseCollection" FullName="System.CodeDom.CodeCatchClauseCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcb644bf1c9b220470ae3f59c71ad1bfb7391de9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48684411" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeCatchClauseCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCatchClauseCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeCatchClauseCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeCatchClauseCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeCatchClauseCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CodeCatchClauseCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma coleção de objetos <see cref="T:System.CodeDom.CodeCatchClause" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A classe de <xref:System.CodeDom.CodeCatchClauseCollection> fornece um objeto simples de coleção que pode ser usado para armazenar um conjunto de objetos de <xref:System.CodeDom.CodeCatchClause> .  
  
   
  
## Examples  
 O exemplo a seguir demonstra o uso do <xref:System.CodeDom.CodeCatchClauseCollection> métodos de classe. O exemplo cria uma nova instância da classe e usa os métodos para adicionar instruções à coleção, retornar seu índice e adicionar ou remover os atributos em um ponto de índice específico.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeCatchClauseCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeCatchClauseCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeCatchClause" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClauseCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection (System.CodeDom.CodeCatchClause[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCatchClause[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeCatchClause())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClauseCollection(cli::array &lt;System::CodeDom::CodeCatchClause ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeCatchClauseCollection : System.CodeDom.CodeCatchClause[] -&gt; System.CodeDom.CodeCatchClauseCollection" Usage="new System.CodeDom.CodeCatchClauseCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" />
      </Parameters>
      <Docs>
        <param name="value">Uma matriz de objetos <see cref="T:System.CodeDom.CodeCatchClause" /> com os quais inicializar a coleção.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> contendo a matriz de objetos <see cref="T:System.CodeDom.CodeCatchClause" /> especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Um ou mais objetos na matriz são <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection (System.CodeDom.CodeCatchClauseCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCatchClauseCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeCatchClauseCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClauseCollection(System::CodeDom::CodeCatchClauseCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeCatchClauseCollection : System.CodeDom.CodeCatchClauseCollection -&gt; System.CodeDom.CodeCatchClauseCollection" Usage="new System.CodeDom.CodeCatchClauseCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" />
      </Parameters>
      <Docs>
        <param name="value">Um <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> com o qual inicializar a coleção.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" />, que contém os elementos da coleção de origem especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeCatchClause) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeCatchClause ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeCatchClause -&gt; int" Usage="codeCatchClauseCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeCatchClause" /> a ser adicionado.</param>
        <summary>Adiciona o objeto <see cref="T:System.CodeDom.CodeCatchClause" /> especificado à coleção.</summary>
        <returns>O índice no qual o novo elemento foi inserido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como adicionar um <xref:System.CodeDom.CodeCatchClause> do objeto para o <xref:System.CodeDom.CodeCatchClauseCollection> instância.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeCatchClauseCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeCatchClauseCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copia os elementos da matriz <see cref="T:System.CodeDom.CodeCatchClause" /> especificada para o fim da coleção.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeCatchClause[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeCatchClause[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeCatchClause())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::CodeCatchClause ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeCatchClause[] -&gt; unit" Usage="codeCatchClauseCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" />
      </Parameters>
      <Docs>
        <param name="value">Uma matriz do tipo <see cref="T:System.CodeDom.CodeCatchClause" /> que contém os objetos a serem adicionados à coleção.</param>
        <summary>Copia os elementos da matriz <see cref="T:System.CodeDom.CodeCatchClause" /> especificada para o fim da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeCatchClauseCollection.AddRange%28System.CodeDom.CodeCatchClause%5B%5D%29> sobrecarga de método para adicionar os membros de uma matriz de <xref:System.CodeDom.CodeCatchClause> objetos para o <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeCatchClauseCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeCatchClauseCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeCatchClauseCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeCatchClauseCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClauseCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeCatchClauseCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::CodeCatchClauseCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeCatchClauseCollection -&gt; unit" Usage="codeCatchClauseCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" />
      </Parameters>
      <Docs>
        <param name="value">Um <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> que contém os objetos a serem adicionados à coleção.</param>
        <summary>Copia o conteúdo de outro objeto <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> para o final da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeCatchClauseCollection.AddRange%28System.CodeDom.CodeCatchClauseCollection%29> sobrecarga de método para adicionar os membros de um <xref:System.CodeDom.CodeCatchClauseCollection> objeto para outro <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeCatchClauseCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeCatchClauseCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CodeCatchClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::CodeCatchClause ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.CodeCatchClause -&gt; bool" Usage="codeCatchClauseCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeCatchClause" /> a ser localizado na coleção.</param>
        <summary>Obtém um valor que indica se a coleção contém o objeto <see cref="T:System.CodeDom.CodeCatchClause" /> especificado.</summary>
        <returns>
          <see langword="true" /> se a coleção contiver o objeto especificado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir usa o <xref:System.CodeDom.CodeCatchClauseCollection.Contains%2A> método para procurar a presença de um determinado <xref:System.CodeDom.CodeCatchClause> da instância e obtém o valor de índice no qual ele foi encontrado.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeCatchClauseCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeCatchClauseCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeCatchClause[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeCatchClause[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.CopyTo(System.CodeDom.CodeCatchClause[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodeCatchClause(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::CodeCatchClause ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.CodeCatchClause[] * int -&gt; unit" Usage="codeCatchClauseCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeCatchClause[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos valores copiados da coleção.</param>
        <param name="index">O índice da matriz no qual iniciar a inserção.</param>
        <summary>Copia os objetos de coleção para uma instância de <see cref="T:System.Array" /> unidimensional, começando no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como copiar o conteúdo de um <xref:System.CodeDom.CodeCatchClauseCollection> para um <xref:System.CodeDom.CodeCatchClause> começando no valor de índice 0 da matriz.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeCatchClauseCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeCatchClauseCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A matriz de destino é multidimensional.  
  
- ou - 
O número de elementos na <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> é maior do que o espaço disponível entre o índice da matriz de destino especificada pelo parâmetro <paramref name="index" /> e o final da matriz de destino.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="array" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="index" /> é menor do que o índice mínimo da matriz de destino.</exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CodeCatchClause) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::CodeCatchClause ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.CodeCatchClause -&gt; int" Usage="codeCatchClauseCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeCatchClause" /> a ser localizado na coleção.</param>
        <summary>Obtém o índice do objeto <see cref="T:System.CodeDom.CodeCatchClause" /> especificado na coleção, se ele existe na coleção.</summary>
        <returns>O índice do objeto especificado, se encontrado, na coleção; caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir procura a presença de um determinado <xref:System.CodeDom.CodeCatchClause> objeto e usa o <xref:System.CodeDom.CodeCatchClauseCollection.IndexOf%2A> método para obter o valor de índice no qual ele foi encontrado.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeCatchClauseCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeCatchClauseCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Insert(System.Int32,System.CodeDom.CodeCatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CodeCatchClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::CodeCatchClause ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.CodeCatchClause -&gt; unit" Usage="codeCatchClauseCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="index">O índice baseado em zero em que o objeto especificado deverá ser inserido.</param>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeCatchClause" /> a ser inserido.</param>
        <summary>Insere o objeto <see cref="T:System.CodeDom.CodeCatchClause" /> especificado na coleção no índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeCatchClauseCollection.Insert%2A> método para adicionar um <xref:System.CodeDom.CodeCatchClause> do objeto para um <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeCatchClauseCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeCatchClauseCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCatchClause this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCatchClause Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClauseCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodeCatchClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeCatchClause ^ default[int] { System::CodeDom::CodeCatchClause ^ get(int index); void set(int index, System::CodeDom::CodeCatchClause ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.CodeCatchClause with get, set" Usage="System.CodeDom.CodeCatchClauseCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCatchClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice da coleção a ser acessada.</param>
        <summary>Obtém ou define o objeto <see cref="T:System.CodeDom.CodeCatchClause" /> no índice especificado na coleção.</summary>
        <value>Um <see cref="T:System.CodeDom.CodeCatchClause" /> objeto em cada índice válido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade é um indexador que pode ser usado para acessar a coleção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="index" /> está fora do intervalo válido de índices para a coleção.</exception>
        <altmember cref="T:System.CodeDom.CodeCatchClause" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Remove(System.CodeDom.CodeCatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CodeCatchClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::CodeCatchClause ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.CodeCatchClause -&gt; unit" Usage="codeCatchClauseCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">O objeto <see cref="T:System.CodeDom.CodeCatchClause" /> a ser removido da coleção.</param>
        <summary>Remove o objeto <see cref="T:System.CodeDom.CodeCatchClause" /> especificado da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.CodeDom.CodeCatchClauseCollection.Remove%2A> método para excluir uma <xref:System.CodeDom.CodeCatchClause> do objeto de um <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeCatchClauseCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeCatchClauseCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O objeto especificado não foi localizado na coleção.</exception>
      </Docs>
    </Member>
  </Members>
</Type>