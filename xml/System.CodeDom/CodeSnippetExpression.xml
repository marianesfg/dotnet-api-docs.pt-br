<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeSnippetExpression.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac548fbb8f9e5551fd94c36487c94c413e29fc7883c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48fbb8f9e5551fd94c36487c94c413e29fc7883c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>Represents a literal expression.</source>
          <target state="translated">Representa uma expressão literal.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>A literal expression stores the code of an expression as a literal code fragment.</source>
          <target state="translated">Uma expressão literal armazena o código de uma expressão como um fragmento de código literal.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>The CodeDOM does not translate literal code fragments.</source>
          <target state="translated">O CodeDOM não converte fragmentos de código literal.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>Literal code fragments are stored and output just as they are.</source>
          <target state="translated">Fragmentos de código literal são armazenados e como elas são de saída.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</source>
          <target state="translated">Objetos de codeDOM que contêm código literal são fornecidos para que os desenvolvedores podem encapsular o código que já está no idioma de destino.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression.Value%2A&gt;</ph> property contains the literal code for this snippet expression.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression.Value%2A&gt;</ph> propriedade contém o código literal para esta expressão de trecho de código.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> class using a literal code fragment.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar uma instância do <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> classe usando um fragmento de código literal.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetExpression">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetExpression.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetExpression.#ctor(System.String)">
          <source>The literal expression to represent.</source>
          <target state="translated">A expressão literal a representar.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetExpression.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph> class using the specified literal expression.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetExpression" /&gt;</ph> usando a expressão literal especificada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeSnippetExpression.#ctor(System.String)">
          <source>The following code example demonstrates in the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression.%23ctor%2A&gt;</ph> constructor to create an instance of the <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetExpression.%23ctor%2A&gt;</ph> construtor para criar uma instância do <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeSnippetExpression.Value">
          <source>Gets or sets the literal string of code.</source>
          <target state="translated">Obtém ou define a cadeia de caracteres literal de código.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeSnippetExpression.Value">
          <source>The literal string.</source>
          <target state="translated">A cadeia de caracteres literal.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeSnippetExpression.Value">
          <source>This can contain code or comments.</source>
          <target state="translated">Isso pode conter código ou comentários.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>