<Type Name="CodeMethodReferenceExpression" FullName="System.CodeDom.CodeMethodReferenceExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d87912350e5486c8a6904ea35fbcecfc0946bae2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39832667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeMethodReferenceExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMethodReferenceExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMethodReferenceExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMethodReferenceExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMethodReferenceExpression : System::CodeDom::CodeExpression" />
  <TypeSignature Language="F#" Value="type CodeMethodReferenceExpression = class&#xA;    inherit CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="66339-101">Representa uma referência a um método.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66339-101">Represents a reference to a method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66339-102">Um <xref:System.CodeDom.CodeMethodReferenceExpression> pode ser usado para representar uma expressão do formulário Object. Method.</span><span class="sxs-lookup"><span data-stu-id="66339-102">A <xref:System.CodeDom.CodeMethodReferenceExpression> can be used to represent an expression of the form Object.Method.</span></span>  
  
 <span data-ttu-id="66339-103">O <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> propriedade indica o objeto que contém o método.</span><span class="sxs-lookup"><span data-stu-id="66339-103">The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method.</span></span> <span data-ttu-id="66339-104">O <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> propriedade indica o nome do método.</span><span class="sxs-lookup"><span data-stu-id="66339-104">The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method.</span></span>  
  
 <span data-ttu-id="66339-105">Um <xref:System.CodeDom.CodeMethodReferenceExpression> é usado com um <xref:System.CodeDom.CodeMethodInvokeExpression> para indicar o método a ser invocado e com um <xref:System.CodeDom.CodeDelegateCreateExpression> para indicar o método para manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="66339-105">A <xref:System.CodeDom.CodeMethodReferenceExpression> is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66339-106">O seguinte exemplo de código usa um <xref:System.CodeDom.CodeMethodReferenceExpression> para se referir a um método:</span><span class="sxs-lookup"><span data-stu-id="66339-106">The following code example uses a <xref:System.CodeDom.CodeMethodReferenceExpression> to refer to a method:</span></span>  
  
 [!code-cpp[CodeMethodReferenceExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMethodReferenceExample/CPP/codemethodreferenceexample.cpp#3)]
 [!code-csharp[CodeMethodReferenceExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMethodReferenceExample/CS/codemethodreferenceexample.cs#3)]
 [!code-vb[CodeMethodReferenceExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMethodReferenceExample/VB/codemethodreferenceexample.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66339-107">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodReferenceExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodReferenceExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodReferenceExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66339-108">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression, methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodReferenceExpression(System::CodeDom::CodeExpression ^ targetObject, System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeMethodReferenceExpression : System.CodeDom.CodeExpression * string -&gt; System.CodeDom.CodeMethodReferenceExpression" Usage="new System.CodeDom.CodeMethodReferenceExpression (targetObject, methodName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetObject">
          <span data-ttu-id="66339-109">Um <see cref="T:System.CodeDom.CodeExpression" /> que indica o objeto a usar como destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-109">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object to target.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="66339-110">O nome do método a ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-110">The name of the method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66339-111">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> usando o nome do método e o objeto de destino especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class using the specified target object and method name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName, params System.CodeDom.CodeTypeReference[] typeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName, class System.CodeDom.CodeTypeReference[] typeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression, methodName As String, ParamArray typeParameters As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodReferenceExpression(System::CodeDom::CodeExpression ^ targetObject, System::String ^ methodName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeParameters);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeMethodReferenceExpression : System.CodeDom.CodeExpression * string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeMethodReferenceExpression" Usage="new System.CodeDom.CodeMethodReferenceExpression (targetObject, methodName, typeParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeParameters" Type="System.CodeDom.CodeTypeReference[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetObject">
          <span data-ttu-id="66339-112">Um <see cref="T:System.CodeDom.CodeExpression" /> que indica o objeto a usar como destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-112">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object to target.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="66339-113">O nome do método a ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-113">The name of the method to call.</span>
          </span>
        </param>
        <param name="typeParameters">
          <span data-ttu-id="66339-114">Uma matriz de valores <see cref="T:System.CodeDom.CodeTypeReference" /> que especificam o <see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /> para este <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-114">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values that specify the <see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /> for this <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66339-115">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> usando os argumentos de tipo genérico, o nome do método e o objeto de destino especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class using the specified target object, method name, and generic type arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66339-116">O `typeParameters` parâmetro representa uma coleção de referências de tipo deve ser substituído para as referências de parâmetro de tipo do método genérico atual.</span><span class="sxs-lookup"><span data-stu-id="66339-116">The `typeParameters` parameter represents a collection of type references to be substituted for the type parameter references of the current generic method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66339-117">O exemplo de código a seguir mostra o uso desse construtor.</span><span class="sxs-lookup"><span data-stu-id="66339-117">The following code example shows the use of this constructor.</span></span>  
  
 [!code-cpp[System.CodeDom.CodeMethodReferenceExpression#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.codedom.codemethodreferenceexpression/cpp/source.cpp#1)]
 [!code-csharp[System.CodeDom.CodeMethodReferenceExpression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.codedom.codemethodreferenceexpression/cs/source.cs#1)]
 [!code-vb[System.CodeDom.CodeMethodReferenceExpression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.codedom.codemethodreferenceexpression/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMethodReferenceExpression.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.CodeDom.CodeMethodReferenceExpression.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66339-118">Obtém ou define o nome do método a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-118">Gets or sets the name of the method to reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66339-119">O nome do método a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-119">The name of the method to reference.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression TargetObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMethodReferenceExpression.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetObject As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ TargetObject { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.CodeDom.CodeExpression with get, set" Usage="System.CodeDom.CodeMethodReferenceExpression.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66339-120">Obtém ou define a expressão que indica o método a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-120">Gets or sets the expression that indicates the method to reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66339-121">Um <see cref="T:System.CodeDom.CodeExpression" /> que representa o método a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-121">A <see cref="T:System.CodeDom.CodeExpression" /> that represents the method to reference.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeMethodReferenceExpression.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66339-122">Obtém os argumentos de tipo para a expressão de referência de método genérico atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-122">Gets the type arguments for the current generic method reference expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66339-123">Um <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que contém os argumentos de tipo para o código atual <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66339-123">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current code <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66339-124">O <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments%2A> propriedade representa uma coleção de referências de tipo deve ser substituído para as referências de parâmetro de tipo do método genérico atual.</span><span class="sxs-lookup"><span data-stu-id="66339-124">The <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments%2A> property represents a collection of type references to be substituted for the type parameter references of the current generic method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>