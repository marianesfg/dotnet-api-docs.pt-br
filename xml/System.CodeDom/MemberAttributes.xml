<Type Name="MemberAttributes" FullName="System.CodeDom.MemberAttributes">
  <TypeSignature Language="C#" Value="public enum MemberAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MemberAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.MemberAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum MemberAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class MemberAttributes" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68b0c-101">Define os identificadores de atributo de membro para membros de classe.</span><span class="sxs-lookup"><span data-stu-id="68b0c-101">Defines member attribute identifiers for class members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b0c-102">Os identificadores definidos no <xref:System.CodeDom.MemberAttributes> enumeração pode ser usada para indicar os atributos de escopo e o acesso de um membro de classe.</span><span class="sxs-lookup"><span data-stu-id="68b0c-102">The identifiers defined in the <xref:System.CodeDom.MemberAttributes> enumeration can be used to indicate the scope and access attributes of a class member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68b0c-103">Não há nenhum `Virtual` atributo de membro.</span><span class="sxs-lookup"><span data-stu-id="68b0c-103">There is no `Virtual` member attribute.</span></span> <span data-ttu-id="68b0c-104">Um membro é declarado virtual definindo o acesso de membro para o público (`property1.Attributes = MemberAttributes.Public`) sem especificá-la como Final.</span><span class="sxs-lookup"><span data-stu-id="68b0c-104">A member is declared virtual by setting its member access to Public (`property1.Attributes = MemberAttributes.Public`) without specifying it as Final.</span></span> <span data-ttu-id="68b0c-105">A ausência do sinalizador Final faz com que um membro `virtual` em c# (`public virtual`), `overrideable` no Visual Basic (`Public Overrideable`).</span><span class="sxs-lookup"><span data-stu-id="68b0c-105">The absence of the Final flag makes a member `virtual` in C# (`public virtual`), `overrideable` in Visual Basic (`Public Overrideable`).</span></span> <span data-ttu-id="68b0c-106">Para evitar a declaração de membro como `virtual` ou `overrideable`, defina ambos público e de sinalizadores no Final do <xref:System.CodeDom.CodeTypeMember.Attributes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="68b0c-106">To avoid declaring the member as `virtual` or `overrideable`, set both the Public and Final flags in the <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property.</span></span> <span data-ttu-id="68b0c-107">Consulte o <xref:System.CodeDom.CodeTypeMember.Attributes%2A> propriedade para obter mais informações sobre como definir atributos de membro.</span><span class="sxs-lookup"><span data-stu-id="68b0c-107">See the <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property for more information on setting member attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68b0c-108">O padrão para definir os sinalizadores de acesso (que contém os termos de sinalizadores `Public`, `Private`, `Assembly`, ou `Family`) é a máscara de todos os sinalizadores de acesso usando a máscara de AccessMask e, em seguida, defina o sinalizador de acesso desejado.</span><span class="sxs-lookup"><span data-stu-id="68b0c-108">The pattern for setting the access flags (flags containing the terms `Public`, `Private`, `Assembly`, or `Family`) is to mask out all access flags using the AccessMask mask and then set the desired access flag.</span></span> <span data-ttu-id="68b0c-109">Por exemplo, a instrução de código para identificar um construtor (denominado `constructor1`) como público é `constructor1.Attributes = (constructor1.Attributes & ~MemberAttributes.AccessMask) | MemberAttributes.Public;`.</span><span class="sxs-lookup"><span data-stu-id="68b0c-109">For example, the code statement to identify a constructor (named `constructor1`) as public is `constructor1.Attributes = (constructor1.Attributes & ~MemberAttributes.AccessMask) | MemberAttributes.Public;`.</span></span> <span data-ttu-id="68b0c-110">Definindo o <xref:System.CodeDom.CodeTypeMember.Attributes%2A> propriedade diretamente a um sinalizador de acesso (por exemplo, `constructor1.Attributes = MemberAttributes.Public;`) apaga todos os outros sinalizadores que podem ser definidos.</span><span class="sxs-lookup"><span data-stu-id="68b0c-110">Setting the <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property directly to an access flag (for example, `constructor1.Attributes = MemberAttributes.Public;`) erases all other flags that might be set.</span></span> <span data-ttu-id="68b0c-111">Esse padrão também deve ser usado para definir os sinalizadores de escopo (Abstract, Final, estático, substituição ou Const) usando a máscara ScopeMask.</span><span class="sxs-lookup"><span data-stu-id="68b0c-111">This pattern should also be used for setting the scope flags (Abstract, Final, Static, Override or Const) using the ScopeMask mask.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b0c-112">O exemplo de código a seguir demonstra o uso de um <xref:System.CodeDom.CodeMemberProperty> para definir um `string` propriedade com `get` e `set` acessadores.</span><span class="sxs-lookup"><span data-stu-id="68b0c-112">The following example code demonstrates use of a <xref:System.CodeDom.CodeMemberProperty> to define a `string` property with `get` and `set` accessors.</span></span>  
  
 [!code-cpp[CodeMemberPropertyExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMemberPropertyExample/CPP/codememberpropertyexample.cpp#3)]
 [!code-csharp[CodeMemberPropertyExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMemberPropertyExample/CS/codememberpropertyexample.cs#3)]
 [!code-vb[CodeMemberPropertyExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMemberPropertyExample/VB/codememberpropertyexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeTypeMember" />
    <altmember cref="T:System.CodeDom.CodeMemberProperty" />
    <altmember cref="T:System.CodeDom.CodeMemberMethod" />
    <altmember cref="T:System.CodeDom.CodeConstructor" />
  </Docs>
  <Members>
    <Member MemberName="Abstract">
      <MemberSignature Language="C#" Value="Abstract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Abstract = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Abstract" />
      <MemberSignature Language="VB.NET" Value="Abstract" />
      <MemberSignature Language="C++ CLI" Value="Abstract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-113">Um membro abstrato.</span><span class="sxs-lookup"><span data-stu-id="68b0c-113">An abstract member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AccessMask">
      <MemberSignature Language="C#" Value="AccessMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes AccessMask = int32(61440)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.AccessMask" />
      <MemberSignature Language="VB.NET" Value="AccessMask" />
      <MemberSignature Language="C++ CLI" Value="AccessMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>61440</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-114">Uma máscara de acesso.</span><span class="sxs-lookup"><span data-stu-id="68b0c-114">An access mask.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="Assembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Assembly = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Assembly" />
      <MemberSignature Language="VB.NET" Value="Assembly" />
      <MemberSignature Language="C++ CLI" Value="Assembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-115">Um membro que é acessível a qualquer classe dentro do mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="68b0c-115">A member that is accessible to any class within the same assembly.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Const">
      <MemberSignature Language="C#" Value="Const" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Const = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Const" />
      <MemberSignature Language="VB.NET" Value="Const" />
      <MemberSignature Language="C++ CLI" Value="Const" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-116">Um membro constante.</span><span class="sxs-lookup"><span data-stu-id="68b0c-116">A constant member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="Family" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Family = int32(12288)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Family" />
      <MemberSignature Language="VB.NET" Value="Family" />
      <MemberSignature Language="C++ CLI" Value="Family" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>12288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-117">Um membro que é acessível dentro da família de sua classe e classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="68b0c-117">A member that is accessible within the family of its class and derived classes.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FamilyAndAssembly">
      <MemberSignature Language="C#" Value="FamilyAndAssembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes FamilyAndAssembly = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.FamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="FamilyAndAssembly" />
      <MemberSignature Language="C++ CLI" Value="FamilyAndAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-118">Um membro que é acessível dentro de sua classe e classes derivadas no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="68b0c-118">A member that is accessible within its class, and derived classes in the same assembly.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FamilyOrAssembly">
      <MemberSignature Language="C#" Value="FamilyOrAssembly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes FamilyOrAssembly = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.FamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="FamilyOrAssembly" />
      <MemberSignature Language="C++ CLI" Value="FamilyOrAssembly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-119">Um membro que é acessível dentro de sua classe, suas classes derivadas em qualquer assembly e qualquer classe no mesmo assembly.</span><span class="sxs-lookup"><span data-stu-id="68b0c-119">A member that is accessible within its class, its derived classes in any assembly, and any class in the same assembly.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="Final" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Final = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Final" />
      <MemberSignature Language="VB.NET" Value="Final" />
      <MemberSignature Language="C++ CLI" Value="Final" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-120">Um membro que não pode ser substituído em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="68b0c-120">A member that cannot be overridden in a derived class.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="New" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes New = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.New" />
      <MemberSignature Language="VB.NET" Value="New" />
      <MemberSignature Language="C++ CLI" Value="New" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-121">Um novo membro.</span><span class="sxs-lookup"><span data-stu-id="68b0c-121">A new member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Overloaded">
      <MemberSignature Language="C#" Value="Overloaded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Overloaded = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Overloaded" />
      <MemberSignature Language="VB.NET" Value="Overloaded" />
      <MemberSignature Language="C++ CLI" Value="Overloaded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-122">Um membro sobrecarregado.</span><span class="sxs-lookup"><span data-stu-id="68b0c-122">An overloaded member.</span></span> <span data-ttu-id="68b0c-123">Algumas linguagens, como Visual Basic, exigem que os membros sobrecarregados sejam indicados explicitamente.</span><span class="sxs-lookup"><span data-stu-id="68b0c-123">Some languages, such as Visual Basic, require overloaded members to be explicitly indicated.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Override">
      <MemberSignature Language="C#" Value="Override" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Override = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Override" />
      <MemberSignature Language="VB.NET" Value="Override" />
      <MemberSignature Language="C++ CLI" Value="Override" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-124">Um membro que substitui um membro da classe base.</span><span class="sxs-lookup"><span data-stu-id="68b0c-124">A member that overrides a base class member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Private">
      <MemberSignature Language="C#" Value="Private" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Private = int32(20480)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Private" />
      <MemberSignature Language="VB.NET" Value="Private" />
      <MemberSignature Language="C++ CLI" Value="Private" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>20480</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-125">Um membro privado.</span><span class="sxs-lookup"><span data-stu-id="68b0c-125">A private member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Public">
      <MemberSignature Language="C#" Value="Public" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Public = int32(24576)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Public" />
      <MemberSignature Language="VB.NET" Value="Public" />
      <MemberSignature Language="C++ CLI" Value="Public" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>24576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-126">Um membro público.</span><span class="sxs-lookup"><span data-stu-id="68b0c-126">A public member.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ScopeMask">
      <MemberSignature Language="C#" Value="ScopeMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes ScopeMask = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.ScopeMask" />
      <MemberSignature Language="VB.NET" Value="ScopeMask" />
      <MemberSignature Language="C++ CLI" Value="ScopeMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-127">Uma máscara de escopo.</span><span class="sxs-lookup"><span data-stu-id="68b0c-127">A scope mask.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes Static = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-128">Um membro estático.</span><span class="sxs-lookup"><span data-stu-id="68b0c-128">A static member.</span></span> <span data-ttu-id="68b0c-129">No Visual Basic, isso é equivalente à palavra-chave <see langword="Shared" />.</span><span class="sxs-lookup"><span data-stu-id="68b0c-129">In Visual Basic, this is equivalent to the <see langword="Shared" /> keyword.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="VTableMask">
      <MemberSignature Language="C#" Value="VTableMask" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.MemberAttributes VTableMask = int32(240)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.MemberAttributes.VTableMask" />
      <MemberSignature Language="VB.NET" Value="VTableMask" />
      <MemberSignature Language="C++ CLI" Value="VTableMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>240</MemberValue>
      <Docs>
        <summary><span data-ttu-id="68b0c-130">Uma máscara VTable.</span><span class="sxs-lookup"><span data-stu-id="68b0c-130">A VTable mask.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>