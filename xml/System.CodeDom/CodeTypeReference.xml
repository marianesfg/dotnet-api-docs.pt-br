<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f03f72974886f6b4f634602c04da88456df81be" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39950665" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeTypeReference = class&#xA;    inherit CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f96a-101">Representa uma referência a um tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f96a-101">Represents a reference to a type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-102">Um <xref:System.CodeDom.CodeTypeReference> objeto é usado para representar um tipo para objetos de CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="1f96a-102">A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects.</span></span> <span data-ttu-id="1f96a-103">Quando os tipos CodeDOM têm um `Type` propriedade, ela é do tipo <xref:System.CodeDom.CodeTypeReference>.</span><span class="sxs-lookup"><span data-stu-id="1f96a-103">When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>.</span></span> <span data-ttu-id="1f96a-104">Por exemplo, o <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> propriedade é um <xref:System.CodeDom.CodeTypeReference> que representa o tipo de dados de um campo.</span><span class="sxs-lookup"><span data-stu-id="1f96a-104">For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.</span></span>  
  
 <span data-ttu-id="1f96a-105">Um <xref:System.CodeDom.CodeTypeReference> pode ser inicializado com um <xref:System.Type> objeto ou uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="1f96a-105">A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string.</span></span> <span data-ttu-id="1f96a-106">Geralmente, é recomendável usar um <xref:System.Type> para fazer isso, embora não seja sempre possível.</span><span class="sxs-lookup"><span data-stu-id="1f96a-106">It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible.</span></span> <span data-ttu-id="1f96a-107">Se a inicialização de uma instância dessa classe com uma cadeia de caracteres, ele é altamente recomendável sempre usar tipos totalmente qualificados, como "System", em vez de apenas "Console", porque nem todas as linguagens dão suporte à importação namespaces.</span><span class="sxs-lookup"><span data-stu-id="1f96a-107">If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</span></span> <span data-ttu-id="1f96a-108">Tipos de matriz podem ser especificados passando um objeto de tipo para uma matriz ou usando um dos construtores que aceitam classificação como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="1f96a-108">Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</span></span>  
  
 <span data-ttu-id="1f96a-109">O <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade especifica o nome do tipo a referenciar.</span><span class="sxs-lookup"><span data-stu-id="1f96a-109">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference.</span></span> <span data-ttu-id="1f96a-110">Para referências a tipos de matriz, o <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> propriedade indica o tipo dos elementos da matriz e o <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> propriedade indica o número de dimensões na matriz.</span><span class="sxs-lookup"><span data-stu-id="1f96a-110">For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f96a-111">O exemplo a seguir demonstra o uso de um <xref:System.CodeDom.CodeTypeReference> para representar uma referência a um tipo.</span><span class="sxs-lookup"><span data-stu-id="1f96a-111">The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.</span></span>  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-112">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-113">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-114">Este construtor cria uma vazia <xref:System.CodeDom.CodeTypeReference> objeto.</span><span class="sxs-lookup"><span data-stu-id="1f96a-114">This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.</span></span>  <span data-ttu-id="1f96a-115">Se você usar esse construtor, defina propriedades para estabelecer a referência de tipo.</span><span class="sxs-lookup"><span data-stu-id="1f96a-115">If you use this constructor, set properties to establish the type reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeParameter -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeParameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" />
      </Parameters>
      <Docs>
        <param name="typeParameter">
          <span data-ttu-id="1f96a-116">Um <see cref="T:System.CodeDom.CodeTypeParameter" /> que representa o tipo do parâmetro de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-117">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o parâmetro de tipo de código especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-117">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="1f96a-118">O nome do tipo a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-118">The name of the type to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-119">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o nome do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-119">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-120">Se o `typeName` parâmetro faz referência a um tipo genérico, ele deve seguir as convenções de sintaxe para tipos genéricos.</span><span class="sxs-lookup"><span data-stu-id="1f96a-120">If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="1f96a-121">Por exemplo, a assinatura de reflexão para um <xref:System.Collections.Generic.Dictionary%602> tipo, onde `K` é uma cadeia de caracteres e `V` é uma <xref:System.Collections.Generic.List%601> de inteiros, é representado por reflexão, como o seguinte (com as informações de assembly removidas): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span><span class="sxs-lookup"><span data-stu-id="1f96a-121">For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f96a-122">Você deve usar colchetes ([]) e não os c# entre colchetes angulares (<>) para delimitar os parâmetros genéricos.</span><span class="sxs-lookup"><span data-stu-id="1f96a-122">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="1f96a-123">Para evitar a possibilidade de cometer um erro no especificando a sintaxe, considere o uso do construtor que usa um tipo como um parâmetro em vez de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="1f96a-123">To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f96a-124">O <see cref="T:System.Type" /> a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-124">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-125">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-125">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f96a-126">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-126">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (arrayType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">
          <span data-ttu-id="1f96a-127">Um <see cref="T:System.CodeDom.CodeTypeReference" /> que indica o tipo da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="1f96a-128">O número de dimensões na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-128">The number of dimensions in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-129">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando a classificação e o tipo de matriz especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-129">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-130">Esse construtor pode ser usado para construir matrizes de matrizes aninhando <xref:System.CodeDom.CodeTypeReference> objetos.</span><span class="sxs-lookup"><span data-stu-id="1f96a-130">This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="1f96a-131">O nome do tipo a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-131">The name of the type to reference.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="1f96a-132">Uma matriz de valores <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-132">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-133">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o nome do tipo e os argumentos de tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-133">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="1f96a-134">O nome do tipo a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-134">The name of the type to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="1f96a-135">A opção de referência de tipo de código, um dos valores de <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-135">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-136">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando o nome do tipo e a opção de referência de tipo de código especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-136">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (baseType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType">
          <span data-ttu-id="1f96a-137">O nome do tipo dos elementos da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-137">The name of the type of the elements of the array.</span>
          </span>
        </param>
        <param name="rank">
          <span data-ttu-id="1f96a-138">O número de dimensões da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-138">The number of dimensions of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-139">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando a classificação, o nome e o tipo de matriz especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-139">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (type, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f96a-140">O <see cref="T:System.Type" /> a referenciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-140">The <see cref="T:System.Type" /> to reference.</span>
          </span>
        </param>
        <param name="codeTypeReferenceOption">
          <span data-ttu-id="1f96a-141">A opção de referência de tipo de código, um dos valores de <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-141">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f96a-142">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.CodeTypeReference" /> usando a referência de tipo de código e o tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-142">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayElementType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-143">Obtém ou define tipo dos elementos na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-143">Gets or sets the type of the elements in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f96a-144">Um <see cref="T:System.CodeDom.CodeTypeReference" /> que indica o tipo dos elementos da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-145">Isso é ignorado, a menos que o <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> propriedade é maior que ou igual a 1.</span><span class="sxs-lookup"><span data-stu-id="1f96a-145">This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayRank : int with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-146">Obtém ou define a classificação da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-146">Gets or sets the array rank of the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f96a-147">O número de dimensões da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-147">The number of dimensions of the array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : string with get, set" Usage="System.CodeDom.CodeTypeReference.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-148">Obtém ou define o nome do tipo sendo referenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-148">Gets or sets the name of the type being referenced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f96a-149">O nome do tipo que está sendo referenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-149">The name of the type being referenced.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-150">Esta propriedade contém o nome do tipo, a menos que ele é um tipo de matriz, nesse caso, ele é o tipo de elemento de matriz.</span><span class="sxs-lookup"><span data-stu-id="1f96a-150">This property contains the name of the type unless it is an array type, in which case it is the array element type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f96a-151">O nome da propriedade pode ser enganoso.</span><span class="sxs-lookup"><span data-stu-id="1f96a-151">The name of the property may be misleading.</span></span> <span data-ttu-id="1f96a-152">Esta propriedade contém apenas o nome de tipo com quaisquer adornos de matriz ou argumentos de tipo genérico removida, não o tipo base ou pai como se poderia esperar.</span><span class="sxs-lookup"><span data-stu-id="1f96a-152">This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</span></span> <span data-ttu-id="1f96a-153">Por exemplo, o <xref:System.CodeDom.CodeTypeReference.BaseType%2A> valor para ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` é ``System.Collections.Generic.Dictionary`2``.</span><span class="sxs-lookup"><span data-stu-id="1f96a-153">For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.</span></span>  
  
## <a name="representation-of-generic-types"></a><span data-ttu-id="1f96a-154">Representação de tipos genéricos</span><span class="sxs-lookup"><span data-stu-id="1f96a-154">Representation of Generic Types</span></span>  
 <span data-ttu-id="1f96a-155">As informações desta seção são destinadas a desenvolvedores de provedor de CodeDom e só se aplica às linguagens compatíveis com CLS.</span><span class="sxs-lookup"><span data-stu-id="1f96a-155">The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</span></span> <span data-ttu-id="1f96a-156">O valor retornado pode conter tipos genéricos.</span><span class="sxs-lookup"><span data-stu-id="1f96a-156">The return value can contain generic types.</span></span> <span data-ttu-id="1f96a-157">Tipos genéricos são formatados com o nome do tipo seguido por um acento grave ("'") seguido por uma contagem dos argumentos de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="1f96a-157">Generic types are formatted with the name of the type followed by a grave accent ("\`") followed by a count of the generic type arguments.</span></span> <span data-ttu-id="1f96a-158">Os argumentos de tipo genérico podem ser encontrados na <xref:System.CodeDom.CodeTypeReferenceCollection> retornado pelo <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1f96a-158">The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property.</span></span> <span data-ttu-id="1f96a-159">Os valores retornados pelo <xref:System.CodeDom.CodeTypeReference.BaseType%2A> e os respectivos <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contêm o mesmo conteúdo, como o valor do tipo retornado por reflexão.</span><span class="sxs-lookup"><span data-stu-id="1f96a-159">The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.</span></span>  
  
 <span data-ttu-id="1f96a-160">Por exemplo, um construído <xref:System.Collections.Generic.Dictionary%602> onde `K` é uma cadeia de caracteres e `V` é um construído <xref:System.Collections.Generic.List%601> de inteiros é representado por reflexão, como o seguinte (com as informações de assembly removidas):</span><span class="sxs-lookup"><span data-stu-id="1f96a-160">For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):</span></span>  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 <span data-ttu-id="1f96a-161">Análise recursivamente a <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade do <xref:System.CodeDom.CodeTypeReference> para <xref:System.Collections.Generic.Dictionary%602> produz as mesmas cadeias de caracteres como a representação de reflexão acima:</span><span class="sxs-lookup"><span data-stu-id="1f96a-161">Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:</span></span>  
  
-   <span data-ttu-id="1f96a-162">O <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade para o pai <xref:System.CodeDom.CodeTypeReference> retorna o seguinte:</span><span class="sxs-lookup"><span data-stu-id="1f96a-162">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <span data-ttu-id="1f96a-163">O <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade para a primeira <xref:System.CodeDom.CodeTypeReference> do objeto no <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> coleção retorna o seguinte:</span><span class="sxs-lookup"><span data-stu-id="1f96a-163">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.String  
    ```  
  
-   <span data-ttu-id="1f96a-164">O <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade para a segunda <xref:System.CodeDom.CodeTypeReference> do objeto no <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> coleção retorna o seguinte:</span><span class="sxs-lookup"><span data-stu-id="1f96a-164">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <span data-ttu-id="1f96a-165">O <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriedade em de <xref:System.CodeDom.CodeTypeReference> do objeto para ``System.Collections.Generic.List`1`` retorna o seguinte:</span><span class="sxs-lookup"><span data-stu-id="1f96a-165">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:</span></span>  
  
    ```  
    System.Int32  
    ```  
  
 <span data-ttu-id="1f96a-166">A contagem de argumentos de tipo deve ser usada durante a análise associado <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> valores.</span><span class="sxs-lookup"><span data-stu-id="1f96a-166">The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values.</span></span> <span data-ttu-id="1f96a-167">A prática comum é remover a contagem de argumentos de tipo do código gerado, mas a prática é específico do compilador.</span><span class="sxs-lookup"><span data-stu-id="1f96a-167">The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</span></span>  <span data-ttu-id="1f96a-168">É importante observar que a contagem de argumentos de tipo pode ser encontrada em um nome de tipo aninhado, nesse caso, ele é seguido por um sinal de adição ("+").</span><span class="sxs-lookup"><span data-stu-id="1f96a-168">It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f96a-169">Durante a criação de um genérico <xref:System.CodeDom.CodeTypeReference>, a prática recomendada é especificar os argumentos de tipo como <xref:System.CodeDom.CodeTypeReference> objetos ou use o construtor que usa um <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="1f96a-169">When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>.</span></span> <span data-ttu-id="1f96a-170">Uso do construtor que cria um <xref:System.CodeDom.CodeTypeReference> de uma cadeia de caracteres pode levar a erros de argumento de tipo undiscoverable.</span><span class="sxs-lookup"><span data-stu-id="1f96a-170">Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.CodeTypeReferenceOptions with get, set" Usage="System.CodeDom.CodeTypeReference.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-171">Obtém ou define opção de referência de tipo de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-171">Gets or sets the code type reference option.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f96a-172">Uma combinação bit a bit dos valores <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-172">A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f96a-173">Obtém os argumentos de tipo para a referência de tipo genérico atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-173">Gets the type arguments for the current generic type reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f96a-174">Um <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> que contém os argumentos de tipo atual <see cref="T:System.CodeDom.CodeTypeReference" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f96a-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f96a-175">O <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> propriedade é uma coleção de referências de tipo deve ser substituído para as referências de parâmetro de tipo do tipo genérico atual.</span><span class="sxs-lookup"><span data-stu-id="1f96a-175">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type.</span></span> <span data-ttu-id="1f96a-176">A coleção contém todos os argumentos de tipo para todos os tipos aninhados.</span><span class="sxs-lookup"><span data-stu-id="1f96a-176">The collection contains all the type arguments for all nested types.</span></span> <span data-ttu-id="1f96a-177">Por exemplo, consulte o <xref:System.CodeDom.CodeTypeReference.BaseType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1f96a-177">For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>