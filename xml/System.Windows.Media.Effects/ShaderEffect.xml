<Type Name="ShaderEffect" FullName="System.Windows.Media.Effects.ShaderEffect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1be85280e5255a74ce6d6e030ac8bef596ddfdce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669360" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ShaderEffect : System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ShaderEffect extends System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.ShaderEffect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ShaderEffect&#xA;Inherits Effect" />
  <TypeSignature Language="C++ CLI" Value="public ref class ShaderEffect abstract : System::Windows::Media::Effects::Effect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.Effect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="20ef1-101">Fornece um efeito de bitmap personalizado usando um <see cref="T:System.Windows.Media.Effects.PixelShader" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20ef1-101">Provides a custom bitmap effect by using a <see cref="T:System.Windows.Media.Effects.PixelShader" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-102">Derivam de <xref:System.Windows.Media.Effects.ShaderEffect> classe para implementar um efeito personalizado com base em um sombreador de pixel único.</span><span class="sxs-lookup"><span data-stu-id="20ef1-102">Derive from the <xref:System.Windows.Media.Effects.ShaderEffect> class to implement a custom effect based on a single pixel shader.</span></span>  
  
 <span data-ttu-id="20ef1-103">As etapas a seguir mostram como criar um efeito personalizado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-103">The following steps show how to create a custom effect.</span></span>  
  
1.  <span data-ttu-id="20ef1-104">Carregar um <xref:System.Windows.Media.Effects.PixelShader> do código de idioma de sombreamento de nível alto (HLSL) pré-compilado bytes.</span><span class="sxs-lookup"><span data-stu-id="20ef1-104">Load a <xref:System.Windows.Media.Effects.PixelShader> from precompiled High Level Shading Language (HLSL) bytecode.</span></span>  
  
2.  <span data-ttu-id="20ef1-105">Defina as propriedades de dependência que representam os parâmetros do efeito e o <xref:System.Windows.Media.Brush>-com base em entradas de superfície.</span><span class="sxs-lookup"><span data-stu-id="20ef1-105">Define dependency properties that represent the parameters of the effect and the <xref:System.Windows.Media.Brush>-based surface inputs.</span></span> <span data-ttu-id="20ef1-106">Use um do <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> sobrecargas para associar essas entradas com registrar números que são referenciados no código de bytes HLSL.</span><span class="sxs-lookup"><span data-stu-id="20ef1-106">Use one of the <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> overloads to associate these inputs with register numbers that are referenced in the HLSL bytecode.</span></span>  
  
 <span data-ttu-id="20ef1-107">O número de amostras é limitado a 4.</span><span class="sxs-lookup"><span data-stu-id="20ef1-107">The number of samplers is limited to 4.</span></span>  
  
 <span data-ttu-id="20ef1-108">As seguintes restrições se aplicam ao usar um sombreador PS 3.0.</span><span class="sxs-lookup"><span data-stu-id="20ef1-108">The following restrictions apply when using a PS 3.0 shader.</span></span>  
  
-   <span data-ttu-id="20ef1-109">Quando é atribuído um sombreador PS 3.0, aumenta o número de amostras para 8.</span><span class="sxs-lookup"><span data-stu-id="20ef1-109">When a PS 3.0 shader is assigned, the number of samplers increases to 8.</span></span> <span data-ttu-id="20ef1-110">Atribua o sombreador 3.0 de PS antes de outros sombreadores para habilitar o registro de classificadores de 8.</span><span class="sxs-lookup"><span data-stu-id="20ef1-110">Assign the PS 3.0 shader before other shaders to enable registering 8 samplers.</span></span>  
  
-   <span data-ttu-id="20ef1-111">O limite de registro constante de sombreador completo de 224 para flutuações, é usado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-111">The full shader constant register limit of 224 for floats is used.</span></span> <span data-ttu-id="20ef1-112">Para obter mais informações, consulte [ps_3_0](http://go.microsoft.com/fwlink/?LinkId=166292).</span><span class="sxs-lookup"><span data-stu-id="20ef1-112">For more information, see [ps_3_0](http://go.microsoft.com/fwlink/?LinkId=166292).</span></span>  
  
-   <span data-ttu-id="20ef1-113">Os seguintes tipos de dados têm suporte no PS 3.0 sombreadores somente.</span><span class="sxs-lookup"><span data-stu-id="20ef1-113">The following data types are supported in PS 3.0 shaders only.</span></span> <span data-ttu-id="20ef1-114">Uma exceção é gerada se eles são usados em versões anteriores do sombreador.</span><span class="sxs-lookup"><span data-stu-id="20ef1-114">An exception is thrown if these are used in lower shader versions.</span></span>  
  
    -   <span data-ttu-id="20ef1-115">`int` e conversível tipos em `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`</span><span class="sxs-lookup"><span data-stu-id="20ef1-115">`int` and types convertible to `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`</span></span>  
  
    -   `bool`  
  
-   <span data-ttu-id="20ef1-116">Se um sombreador PS 3.0 válido é carregado em um computador que não oferecem suporte de hardware para PS 3.0, o sombreador será ignorado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-116">If a valid PS 3.0 shader is loaded on a computer that does not have hardware support for PS 3.0, the shader is ignored.</span></span> <span data-ttu-id="20ef1-117">Se o sombreador for inválido, nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="20ef1-117">If the shader is invalid, no exception is thrown.</span></span>  
  
-   <span data-ttu-id="20ef1-118">Se um computador tiver mais de uma placa de vídeo, o comportamento é definido pela placa de vídeo compatível com menos.</span><span class="sxs-lookup"><span data-stu-id="20ef1-118">If a computer has more than one video card, the behavior is defined by the least capable video card.</span></span> <span data-ttu-id="20ef1-119">Por exemplo, se o computador tiver duas placas de vídeo, um dos quais com suporte PS 3.0 e um dos quais não, o comportamento é o mesmo como se o computador não oferece suporte a 3.0 PS.</span><span class="sxs-lookup"><span data-stu-id="20ef1-119">For example, if the computer has two video cards, one of which supports PS 3.0 and one of which does not, the behavior is the same as if the computer does not support PS 3.0.</span></span>  
  
-   <span data-ttu-id="20ef1-120">Se um computador que dá suporte à renderização PS 3.0 no hardware, mas um sombreador PS 3.0 inválido é atribuído, o <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> é gerado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-120">If a computer supports rendering PS 3.0 in hardware, but an invalid PS 3.0 shader is assigned, the <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> event is raised.</span></span> <span data-ttu-id="20ef1-121">Um exemplo de um sombreador PS 3.0 inválido é compilado com o `ps_3_sw` sinalizador.</span><span class="sxs-lookup"><span data-stu-id="20ef1-121">An example of an invalid PS 3.0 shader is one compiled with the `ps_3_sw` flag.</span></span> <span data-ttu-id="20ef1-122">O <xref:System.Windows.Media.Effects.ShaderEffect> classe aceita apenas os sombreadores de PS 3.0 que são compilados com o `ps_3_0` sinalizador passado para fxc.exe.</span><span class="sxs-lookup"><span data-stu-id="20ef1-122">The <xref:System.Windows.Media.Effects.ShaderEffect> class accepts only PS 3.0 shaders that are compiled with the `ps_3_0` flag passed to fxc.exe.</span></span> <span data-ttu-id="20ef1-123">Para obter mais informações, consulte [ferramenta do compilador efeito](http://go.microsoft.com/fwlink/?LinkId=166293).</span><span class="sxs-lookup"><span data-stu-id="20ef1-123">For more information, see [Effect-Compiler Tool](http://go.microsoft.com/fwlink/?LinkId=166293).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ef1-124">PS 2.0 sombreadores executado durante a renderização no software.</span><span class="sxs-lookup"><span data-stu-id="20ef1-124">PS 2.0 shaders run when rendering in software.</span></span> <span data-ttu-id="20ef1-125">No entanto, mesmo se PS 3.0 é suportado pelo hardware do sistema, sombreadores PS 3.0 não serão executados durante a renderização de software.</span><span class="sxs-lookup"><span data-stu-id="20ef1-125">However, even if PS 3.0 is supported by the system's hardware, PS 3.0 shaders do not run during software rendering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ef1-126">O exemplo de código a seguir mostra como derivar o <xref:System.Windows.Media.Effects.ShaderEffect> classe.</span><span class="sxs-lookup"><span data-stu-id="20ef1-126">The following code example shows how to derive from the <xref:System.Windows.Media.Effects.ShaderEffect> class.</span></span>  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/ThresholdEffect.cs#1)]  
  
 <span data-ttu-id="20ef1-127">O exemplo de código a seguir mostra um sombreador que corresponde à anterior <xref:System.Windows.Media.Effects.ShaderEffect> classe.</span><span class="sxs-lookup"><span data-stu-id="20ef1-127">The following code example shows a shader that corresponds to the previous <xref:System.Windows.Media.Effects.ShaderEffect> class.</span></span>  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Threshold.fx#10)]  
  
 <span data-ttu-id="20ef1-128">O XAML a seguir mostra como usar o efeito de sombreador personalizado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-128">The following XAML shows how to use the custom shader effect.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="20ef1-129">Para obter acesso completo aos recursos de interface do usuário.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20ef1-129">for full access to UI resources.</span>
      </span>
      <span data-ttu-id="20ef1-130">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="20ef1-130">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Media.Effects.Effect" />
    <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShaderEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ShaderEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-131">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Effects.ShaderEffect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-131">Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-132">Cria um clone modificável deste objeto <see cref="T:System.Windows.Media.Effects.ShaderEffect" />, fazendo cópias em profundidade dos valores do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-132">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="20ef1-133">Ao copiar as propriedades de dependência desse objeto, esse método copia associações de dados e referências de recurso (que não podem mais resolver), mas não animações ou seus valores atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-133">When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-134">Um clone modificável dessa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-134">A modifiable clone of this instance.</span>
          </span>
          <span data-ttu-id="20ef1-135">O clone retornado é efetivamente uma cópia profunda do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-135">The returned clone is effectively a deep copy of the current object.</span>
          </span>
          <span data-ttu-id="20ef1-136">A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do clone é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-136">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-137">O <xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A> método pode ser usado para gerar cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos.</span><span class="sxs-lookup"><span data-stu-id="20ef1-137">The <xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="20ef1-138">Para sua conveniência, este método sombreia a herdadas <xref:System.Windows.Freezable.Clone%2A> método para fornecer uma implementação fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="20ef1-138">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="20ef1-139">O objeto a ser clonado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-139">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-140">Faz com que a instância seja um clone (cópia em profundidade) do <see cref="T:System.Windows.Freezable" /> especificado usando valores de propriedade base (não animados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-140">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-141">Cria um clone modificável desse objeto <see cref="T:System.Windows.Media.Effects.ShaderEffect" />, fazendo cópias em profundidade dos valores do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-141">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="20ef1-142">Referências de recursos, associações de dados e animações não são copiadas, mas seus valores atuais são.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-142">Resource references, data bindings, and animations are not copied, but their current values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-143">Um clone modificável do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-143">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="20ef1-144">A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-144">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-145">Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="20ef1-145">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="20ef1-146">Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="20ef1-146">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="20ef1-147">Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20ef1-147">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="20ef1-148">O <see cref="T:System.Windows.Freezable" /> a ser clonado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-148">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-149">Torna a instância um clone modificável (cópia em profundidade) do <see cref="T:System.Windows.Freezable" /> especificado usando os valores de propriedade atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-149">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-150">Cria uma nova instância da classe derivada <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-150">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-151">A nova instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-151">The new instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DdxUvDdyUvRegisterIndex">
      <MemberSignature Language="C#" Value="protected int DdxUvDdyUvRegisterIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Property DdxUvDdyUvRegisterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int DdxUvDdyUvRegisterIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-152">Obtém ou define um valor que indica o registro do sombreador a ser usado para as derivativas parciais das coordenadas de textura em relação ao espaço da tela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-152">Gets or sets a value that indicates the shader register to use for the partial derivatives of the texture coordinates with respect to screen space.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-153">O índice do registro que contém as derivadas parciais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-153">The index of the register that contains the partial derivatives.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-154">Use o <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> propriedade para especificar o registro do sombreador que contém as derivadas parciais da textura coordenadas em relação ao espaço de tela.</span><span class="sxs-lookup"><span data-stu-id="20ef1-154">Use the <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> property to specify the shader register that contains the partial derivatives of the texture coordinates with respect to screen space.</span></span> <span data-ttu-id="20ef1-155">Por exemplo, se <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> for definido como 4, o sombreador register c4 é usado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-155">For example, if <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> is set to 4, the shader register c4 is used.</span></span> <span data-ttu-id="20ef1-156">Registrar c4 contém quatro campos de float.</span><span class="sxs-lookup"><span data-stu-id="20ef1-156">Register c4 contains four float fields.</span></span> <span data-ttu-id="20ef1-157">O código de idioma de sombreamento de nível alto (HLSL) a seguir mostra como este registro é usado.</span><span class="sxs-lookup"><span data-stu-id="20ef1-157">The following High Level Shading Language (HLSL) code shows how this register is used.</span></span> <span data-ttu-id="20ef1-158">O `nextPixelUV` valor representa o pixel próximo à direita.</span><span class="sxs-lookup"><span data-stu-id="20ef1-158">The `nextPixelUV` value represents the next pixel to the right.</span></span>  
  
```  
float4 ddxUvDdyUv : register(c4);  
SamplerState  sampler : register(S0);  
...  
float2 nextPixelUV;  
nextPixelUV.u = ddxUvDdyUv.x + u;  
nextPixelUV.v = ddxUvDdyUv.y + v;  
  
tex2D(sampler, nextPixelUV);  
```  
  
 <span data-ttu-id="20ef1-159">A tabela a seguir mostra como o registro especificado para <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> é preenchido.</span><span class="sxs-lookup"><span data-stu-id="20ef1-159">The following table shows how the register specified for <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> is filled.</span></span>  
  
|<span data-ttu-id="20ef1-160">Constante de registro</span><span class="sxs-lookup"><span data-stu-id="20ef1-160">Register Constant</span></span>|<span data-ttu-id="20ef1-161">Valor derivado</span><span class="sxs-lookup"><span data-stu-id="20ef1-161">Derivative Value</span></span>|  
|-----------------------|----------------------|  
|<span data-ttu-id="20ef1-162">componente x</span><span class="sxs-lookup"><span data-stu-id="20ef1-162">x component</span></span>|<span data-ttu-id="20ef1-163">ddx(u)</span><span class="sxs-lookup"><span data-stu-id="20ef1-163">ddx(u)</span></span>|  
|<span data-ttu-id="20ef1-164">componente de y</span><span class="sxs-lookup"><span data-stu-id="20ef1-164">y component</span></span>|<span data-ttu-id="20ef1-165">ddx(v)</span><span class="sxs-lookup"><span data-stu-id="20ef1-165">ddx(v)</span></span>|  
|<span data-ttu-id="20ef1-166">componente de z</span><span class="sxs-lookup"><span data-stu-id="20ef1-166">z component</span></span>|<span data-ttu-id="20ef1-167">ddy(u)</span><span class="sxs-lookup"><span data-stu-id="20ef1-167">ddy(u)</span></span>|  
|<span data-ttu-id="20ef1-168">componente w</span><span class="sxs-lookup"><span data-stu-id="20ef1-168">w component</span></span>|<span data-ttu-id="20ef1-169">ddy(v)</span><span class="sxs-lookup"><span data-stu-id="20ef1-169">ddy(v)</span></span>|  
  
 <span data-ttu-id="20ef1-170">As coordenadas de textura são indicadas como `(u, v)`.</span><span class="sxs-lookup"><span data-stu-id="20ef1-170">Texture coordinates are denoted as `(u, v)`.</span></span> <span data-ttu-id="20ef1-171">`ddx(u)` é o constante derivado parcial do componente de coordenadas de textura `u` em relação a coordenada x do espaço de tela.</span><span class="sxs-lookup"><span data-stu-id="20ef1-171">`ddx(u)` is the constant partial derivative of the texture coordinate component `u` with respect to the screen-space x-coordinate.</span></span> <span data-ttu-id="20ef1-172">`ddy(u)` é a coordenada de textura a derivada parcial `u` em relação a coordenada y do espaço de tela.</span><span class="sxs-lookup"><span data-stu-id="20ef1-172">`ddy(u)` is the partial derivative of the texture coordinate `u` with respect to the screen-space y-coordinate.</span></span> <span data-ttu-id="20ef1-173">Da mesma forma, `ddx(v)` e `ddy(v)` são os derivados de espaço de tela correspondente para o componente de coordenadas de textura `v`.</span><span class="sxs-lookup"><span data-stu-id="20ef1-173">Similarly, `ddx(v)` and `ddy(v)` are the corresponding screen-space derivatives for the texture coordinate component `v`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ef1-174">HLSL tem as instruções ddx e ddy para calcular esses valores, mas essas instruções não estão disponíveis em todo o hardware PixelShader 2.0.</span><span class="sxs-lookup"><span data-stu-id="20ef1-174">HLSL has the ddx and ddy instructions to calculate these values, but these instructions are not available on all PixelShader 2.0 hardware.</span></span>  
  
 <span data-ttu-id="20ef1-175">Você pode pensar das constantes da seguinte maneira.</span><span class="sxs-lookup"><span data-stu-id="20ef1-175">You may think of these constants in the following way.</span></span> <span data-ttu-id="20ef1-176">Se a etapa 1 pixel para a direita no espaço de tela (na direção x), em seguida, `ddx(u)` é a quantidade que `u` alterações no espaço de textura, e `ddx(v)` é a quantidade que `v` alterações no espaço de textura.</span><span class="sxs-lookup"><span data-stu-id="20ef1-176">If you step 1 pixel to the right in screen space (in the x direction), then `ddx(u)` is the amount that `u` changes in texture space, and `ddx(v)` is the amount that `v` changes in texture space.</span></span> <span data-ttu-id="20ef1-177">Se o efeito é alinhado por eixo quando ele for renderizado, em seguida, `ddx(v)` é 0.</span><span class="sxs-lookup"><span data-stu-id="20ef1-177">If the effect is axis-aligned when it is rendered, then `ddx(v)` is 0.</span></span> <span data-ttu-id="20ef1-178">Se o efeito for girado quando ele for renderizado, em seguida, `ddx(v)` é diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="20ef1-178">If the effect is rotated when it is rendered, then `ddx(v)` is non-zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20ef1-179">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> mais de uma vez ou após o processamento inicial do efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-179">An attempt was made to set the <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> property more than one time or after initial processing of the effect.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="20ef1-180">A instância a ser copiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-180">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-181">Torna a instância um clone congelado do <see cref="T:System.Windows.Freezable" /> especificado usando valores de propriedade base (não animados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-181">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="20ef1-182">O <see cref="T:System.Windows.Freezable" /> a ser copiado e congelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-182">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-183">Torna a instância atual um clone congelado do <see cref="T:System.Windows.Freezable" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-183">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="20ef1-184">Se o objeto tiver propriedades de dependência animadas, seus valores animados atuais serão copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-184">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="C#" Value="protected double PaddingBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingBottom As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingBottom { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-185">Obtém ou define um valor que indica se a textura de saída do efeito é maior que sua textura de entrada ao longo da borda inferior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-185">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the bottom edge.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-186">O preenchimento ao longo da borda inferior do efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-186">The padding along the bottom edge of the effect.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20ef1-187">O valor fornecido é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-187">The provided value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="C#" Value="protected double PaddingLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingLeft As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingLeft { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-188">Obtém ou define um valor que indica se a textura de saída do efeito é maior que sua textura de entrada ao longo da borda esquerda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-188">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the left edge.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-189">O preenchimento ao longo da borda esquerda do efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-189">The padding along the left edge of the effect.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20ef1-190">O valor fornecido é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-190">The provided value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="C#" Value="protected double PaddingRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingRight As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingRight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-191">Obtém ou define um valor que indica se a textura de saída do efeito é maior que sua textura de entrada ao longo da borda direita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-191">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the right edge.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-192">O preenchimento ao longo da borda direita do efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-192">The padding along the right edge of the effect.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20ef1-193">O valor fornecido é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-193">The provided value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="C#" Value="protected double PaddingTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingTop As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingTop { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-194">Obtém ou define um valor que indica se a textura de saída do efeito é maior que sua textura de entrada ao longo da borda superior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-194">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the top edge.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-195">O preenchimento ao longo da borda superior do efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-195">The padding along the top edge of the effect.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20ef1-196">O valor fornecido é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-196">The provided value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PixelShader">
      <MemberSignature Language="C#" Value="protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.PixelShader PixelShader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />
      <MemberSignature Language="VB.NET" Value="Protected Property PixelShader As PixelShader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Media::Effects::PixelShader ^ PixelShader { System::Windows::Media::Effects::PixelShader ^ get(); void set(System::Windows::Media::Effects::PixelShader ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.PixelShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-197">Obtém ou define o <see cref="T:System.Windows.Media.Effects.PixelShader" /> a ser usado para o efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-197">Gets or sets the <see cref="T:System.Windows.Media.Effects.PixelShader" /> to use for the effect.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20ef1-198">O <see cref="T:System.Windows.Media.Effects.PixelShader" /> para o efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-198">The <see cref="T:System.Windows.Media.Effects.PixelShader" /> for the effect.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PixelShader"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="20ef1-199">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="20ef1-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="20ef1-200">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="20ef1-200">Identifier field</span></span>|<xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|  
|<span data-ttu-id="20ef1-201">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="20ef1-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="20ef1-202">Nenhum</span><span class="sxs-lookup"><span data-stu-id="20ef1-202">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderConstantCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderConstantCallback(int32 floatRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderConstantCallback (floatRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderConstantCallback(int floatRegisterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="floatRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="floatRegisterIndex">
          <span data-ttu-id="20ef1-203">O índice do registro do sombreador associado à propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-203">The index of the shader register associated with the dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-204">Associa um valor da propriedade de dependência a um registro constante de float de um sombreador de pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-204">Associates a dependency property value with a pixel shader's float constant register.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-205">Um representante de <see cref="T:System.Windows.PropertyChangedCallback" /> que associa uma propriedade de dependência e o registro de constante de sombreador especificado pelo <paramref name="floatRegisterIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-205">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader constant register specified by <paramref name="floatRegisterIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-206">Use o <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> método quando você registrar uma propriedade de dependência para uma constante de sombreador.</span><span class="sxs-lookup"><span data-stu-id="20ef1-206">Use the <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> method when you register a dependency property for a shader constant.</span></span> <span data-ttu-id="20ef1-207">O <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> método construções um <xref:System.Windows.PropertyChangedCallback> delegar que, quando chamado, cria uma associação entre a propriedade de dependência e o registro de constante de sombreador especificado pelo `floatRegisterIndex`.</span><span class="sxs-lookup"><span data-stu-id="20ef1-207">The <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader constant register specified by `floatRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20ef1-208">A propriedade de dependência é um tipo desconhecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-208">The dependency property is an unknown type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20ef1-209">
            <paramref name="floatRegisterIndex" /> é maior ou igual a 32 ou <paramref name="floatRegisterIndex" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-209">
              <paramref name="floatRegisterIndex" /> is greater than or equal to 32, or <paramref name="floatRegisterIndex" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderProperty">
      <MemberSignature Language="C#" Value="protected static readonly System.Windows.DependencyProperty PixelShaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Windows.DependencyProperty PixelShaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly PixelShaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Windows::DependencyProperty ^ PixelShaderProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-210">Identifica a propriedade de dependência <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-210">Identifies the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PixelShaderSamplerCallback">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-211">Associa um valor da propriedade de dependência a um registro de amostra de sombreador de pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-211">Associates a dependency property value with a pixel shader's sampler register.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderSamplerCallback (samplerRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex">
          <span data-ttu-id="20ef1-212">O índice da amostra do sombreador associado à propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-212">The index of the shader sampler associated with the dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-213">Associa um valor da propriedade de dependência a um registro de amostra de sombreador de pixel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-213">Associates a dependency property value with a pixel shader's sampler register.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-214">Um representante de <see cref="T:System.Windows.PropertyChangedCallback" /> que associa uma propriedade de dependência e o registro de amostra de sombreador especificado pelo <paramref name="samplerRegisterIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-214">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-215">Use o <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> método quando você registra um <xref:System.Windows.Media.Brush>-com valor de propriedade de dependência para uma amostra do sombreador.</span><span class="sxs-lookup"><span data-stu-id="20ef1-215">Use the <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> method when you register a <xref:System.Windows.Media.Brush>-valued dependency property for a shader sampler.</span></span> <span data-ttu-id="20ef1-216">O <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> método construções um <xref:System.Windows.PropertyChangedCallback> delegar que, quando chamado, cria uma associação entre a propriedade de dependência e o registro de amostra do sombreador especificado pelo `samplerRegisterIndex`.</span><span class="sxs-lookup"><span data-stu-id="20ef1-216">The <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by `samplerRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex">
          <span data-ttu-id="20ef1-217">O índice da amostra do sombreador associado à propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-217">The index of the shader sampler associated with the dependency property.</span>
          </span>
        </param>
        <param name="samplingMode">
          <span data-ttu-id="20ef1-218">O <see cref="T:System.Windows.Media.Effects.SamplingMode" /> da amostra de sombreador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-218">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-219">Associa um valor da propriedade de dependência a um registro de amostra de um sombreador de pixel e a um <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-219">Associates a dependency property value with a pixel shader's sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-220">Um representante de <see cref="T:System.Windows.PropertyChangedCallback" /> que associa uma propriedade de dependência e o registro de amostra de sombreador especificado pelo <paramref name="samplerRegisterIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-220">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ef1-221">Use o <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> método quando você registra um <xref:System.Windows.Media.Brush>-com valor de propriedade de dependência para uma amostra do sombreador.</span><span class="sxs-lookup"><span data-stu-id="20ef1-221">Use the <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> method when you register a <xref:System.Windows.Media.Brush>-valued dependency property for a shader sampler.</span></span> <span data-ttu-id="20ef1-222">O <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> método construções um <xref:System.Windows.PropertyChangedCallback> delegar que, quando chamado, cria uma associação entre a propriedade de dependência e o registro de amostra do sombreador especificado pelo `samplerRegisterIndex`.</span><span class="sxs-lookup"><span data-stu-id="20ef1-222">The <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by `samplerRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterPixelShaderSamplerProperty">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20ef1-223">Associa uma propriedade de dependência a um registro de amostra de sombreador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-223">Associates a dependency property with a shader sampler register.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RegisterPixelShaderSamplerProperty (dpName As String, ownerType As Type, samplerRegisterIndex As Integer) As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dpName">
          <span data-ttu-id="20ef1-224">O nome da propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-224">The name of the dependency property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="20ef1-225">O tipo do efeito que tem a propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-225">The type of the effect that has the dependency property.</span>
          </span>
        </param>
        <param name="samplerRegisterIndex">
          <span data-ttu-id="20ef1-226">O índice da amostra do sombreador associado à propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-226">The index of the shader sampler associated with the dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-227">Associa uma propriedade de dependência a um registro de amostra de sombreador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-227">Associates a dependency property with a shader sampler register.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-228">Uma propriedade de dependência associada à amostra de sombreador especificada pelo <paramref name="samplerRegisterIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-228">A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="dpName">
          <span data-ttu-id="20ef1-229">O nome da propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-229">The name of the dependency property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="20ef1-230">O tipo do efeito que tem a propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-230">The type of the effect that has the dependency property.</span>
          </span>
        </param>
        <param name="samplerRegisterIndex">
          <span data-ttu-id="20ef1-231">O índice da amostra do sombreador associado à propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-231">The index of the shader sampler associated with the dependency property.</span>
          </span>
        </param>
        <param name="samplingMode">
          <span data-ttu-id="20ef1-232">O <see cref="T:System.Windows.Media.Effects.SamplingMode" /> da amostra de sombreador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-232">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-233">Associa uma propriedade de dependência um registro de amostra do sombreador e um <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-233">Associates a dependency property with a shader sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20ef1-234">Uma propriedade de dependência associada à amostra de sombreador especificada pelo <paramref name="samplerRegisterIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-234">A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="UpdateShaderValue">
      <MemberSignature Language="C#" Value="protected void UpdateShaderValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateShaderValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateShaderValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateShaderValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="20ef1-235">A propriedade de dependência a ser atualizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-235">The dependency property to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20ef1-236">Notifica o efeito de que a constante ou a amostra de sombreador correspondente à propriedade de dependência especificada deve ser atualizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20ef1-236">Notifies the effect that the shader constant or sampler corresponding to the specified dependency property should be updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
  </Members>
</Type>