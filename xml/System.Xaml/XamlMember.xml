<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6515c083ec89a227bfdf71aafe72c0d65a9846d7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48757406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b081f-101">Fornece o identificador do sistema de tipo XAML para membros de tipos de XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b081f-101">Provides the XAML type system identifier for members of XAML types.</span>
      </span>
      <span data-ttu-id="b081f-102">O identificador é usado por leitores de XAML e gravadores de XAML durante o processamento de nós de membros (quando o leitor de XAML está posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />) e também para a lógica de sistema do tipo XAML geral.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b081f-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-103"><xref:System.Xaml.XamlMember> pode usar três metodologias para retornar informações sobre um membro XAML: common language runtime (CLR) reflexão padrão; uma técnica de referência de somente reflexão chamando interno sinalizadores de bit uso otimizado de APIs; ou chamar virtual substitui do `Lookup*` API fornecida pelo possível <xref:System.Xaml.XamlMember> subclasses.</span><span class="sxs-lookup"><span data-stu-id="b081f-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="b081f-104">Para a maioria dos usos de APIs de serviços XAML do .NET Framework e o <xref:System.Xaml.XamlMember> API, você usar o contexto do esquema XAML padrão.</span><span class="sxs-lookup"><span data-stu-id="b081f-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="b081f-105">O contexto do esquema XAML padrão para serviços de XAML do .NET Framework usa para o sistema de tipos de suporte a CLR.</span><span class="sxs-lookup"><span data-stu-id="b081f-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="b081f-106">Isso permite que os leitores XAML e gravadores XAML trabalhar com qualquer tipo ou membro que é definido em, ou de outra forma disponíveis para, o CLR e suas técnicas de reflexão.</span><span class="sxs-lookup"><span data-stu-id="b081f-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="b081f-107">As Classes derivadas de XamlMember e APIs de pesquisa \*</span><span class="sxs-lookup"><span data-stu-id="b081f-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="b081f-108"><xref:System.Xaml.XamlMember> define vários membros virtuais que as classes derivadas podem substituir.</span><span class="sxs-lookup"><span data-stu-id="b081f-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="b081f-109">Esses membros têm nomes que sempre começam com a cadeia de caracteres `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="b081f-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="b081f-110">O restante da API do nome, em seguida, referências de propriedade que influencia o método virtual.</span><span class="sxs-lookup"><span data-stu-id="b081f-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="b081f-111">Por exemplo, uma <xref:System.Xaml.XamlMember> classe derivada pode substituir <xref:System.Xaml.XamlMember.LookupTargetType%2A> influenciar quais a propriedade definida pelo base <xref:System.Xaml.XamlMember.TargetType%2A> retorna em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="b081f-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="b081f-112">Você pode prever valores de retorno para essas propriedades no <xref:System.Xaml.XamlMember> ou existente de classes derivadas, lendo a documentação relevante `Lookup*` métodos.</span><span class="sxs-lookup"><span data-stu-id="b081f-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="b081f-113">A finalidade de `Lookup*` métodos é fornecer uma técnica de extensão de sistema de tipo XAML que incorpora o <xref:System.Xaml.XamlMember> classe base.</span><span class="sxs-lookup"><span data-stu-id="b081f-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="b081f-114">Derivando <xref:System.Xaml.XamlMember> e substituindo o `Lookup` membros virtuais, você pode definir o conceito de um membro XAML para um esquema XAML em um sistema de tipo XAML sem estar presa às especificações de um sistema de tipo de backup ou uma tecnologia.</span><span class="sxs-lookup"><span data-stu-id="b081f-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="b081f-115">Você pode também usar um contexto de esquema XAML fornecido neste esquema e ainda retornará os resultados desejados.</span><span class="sxs-lookup"><span data-stu-id="b081f-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="b081f-116">Por exemplo, considere a <xref:System.Xaml.XamlMember> propriedade <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="b081f-117">Essa propriedade informa os chamadores que operações como o uso de um <xref:System.Xaml.XamlWriter> para a serialização pode gravar um valor para esse membro em um objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="b081f-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="b081f-118">Na implementação do padrão, o processo de determinar se o membro for gravável é feito usando técnicas de reflexão em relação a CLR de apoio <xref:System.Type> e seus membros (o <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="b081f-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="b081f-119">Portanto, por padrão, o sistema de tipos XAML depende do sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="b081f-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="b081f-120">No entanto, você pode remover essa dependência para o seu sistema de tipo XAML relatório do <xref:System.Xaml.XamlMember.IsWritePublic%2A> , substituindo a API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="b081f-121">Dentro de sua substituição, você pode usar outras determinações, como metadados específicos para sua tecnologia, de uma tabela de pesquisa mestre que é otimizada para um vocabulário XAML fixado ou uma variedade de outras estratégias para determinar se um membro XAML é gravável no seu Vocabulário XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="b081f-122">Construindo XamlMember sem contexto do esquema XAML</span><span class="sxs-lookup"><span data-stu-id="b081f-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="b081f-123">A maioria dos construtores das <xref:System.Xaml.XamlMember> exigem um <xref:System.Xaml.XamlSchemaContext> como parte de sua inicialização.</span><span class="sxs-lookup"><span data-stu-id="b081f-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="b081f-124">O <xref:System.Xaml.XamlSchemaContext> também é necessário para muitos interno <xref:System.Xaml.XamlSchemaContext> operações, como a obtenção de informações que está sendo encaminhadas do tipo de backup.</span><span class="sxs-lookup"><span data-stu-id="b081f-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="b081f-125">Quando você estiver trabalhando com o <xref:System.Xaml.XamlMember> API, normalmente você terá uma <xref:System.Xaml.XamlSchemaContext> que está disponível de uma construção ao redor, como um <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="b081f-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="b081f-126">Nesse caso, você pode passar o <xref:System.Xaml.XamlSchemaContext> por meio de referência para todas as chamadas de sistema de tipo XAML que exigem um contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="b081f-127">Um construtor específico, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, não requer um <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="b081f-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="b081f-128">No entanto, uma <xref:System.Xaml.XamlMember> que é construído com o <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> assinatura retorna `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-129">Para um caminho de carga que envolve <xref:System.Xaml.XamlObjectWriter>, esse membro não pode ser gravado em um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="b081f-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="b081f-130">Usando a implementação de serviços XAML do .NET Framework, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chamar lança uma <xref:System.Xaml.XamlObjectWriterException> quando o relevantes <xref:System.Xaml.XamlMember> relatórios `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-131">Você não deve criar uma <xref:System.Xaml.XamlMember> que tem um valor de `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> , a menos que sua implementação pode manipular as exceções das <xref:System.Xaml.XamlObjectWriter>, ou você tem outras maneiras de ajustar o <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="b081f-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="b081f-132">Por exemplo, um ou mais dos procedimentos a seguir podem ser verdadeiro para sua implementação:</span><span class="sxs-lookup"><span data-stu-id="b081f-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="b081f-133">O contexto do esquema XAML está disponível mais tarde.</span><span class="sxs-lookup"><span data-stu-id="b081f-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="b081f-134">Você usa um padrão de chamador do membro.</span><span class="sxs-lookup"><span data-stu-id="b081f-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="b081f-135">Você substitui deliberadamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> em um gravador XAML personalizado.</span><span class="sxs-lookup"><span data-stu-id="b081f-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="http://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">
      <span data-ttu-id="b081f-136">Noções básicas sobre estruturas e conceitos do fluxo de nó XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="b081f-136">Understanding XAML Node Stream Structures and Concepts</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-137">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="b081f-138">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-139">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-140">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-141">Use esse construtor, se o membro representa um evento (propriedade de ponto de conexão de manipulador de eventos).</span><span class="sxs-lookup"><span data-stu-id="b081f-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="b081f-142">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-143">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-144">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-145">Use esse construtor, se o membro representa uma propriedade (e especificamente não é uma conexão de manipulador de eventos).</span><span class="sxs-lookup"><span data-stu-id="b081f-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="b081f-146">O <see cref="T:System.Reflection.EventInfo" /> do sistema do tipo CLR que representa o membro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-147">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="b081f-148">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-149">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.EventInfo" /> do sistema de tipo CLR e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-150">Use esse construtor, se o membro representa um evento (ou uma propriedade de ponto de conexão do manipulador de eventos).</span><span class="sxs-lookup"><span data-stu-id="b081f-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="b081f-151">O <see cref="T:System.Reflection.PropertyInfo" /> do sistema do tipo CLR que representa o membro de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-152">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="b081f-153">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-154">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o <see cref="T:System.Reflection.PropertyInfo" /> de reflexão e um <see cref="T:System.Xaml.XamlSchemaContext" />, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-155">Use esse construtor somente se o membro representa uma propriedade e se não for uma conexão de manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="b081f-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="b081f-156">O nome da cadeia de caracteres do evento anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-156">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="b081f-157">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-158">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-159">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-160">Use esse construtor, se o membro representa um membro de evento anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b081f-161">O nome da cadeia de caracteres do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-161">The string name of the member.</span>
          </span>
        </param>
        <param name="declaringType">
          <span data-ttu-id="b081f-162">As informações de <see cref="T:System.Xaml.XamlType" /> para o tipo declarativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span>
          </span>
        </param>
        <param name="isAttachable">
          <span data-ttu-id="b081f-163">
            <see langword="true" /> para indicar que o membro anexável, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-163">
              <see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-164">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> usando o nome da cadeia de caracteres e as informações de <see cref="T:System.Xaml.XamlType" /> declarativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span>
          </span>
          <span data-ttu-id="b081f-165">Um <see cref="T:System.Xaml.XamlMember" /> que é construído com esta assinatura tem limitações significativas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-166">Um <xref:System.Xaml.XamlMember> que é construído com o <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> assinatura retorna `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-167">Para um caminho de carga que envolve <xref:System.Xaml.XamlObjectWriter>, esse membro não pode ser gravado em um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="b081f-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="b081f-168">Usando a implementação de serviços de XAML do .NET Framework, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chamar lança uma <xref:System.Xaml.XamlObjectWriterException> quando o relevantes <xref:System.Xaml.XamlMember> relatórios `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-169">Você não deve criar uma <xref:System.Xaml.XamlMember> com <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , a menos que sua implementação pode manipular as exceções das <xref:System.Xaml.XamlObjectWriter>, ou você tem outras maneiras de ajustar o <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="b081f-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="b081f-170">Por exemplo, um ou mais dos procedimentos a seguir podem ser verdadeiro para sua implementação:</span><span class="sxs-lookup"><span data-stu-id="b081f-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="b081f-171">O contexto do esquema XAML está disponível mais tarde.</span><span class="sxs-lookup"><span data-stu-id="b081f-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="b081f-172">Você usa um padrão de chamador do membro.</span><span class="sxs-lookup"><span data-stu-id="b081f-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="b081f-173">Você substitui deliberadamente <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> em um gravador XAML personalizado.</span><span class="sxs-lookup"><span data-stu-id="b081f-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b081f-174">
            <paramref name="name" /> ou <paramref name="declaringType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-174">
              <paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="b081f-175">O nome da cadeia de caracteres da propriedade anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-175">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="b081f-176">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="b081f-177">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-178">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-179">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-180">Use esse construtor, se o membro representa uma propriedade anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">
          <span data-ttu-id="b081f-181">O nome da cadeia de caracteres do evento anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-181">The string name of the attachable event.</span>
          </span>
        </param>
        <param name="adder">
          <span data-ttu-id="b081f-182">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do método <see langword="Add" /> do manipulador da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-183">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="b081f-184">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-185">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa um evento anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-186">Use esse construtor, se o membro representa um membro de evento anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">
          <span data-ttu-id="b081f-187">O nome da cadeia de caracteres da propriedade anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-187">The string name of the attachable property.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="b081f-188">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="get" /> da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="b081f-189">O <see cref="T:System.Reflection.MethodInfo" /> do sistema do tipo CLR do acessador <see langword="set" /> da implementação de suporte do membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="b081f-190">O contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que qualifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span>
          </span>
        </param>
        <param name="invoker">
          <span data-ttu-id="b081f-191">A implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que manipula a invocação de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-192">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlMember" /> para um <see cref="T:System.Xaml.XamlMember" /> que representa uma propriedade anexável, incluindo informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-193">Use esse construtor, se o membro representa um membro de propriedade anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-194">Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-195">O <see cref="T:System.Xaml.XamlType" /> para o tipo que declara o membro que está associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-196">Esse valor normalmente é definido durante a inicialização e não costuma ser `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b081f-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> informações podem ser passadas por construtores para inicialização.</span><span class="sxs-lookup"><span data-stu-id="b081f-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="b081f-198">Chamando diretamente os construtores de base, a inicialização para <xref:System.Xaml.XamlMember> classes derivadas podem omitir as verificações de valor que são feitas na classe base.</span><span class="sxs-lookup"><span data-stu-id="b081f-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="b081f-199">Portanto, a inicialização derivada pode alterar as informações relatadas de membro de tipo da relação de um membro XAML para que ele não precisa mais se alinhe de maneira esperada com as informações do sistema de tipo de sua declaração de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="b081f-200">Para nenhuma verificação de segurança crítica de informações de tipo de declaração, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-201">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-202">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com <see cref="T:System.Xaml.XamlDeferringLoader" /> restrição sobre o genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-203">Chamando <xref:System.Xaml.XamlMember.DeferringLoader%2A> invoca <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-204">Esse comportamento ocorre nos casos em que a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-205">Obtém uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="b081f-206">Eles relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-207">Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-208">Chamando <xref:System.Xaml.XamlMember.DependsOn%2A> invoca <xref:System.Xaml.XamlMember.LookupDependsOn%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-209">Esse comportamento ocorre nos casos em que a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="b081f-210">O `DependsOn` padrão pode ser aplicado a casos de modelo de objeto que deliberadamente contradizem uma regra geral de XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="b081f-211">A regra geral de XAML é que os membros de um tipo que não são transmitidos como texto de inicialização (ou por um método de fábrica em XAML 2009) devem ser capazes de ser atribuído em qualquer ordem.</span><span class="sxs-lookup"><span data-stu-id="b081f-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="b081f-212">Aplicando um `DependsOn` padrão para um membro, você pode instruir os gravadores XAML para sempre processar o membro referenciado antes desse membro.</span><span class="sxs-lookup"><span data-stu-id="b081f-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="b081f-213">Você pode aplicar esse padrão em situações em que o valor do membro atual requer contexto ou outras informações que está disponíveis somente depois de outro membro está definido.</span><span class="sxs-lookup"><span data-stu-id="b081f-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="b081f-214">O `DependsOn` padrão deve ser aplicado com cuidado e reservado para cenários de propriedade em que ele serve a uma finalidade arquitetural.</span><span class="sxs-lookup"><span data-stu-id="b081f-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="b081f-215">Grande número de dependências têm o potencial para reduzir a velocidade de processamento de XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="b081f-216">Além disso, é possível produzir dependências circulares, caso em que o comportamento de processamento de XAML é indefinido.</span><span class="sxs-lookup"><span data-stu-id="b081f-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="b081f-217">Exemplo `DependsOn` cenários do WPF incluem certas propriedades nos <xref:System.Windows.Controls.ControlTemplate> e <xref:System.Windows.DataTemplate>diante <xref:System.Windows.Trigger>e, na <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="b081f-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-218">Indica se o objeto atual é igual a outro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-218">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b081f-219">O objeto a ser comparado com este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-219">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-220">Indica se o objeto atual é igual a outro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-220">Indicates whether the current object is equal to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-221">
            <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-221">
              <see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b081f-222">Um objeto para comparação com esse objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-222">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-223">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-223">Indicates whether the current object is equal to another object of the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-224">
            <see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-224">
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-225">Retorna o código hash para esse objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-225">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-226">Um código hash inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-226">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-227">Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-227">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-228">Uma lista de identificadores de namespace XAML como cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-228">A list of XAML namespace identifiers as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-229">A implementação padrão retorna o <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> chamar o resultado do <xref:System.Xaml.XamlMember.DeclaringType%2A> que é associado a este <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="b081f-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-230">Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-231">O <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementação que está associada a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-232">O `Invoker` padrão é uma técnica de extensão do sistema de tipo XAML avançada.</span><span class="sxs-lookup"><span data-stu-id="b081f-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="b081f-233">O `Invoker` padrão fornece uma maneira para injetar o comportamento de mapeamento de tipo de esquema diferente, enquanto estiver usando definições de sistema de tipo XAML dos serviços de XAML do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="b081f-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="b081f-234">Se um <xref:System.Xaml.XamlMember.LookupInvoker%2A> substituir retorna `null`, ou se a implementação padrão retorna `null` porque ele não tem o <xref:System.Xaml.XamlMember.UnderlyingMember%2A> para este <xref:System.Xaml.XamlMember>, o <xref:System.Xaml.XamlMember.Invoker%2A> propriedade retorna <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b081f-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b081f-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> é o padrão.</span><span class="sxs-lookup"><span data-stu-id="b081f-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="b081f-236">Isso é verdadeiro para a maioria das operações que usam serviços XAML do .NET Framework e o contexto do esquema XAML padrão e onde nenhuma específicos substituir `Invoker` padrões são passados para a construção de entidades do sistema de tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="b081f-237">Chamando <xref:System.Xaml.XamlMember.Invoker%2A> invoca <xref:System.Xaml.XamlMember.LookupInvoker%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-238">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-239">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> relatados como uma propriedade de ambiente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-239">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-240">Chamando <xref:System.Xaml.XamlMember.IsAmbient%2A> invoca <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-241">Esse comportamento ocorre em implementações em que a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="b081f-242">Verificando para propriedades de ambiente é geralmente fazem parte da lógica de processamento de XAML para certificar-se de que os objetos e valores que se baseiam no uso de ambiente para a qualificação do tipo podem funcionar corretamente.</span><span class="sxs-lookup"><span data-stu-id="b081f-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="b081f-243">As APIs de serviços XAML do .NET Framework e o contexto do esquema XAML padrão preenche esse valor com base na atribuição com <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b081f-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="b081f-244">A implementação padrão de <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> usa essa existente <xref:System.Windows.Markup.AmbientAttribute> técnica e retorna `true` se <xref:System.Windows.Markup.AmbientAttribute> existe em uma declaração de membro.</span><span class="sxs-lookup"><span data-stu-id="b081f-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="b081f-245"><xref:System.Windows.Markup.AmbientAttribute> encontra-se nos membros de vários tipos WPF, que incluem <xref:System.Windows.Application>, <xref:System.Windows.Setter>, e <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="b081f-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="b081f-246">Ele também é encontrado na <xref:System.Windows.ResourceDictionary> tipo, que denota que qualquer membro que usa <xref:System.Windows.ResourceDictionary> como seu tipo deve ser considerado ambiente mesmo se o membro não é especificamente atribuído.</span><span class="sxs-lookup"><span data-stu-id="b081f-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-247">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é um membro anexável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-248">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> é um membro anexável, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-248">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-249">O <xref:System.Xaml.XamlMember.IsAttachable%2A> valor é inicializado com base em qual construtor foi usado para construir um <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="b081f-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-250">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é uma diretiva XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-251">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> é um XAML diretiva; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-251">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-252">O <xref:System.Xaml.XamlMember.IsDirective%2A> valor é inicializado com base em qual construtor foi usado para construir um <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="b081f-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="b081f-253">A base <xref:System.Xaml.XamlMember> construtores inicializam, de modo que <xref:System.Xaml.XamlMember.IsDirective%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="b081f-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="b081f-254">No entanto, o <xref:System.Xaml.XamlDirective> classe (uma <xref:System.Xaml.XamlMember> classe derivada) inicializa, de modo que <xref:System.Xaml.XamlMember.IsDirective%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="b081f-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="b081f-255">Se você deseja relatar <xref:System.Xaml.XamlMember.IsDirective%2A> como `true` para os chamadores de uma classe personalizada de esquema XAML para membros XAML, certifique-se de derivar de <xref:System.Xaml.XamlDirective> porque é a única maneira de habilitar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="b081f-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-256">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-257">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> representa um evento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-257">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-258">Chamando <xref:System.Xaml.XamlMember.IsEvent%2A> invoca <xref:System.Xaml.XamlMember.LookupIsEvent%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-259">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> é inicializado com uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-260">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> é inicializada com uma validade <see langword="xamlName" /> de cadeia de caracteres; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-260">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">
          <span data-ttu-id="b081f-261">XamlName</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-261">XamlName</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-262">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-263">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> representa um membro somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-263">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-264">Chamando <xref:System.Xaml.XamlMember.IsReadOnly%2A> invoca <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-265">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro com um acessador <see langword="get" /> público chamável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-266">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> representa um público chamável <see langword="get" /> acessador; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-266">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-267">O <xref:System.Xaml.XamlMember.IsReadPublic%2A> verificações de valor se o <xref:System.Xaml.XamlMember.DeclaringType%2A> é público.</span><span class="sxs-lookup"><span data-stu-id="b081f-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="b081f-268">Se <xref:System.Xaml.XamlMember.DeclaringType%2A> é não público, o `get` acessador não pode ser chamado de um modo prático, e <xref:System.Xaml.XamlMember.IsReadPublic%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="b081f-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="b081f-269">Chamando <xref:System.Xaml.XamlMember.IsReadPublic%2A> invoca <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b081f-270">O <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> método é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="b081f-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="b081f-271">A substituição tem o potencial de mudar (maliciosamente ou não) as informações relatadas de acesso de um membro XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso do sistema de tipo de sua declaração de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="b081f-272">Para nenhuma verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-273">Obtém um valor que indica se o membro não pode ser resolvido pelo sistema de backup que é usado para a resolução de membro e de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-274">
            <see langword="true" /> Se o membro não puder ser resolvido; <see langword="false" /> se o membro puder ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-274">
              <see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-275">Um <xref:System.Xaml.XamlMember> que é construído com o <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> assinatura retorna `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-276">Para um caminho de carga que envolve <xref:System.Xaml.XamlObjectWriter>, um <xref:System.Xaml.XamlMember> com `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> não podem ser gravados em um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="b081f-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="b081f-277">Sob as implementações padrão nas APIs de serviços de XAML do .NET Framework, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> chamar lança uma <xref:System.Xaml.XamlObjectWriterException> quando o relevantes <xref:System.Xaml.XamlMember> relatórios `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="b081f-278">Você não deve criar uma <xref:System.Xaml.XamlMember> que tem um valor de `true` para <xref:System.Xaml.XamlMember.IsUnknown%2A> , a menos que sua implementação pode manipular as exceções das <xref:System.Xaml.XamlObjectWriter>, ou você tem outras maneiras de ajustar o <xref:System.Xaml.XamlObjectWriter> comportamento.</span><span class="sxs-lookup"><span data-stu-id="b081f-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="b081f-279">Chamando <xref:System.Xaml.XamlMember.IsUnknown%2A> invoca <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-280">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlMember" /> representa um membro somente gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-281">
            <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-281">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-282">Chamando <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invoca <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-283">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público chamável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-284">
            <see langword="true" /> Se este <see cref="T:System.Xaml.XamlMember" /> representa um público chamável <see langword="set" /> acessador; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-284">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-285">O <xref:System.Xaml.XamlMember.IsWritePublic%2A> valor considera se o <xref:System.Xaml.XamlMember.DeclaringType%2A> é público como parte do que a determinação.</span><span class="sxs-lookup"><span data-stu-id="b081f-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="b081f-286">Se <xref:System.Xaml.XamlMember.DeclaringType%2A> é não público, o `set` acessador não pode ser chamado de um modo prático, e <xref:System.Xaml.XamlMember.IsWritePublic%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="b081f-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="b081f-287">Chamando <xref:System.Xaml.XamlMember.IsWritePublic%2A> invoca <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b081f-288">O <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> método é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="b081f-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="b081f-289">A substituição tem o potencial de mudar (maliciosamente ou não) as informações relatadas de acesso de um membro XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso do sistema de tipo de sua declaração de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="b081f-290">Para nenhuma verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-291">Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-292">Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-293">Substitua este método para fornecer a reflexão interna com uma maneira alternativa para obter valores de atributo CLR.</span><span class="sxs-lookup"><span data-stu-id="b081f-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="b081f-294">Na ausência de uma substituição, o reflector interno usa a lógica de reflexão típica do CLR, como chamadas para <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="b081f-295">A implementação padrão retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-296">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-297">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-298">Esse método é invocado quando um chamador obtém um valor da <xref:System.Xaml.XamlMember.DeferringLoader%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="b081f-299">Substitua este método se você quiser <xref:System.Xaml.XamlMember.DeferringLoader%2A> para retornar um valor que é diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="b081f-300">A implementação padrão retorna um objeto lendo <xref:System.Windows.Markup.XamlDeferLoadAttribute> ou usando um <xref:System.Xaml.XamlDeferringLoader> do tipo de declaração.</span><span class="sxs-lookup"><span data-stu-id="b081f-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="b081f-301">Se nenhum objeto estiver disponível, esse método pode retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-302">Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="b081f-303">Os itens na lista relatam os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-304">Uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-305">Esse método é invocado quando um chamador obtém um valor da <xref:System.Xaml.XamlMember.DependsOn%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="b081f-306">Substitua este método se você quiser <xref:System.Xaml.XamlMember.DependsOn%2A> para retornar um valor que é diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="b081f-307">Nesse caso, com as implementações de leitor e gravador de XAML WPF do atributo <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b081f-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="b081f-308">A implementação padrão usa essa existente <xref:System.Windows.Markup.DependsOnAttribute> técnica.</span><span class="sxs-lookup"><span data-stu-id="b081f-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="b081f-309">Substitua este método se você não estiver usando <xref:System.Windows.Markup.DependsOnAttribute> para esse propósito e pretende substituir essa técnica para indicar a ordem de processamento de propriedade com sua própria técnica.</span><span class="sxs-lookup"><span data-stu-id="b081f-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="b081f-310">Se você não pretende dar suporte a uma ordem de processamento de propriedade, você pode usar a implementação padrão porque ele não retorna nenhum resultado, que é apropriado.</span><span class="sxs-lookup"><span data-stu-id="b081f-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="b081f-311">A lista é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b081f-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-312">Retorna um <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-313">As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-314">Esse método é invocado por chamadas para <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="b081f-315">A implementação padrão não requer que um <xref:System.Xaml.XamlMember> ser construído usando um dos construtores que passar um inicial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="b081f-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="b081f-316">No entanto, uma <xref:System.Xaml.XamlMember.UnderlyingMember%2A> valor deve existir para o <xref:System.Xaml.XamlMember>; caso contrário, a implementação padrão retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="b081f-317">Substitua este método se você derivar também de <xref:System.Xaml.Schema.XamlMemberInvoker> e pretender retornar a classe derivada.</span><span class="sxs-lookup"><span data-stu-id="b081f-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="b081f-318">Se você retornar `null`, <xref:System.Xaml.XamlMember.Invoker%2A> retorna <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> aos chamadores.</span><span class="sxs-lookup"><span data-stu-id="b081f-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-319">Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-320">
            <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade de ambiente, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-320">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-321">Esse método é invocado por chamadas internas que verificar se há informações de propriedade do ambientes XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="b081f-322">Comportamento de propriedade de ambiente é contabilizado no comportamento de API público de leitores XAML e gravadores XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="b081f-323">As chamadas internas que fazem referência a <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> geralmente fazem parte da lógica de processamento de XAML para certificar-se de que os objetos e valores que se baseiam no uso de ambiente para a qualificação do tipo podem funcionar corretamente.</span><span class="sxs-lookup"><span data-stu-id="b081f-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="b081f-324">A implementação de serviços de XAML do .NET Framework padrão usa a atribuição para obter essas informações de reflexão em tipos de suporte do CLR.</span><span class="sxs-lookup"><span data-stu-id="b081f-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="b081f-325">Especificamente, a implementação padrão procura <xref:System.Windows.Markup.AmbientAttribute> e retorna `true` para <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> se <xref:System.Windows.Markup.AmbientAttribute> existe em uma definição de membro.</span><span class="sxs-lookup"><span data-stu-id="b081f-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="b081f-326">Substitua este método se você não estiver usando <xref:System.Windows.Markup.AmbientAttribute> para esse propósito e pretende substituir essa técnica para indicar propriedades de ambiente XAML com sua própria técnica.</span><span class="sxs-lookup"><span data-stu-id="b081f-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="b081f-327">Exemplo APIs do WPF esse atributo com <xref:System.Windows.Markup.AmbientAttribute> estão <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> e <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b081f-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-328">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-329">
            <see langword="true" /> para relatar que este <see cref="T:System.Xaml.XamlMember" /> representa um evento, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-329">
              <see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-330">As verificações de implementação padrão se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> é do tipo <xref:System.Reflection.EventInfo>e se for, retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="b081f-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="b081f-331">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="b081f-332">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado metadados disponíveis que podem ser interpretados para determinar o XAML de representações de sistema de tipo em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-333">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade somente leitura pretendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-334">
            <see langword="true" /> para relatar este <see cref="T:System.Xaml.XamlMember" /> como uma propriedade somente leitura pretendida, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-334">
              <see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-335">A implementação padrão retorna `true` se <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe, mas a um público `set` acessador não existe para ele, conforme determinado pela reflexão interno.</span><span class="sxs-lookup"><span data-stu-id="b081f-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="b081f-336">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="b081f-337">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado metadados disponíveis que podem ser interpretados para determinar o XAML de representações de sistema de tipo em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-338">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-339">
            <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representa uma propriedade que tem um acessador público <see langword="get" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-339">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-340">A implementação padrão retorna os resultados com base em reflexão interno ou a negação do <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, o processamento, nessa ordem.</span><span class="sxs-lookup"><span data-stu-id="b081f-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="b081f-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Retorna se o próprio membro é público; ele retorna `true` para um membro público em um nonpublic tipo declarativo.</span><span class="sxs-lookup"><span data-stu-id="b081f-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="b081f-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> em vez disso, se você também queira considerar a visibilidade do tipo declarativo.</span><span class="sxs-lookup"><span data-stu-id="b081f-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="b081f-343">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="b081f-344">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b081f-345">O <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> método é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="b081f-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="b081f-346">A substituição tem o potencial de mudar (maliciosamente ou não) as informações relatadas de acesso de um membro XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso do sistema de tipo de sua declaração de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="b081f-347">Para nenhuma verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-348">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-349">
            <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-349">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-350">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="b081f-351">A implementação padrão retorna os resultados que são com base em qualquer um dos reflexão interno ou verificando uma `null` valor de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, o processamento, nessa ordem.</span><span class="sxs-lookup"><span data-stu-id="b081f-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="b081f-352">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-353">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro que tem um acessador <see langword="set" /> público, mas não um acessador <see langword="get" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-354">
            <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro somente gravação, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-354">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-355">A implementação padrão retorna `true` se um <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe que tem um público `set` acessador e um nonpublic `get` acessador, conforme determinado pela reflexão interno.</span><span class="sxs-lookup"><span data-stu-id="b081f-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="b081f-356">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="b081f-357">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-358">Retorna se este <see cref="T:System.Xaml.XamlMember" /> representa um membro de que tem um acessador <see langword="set" /> público.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-359">
            <see langword="true" /> se este <see cref="T:System.Xaml.XamlMember" /> representar um membro gravável, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-359">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-360">A implementação padrão retorna resultados com base em reflexão interno ou a negação do <xref:System.Xaml.XamlMember.IsReadOnly%2A>, o processamento, nessa ordem.</span><span class="sxs-lookup"><span data-stu-id="b081f-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="b081f-361">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="b081f-362">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b081f-363">O <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> método é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="b081f-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="b081f-364">A substituição tem o potencial de mudar (maliciosamente ou não) as informações relatadas de acesso de um membro XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso do sistema de tipo de sua declaração de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="b081f-365">Para nenhuma verificação de segurança crítica dos níveis de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-366">Retorna os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-366">Returns the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-367">Uma coleção que contém os caracteres de colchete de abertura e fechamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-367">A collection containing the opening and closing bracket characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-368">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-369">O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-370">A implementação padrão faz distinção entre membros anexáveis e não anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="b081f-371">Para membros não anexável, <xref:System.Xaml.XamlMember.LookupTargetType%2A> sempre retorna <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="b081f-372">Para membros anexáveis, <xref:System.Xaml.XamlMember.LookupTargetType%2A> retorna um resultado com base no exame de <xref:System.Xaml.XamlMember.UnderlyingMember%2A> tipo de parâmetro do acessador e interpreta a que tipo com base no contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="b081f-373">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="b081f-374">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-375">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-376">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-377">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="b081f-378">Substitua este método se você quiser <xref:System.Xaml.XamlMember.Type%2A> para retornar um valor que é diferente do valor que é habilitado por reflexão interno do padrão, e se você estiver fornecendo também personalizado <xref:System.Xaml.Schema.XamlMemberInvoker> informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="b081f-379">A implementação padrão usa diferentes caminhos de código e os significados conceituais para retornado <xref:System.Xaml.XamlType> que baseia-se isso <xref:System.Xaml.XamlMember> representa uma propriedade, método ou evento.</span><span class="sxs-lookup"><span data-stu-id="b081f-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="b081f-380">Para uma propriedade, retornada <xref:System.Xaml.XamlType> é o tipo que define a propriedade ou é retornado pela propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="b081f-381">Para um evento retornado <xref:System.Xaml.XamlType> é o tipo de manipulador de eventos necessários (um delegado em uma implementação de CLR).</span><span class="sxs-lookup"><span data-stu-id="b081f-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="b081f-382">Para um método, <xref:System.Xaml.XamlType> é o tipo de retorno.</span><span class="sxs-lookup"><span data-stu-id="b081f-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="b081f-383">Em cada caso, o contexto de esquema XAML é usado para avaliar o tipo XAML do tipo de sistema subjacente.</span><span class="sxs-lookup"><span data-stu-id="b081f-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="b081f-384">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="b081f-385">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-386">Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-387">Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.ComponentModel.TypeConverter" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-388">A implementação padrão usa a seguinte lógica e a ordem de processamento:</span><span class="sxs-lookup"><span data-stu-id="b081f-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="b081f-389">Se a atribuição existe no nível do membro (<xref:System.ComponentModel.TypeConverterAttribute>), as informações de atributo são usadas para chamar <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> contra o contexto do esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="b081f-390">Se <xref:System.Xaml.XamlMember.Type%2A> for válido, um conversor de tipo que está associado com o tipo é retornado.</span><span class="sxs-lookup"><span data-stu-id="b081f-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="b081f-391">Se o membro é um evento, um conversor de tipo de evento específico será retornado.</span><span class="sxs-lookup"><span data-stu-id="b081f-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="b081f-392">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="b081f-393">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-394">Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-395">O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="get" /> associado ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-396">Interpreta a implementação padrão de <xref:System.Xaml.XamlMember.UnderlyingMember%2A> a propriedade como <xref:System.Reflection.PropertyInfo> e retorna o valor de <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (com o parâmetro definido como `true`), que significa que o método retornado pode ser não público.</span><span class="sxs-lookup"><span data-stu-id="b081f-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="b081f-397">Esse comportamento pode resultar em `null` para determinados casos.</span><span class="sxs-lookup"><span data-stu-id="b081f-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="b081f-398">incluindo casos em que nenhum acessador associado existe ou o membro não é uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="b081f-399">Esse método é invocado quando um chamador obtém um valor da <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> propriedade em um tipo de <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="b081f-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="b081f-400">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="b081f-401">Certifique-se de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que retornem resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="b081f-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-402">Retorna um <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-403">Cria um objeto <see cref="T:System.Reflection.MemberInfo" /> do sistema de tipo CLR que está associado a este <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-404">A implementação padrão retorna as informações de membro subjacente, que se baseia em construção.</span><span class="sxs-lookup"><span data-stu-id="b081f-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="b081f-405">Se o <xref:System.Reflection.MemberInfo> objeto é construído com uma assinatura que não fornece informações suficientes para definir o membro subjacente, esse método retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="b081f-406">Se um membro subjacente foi definido durante a construção, não será preciso chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="b081f-407">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="b081f-408">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="b081f-409">Certifique-se de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que retornem resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="b081f-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-410">Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-411">O <see cref="T:System.Reflection.MethodInfo" /> para o acessador <see langword="set" /> associado ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-412">A implementação padrão interpreta <xref:System.Xaml.XamlMember.UnderlyingMember%2A> como <xref:System.Reflection.PropertyInfo> e retorna o valor de <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (com o parâmetro definido como `true`), que significa que o método retornado pode ser não público.</span><span class="sxs-lookup"><span data-stu-id="b081f-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="b081f-413">Isso pode resultar em `null` para determinados casos, inclusive casos em que não há nenhum acessador tal ou o membro não é uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="b081f-414">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> em um tipo de <xref:System.Xaml.Schema.XamlMemberInvoker>. Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="b081f-415">Certifique-se de implementar <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, e <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> para que retornem resultados correlacionados.</span><span class="sxs-lookup"><span data-stu-id="b081f-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-416">Retorna uma implementação do serializador de valor que está associado a este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-417">Uma instância <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com a restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-418">A implementação padrão usa a seguinte lógica e a ordem de processamento:</span><span class="sxs-lookup"><span data-stu-id="b081f-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="b081f-419">Se a atribuição existe no nível do membro (<xref:System.Windows.Markup.ValueSerializerAttribute>), as informações de atributo são usadas para chamar <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> contra o contexto do esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="b081f-420">Se <xref:System.Xaml.XamlMember.Type%2A> for válido, um conversor de valor que está associado com o tipo é retornado.</span><span class="sxs-lookup"><span data-stu-id="b081f-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="b081f-421">Se as condições anteriores não se aplicam, `null` será retornado.</span><span class="sxs-lookup"><span data-stu-id="b081f-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="b081f-422">Esse método é invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="b081f-423">Substitua este método se desejar relatar resultados uniforme para toda uma <xref:System.Xaml.XamlMember> derivado da classe, ou se você tiver um especializado em metadados disponíveis para determinar isso em uma base por caso.</span><span class="sxs-lookup"><span data-stu-id="b081f-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-424">Define os caracteres de colchete de abertura e fechamento de uma extensão de marcação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-424">Defines the opening and closing bracket characters for a markup extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-425">Uma coleção que contém os caracteres de colchete de abertura e fechamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-425">A collection containing the opening and closing bracket characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-426">Obtém o nome de cadeia de caracteres <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-427">O <see langword="xamlName" /> nome de cadeia de caracteres que declara este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-428">Esse valor é sempre definido durante a construção.</span><span class="sxs-lookup"><span data-stu-id="b081f-428">This value is always set during construction.</span></span> <span data-ttu-id="b081f-429">Os construtores que são implementados pelo <xref:System.Xaml.XamlMember> normalmente lançam uma exceção se não for especificado um nome inicial; portanto, não espere que essa propriedade seja `null` ou uma cadeia de caracteres vazia, se você estiver usando o padrão dos serviços de XAML do .NET Framework implementações.</span><span class="sxs-lookup"><span data-stu-id="b081f-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="b081f-430">[Gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) e regras de nomenclatura para o tipo CLR e os membros não são uma interseção exata.</span><span class="sxs-lookup"><span data-stu-id="b081f-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="b081f-431">É possível declarar um nome de membro que é legal dentro do CLR, mas não é válido em XAML de nomenclatura.</span><span class="sxs-lookup"><span data-stu-id="b081f-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="b081f-432">Você deve evitar essa situação, se possível.</span><span class="sxs-lookup"><span data-stu-id="b081f-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">
          <span data-ttu-id="b081f-433">XamlName</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-433">XamlName</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="b081f-434">
            <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="b081f-435">
            <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-436">Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm o mesmo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-437">
            <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for o mesmo que o valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-437">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1">
          <span data-ttu-id="b081f-438">
            <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <param name="xamlMember2">
          <span data-ttu-id="b081f-439">
            <see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b081f-440">Determina se dois objetos <see cref="T:System.Xaml.XamlMember" /> especificados têm valores diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-441">
            <see langword="true" /> se o valor de <paramref name="xamlMember1" /> for diferente do valor de <paramref name="xamlMember2" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-441">
              <see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-442">Obtém o único URI de namespace de XAML que identifica o namespace de XAML primário para este <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-443">O identificador para o namespace XAML primário para este <see cref="T:System.Xaml.XamlMember" />, como uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-444">O <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> propriedade fornece o mesmo valor que chamar <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> e, em seguida, obtendo a primeira cadeia de caracteres do valor na lista retornada.</span><span class="sxs-lookup"><span data-stu-id="b081f-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="b081f-445">O namespace XAML preferencial deve ser usado ao gravar o membro de volta para o texto ou outras representações que preservam as informações de namespace XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-446">Obtém um valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica como um designer visual deve processar o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-447">Um valor da enumeração <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="b081f-448">O padrão é <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-449">Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-450">O tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-451">O valor retornado é diferente de membros anexáveis e não anexável.</span><span class="sxs-lookup"><span data-stu-id="b081f-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="b081f-452">Para membros não anexável, <xref:System.Xaml.XamlMember.TargetType%2A> retorna <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="b081f-453">Para membros anexáveis, <xref:System.Xaml.XamlMember.LookupTargetType%2A> retorna um resultado que se baseia essa lógica:</span><span class="sxs-lookup"><span data-stu-id="b081f-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="b081f-454">Se a reflexão não é possível resolver um backup (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), esse método retorna uma constante interna que representa um tipo de objeto genérico.</span><span class="sxs-lookup"><span data-stu-id="b081f-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="b081f-455">Se a condição anterior não se aplica, <xref:System.Xaml.XamlMember.LookupTargetType%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="b081f-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="b081f-456">A implementação padrão retorna um <xref:System.Xaml.XamlType> que se baseia em examinando os métodos que implementam o `get` e `set` acessadores.</span><span class="sxs-lookup"><span data-stu-id="b081f-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="b081f-457">Uma classe pode ser substituído <xref:System.Xaml.XamlMember.LookupTargetType%2A> usar um comportamento diferente, como outros metadados de formulários que poderá reportar os tipos de destino para membros anexáveis.</span><span class="sxs-lookup"><span data-stu-id="b081f-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b081f-458">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b081f-459">Uma representação da cadeia de caracteres desse <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-460">Essa implementação retorna <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-461">Obtém o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-462">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-463">Chamando <xref:System.Xaml.XamlMember.Type%2A> invoca <xref:System.Xaml.XamlMember.LookupType%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-464">Isso ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="b081f-465">No comportamento padrão (nenhuma <xref:System.Xaml.XamlMember.LookupType%2A> substituir), retornado <xref:System.Xaml.XamlType> podem ter diferentes significados conceituais.</span><span class="sxs-lookup"><span data-stu-id="b081f-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="b081f-466">Aplica-se qual significado depende se isso <xref:System.Xaml.XamlMember> representa uma propriedade, método ou evento, como mostra a lista a seguir:</span><span class="sxs-lookup"><span data-stu-id="b081f-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="b081f-467">Para uma propriedade, retornada <xref:System.Xaml.XamlType> é o tipo que define a propriedade ou é retornado pela propriedade.</span><span class="sxs-lookup"><span data-stu-id="b081f-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="b081f-468">Para um evento retornado <xref:System.Xaml.XamlType> é o tipo de manipulador de eventos necessários (um delegado em uma implementação de CLR).</span><span class="sxs-lookup"><span data-stu-id="b081f-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="b081f-469">Para um método, <xref:System.Xaml.XamlType> é o tipo de retorno desse método, que pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="b081f-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="b081f-470">Em cada caso, o contexto do esquema XAML é usado para avaliar o tipo XAML do tipo de backup.</span><span class="sxs-lookup"><span data-stu-id="b081f-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-471">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que pode ser usado para a construção de conversão de tipo de objetos declarados XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-472">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> valor, com um <see cref="T:System.ComponentModel.TypeConverter" /> restrição sobre o genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-473">Chamando <xref:System.Xaml.XamlMember.TypeConverter%2A> invoca <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-474">Esse comportamento ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="b081f-475">Valor de implementações que retornam uma propriedade não nulo para <xref:System.Xaml.XamlMember.TypeConverter%2A> não são necessariamente um funcionamento <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="b081f-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="b081f-476">A seguir está uma lista de possíveis valores de retorno não nulo para <xref:System.Xaml.XamlMember.TypeConverter%2A> e esses valores representam:</span><span class="sxs-lookup"><span data-stu-id="b081f-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="b081f-477">O valor de retorno relata um conversor de tipo que é atribuído especificamente a esse membro ou, de modo geral, para o tipo de destino do conversor.</span><span class="sxs-lookup"><span data-stu-id="b081f-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="b081f-478">Esse comportamento geralmente é que a maioria dos sistemas de tipo XAML e procurar os processadores XAML para criar uma instância de um conversor de tipo e invocar seus métodos.</span><span class="sxs-lookup"><span data-stu-id="b081f-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="b081f-479">O valor de retorno relata um conversor de valor interno.</span><span class="sxs-lookup"><span data-stu-id="b081f-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="b081f-480">Esses conversores existem para determinadas operações internas que são executadas por um gravador XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="b081f-481">Em particular, esses conversores de valor internos convertem os valores de cadeia de caracteres bruta de atributo para os primitivos de nível de linguagem XAML.</span><span class="sxs-lookup"><span data-stu-id="b081f-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="b081f-482">Para a implementação de serviços de XAML do .NET Framework, essas conversões de tipo interno geralmente encaminham para um conversor de tipo que é definido no assembly System.</span><span class="sxs-lookup"><span data-stu-id="b081f-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="b081f-483">Por exemplo, uma conversão para um <xref:System.Int32> valor tem interno encaminhado a conversão e, portanto, o <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> referências de valor <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="b081f-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="b081f-484">O valor de retorno relata caso especial de um modelo de objeto irrestrita; ou seja, o <xref:System.Xaml.XamlMember> tem uma <xref:System.Xaml.XamlMember.Type%2A> valor <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="b081f-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="b081f-485">Nesse caso, o <xref:System.Xaml.Schema.XamlValueConverter%601> informa que o <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> é {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="b081f-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="b081f-486">No entanto, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> é `null` porque nenhuma instância ou um tipo real está disponível para realizar essa conversão.</span><span class="sxs-lookup"><span data-stu-id="b081f-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="b081f-487">Em vez disso, o comportamento do modelo de objeto não pode ser determinado até que o tempo de execução, quando o tempo de execução da tecnologia específica determina a manipulação de seu grafo de objeto.</span><span class="sxs-lookup"><span data-stu-id="b081f-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="b081f-488">Se você puder acessar um funcionamento <xref:System.ComponentModel.TypeConverter> de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, você pode invocar seus métodos de conversão.</span><span class="sxs-lookup"><span data-stu-id="b081f-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="b081f-489">No entanto, muitos métodos de conversão dependem de contexto de serviço.</span><span class="sxs-lookup"><span data-stu-id="b081f-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="b081f-490">Se você não tiver o mesmo contexto de serviço disponível que o conversor de tipo espera para sua função típica de escrever objetos para gráficos de objeto, os métodos de conversor podem gerar exceções.</span><span class="sxs-lookup"><span data-stu-id="b081f-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-491">Obtém o <see cref="T:System.Reflection.MemberInfo" /> do sistema do tipo CLR que está disponível para um membro que é criado por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> ou <see cref="T:System.Reflection.EventInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-492">Sistema de tipos CLR <see cref="T:System.Reflection.MemberInfo" /> informações sobre como converter os parâmetros do construtor inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span>
          </span>
          <span data-ttu-id="b081f-493">Um <see cref="T:System.Xaml.XamlMember" /> que é construído com o <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> assinatura retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-494">Chamando <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invoca <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b081f-495">Obtém um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para a serialização de valor de objetos declarados XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b081f-496">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com <see cref="T:System.Windows.Markup.ValueSerializer" /> restrição sobre o genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b081f-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b081f-497">Chamando <xref:System.Xaml.XamlMember.ValueSerializer%2A> invoca <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="b081f-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="b081f-498">Esse comportamento ocorre quando a lógica de reflexão interno inicial ainda não tiver definido as informações.</span><span class="sxs-lookup"><span data-stu-id="b081f-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="b081f-499">Nem todos os casos que retornam uma propriedade não nulos de valor para <xref:System.Xaml.XamlMember.ValueSerializer%2A> são necessariamente um funcionamento <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="b081f-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="b081f-500">Ver <xref:System.Xaml.XamlMember.TypeConverter%2A>; as mesmas considerações se aplicam a <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="b081f-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>