<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fcab2d451e7a5dffd50523a55bea65848a0295d" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36444908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa um serviço que pode retornar itens de informações sobre propriedades de ambiente ou tipos de ambiente para conversores de tipo e extensões de marcação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa interface representa o serviço que pode ajudar a conversores de tipo e extensões de marcação para obter os identificadores de propriedade de ambiente para o sistema de tipos XAML (<xref:System.Xaml.XamlMember> objetos). O serviço também pode obter os valores de propriedade de ambiente de classes. Tipos também podem ser ambiente; qualquer membro que usa esse tipo como seu valor deve ser considerado ambiente.  
  
 Esse serviço normalmente é retornado por uma chamada para <xref:System.IServiceProvider.GetService%2A>, que é feito em relação a um provedor de serviços específicos ao contexto. O provedor de serviço está disponível para contextos de que precisam dele, como o código de execução de um conversor de valor. Para obter mais informações, consulte [conversores de tipo e extensões de marcação para XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) e [contextos de serviço disponíveis para conversores de tipo e extensões de marcação](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
## <a name="about-ambient-properties"></a>Sobre propriedades de ambiente  
 Uma propriedade de ambiente é uma propriedade cujo valor da propriedade deve estar disponível para o tipo de conversor e usos de extensão de marcação que existem na estrutura de nó XAML e no grafo de objeto criado a partir dele. Isso é relevante para um processador XAML durante a fase de gravação do objeto do caminho de carga ou a fase de serialização de uma operação Salvar caminho.  
  
 No caso de caminho de carga, o valor da propriedade de ambiente pode influenciar o valor no grafo de objeto de outras propriedades que existe abaixo dele em uma estrutura de nó XAML. Quando processado como um fluxo de nó XAML, o conceito de ambiente significa que o valor da propriedade de ambiente deve estar disponível para conversores de tipo e extensões de marcação da `StartObject` para `EndObject`. Da mesma forma, um conversor de tipo que é usado para salvar caminho pode usar o conhecimento da propriedade de ambiente e seu valor. Portanto, o XAML que é produzido é a melhor representação de ida e volta.  
  
 Para membros em geral, XAML não especifica a ordem na qual os membros de um objeto devem ser processados. No entanto, qualquer valor de propriedade de ambiente deve ser processada primeiro pelo leitor de XAML para que os usos de extensão de tipo conversor e a marcação que estão contidos em outras propriedades podem acessá-lo por meio de <xref:System.Xaml.IAmbientProvider> service.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> é um conceito semelhante que influencia também a ordem de processamento de nós XAML. No entanto, <xref:System.Xaml.XamlMember.DependsOn%2A> só pode ser usada para relações de membro e o nó par; ele não consegue influenciar uma todos os descendentes. Além disso, <xref:System.Xaml.XamlMember.DependsOn%2A> diretamente influencia do objeto gráfico de configuração da propriedade; ao passo que a técnica de ambiente depende de conversores de tipo ou extensões de marcação. A técnica de ambiente, deve também haver um conversor de tipo específico ou a definição de extensão de marcação que especifica como o valor da propriedade de ambiente deve ser interpretado e aplicado ao objeto.  
  
## <a name="wpf-usage-notes"></a>Notas de uso do WPF  
 Um cenário de propriedade de ambiente que é ilustrado na [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] conjunto de recursos é <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, que pode se qualificar as pesquisas de nome de propriedade necessários para outros valores. Nesse caso, o <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor qualifica o <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valores que estão localizados em nós XAML abaixo dela. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> usa o comportamento do conversor de tipo para um <xref:System.Windows.DependencyProperty>. Esse comportamento acessa o ambiente <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> valor consultando <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> em um contexto de serviço que está disponível para conversores de tipo e extensões de marcação.  
  
 Um tipo de ambiente de cenário é ilustrado no conjunto de recursos do WPF é <xref:System.Windows.ResourceDictionary>. <xref:System.Windows.ResourceDictionary> tem um <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> propriedade que pode conter outros <xref:System.Windows.ResourceDictionary> objetos de mesclagem e a ordem planejada da resolução de recursos para os cenário mesclada conflitos com a ordem que os tipos são carregados. <xref:System.Windows.ResourceDictionary> aplica-se <xref:System.Windows.Markup.AmbientAttribute> para que um processador XAML pode processar corretamente as referências em um dicionário mesclado com `StaticResource` usos. Especificamente, `StaticResource` é uma extensão de marcação, que chama <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um conjunto enumerável de itens de informações de tipo ou propriedade de ambiente para o escopo solicitado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
        <summary>Retorna um conjunto enumerável de instâncias de objeto de possíveis tipos de ambiente para tipos solicitados.</summary>
        <returns>Um conjunto enumerável de objetos que representam os valores do conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
        <param name="properties">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
        <summary>Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades.</summary>
        <returns>Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que é retornado, contém o <xref:System.Xaml.XamlMember> identificador e um valor da propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada. Pode ser <see langword="null" />.</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> para não usar um contexto salvo; <see langword="false" /> para usar um contexto salvo. O padrão é <see langword="false" />.</param>
        <param name="types">To be added.</param>
        <param name="properties">Especifica um ou mais objetos de identificador de propriedades que identificam as propriedades a serem consideradas ambiente.</param>
        <summary>Retorna um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de tipos e propriedades.</summary>
        <returns>Um conjunto enumerável de itens de informações de propriedade de ambiente para o conjunto solicitado de propriedades e tipos. As informações de propriedade para cada <see cref="T:System.Xaml.AmbientPropertyValue" /> que é retornado corresponderá a uma entrada <paramref name="types" /> ou <paramref name="properties" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que é retornado, contém o <xref:System.Xaml.XamlMember> identificador e um valor da propriedade.  
  
 Esse determinado <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> sobrecarga pode pesquisar tipos de ambiente e propriedades de ambiente no mesmo passam através de uma árvore. Usar essa sobrecarga resulta em uma ordenação dos itens no que é diferente do valor de retorno <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.  
  
 Essa sobrecarga também permite que a pesquisa não usar qualquer contexto salvo. O <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> ou <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> sobrecargas implicitamente usam um contexto salvo se ele estiver disponível (mas sempre funcionam como se implícito `searchLiveStackOnly` parâmetro é `false`). O conceito de um contexto salvo potencialmente é tratado diferentemente por contextos de esquema XAML específicos ou por estruturas que incorporam XAML. Na implementação do WPF XAML, os contextos salvos são usados para expansão do modelo, bem como outras áreas de recurso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna um único item de informações de propriedade ou tipo de ambiente do conjunto solicitado com base em qual propriedade é encontrada pela primeira vez.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">O conjunto de tipos do qual recuperar informações de tipo de ambiente.</param>
        <summary>Retorna o primeiro objeto correspondente que é um tipo de ambiente possível para os tipos solicitados.</summary>
        <returns>O primeiro objeto de resultado para o conjunto solicitado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">Especifica um ou mais tipos que devem parar a avaliação quando eles forem encontrados subindo no gráfico de objeto. Esse tipo contém a propriedade de ambiente desejada.</param>
        <param name="properties">Especifica um ou mais objetos que identificam as propriedades a serem consideradas ambiente.</param>
        <summary>Retorna um único item de informações de propriedade de ambiente do conjunto solicitado de propriedades, com base em qual propriedade é encontrada pela primeira.</summary>
        <returns>Um único item de informação de propriedade de ambiente para o primeiro valor da propriedade de ambiente da lista <paramref name="properties" /> que é encontrado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Xaml.AmbientPropertyValue> que é retornado, contém o <xref:System.Xaml.XamlMember> identificador e um valor da propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>