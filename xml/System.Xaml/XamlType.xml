<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlType.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac514664bfd79f70a81adc02c3d6f947177210cafa4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14664bfd79f70a81adc02c3d6f947177210cafa4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlType">
          <source>Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</source>
          <target state="translated">Relata informações sobre os tipos XAML, como parte do sistema geral de XAML que é implementado nos serviços XAML do .NET Framework.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>Many APIs in the <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</source>
          <target state="translated">Muitas APIs no <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> classe fornecem informações sobre os tipos XAML, onde o conceito eles relatam é semelhante a seções específicas da especificação de XAML [MS-XAML].</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> é usado extensivamente na API de serviços do .NET Framework XAML para relatório de informações sobre um tipo XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> relata as informações que você talvez precise saber sobre um tipo XAML para trabalhar com uma instância ou para acessar seus membros de um fluxo do nó XAML, ou uma representação de XAML semelhante.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>Its reporting is similar to how the <ph id="ph1">&lt;xref:System.Type&gt;</ph> in the CLR type system, together with reflection classes such as <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, provide information about a CLR type and its usage.</source>
          <target state="translated">Seu relatório é semelhante ao modo como o <ph id="ph1">&lt;xref:System.Type&gt;</ph> no CLR, digite sistema, junto com as classes de reflexão como <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, fornecem informações sobre um tipo CLR e seu uso.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>To extend the XAML type system, you can derive from <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>.</source>
          <target state="translated">Para estender o sistema de tipo XAML, você pode derivar de <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>To do so effectively, you might also need to implement a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.</source>
          <target state="translated">Para fazer assim efetivamente, você também precisará implementar uma <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> permite que o sistema de tipo XAML generalizado trabalhar com o sistema de tipo fazendo o que você especificar como parte do comportamento de invocação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlType">
          <source>The specific custom <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> provides a way to reduce the dependencies on the CLR type system, which are used by the default <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> behavior.</source>
          <target state="translated">Personalizado específico <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> fornece uma maneira de reduzir as dependências no sistema de tipos CLR, que são usadas pelo padrão <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> comportamento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlType">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
          <source>The underlying CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the XAML type to construct.</source>
          <target state="translated">O CLR subjacente <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para o tipo XAML a ser construído.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
          <source>XAML schema context for XAML readers or XAML writers.</source>
          <target state="translated">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> class based on the underlying CLR type information.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> com base nas informações do tipo de CLR subjacente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
          <source>One or more of <ph id="ph1">&lt;paramref name="underlyingType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais <ph id="ph1">&lt;paramref name="underlyingType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> são <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>The name of the type to create.</source>
          <target state="translated">O nome do tipo a ser criado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>The type arguments for a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that represents a generic type.</source>
          <target state="translated">Os argumentos de tipo para um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que representa um tipo genérico.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Can be (and often is) <ph id="ph1">&lt;see langword="null" /&gt;</ph>, which indicates that the represented type is not a generic type.</source>
          <target state="translated">Pode ser (e geralmente é) <ph id="ph1">&lt;see langword="null" /&gt;</ph>, o que indica que o tipo representado não é um tipo genérico.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>XAML schema context for XAML readers and XAML writers.</source>
          <target state="translated">Contexto do esquema XAML para leitores de XAML e gravadores de XAML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> class based on a string name for the type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> com base em um nome de cadeia de caracteres para o tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>This is a protected constructor.</source>
          <target state="translated">Esse é um construtor protegido.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>No current public derived classes exist that use this particular path for construction.</source>
          <target state="translated">Sem classes derivadas de públicas atuais existem que usam esse caminho específico para a construção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>As a consumer of the existing <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, you must use the other constructor signatures (<ph id="ph2">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>) to initialize a <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph> object.</source>
          <target state="translated">Como um consumidor de existente <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, você deve usar as outras assinaturas de construtor (<ph id="ph2">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph>) para inicializar um <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>One or more of <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> são <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
          <source>The underlying type for the XAML type to construct.</source>
          <target state="translated">O tipo subjacente para o tipo XAML a ser construído.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
          <source>XAML schema context for the XAML reader.</source>
          <target state="translated">Contexto do esquema XML para o leitor de XAML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> implementation that handles run-time reflection calls against the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">A implementação de <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> que manipula a reflexão de chamadas do tempo de execução em relação a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> class based on underlying type information and a <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> implementation.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> com base nas informações de tipo subjacentes e uma implementação <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
          <source>One or more of <ph id="ph1">&lt;paramref name="underlyingType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais <ph id="ph1">&lt;paramref name="underlyingType" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> são <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>The XAML namespace for the type, as a string.</source>
          <target state="translated">O namespace de XAML para o tipo, como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>The name of the type in the provided <bpt id="p1">&lt;c&gt;</bpt>unknownTypeNamespace<ept id="p1">&lt;/c&gt;</ept> XAML namespace.</source>
          <target state="translated">O nome do tipo no namespace de XAML <bpt id="p1">&lt;c&gt;</bpt>unknownTypeNamespace<ept id="p1">&lt;/c&gt;</ept> fornecido.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>The type arguments for a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that represents a generic type.</source>
          <target state="translated">Os argumentos de tipo para um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que representa um tipo genérico.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Can be (and often is) <ph id="ph1">&lt;see langword="null" /&gt;</ph>, which indicates that the represented type is not a generic type.</source>
          <target state="translated">Pode ser (e geralmente é) <ph id="ph1">&lt;see langword="null" /&gt;</ph>, o que indica que o tipo representado não é um tipo genérico.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>XAML schema context for XAML readers or XAML writers.</source>
          <target state="translated">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> class based on the XAML namespace and a string name for the type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> com base no namespace de XAML e em um nome de cadeia de caracteres para o tipo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</source>
          <target state="translated">Este construtor é exclusivamente para análise e a gravação de nó de XAML de usos de tipo que são conhecidos por não terem suporte no sistema de tipos compatível nem no contexto de esquema XAML.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</source>
          <target state="translated">Use este construtor somente para tipos "desconhecidos", onde um tipo XAML que é mapeado para um sistema de tipo subjacente não está disponível.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>This constructor might not produce a result where <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Este construtor não pode produzir um resultado onde <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType&gt;</ph> é <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>Instead, the default reflector logic reports the underlying type as <ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Em vez disso, a lógica de refletor padrão informa o tipo subjacente como <ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>However, this behavior can change because of the <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> override.</source>
          <target state="translated">No entanto, esse comportamento pode alterar devido a <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> substituir.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
          <source>One or more of <ph id="ph1">&lt;paramref name="unknownTypeNamespace" /&gt;</ph>, <ph id="ph2">&lt;paramref name="unknownTypeName" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="schemaContext" /&gt;</ph> are <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais dentre <ph id="ph1">&lt;paramref name="unknownTypeNamespace" /&gt;</ph>, <ph id="ph2">&lt;paramref name="unknownTypeName" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="schemaContext" /&gt;</ph> é <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.AllowedContentTypes">
          <source>Gets a read-only collection of the types that are usable as the <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.ContentProperty" /&gt;</ph> value for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém uma coleção somente leitura dos tipos que são utilizáveis como o valor <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.ContentProperty" /&gt;</ph> para esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.AllowedContentTypes">
          <source>A read-only collection of possible content types.</source>
          <target state="translated">Uma coleção somente leitura de possíveis tipos de conteúdo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.AllowedContentTypes">
          <source>Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <ph id="ph1">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</source>
          <target state="translated">Tipos de pode ser atribuídos um tipo específico de conteúdo (por exemplo, pode ser atribuído a um tipo base que é um tipo de conteúdo permitido) não são considerados vários tipos para fins de <ph id="ph1">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.AllowedContentTypes">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.BaseType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the immediate base type of this XAML type.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo base imediato desse tipo de XAML.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.BaseType">
          <source>Determination of this value is based on the underlying type of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and schema context.</source>
          <target state="translated">A determinação desse valor é baseada no tipo subjacente deste <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> e no contexto do esquema.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the immediate base type of this XAML type.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo base imediato desse tipo de XAML.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>By default, <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> returns an internal constant that represents an <ph id="ph2">&lt;xref:System.Object&gt;</ph> if <ph id="ph3">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> retorna uma constante interna que representa um <ph id="ph2">&lt;xref:System.Object&gt;</ph> se <ph id="ph3">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar as informações de tipo informada sobre um tipo XAML, para que ele não se alinha de forma esperada com as informações de seu tipo CLR subjacente do sistema de tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.BaseType">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações de acesso e operações de atribuição críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>The type to check against the current <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> .</source>
          <target state="translated">O tipo para verificar em relação ao <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>Returns a value that indicates whether an instance of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> has the specified <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> in its list of assignable types.</source>
          <target state="translated">Retorna um valor que indica se uma instância deste <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> tem o <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> especificado em sua lista de tipos atribuíveis.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="xamlType" /&gt;</ph> is in the assignable types list; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="xamlType" /&gt;</ph> está na lista de tipos atribuíveis; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</source>
          <target state="translated">Embora o tipo pode ser atribuído não tem todos os recursos do tipo de referência, você pode usá-lo para atribuição.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>For example, you can use assignment to make type matches for the values of a property.</source>
          <target state="translated">Por exemplo, você pode usar a atribuição para fazer a correspondência de tipo para os valores de uma propriedade.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</source>
          <target state="translated">O conceito de tipos atribuíveis em XAML é semelhante ao conceito de conversão de backup no sistema de tipos CLR.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>For example, under a CLR type system, every type has an <ph id="ph1">&lt;xref:System.Object&gt;</ph> in its assignable type list.</source>
          <target state="translated">Por exemplo, em um sistema de tipos CLR, cada tipo tem um <ph id="ph1">&lt;xref:System.Object&gt;</ph> em sua lista de tipo pode ser atribuído.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>If one of the two <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> instances that are used for comparison has <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> equal to <ph id="ph3">`true`</ph>, this method has a special Unknown mode that returns <ph id="ph4">`true`</ph> if the two <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph> instances are equivalent.</source>
          <target state="translated">Se um dos dois <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> instâncias que são usadas para comparação tem <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> igual a <ph id="ph3">`true`</ph>, esse método tem um modo desconhecido especial que retorna <ph id="ph4">`true`</ph> se os dois <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph> instâncias forem equivalentes.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>The default implementation uses the CLR <ph id="ph1">&lt;xref:System.Type&gt;</ph> from <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> for this <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> and the input <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph>, and calls <ph id="ph5">&lt;xref:System.Type.IsAssignableFrom%2A&gt;</ph>.</source>
          <target state="translated">A implementação padrão usa o CLR <ph id="ph1">&lt;xref:System.Type&gt;</ph> de <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> para este <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> e a entrada <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph>e chama <ph id="ph5">&lt;xref:System.Type.IsAssignableFrom%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>Override this method if you want a different determination of assignable types.</source>
          <target state="translated">Substitua este método se você quiser uma determinação de diferente tipos atribuíveis.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>Passing a null <ph id="ph1">`xamlType`</ph> does not throw an exception and always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Passando um valor nulo <ph id="ph1">`xamlType`</ph> não gerará uma exceção e sempre retornará <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar assignability de um tipo XAML, de forma que ele não se alinha de forma esperada com o comportamento de conversão de tipo de seu tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações de acesso e operações de atribuição críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.ConstructionRequiresArguments">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> must have arguments (generic constraints through <ph id="ph2">&lt;see langword="x:TypeArguments" /&gt;</ph>, initialization text, or other XAML techniques) to construct a valid instance of the type.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> deve ter argumentos (restrições genéricas por meio de <ph id="ph2">&lt;see langword="x:TypeArguments" /&gt;</ph>, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ConstructionRequiresArguments">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if construction of an instance requires some argument value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se algum valor de argumento; requer a construção de uma instância Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ConstructionRequiresArguments">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ConstructionRequiresArguments">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the content property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém as informações de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para a propriedade de conteúdo deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the content property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">As informações de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para a propriedade de conteúdo deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no content property exists.</source>
          <target state="translated">Pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> não se existir nenhuma propriedade de conteúdo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> to the type definition.</source>
          <target state="translated">Quando usando a associação ou fazendo do sistema de tipo CLR, a propriedade de conteúdo XAML pode ser especificada em um tipo aplicando <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> à definição de tipo.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>This property aligns to the <ph id="ph1">`[content property]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[content property]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentProperty">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <ph id="ph1">&lt;see langword="Collection&amp;lt;T&amp;gt;" /&gt;</ph>.</source>
          <target state="translated">Obtém os tipos que são usados para encapsular conteúdo para uma propriedade de conteúdo quando não for uma correspondência de tipo estrito, como cadeias de caracteres em uma <ph id="ph1">&lt;see langword="Collection&amp;lt;T&amp;gt;" /&gt;</ph> fortemente tipada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>A read-only collection of possible content wrapper types; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uma coleção somente leitura de tipos possíveis de wrapper de conteúdo; Caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>If there are no wrappers to account for type match loosening, this property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se não houver nenhum wrappers para flexibilizar de correspondência de tipo de conta, essa propriedade é <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>Types that evaluate as <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> for a specific content type are not considered multiple types for purposes of <ph id="ph2">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>.</source>
          <target state="translated">Tipos que são avaliadas como <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> para um tipo específico de conteúdo não são considerados o vários tipos para fins de <ph id="ph2">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>In the CLR binding for <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>, the XAML content wrapper type can be specified on a type as a <ph id="ph3">&lt;xref:System.Windows.Markup.ContentWrapperAttribute&gt;</ph>.</source>
          <target state="translated">Na associação CLR para <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> e <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>, o tipo de conteúdo wrapper XAML pode ser especificado em um tipo como um <ph id="ph3">&lt;xref:System.Windows.Markup.ContentWrapperAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ContentWrappers">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.DeferringLoader">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> that represents the deferred loading conversion behavior for this type.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> que representa o comportamento de conversão de carregamento adiado para esse tipo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.DeferringLoader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> constraint that represents the deferred loading behavior for this type.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> que representa o comportamento de carregamento adiado para este tipo de restrição.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.DeferringLoader">
          <source>XAML template behavior in WPF is an example of deferred loading behavior.</source>
          <target state="translated">Comportamento do modelo XAML no WPF é um exemplo de comportamento de carregamento adiado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.DeferringLoader">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.DeferringLoader">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlType">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Indica se o objeto atual é igual a outro objeto.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Object)">
          <source>The object to compare with this object.</source>
          <target state="translated">O objeto a ser comparado com este objeto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Object)">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Indica se o objeto atual é igual a outro objeto.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is equal to the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto atual for igual ao parâmetro <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
          <source>An object to compare with this object.</source>
          <target state="translated">Um objeto para comparação com esse objeto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
          <target state="translated">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is equal to the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto atual for igual ao parâmetro <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
          <source>The directive for which to find the aliased member.</source>
          <target state="translated">A diretiva para a qual localizar o membro com alias.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
          <source>Returns the XAML member that is aliased to a XAML directive by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
          <source>The aliased member, if found; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O membro transformado em alias, se encontrado; caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this method can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para esse método podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>Returns a collection that contains all the attachable properties that are exposed by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna uma coleção que contém todas as propriedades anexáveis que são expostas por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>A collection that contains zero or more <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> values.</source>
          <target state="translated">Uma coleção que contém zero ou mais valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>Each <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> in the returned collection should contain values that support the concept that the <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> is an attachable member.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> na coleção retornada deve conter valores que suportam o conceito que o <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> é um membro anexável.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>For example, members should return <ph id="ph1">`true`</ph> for <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph>, a type for <ph id="ph3">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>, and so on.</source>
          <target state="translated">Por exemplo, os membros devem retornar <ph id="ph1">`true`</ph> para <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph>, um tipo para <ph id="ph3">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>, e assim por diante.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this method can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para esse método podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAllAttachableMembers">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAllMembers">
          <source>Returns a collection that contains all the members that are exposed by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna uma coleção que contém todos os membros que são expostos por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAllMembers">
          <source>A collection that contains zero or more <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> values.</source>
          <target state="translated">Uma coleção que contém zero ou mais valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAllMembers">
          <source>Calls to this method can invoke <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> overrides on <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Chamadas para esse método podem invocar <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> substituições em <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>The name of the attachable member to get, in <bpt id="p1">&lt;c&gt;</bpt>ownerTypeName.MemberName<ept id="p1">&lt;/c&gt;</ept> form.</source>
          <target state="translated">O nome do membro anexável a ser obtido, no formato <bpt id="p1">&lt;c&gt;</bpt>ownerTypeName.MemberName<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> representing a specific named attachable member of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> que representa um membro anexável nomeado específico deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> object for the requested attachable member; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if no attachable member by that name exists.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para o membro anexável solicitado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se não existir nenhum membro anexável com esse nome.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>Calls to this method can invoke <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> overrides on <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Chamadas para esse método podem invocar <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> substituições em <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML, para que elas não se alinham de forma esperada com a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> informações sobre o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações críticas de segurança de membro de emissão de relatórios, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Retorna o código hash para esse objeto.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">Um código hash inteiro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>The name of the member to get (as a string).</source>
          <target state="translated">O nome do membro a ser obtido (como uma cadeia de caracteres).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> for a specific named member from this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para um membro nomeado específico deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the member, if such a member was found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">As informações <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para o membro, se esse membro for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>The value for <ph id="ph1">`name`</ph> is expected to be unqualified.</source>
          <target state="translated">O valor de <ph id="ph1">`name`</ph> deve ser qualificado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>Type-qualified names that indicate an attached member should be submitted to <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph> instead.</source>
          <target state="translated">Nomes de tipo qualificado que indicam que um membro anexado devem ser enviados para <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</source>
          <target state="translated">O prefixo de membro não devem ser usados nomes; um prefixo é situacional para um uso e o sistema de tipo XAML não pode saber o contexto de tal uso e como o prefixo é mapeado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>Calls to this method can invoke <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> overrides on <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Chamadas para esse método podem invocar <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> substituições em <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML, para que elas não se alinham de forma esperada com a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> informações sobre o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetMember(System.String)">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações críticas de segurança de membro de emissão de relatórios, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>The count (arity) of the particular syntax or constructor mode that you want information about.</source>
          <target state="translated">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>A list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> values, where each <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is the type for that position in the syntax.</source>
          <target state="translated">Uma lista de valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, em que cada <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é o tipo da posição na sintaxe.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>You must specify the types in the same order when you supply markup input for the markup extension.</source>
          <target state="translated">Você deve especificar os tipos na mesma ordem em que fornecer a entrada de marcação para a extensão de marcação.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>This API is only relevant if this <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Essa API só será relevante se este <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> representa uma extensão de marcação (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> é <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>The input <ph id="ph1">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.</source>
          <target state="translated">A entrada <ph id="ph1">`parameterCount`</ph> não é para solicitar o tipo de um parâmetro posicional específico.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>It is for specifying the arity of a markup extension usage.</source>
          <target state="translated">Ele é para especificar a aridade do uso de uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</source>
          <target state="translated">Uso de extensão de marcação geralmente tem várias "assinaturas" e usa parâmetros diferentes arity (contagem) de parâmetros posicionais para diferenciar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</source>
          <target state="translated">No entanto, você pode configurar um contexto de esquema para permitir arities duplicados e usar tipos dos parâmetros posicionais para diferenciação.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>For a specific arity (count), the parameter positions and types can vary.</source>
          <target state="translated">Para uma aridade específica (contagem), as posições de parâmetro e tipos podem variar.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>To get the positional type of a specific arity's markup extension usage, you first call <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> specifying the arity count.</source>
          <target state="translated">Para obter o tipo de posição de uso de extensão de marcação de um arity específica, você primeiro chamar <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> Especifica a contagem de arity.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>Then get the item at that position from the returned collection.</source>
          <target state="translated">Em seguida, obtenha o item à sua posição na coleção retornada.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
          <source>Calls to this method can invoke <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt;</ph> overrides on <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Chamadas para esse método podem invocar <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt;</ph> substituições em <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>Returns a list of string identifiers for XAML namespaces that the type is included in.</source>
          <target state="translated">Retorna uma lista de identificadores de cadeia de caracteres para namespaces de XAML nos quais o tipo está incluído.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>A list of string values, where each string is the URI identifier for a XAML namespace.</source>
          <target state="translated">Uma lista de valores de cadeia de caracteres, em que cada cadeia de caracteres é o identificador de URI para um namespace de XAML.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>Typical XAML namespace identifiers are strings in URI form.</source>
          <target state="translated">Identificadores de namespace XAML típicos são cadeias de caracteres em forma de URI.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<ph id="ph1">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph> signature only); and the namespaces that are available from the schema context.</source>
          <target state="translated">A implementação padrão verifica o seguinte, em ordem: o namespace XAML que é fornecido na construção (<ph id="ph1">&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</ph> somente assinatura); e os namespaces que estão disponíveis a partir do contexto do esquema.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>If these are each <ph id="ph1">`null`</ph>, a new list is generated that contains a single empty string.</source>
          <target state="translated">Se cada <ph id="ph1">`null`</ph>, uma nova lista é gerada que contém uma única cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.GetXamlNamespaces">
          <source>You can override this method to change the lookup methodology.</source>
          <target state="translated">Você pode substituir esse método para alterar a metodologia de pesquisa.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.Invoker">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> implementation that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém a implementação de <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> que está associada a esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Invoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> implementation that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> implementação que está associada a essa <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Invoker">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calling <ph id="ph2">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> can invoke either <ph id="ph3">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> or a specific override of that method.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamar <ph id="ph2">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> pode invocar o <ph id="ph3">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> ou uma substituição específica desse método.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Invoker">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Invoker">
          <source>If a <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> override returns <ph id="ph2">`null`</ph>, or if the default implementation returns <ph id="ph3">`null`</ph> because of lack of <ph id="ph4">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> for this <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph>, then <ph id="ph6">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> returns <ph id="ph7">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</ph> substituir retorna <ph id="ph2">`null`</ph>, ou se a implementação padrão retorna <ph id="ph3">`null`</ph> devido à falta de <ph id="ph4">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> para este <ph id="ph5">&lt;xref:System.Xaml.XamlType&gt;</ph>, em seguida, <ph id="ph6">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> retorna <ph id="ph7">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsAmbient">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an ambient type, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo de ambiente, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsAmbient">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an ambient type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo de ambiente; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsAmbient">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsAmbient">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsArray">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an array.</source>
          <target state="translated">Obtém um valor que indica se esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma matriz.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsArray">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an array; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma matriz; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsArray">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsArray">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsCollection">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a collection.</source>
          <target state="translated">Obtém um valor que indica se esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsCollection">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsCollection">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsConstructible">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a constructible type, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo construível, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsConstructible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a constructible type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo construível; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsConstructible">
          <source>This property aligns to the <ph id="ph1">`[is default constructible]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[is default constructible]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsConstructible">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsConstructible">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsDictionary">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a dictionary, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um dicionário, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsDictionary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a dictionary; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um dicionário; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsDictionary">
          <source>This property aligns to the <ph id="ph1">`[is dictionary]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[is dictionary]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsDictionary">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsDictionary">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsGeneric">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a generic type.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo genérico.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsGeneric">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a generic type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo genérico; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsGeneric">
          <source>This property is a helper property that checks for a null value of <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph>.</source>
          <target state="translated">Essa propriedade é uma propriedade de auxiliar que verifica um valor nulo de <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsGeneric">
          <source>There is no specific <ph id="ph1">`Lookup`</ph> method related to <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsGeneric%2A&gt;</ph>.</source>
          <target state="translated">Não há nenhum específico <ph id="ph1">`Lookup`</ph> método relacionados a <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsGeneric%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsMarkupExtension">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a markup extension.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsMarkupExtension">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a markup extension; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma extensão de marcação; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsMarkupExtension">
          <source>In XAML specification terms, this type must be assignable to <ph id="ph1">`x:MarkupExtension`</ph> in order to return <ph id="ph2">`true`</ph> for <ph id="ph3">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</source>
          <target state="translated">Em termos de especificação de XAML, esse tipo deve ser atribuível a <ph id="ph1">`x:MarkupExtension`</ph> para retornar <ph id="ph2">`true`</ph> para <ph id="ph3">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsMarkupExtension">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsMarkupExtension">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a XAML namescope, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um namescope de XAML, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a XAML namescope; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um namescope de XAML; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>A XAML namescope enforces the name uniqueness of the property or properties used for <ph id="ph1">`x:Name`</ph><ph id="ph2"> / </ph><ph id="ph3">`[name property]`</ph>.</source>
          <target state="translated">Um namescope XAML impõe a exclusividade do nome da propriedade ou propriedades usadas para <ph id="ph1">`x:Name`</ph> <ph id="ph2"> / </ph> <ph id="ph3">`[name property]`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> is <ph id="ph2">`true`</ph>, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> é <ph id="ph2">`true`</ph>, algum mecanismo para impor exclusividade deve existir e deve avaliar da perspectiva desse tipo possui um namescope XAML.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</source>
          <target state="translated">O XAML namescope estende ao conteúdo do tipo até que outro tipo XAML possui namescope encontrado.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>This property aligns to the <ph id="ph1">`[is name scope]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[is name scope]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameScope">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsNameValid">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is initialized by using a valid <ph id="ph2">&lt;see langword="xamlName" /&gt;</ph> string as its <ph id="ph3">&lt;see cref="P:System.Xaml.XamlType.Name" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é inicializado usando uma cadeia de caracteres <ph id="ph2">&lt;see langword="xamlName" /&gt;</ph> válida como seu <ph id="ph3">&lt;see cref="P:System.Xaml.XamlType.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNameValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is initialized by using a valid <ph id="ph3">&lt;see langword="xamlName" /&gt;</ph> string; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é inicializada usando uma opção válida <ph id="ph3">&lt;see langword="xamlName" /&gt;</ph> de cadeia de caracteres; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsNullable">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a nullable type, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNullable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a nullable type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que permite valor nulo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNullable">
          <source>This property aligns to the <ph id="ph1">`[is nullable]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[is nullable]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsNullable">
          <source>If you are not using the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsNullable%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não estiver usando a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsNullable%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsPublic">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a public type in the relevant type system.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo público no sistema de tipos relevante.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a public type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo público; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsPublic">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsPublic">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar as informações de acesso reportadas sobre um tipo XAML, para que ele não se alinha de forma esperada com as informações do sistema e o acesso do tipo do seu tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsPublic">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações de acesso e operações de atribuição críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsUnknown">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a type that cannot be resolved in the underlying type system.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an unresolvable type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo não pode ser resolvido; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUnknown">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUnknown">
          <source>For a load path that involves <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, a <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> that has <ph id="ph3">`true`</ph> for <ph id="ph4">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> cannot be written into an object graph.</source>
          <target state="translated">Para um caminho de carga que envolve <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, um <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph> com <ph id="ph3">`true`</ph> para <ph id="ph4">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> não pode ser gravado em um gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUnknown">
          <source>Under the default implementations in <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> , the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType&gt;</ph> call throws a <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph> reports <ph id="ph5">`true`</ph> for <ph id="ph6">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Sob as implementações padrão no <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> , o <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType&gt;</ph> chamar lança um <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> quando relevante <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph> relatórios <ph id="ph5">`true`</ph> para <ph id="ph6">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUnknown">
          <source>You should not pass a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> that has <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> as <ph id="ph3">`true`</ph> unless you are prepared to handle the exceptions from <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior or the XAML node stream prior to writing the object graph.</source>
          <target state="translated">Você não deve transmitir um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> que tem <ph id="ph2">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> como <ph id="ph3">`true`</ph> , a menos que você esteja preparado para lidar com as exceções de <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, ou você tiver outras maneiras de ajustar o <ph id="ph5">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> comportamento ou o fluxo do nó XAML antes de gravar o gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is built top-down during XAML initialization.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é compilado de cima para baixo durante a inicialização do XAML.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is built top-down during XAML initialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</source>
          <target state="translated">De cima para baixo é uma metáfora que aproxima o comportamento do processador de XAML ao criar o gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</source>
          <target state="translated">Quando criado de cima para baixo, um tipo é instanciado, anexados para o pai, e, em seguida, configurou suas propriedades.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>Top-down construction avoids invoking property-changed handlers multiple times.</source>
          <target state="translated">Construção de cima para baixo evita invocar os manipuladores de propriedade alterada várias vezes.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</source>
          <target state="translated">Tal tratamento ripples se o gráfico de objeto e, portanto, elimina as várias chamadas do manipulador e fornece uma otimização de desempenho da inicialização do gráfico do objeto.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsUsableDuringInitialization">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a whitespace significant collection, as per the XML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a whitespace significant collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção de espaço em branco significativo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.IsXData">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents XML <ph id="ph2">&lt;see langword="XDATA" /&gt;</ph>, as per the XAML definition.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um <ph id="ph2">&lt;see langword="XDATA" /&gt;</ph> XML, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsXData">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents <ph id="ph3">&lt;see langword="XDATA" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa <ph id="ph3">&lt;see langword="XDATA" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsXData">
          <source>This property aligns to the <ph id="ph1">`[is xdata]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Essa propriedade se alinha com o <ph id="ph1">`[is xdata]`</ph> item de informação na especificação [MS-XAML].</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsXData">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.IsXData">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.ItemType">
          <source>Gets a value that provides the type information for the <ph id="ph1">&lt;see langword="Items" /&gt;</ph> property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que fornece as informações de tipo para a propriedade <ph id="ph1">&lt;see langword="Items" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ItemType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the type of the items in the collection; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> objeto para o tipo dos itens na coleção; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa uma coleção.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ItemType">
          <source>This property is only relevant if this <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a collection (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsCollection%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Essa propriedade só será relevante se este <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> representa uma coleção (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsCollection%2A&gt;</ph> é <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ItemType">
          <source>The <ph id="ph1">`Items`</ph> property is whatever property holds items in that type of collection or array.</source>
          <target state="translated">O <ph id="ph1">`Items`</ph> é de propriedade de qualquer propriedade que contém os itens nesse tipo de coleção ou matriz.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ItemType">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ItemType">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.KeyType">
          <source>Gets a value that provides the type information for the key property of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a dictionary.</source>
          <target state="translated">Obtém um valor que fornece as informações de tipo para a propriedade de chave deste <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um dicionário.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.KeyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the type of the key for dictionary usage, otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a dictionary.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> objeto para o tipo da chave para uso do dicionário, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa um dicionário.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.KeyType">
          <source>This property is only relevant if this <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a dictionary (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsDictionary%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Essa propriedade só será relevante se este <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> representa um dicionário (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsDictionary%2A&gt;</ph> é <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.KeyType">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.KeyType">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>The directive for which to find the aliased member.</source>
          <target state="translated">A diretiva para a qual localizar o membro com alias.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>Returns the XAML member that is aliased to a XAML directive by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>The aliased member, if found; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O membro transformado em alias, se encontrado; caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>The default implementation can return results for the following XAML directives: <ph id="ph1">`Key`</ph>; <ph id="ph2">`Name`</ph>; <ph id="ph3">`Uid`</ph>; and <ph id="ph4">`xml:lang`</ph>.</source>
          <target state="translated">A implementação padrão pode retornar resultados para as seguintes diretivas XAML: <ph id="ph1">`Key`</ph>; <ph id="ph2">`Name`</ph>; <ph id="ph3">`Uid`</ph>; and <ph id="ph4">`xml:lang`</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>Values for these depend on underlying reflection and might still return <ph id="ph1">`null`</ph> if no aliased property is found.</source>
          <target state="translated">Valores para eles dependem de reflexão subjacente e ainda podem retornar <ph id="ph1">`null`</ph> se nenhuma propriedade de alias for encontrada.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou as informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>Returns an enumerable set that contains all attachable properties that are exposed by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um conjunto enumerável que contém todas as propriedades anexáveis que são expostas por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>An enumerable set that contains zero or more <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> values; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um conjunto enumerável que contém zero ou mais valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>Although <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph> returns a generic collection, this <ph id="ph2">`Lookup`</ph> method returns a generic enumerable set.</source>
          <target state="translated">Embora <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</ph> retorna uma coleção genérica, isso <ph id="ph2">`Lookup`</ph> método retorna um conjunto enumerável genérico.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">A implementação padrão usa a reflexão interna do CLR.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>When <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the default implementation can use <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph2">`null`</ph>, pode usar a implementação padrão <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, se ele está disponível.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>This behavior calls <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> recursively to attempt to find a valid base type and returns <ph id="ph2">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Esse comportamento chama <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> recursivamente a tentativa de encontrar um tipo válido de base e retorna <ph id="ph2">`null`</ph> se não existe nenhum tipo base válido.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</source>
          <target state="translated">Um retorno nulo deve ser reservado para casos em que as informações não podem ser determinadas devido à falta de suporte para tipo de sistema ou reflexão.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllAttachableMembers">
          <source>If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> set.</source>
          <target state="translated">Se um tipo é válido e reflexão ou outras técnicas estão disponíveis, mas um tipo não tem membros anexáveis, em vez disso, você deve retornar vazio <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> definido.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>Returns an enumerable set that contains all the members that are exposed by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um conjunto enumerável que contém todos os membros que são expostos por esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>An enumerable set that contains zero or more <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> values.</source>
          <target state="translated">Um conjunto enumerável que contém zero ou mais valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>Although <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph> returns a generic collection, this <ph id="ph2">`Lookup`</ph> method returns a generic enumerable set.</source>
          <target state="translated">Embora <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</ph> retorna uma coleção genérica, isso <ph id="ph2">`Lookup`</ph> método retorna um conjunto enumerável genérico.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">A implementação padrão usa a reflexão interna do CLR.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>For cases where <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the default implementation can use <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.</source>
          <target state="translated">Para casos onde <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph2">`null`</ph>, pode usar a implementação padrão <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, se ele está disponível.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>This behavior calls <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> recursively to attempt to find a valid base type, and returns <ph id="ph2">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Esse comportamento chama <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> recursivamente a tentativa de encontrar um tipo válido de base e retorna <ph id="ph2">`null`</ph> se não existe nenhum tipo base válido.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</source>
          <target state="translated">Um retorno nulo deve ser reservado para casos em que as informações não podem ser determinadas devido à falta de suporte para tipo de sistema ou reflexão.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> set.</source>
          <target state="translated">Se um tipo for válido, reflexão ou outras técnicas estão disponíveis; Se um tipo não tem membros, em vez disso, você deve retornar vazio <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> definido.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>Return values for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> should be mutually exclusive.</source>
          <target state="translated">Retornar valores para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</ph> devem ser mutuamente exclusivos.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllMembers">
          <source>If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> values, with one value appearing in the attachable list and another in the standard members list.</source>
          <target state="translated">Se você tiver uma situação em que uma propriedade de sistema de tipo de backup pode dar suporte a um uso de instância padrão, bem como um uso anexável, esse membro deve ser relatado como dois <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> valores, com um valor que aparece na lista anexável e outro na lista de membros padrão.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>Returns a list of the types that are usable as the <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.ContentProperty" /&gt;</ph> value for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna uma lista dos tipos que podem ser usados como o valor <ph id="ph1">&lt;see cref="P:System.Xaml.XamlType.ContentProperty" /&gt;</ph> para este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>A list of possible content types.</source>
          <target state="translated">Uma lista de possíveis tipos de conteúdo.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>Types that evaluate as <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> for a specific content type are not considered multiple types for purposes of <ph id="ph2">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</source>
          <target state="translated">Tipos que são avaliadas como <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> para um tipo específico de conteúdo não são considerados o vários tipos para fins de <ph id="ph2">&lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>The default implementation can use other properties of <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> (<ph id="ph2">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>) to obtain a result.</source>
          <target state="translated">A implementação padrão pode usar outras propriedades de <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> (<ph id="ph2">&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>) para obter um resultado.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>The <ph id="ph1">`Lookup`</ph> overrides for the preceding property list can also be invoked in this determination.</source>
          <target state="translated">O <ph id="ph1">`Lookup`</ph> substituições para a lista de propriedade anterior também pode ser chamada nessa determinação.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAllowedContentTypes">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>The name of the attachable member to get, in <bpt id="p1">&lt;c&gt;</bpt>ownerTypeName.MemberName<ept id="p1">&lt;/c&gt;</ept> form.</source>
          <target state="translated">O nome do membro anexável a ser obtido, no formato <bpt id="p1">&lt;c&gt;</bpt>ownerTypeName.MemberName<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> for a specific named attachable from this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para um anexável nomeado específico deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> object for the requested attachable member; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if no attachable member by that name exists.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para o membro anexável solicitado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se não existir nenhum membro anexável com esse nome.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">A implementação padrão usa a reflexão interna do CLR.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>When <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the default implementation can use <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph2">`null`</ph>, pode usar a implementação padrão <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, se ele está disponível.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>This behavior calls <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> recursively to attempt to find a valid base type and returns <ph id="ph2">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Esse comportamento chama <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> recursivamente a tentativa de encontrar um tipo válido de base e retorna <ph id="ph2">`null`</ph> se não existe nenhum tipo base válido.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML, para que elas não se alinham de forma esperada com a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> informações sobre o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações críticas de segurança de membro de emissão de relatórios, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the immediate base type of this XAML type.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo base imediato desse tipo de XAML.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>Determination of this value is based on the underlying type of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and schema context.</source>
          <target state="translated">A determinação desse valor é baseada no tipo subjacente deste <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> e no contexto do esquema.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for the immediate base type of this XAML type.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo base imediato desse tipo de XAML.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>The default implementation might return an internal constant that represents the <ph id="ph1">&lt;xref:System.Object&gt;</ph> if <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">A implementação padrão pode retornar uma constante interna que representa o <ph id="ph1">&lt;xref:System.Object&gt;</ph> se <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar as informações de tipo informada sobre um tipo XAML, para que ele não se alinha de forma esperada com as informações de seu tipo CLR subjacente do sistema de tipo.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupBaseType">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações de acesso e operações de atribuição críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>Returns a value of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlCollectionKind" /&gt;</ph> enumeration that declares which specific collection type this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> uses.</source>
          <target state="translated">Retorna um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlCollectionKind" /&gt;</ph> que declara qual tipo de coleção específica esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> usa.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlCollectionKind" /&gt;</ph> enumeration.</source>
          <target state="translated">Um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlCollectionKind" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>This method is invoked by an internal private method (no public <ph id="ph1">`CollectionKind`</ph> or <ph id="ph2">`GetCollectionKind`</ph> API exists on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph>).</source>
          <target state="translated">Esse método é invocado por um método privado interno (nenhum public <ph id="ph1">`CollectionKind`</ph> ou <ph id="ph2">`GetCollectionKind`</ph> API existe em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">A implementação padrão usa a reflexão interna do CLR.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>For cases where <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the default implementation can use <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, if it is available.</source>
          <target state="translated">Para casos onde <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> é <ph id="ph2">`null`</ph>, pode usar a implementação padrão <ph id="ph3">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph>, se ele está disponível.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>This behavior indirectly calls <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> recursively to attempt to find a valid base type; it returns <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph> if no valid base type exists.</source>
          <target state="translated">Esse comportamento indiretamente chama <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> recursivamente a tentativa de encontrar um tipo base válido; ele retorna <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph> se não existe nenhum tipo base válido.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>In general, the default implementation attempts to find the <ph id="ph1">`Add`</ph> method of the underlying type by reflection.</source>
          <target state="translated">Em geral, a implementação padrão tenta localizar o <ph id="ph1">`Add`</ph> método do tipo subjacente por reflexão.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>If found, the <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> of the <ph id="ph2">`Add`</ph> method is enough information to determine which <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlCollectionKind&gt;</ph> value should be returned.</source>
          <target state="translated">Se encontrado, o <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> do <ph id="ph2">`Add`</ph> método é informações suficientes para determinar qual <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlCollectionKind&gt;</ph> valor deve ser retornado.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>Otherwise, it returns <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Caso contrário, retornará <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCollectionKind">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> must have arguments (generic constraints through <ph id="ph2">&lt;see langword="x:TypeArguments" /&gt;</ph>, initialization text, or other XAML techniques) to construct a valid instance of the type.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> deve ter argumentos (restrições genéricas por meio de <ph id="ph2">&lt;see langword="x:TypeArguments" /&gt;</ph>, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if construction of an instance requires some argument value; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a construção de uma instância exige algum valor de argumento; caso contrário, False.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source>The default implementation returns <ph id="ph1">`false`</ph> for types considered value types in the CLR type system.</source>
          <target state="translated">A implementação padrão retorna <ph id="ph1">`false`</ph> sistema de tipos para tipos considerados tipos de valor no CLR.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source>For other than value types, CLR reflection <ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> is used to determine whether a default constructor exists.</source>
          <target state="translated">Para que tipos de valor, reflexão CLR <ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> é usado para determinar se existe um construtor padrão.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the content property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna as informações de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para a propriedade de conteúdo deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the content property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">As informações de <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para a propriedade de conteúdo deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>The default implementation checks for <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> on the type definition.</source>
          <target state="translated">A implementação padrão verifica <ph id="ph1">&lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;</ph> na definição de tipo.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>If these checks do not discover a content type, the default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se essas verificações não descobrir um tipo de conteúdo, a implementação padrão retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentProperty">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Substitua este método se você não depender de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> values that represent the content wrappers for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém uma lista de valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que representam os wrappers de conteúdo para este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>A list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> values that represent the content wrappers for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Uma lista de valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> que representam os wrappers de conteúdo para este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</source>
          <target state="translated">Um wrapper de conteúdo é uma classe que representa o tipo de coleção de conteúdo quando os tipos que são usados na coleção não são contíguos no sistema de tipo.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>The types of collection items for the content wrapper are expected to be limited in some manner beyond <ph id="ph1">&lt;xref:System.Object&gt;</ph> or a neutral object equivalent.</source>
          <target state="translated">Os tipos de itens de coleta para o wrapper de conteúdo devem ser limitadas de alguma maneira além <ph id="ph1">&lt;xref:System.Object&gt;</ph> ou um objeto neutro equivalente.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</source>
          <target state="translated">No entanto, essa limitação é aplicada apenas pelo design ou finalidade das propriedades que usam esse tipo e não pelo sistema de tipo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>More than one content wrapper can exist on a type.</source>
          <target state="translated">Mais de um wrapper de conteúdo pode existir em um tipo.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupContentWrappers">
          <source>For an example class and scenario from the WPF XAML implementation, see <ph id="ph1">&lt;xref:System.Windows.Documents.InlineCollection&gt;</ph>.</source>
          <target state="translated">Para um exemplo de classe e o cenário da implementação do WPF XAML, consulte <ph id="ph1">&lt;xref:System.Windows.Documents.InlineCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
          <source>When implemented in a derived class, returns an <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Quando implementado em uma classe derivada, retorna uma implementação <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Uma implementação <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
          <source>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</source>
          <target state="translated">Substitua este método para fornecer a reflexão interna com uma maneira alternativa para obter valores de atributo do CLR.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
          <source>In absence of an override, the internal reflector uses typical CLR reflection logic.</source>
          <target state="translated">Na ausência de uma substituição, o reflector interno usa a lógica de reflexão de CLR típica.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A implementação padrão retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used for deferred loading of XAML-declared objects.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, que é usado para o carregamento adiado de objetos declarados em XAML.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> that has a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> constraint on the generic.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> que tem uma restrição <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDeferringLoader" /&gt;</ph> sobre o genérico.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>This method can be invoked when a caller gets a value from <ph id="ph1">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado quando um chamador obtém um valor de <ph id="ph1">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph> to return a different value than is enabled by default internal reflection and are also providing custom <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> information.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</ph> retornar um valor diferente de é habilitado por reflexão interno padrão e também estiver fornecendo personalizado <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> informações.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>The default implementation returns an object on the basis of reading <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um objeto com base na leitura <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>It can also  check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupDeferringLoader">
          <source>If a value is unavailable, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, esse método retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> que é associado a esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> information for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">As informações <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlTypeInvoker" /&gt;</ph> para este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>The default implementation does not require that a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> be constructed by using one of the constructors that pass an initial <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.</source>
          <target state="translated">A implementação padrão não requer que um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> ser construídas usando um dos construtores que passam um inicial <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>However, an <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> value must exist for the <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>; otherwise, the default implementation returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">No entanto, um <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> valor deve existir para o <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>; caso contrário, retorna a implementação padrão <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>Override this method if you also create a derived class from <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> and intend to return the derived class.</source>
          <target state="translated">Substitua este método se você criar também uma classe derivada de <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;</ph> e pretendia retornar classe derivada.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupInvoker">
          <source>If you return <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> returns <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> to callers.</source>
          <target state="translated">Se você retornar <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlType.Invoker%2A&gt;</ph> retorna <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType&gt;</ph> para chamadores.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an ambient type, as per the XAML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo de ambiente, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents an ambient type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo de ambiente; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>The default implementation uses CLR reflection on the <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> and can check the base types.</source>
          <target state="translated">A implementação padrão usa reflexão de CLR no <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> e poderá verificar se os tipos base.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>This implementation checks for the <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> that is applied to the relevant type's definition at the class level and returns <ph id="ph2">`true`</ph> in this case.</source>
          <target state="translated">Essa implementação verifica o <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> que é aplicado à definição do tipo relevante no nível de classe e retorna <ph id="ph2">`true`</ph> nesse caso.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>All other cases return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Retornam todos os outros casos <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsAmbient">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph> to return a different value than is enabled by default internal reflection.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;</ph> retornar um valor diferente de é habilitado por reflexão interno padrão.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a constructible type, as per the XAML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo construível, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a constructible type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo construível; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>The default implementation uses CLR reflection on the <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</source>
          <target state="translated">A implementação padrão usa reflexão de CLR no <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>The type must be concrete, non-nested, and closed.</source>
          <target state="translated">O tipo deve ser concreto, não aninhada e fechada.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>The default implementation checks whether the type is a value type and the return of <ph id="ph1">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.</source>
          <target state="translated">A implementação padrão verifica se o tipo é um tipo de valor e o retorno de <ph id="ph1">&lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>For a null <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, this method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para um valor nulo <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, esse método retornará <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsConstructible">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph> to return a different value than is enabled by default internal reflection.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;</ph> retornar um valor diferente de é habilitado por reflexão interno padrão.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a markup extension.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a markup extension; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma extensão de marcação; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source>The default implementation consists only of this call:</source>
          <target state="translated">A implementação padrão consiste apenas essa chamada:</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsMarkupExtension">
          <source>In XAML specification terms, this type must be assignable to <ph id="ph1">`x:MarkupExtension`</ph> in order to return <ph id="ph2">`true`</ph> for <ph id="ph3">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</source>
          <target state="translated">Em termos de especificação de XAML, esse tipo deve ser atribuível a <ph id="ph1">`x:MarkupExtension`</ph> para retornar <ph id="ph2">`true`</ph> para <ph id="ph3">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a XAML namescope, as per the XAML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um namescope de XAML, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a XAML namescope; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um namescope de XAML; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>The default implementation makes a <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> call indirectly against the type <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</source>
          <target state="translated">A implementação padrão faz um <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> chamar indiretamente em relação ao tipo <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> is an interface that is defined in the assembly WindowsBase.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> é uma interface que é definida no assembly WindowsBase.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>This technique for XAML namescope identification is used both by WPF and <ph id="ph1">[!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)]</ph> implementations of XAML.</source>
          <target state="translated">Essa técnica para a identificação de namescope XAML é usada por WPF e <ph id="ph1">[!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)]</ph> implementações de XAML.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>A XAML namescope enforces the name uniqueness of the property or properties that are used for <ph id="ph1">`x:Name`</ph><ph id="ph2"> / </ph><ph id="ph3">`[name property]`</ph>.</source>
          <target state="translated">Um namescope XAML impõe a exclusividade do nome da propriedade ou propriedades que são usadas para <ph id="ph1">`x:Name`</ph> <ph id="ph2"> / </ph> <ph id="ph3">`[name property]`</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> is <ph id="ph2">`true`</ph>, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;</ph> é <ph id="ph2">`true`</ph>, em seguida, um mecanismo para impor exclusividade deve existir e deve avaliar da perspectiva desse tipo possui um namescope XAML.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNameScope">
          <source>The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</source>
          <target state="translated">O XAML namescope estende ao conteúdo do tipo até que outro tipo de propriedade namescope XAML é encontrado.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a nullable type, as per the XAML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a nullable type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que permite valor nulo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source>The default implementation makes a determination based on the CLR core library nullable concept, checked against <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</source>
          <target state="translated">A implementação padrão faz com que uma decisão baseada no CLR principal biblioteca anulável conceito, comparado <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source>For a null <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para um valor nulo <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, ele retorna <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsNullable">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a public type in the relevant type system.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo público no sistema de tipos relevante.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a public type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo público; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>The default implementation uses CLR reflection against a non-null <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</source>
          <target state="translated">A implementação padrão usa reflexão do CLR em relação a uma não-nulos <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>For a null <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para um valor nulo <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, ele retorna <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar as informações de acesso reportadas sobre um tipo XAML, para que ele não se alinha de forma esperada com as informações do sistema ou o acesso do tipo do seu tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsPublic">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações de acesso e operações de atribuição críticas de segurança, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a type that cannot be resolved in the underlying type system.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a nonresolvable type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo não resolvido; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source>The default implementation can use CLR reflection.</source>
          <target state="translated">A implementação padrão pode usar reflexão do CLR.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source>For a null <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, it returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para um valor nulo <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>, ele retorna <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsUnknown">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a whitespace significant collection, as per the XML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a white-space significant collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa uma coleção significativa de espaço em branco; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>It can also check the <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar o <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>If a value is not available, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsXData">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents XML <ph id="ph2">&lt;see langword="XDATA" /&gt;</ph>, as per the XAML definition.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um <ph id="ph2">&lt;see langword="XDATA" /&gt;</ph> XML, de acordo com a definição de XAML.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupIsXData">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents <ph id="ph3">&lt;see langword="XDATA" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa <ph id="ph3">&lt;see langword="XDATA" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsXData">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsXData">
          <source>The default implementation makes a <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> call indirectly against the type <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">A implementação padrão faz um <ph id="ph1">&lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</ph> chamar indiretamente em relação ao tipo <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupIsXData">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsXData%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>Returns a value that provides the type information for the <ph id="ph1">&lt;see langword="Items" /&gt;</ph> property of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um valor que fornece as informações de tipo para a propriedade <ph id="ph1">&lt;see langword="Items" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the type of the items in the collection; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a collection.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo dos itens na coleção; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph> se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa uma coleção.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>The default implementation can use CLR reflection concepts, such as checking for an <ph id="ph1">`Add`</ph> method by <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> and using the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; checking <ph id="ph4">&lt;xref:System.Xaml.XamlType.IsArray%2A&gt;</ph>; and checking <ph id="ph5">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> and trying the same logic there.</source>
          <target state="translated">A implementação padrão pode usar os conceitos de reflexão do CLR, como verificação de um <ph id="ph1">`Add`</ph> método por <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> e usando o <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; verificação <ph id="ph4">&lt;xref:System.Xaml.XamlType.IsArray%2A&gt;</ph>; e a verificação de <ph id="ph5">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> e tentar a mesma lógica existe.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.ItemType%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupItemType">
          <source>Cases where <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph> should return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Casos onde <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> retorna <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType&gt;</ph> deve retornar <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>Returns a value that provides the type information for the key property of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a dictionary.</source>
          <target state="translated">Retorna um valor que fornece as informações de tipo para a propriedade de chave deste <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, se o <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um dicionário.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the type of the key for dictionary usage, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a dictionary,</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo da chave para uso de dicionário ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa um dicionário,</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>The default implementation can use CLR reflection concepts, such as checking for an <ph id="ph1">`Add`</ph> method by <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> and using the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; and checking <ph id="ph4">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> and trying the same logic there.</source>
          <target state="translated">A implementação padrão pode usar os conceitos de reflexão do CLR, como verificação de um <ph id="ph1">`Add`</ph> método por <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph> e usando o <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>; e a verificação de <ph id="ph4">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> e tentar a mesma lógica existe.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.KeyType%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupKeyType">
          <source>Cases where <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> does not return <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType&gt;</ph> should return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Casos onde <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> não retorna <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType&gt;</ph> deve retornar <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>Returns a value that provides the type information for the returned <ph id="ph1">&lt;see langword="ProvideValue" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, if it represents a markup extension.</source>
          <target state="translated">Retorna um valor que fornece as informações de tipo para o <ph id="ph1">&lt;see langword="ProvideValue" /&gt;</ph> retornado deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, se ele representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the return type for markup extension usage; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a markup extension.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>The default implementation returns a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> on the basis of reading <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> com base em leitura <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>If a value is not available, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>The name of the member to get (as a string).</source>
          <target state="translated">O nome do membro a ser obtido (como uma cadeia de caracteres).</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return a member even if that member has a <ph id="ph2">&lt;see langword="true" /&gt;</ph> value for <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.IsReadOnly" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to not return a <ph id="ph5">&lt;see cref="P:System.Xaml.XamlMember.IsReadOnly" /&gt;</ph> member.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para retornar um membro, mesmo se esse membro tiver um valor <ph id="ph2">&lt;see langword="true" /&gt;</ph> para <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.IsReadOnly" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> para não retornar um membro <ph id="ph5">&lt;see cref="P:System.Xaml.XamlMember.IsReadOnly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> for a specific named member from this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para um membro nomeado específico deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> information for the member, if a member was found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">As informações <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> para o membro, se um membro for encontrado; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>The default implementation returns a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> based on internal CLR reflection and evaluation against the schema context.</source>
          <target state="translated">A implementação padrão retorna um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> com base em reflexão interno do CLR e avaliação em relação ao contexto do esquema.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetMember%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> is virtual, and therefore, can be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;</ph> é virtual e, portanto, pode ser substituído.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">A substituição tem o potencial (se é para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML, para que elas não se alinham de forma esperada com a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> <ph id="ph2">`Get*`</ph> informações sobre o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Para verificações críticas de segurança de membro de emissão de relatórios, use o tipo CLR subjacente.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>The count (arity) of the particular syntax or constructor mode that you want information about.</source>
          <target state="translated">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>A list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> values where each such <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is the type for that position in the syntax.</source>
          <target state="translated">Uma lista de valores <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, em que cada um desses <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é o tipo da posição na sintaxe.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>You must specify those types in the same order when supplying markup input for the markup extension.</source>
          <target state="translated">Você deve especificar esses tipos na mesma ordem ao fornecer a entrada de marcação para a extensão de marcação.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>The default implementation uses internal reflection information based on finding constructors and checking the arity.</source>
          <target state="translated">A implementação padrão usa informações de reflexão interno com base na localização construtores e verificando a aridade.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>This API is only relevant if this <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Essa API só será relevante se este <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> representa uma extensão de marcação (<ph id="ph2">&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</ph> é <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>The input <ph id="ph1">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.</source>
          <target state="translated">A entrada <ph id="ph1">`parameterCount`</ph> não é para solicitar o tipo de um parâmetro posicional específico.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>It is for specifying the arity of a markup extension usage.</source>
          <target state="translated">Ele é para especificar a aridade do uso de uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</source>
          <target state="translated">Uso de extensão de marcação geralmente tem várias assinaturas e usa parâmetros diferentes arity (contagem) de parâmetros posicionais para diferenciar.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</source>
          <target state="translated">No entanto, você pode configurar um contexto de esquema para permitir arities duplicados e usar tipos dos parâmetros posicionais para diferenciação.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>For a specific arity count, the parameter positions and types can vary.</source>
          <target state="translated">Para uma contagem de arity específicos podem variar as posições de parâmetro e tipos.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>To get the positional type of a specific arity's markup extension usage, you first call <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> with the arity count.</source>
          <target state="translated">Para obter o tipo de posição de uso de extensão de marcação de um arity específica, você primeiro chamar <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</ph> com a contagem de arity.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
          <source>Then get the item at that position from the returned collection.</source>
          <target state="translated">Em seguida, obtenha o item à sua posição na coleção retornada.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
          <source>Returns a handler callback to use for the set operations of markup extensions.</source>
          <target state="translated">Retorna um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
          <source>A handler callback to use for the set operations of markup extensions.</source>
          <target state="translated">Um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
          <source>Returns a handler to use for type converter setting cases.</source>
          <target state="translated">Retorna um manipulador a ser usado para casos configuração de conversor de tipo.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
          <source>A handler to use for type converter setting cases.</source>
          <target state="translated">Um manipulador a ser usado para casos configuração de conversor de tipo.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> should be serialized using a mode that  trims surrounding whitespace.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> deve ser serializado usando um modo que corta os espaços em branco ao redor.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> should be serialized in a mode that trims surrounding whitespace; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> deve ser serializado em um modo que corta os espaços em branco ao redor; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
          <source>If a value is unavailable, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> that has a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint, which represents type-conversion behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> que tem uma restrição <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>, que representa o comportamento de conversão de tipo para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint that represents type-conversion behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com restrição <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que representa o comportamento de conversão de tipo para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>The default implementation can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">A implementação padrão também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>It also includes special logic for default conversion of enumerations, common value types, and generics.</source>
          <target state="translated">Ele também inclui uma lógica especial para conversão padrão de enumerações, tipos de valor e genéricos.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupTypeConverter">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>Returns the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that underlies this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do CLR que é subjacente a esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>The CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that underlies this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do CLR que é subjacente a esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>The default implementation returns an internal field.</source>
          <target state="translated">A implementação padrão retorna um campo interno.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</source>
          <target state="translated">Geralmente, esse campo é inicializado durante a construção e seu valor é baseado em qual construtor foi chamado e as informações que você forneceu.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUnderlyingType">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is built top-down during XAML initialization.</source>
          <target state="translated">Retorna um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é compilado de cima para baixo durante a inicialização do XAML.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> is built top-down during XAML initialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</source>
          <target state="translated">De cima para baixo é uma metáfora que aproxima o comportamento do processador de XAML quando ele cria o gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>When built top-down, a type is instantiated, attached to the parent, and has its properties set.</source>
          <target state="translated">Quando criado de cima para baixo, um tipo é instanciado, anexados para o pai, e tem definido suas propriedades.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>Top-down construction avoids invoking property-changed handlers multiple times.</source>
          <target state="translated">Construção de cima para baixo evita invocar os manipuladores de propriedade alterada várias vezes.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</source>
          <target state="translated">Tal tratamento ripples se o gráfico de objeto e, portanto, elimina as várias chamadas do manipulador e fornece uma otimização de desempenho da inicialização do gráfico do objeto.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>If a value is unavailable, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> that has a <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint, which represents value serialization behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> que tem uma restrição <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>, que representa o comportamento de serialização de valor para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint that represents value serialization behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com restrição <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> que representa o comportamento de serialização de valor para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>This method can be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph>.</source>
          <target state="translated">Esse método pode ser chamado por chamadas para <ph id="ph1">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>The default implementation returns a value based on reading <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.</source>
          <target state="translated">A implementação padrão retorna um valor com base em leitura <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>It can also check <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">Ele também pode verificar <ph id="ph1">&lt;xref:System.Xaml.XamlType.BaseType%2A&gt;</ph> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>It also includes special logic for default serialization of enumerations, common value types, or generics.</source>
          <target state="translated">Ele também inclui uma lógica especial para a serialização padrão de enumerações, tipos de valor comuns ou genéricos.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Se um valor não estiver disponível, ele retorna <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.LookupValueSerializer">
          <source>Override this method if you want <ph id="ph1">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph> to use different logic.</source>
          <target state="translated">Substitua este método se desejar <ph id="ph1">&lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</ph> para usar uma lógica diferente.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.MarkupExtensionReturnType">
          <source>Gets a value that provides the type information for the returned <ph id="ph1">&lt;see langword="ProvideValue" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, if it represents a markup extension.</source>
          <target state="translated">Obtém um valor que fornece as informações de tipo para o <ph id="ph1">&lt;see langword="ProvideValue" /&gt;</ph> retornado deste <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, se ele representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.MarkupExtensionReturnType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object for the return type for markup extension usage; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a markup extension.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se este <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa uma extensão de marcação.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.MarkupExtensionReturnType">
          <source>This property is only relevant if this <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> represents a markup extension (<ph id="ph2">`x:MarkupExtension`</ph> is in the assignable types list).</source>
          <target state="translated">Essa propriedade só será relevante se este <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> representa uma extensão de marcação (<ph id="ph2">`x:MarkupExtension`</ph> está na lista de tipos atribuíveis).</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.MarkupExtensionReturnType">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.MarkupExtensionReturnType">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.Name">
          <source>Gets the string name of the type that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents.</source>
          <target state="translated">Obtém o nome da cadeia de caracteres do tipo que esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Name">
          <source>The string name of this XAML type.</source>
          <target state="translated">O nome da cadeia de caracteres desse tipo de XAML.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.Name">
          <source>This property typically gets the schema-constructed name (per the <ph id="ph1">&lt;xref:System.Xaml.XamlType.%23ctor%2A&gt;</ph> signature), or the name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>, if it is constructed by using the pertinent constructor of the CLR type system.</source>
          <target state="translated">Essa propriedade normalmente obtém o nome do esquema construído (pelo <ph id="ph1">&lt;xref:System.Xaml.XamlType.%23ctor%2A&gt;</ph> assinatura), ou o nome do <ph id="ph2">&lt;xref:System.Type&gt;</ph>, se ele é construído usando o construtor pertinente do sistema de tipo CLR.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> objects have the same value.</source>
          <target state="translated">Determina se dois objetos <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> especificados têm o mesmo valor.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="xamlType1" /&gt;</ph> is the same as the value of <ph id="ph3">&lt;paramref name="xamlType2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor de <ph id="ph2">&lt;paramref name="xamlType1" /&gt;</ph> for o mesmo que o valor de <ph id="ph3">&lt;paramref name="xamlType2" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> objects have different values.</source>
          <target state="translated">Determina se dois objetos <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> especificados têm valores diferentes.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="xamlType1" /&gt;</ph> is different from the value of <ph id="ph3">&lt;paramref name="xamlType2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor de <ph id="ph2">&lt;paramref name="xamlType1" /&gt;</ph> for diferente do valor de <ph id="ph3">&lt;paramref name="xamlType2" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.PreferredXamlNamespace">
          <source>Gets the single XAML namespace that is the primary XAML namespace for this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém o único namespace de XAML que é o namespace de XAML primário para este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.PreferredXamlNamespace">
          <source>The identifier, as a string, of the primary XAML namespace for this XAML type.</source>
          <target state="translated">O identificador, como uma cadeia de caracteres do namespace XAML primário para este tipo XAML.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.PreferredXamlNamespace">
          <source>This implementation provides the same value as calling <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt;</ph> and then getting the first value string from the returned enumerable set.</source>
          <target state="translated">Essa implementação fornece o mesmo valor que a chamada <ph id="ph1">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt;</ph> e, em seguida, obter a primeira cadeia de caracteres do valor do conjunto enumerável retornado.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.SchemaContext">
          <source>Gets the active <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> for processing this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> ativo para o processamento desse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.SchemaContext">
          <source>The active <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> for processing this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Ativo <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> para o processamento desse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.SchemaContext">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is a required parameter entry when constructing a <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> é uma entrada de parâmetro obrigatório ao construir um <ph id="ph2">&lt;xref:System.Xaml.XamlType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.ToString">
          <source>Returns a string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Retorna uma representação de cadeia de caracteres desse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlType.ToString">
          <source>A string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Uma representação da cadeia de caracteres desse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlType.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph> returns the <ph id="ph3">&lt;xref:System.Xaml.XamlType.Name%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> implementação de <ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph> retorna o <ph id="ph3">&lt;xref:System.Xaml.XamlType.Name%2A&gt;</ph> propriedade o <ph id="ph4">&lt;xref:System.Xaml.XamlType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> tem o comportamento de manipulação de espaço em branco para serialização que corta o espaço em branco ao redor em seu conteúdo.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a type that uses whitespace trimming; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um tipo que usa o espaço em branco cortar; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.TypeArguments">
          <source>Gets a list of type arguments for cases where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> represents a generic.</source>
          <target state="translated">Obtém uma lista de argumentos de tipo para casos em que esse <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> representa um genérico.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeArguments">
          <source>A list of type argument types; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> does not represent a generic.</source>
          <target state="translated">Uma lista de tipos de argumento de tipo; Caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>, se este <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> não representa um genérico.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeArguments">
          <source>There are certain scenarios for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> where calling the <ph id="ph2">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph> parameter returns a list where the types are still open.</source>
          <target state="translated">Há certos cenários para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> onde chamando o <ph id="ph2">&lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;</ph> parâmetro retorna uma lista onde os tipos ainda estão abertos.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeArguments">
          <source>In this case, one or more of the returned <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> values will have placeholder values for <ph id="ph2">&lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType&gt;</ph>, such as <ph id="ph3">`T`</ph>, to represent that the generic is still open.</source>
          <target state="translated">No caso, um ou mais dos retornado <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> valores terão valores de espaço reservado para <ph id="ph2">&lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType&gt;</ph>, como <ph id="ph3">`T`</ph>, para representar que genérica ainda está aberta.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeArguments">
          <source>This scenario can occur if you get a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> from a call to <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt;</ph>, instead of from a XAML reader implementation.</source>
          <target state="translated">Esse cenário pode ocorrer se você receber um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> de uma chamada para <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt;</ph>, em vez de uma implementação de leitor XAML.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.TypeConverter">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint that represents type conversion behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com restrição <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que representa o comportamento de conversão de tipo para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint that represents type conversion behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que representa de comportamento de conversão para valores desse tipo de restrição <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeConverter">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.TypeConverter">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph> neste tipo.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.UnderlyingType">
          <source>Gets the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that underlies this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do CLR que é subjacente a esse <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.UnderlyingType">
          <source>The CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that underlies this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">O CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que dão suporte para isso <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlType.ValueSerializer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint that represents value serialization behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com restrição <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> que representa o comportamento de serialização de valor para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ValueSerializer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> constraint that represents value serialization behavior for values of this <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> com restrição <ph id="ph2">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph> que representa o comportamento de serialização de valor para valores desse <ph id="ph3">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ValueSerializer">
          <source>If you do not use the default internal CLR reflection technique for a <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, calls to this property can invoke <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> overrides on <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> derived classes.</source>
          <target state="translated">Se você não usar a técnica de reflexão padrão interna CLR para um <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph>, chamadas para essa propriedade podem invocar <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> substituições em <ph id="ph3">&lt;xref:System.Xaml.XamlType&gt;</ph> classes derivadas.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlType.ValueSerializer">
          <source>For more information about return values and other behavior, see the documentation for <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> on this type.</source>
          <target state="translated">Para obter mais informações sobre valores de retorno e outro comportamento, consulte a documentação para <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</ph> neste tipo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>