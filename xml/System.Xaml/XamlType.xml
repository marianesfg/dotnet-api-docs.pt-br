<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f660970c55af6a8e8be700e1df5ac2c266d1596" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52254542" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="144a3-101">Relata informações sobre os tipos XAML, como parte do sistema geral de XAML que é implementado nos serviços XAML do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="144a3-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-102">Várias APIs no <xref:System.Xaml.XamlType> classe fornecem informações sobre tipos XAML, onde o conceito relatarem é semelhante a seções específicas da especificação [MS-XAML] de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="144a3-103"><xref:System.Xaml.XamlType> é usado extensivamente na API de serviços de XAML do .NET Framework para o relatório de informações sobre um tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="144a3-104"><xref:System.Xaml.XamlType> relata as informações que talvez você precise saber sobre um tipo XAML para trabalhar com uma instância ou para acessar seus membros de um fluxo do nó XAML ou uma representação de XAML semelhante.</span><span class="sxs-lookup"><span data-stu-id="144a3-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="144a3-105">Seu relatório é semelhante ao modo como o <xref:System.Type> no CLR, digite sistema, junto com as classes de reflexão, como <xref:System.Reflection.MemberInfo>, fornecem informações sobre um tipo CLR e seu uso.</span><span class="sxs-lookup"><span data-stu-id="144a3-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="144a3-106">Para estender o sistema de tipos XAML, você pode derivar de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="144a3-107">Para fazer de forma tão eficaz, você também precisará implementar uma <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="144a3-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="144a3-108">O <xref:System.Xaml.Schema.XamlTypeInvoker> permite que o sistema de tipo XAML generalizado trabalhar com o sistema de tipos fazendo o que você especifique como parte do comportamento de invocação.</span><span class="sxs-lookup"><span data-stu-id="144a3-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="144a3-109">Personalizado específico <xref:System.Xaml.Schema.XamlTypeInvoker> fornece uma maneira de reduzir as dependências no sistema de tipos CLR, que são usadas pelo padrão <xref:System.Xaml.XamlType> comportamento.</span><span class="sxs-lookup"><span data-stu-id="144a3-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="144a3-110">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="144a3-111">O CLR subjacente <see cref="T:System.Type" /> para o tipo XAML a ser construído.</span><span class="sxs-lookup"><span data-stu-id="144a3-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="144a3-112">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-112">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="144a3-113">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações do tipo de CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="144a3-114">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="144a3-115">O nome do tipo a ser criado.</span><span class="sxs-lookup"><span data-stu-id="144a3-115">The name of the type to create.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="144a3-116">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="144a3-117">Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="144a3-118">Contexto do esquema XAML para leitores de XAML e gravadores de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-118">XAML schema context for XAML readers and XAML writers.</span></span></param>
        <summary><span data-ttu-id="144a3-119">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base em um nome de cadeia de caracteres para o tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-120">Esse é um construtor protegido.</span><span class="sxs-lookup"><span data-stu-id="144a3-120">This is a protected constructor.</span></span> <span data-ttu-id="144a3-121">Não há classes derivadas de públicas atuais existem que usam esse caminho específico para a construção.</span><span class="sxs-lookup"><span data-stu-id="144a3-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="144a3-122">Como um consumidor de existente <xref:System.Xaml.XamlType>, você deve usar as outras assinaturas de construtor (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, ou <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) para inicializar um <xref:System.Xaml.XamlType> objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="144a3-123">Um ou mais <paramref name="typeName" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="144a3-124">O tipo subjacente para o tipo XAML a ser construído.</span><span class="sxs-lookup"><span data-stu-id="144a3-124">The underlying type for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="144a3-125">Contexto do esquema XML para o leitor de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-125">XAML schema context for the XAML reader.</span></span></param>
        <param name="invoker"><span data-ttu-id="144a3-126">A implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que manipula a reflexão de chamadas do tempo de execução em relação a <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="144a3-127">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base nas informações de tipo subjacentes e uma implementação <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="144a3-128">Um ou mais <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace"><span data-ttu-id="144a3-129">O namespace de XAML para o tipo, como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="144a3-129">The XAML namespace for the type, as a string.</span></span></param>
        <param name="unknownTypeName"><span data-ttu-id="144a3-130">O nome do tipo no namespace XAML <paramref name="unknownTypeNamespace" /> fornecido.</span><span class="sxs-lookup"><span data-stu-id="144a3-130">The name of the type in the provided <paramref name="unknownTypeNamespace" /> XAML namespace.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="144a3-131">Os argumentos de tipo para um <see cref="T:System.Xaml.XamlType" /> que representa um tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="144a3-132">Pode ser (e geralmente é) <see langword="null" />, o que indica que o tipo representado não é um tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="144a3-133">Contexto do esquema XAML para leitores de XAML ou gravadores de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-133">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="144a3-134">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlType" /> com base no namespace de XAML e em um nome de cadeia de caracteres para o tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span></span> <span data-ttu-id="144a3-135">Este construtor é exclusivamente para análise e a gravação de nó de XAML de usos de tipo que são conhecidos por não terem suporte no sistema de tipos compatível nem no contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-136">Use esse construtor somente para tipos de "desconhecidos", onde um tipo XAML que é mapeado para um sistema de tipos subjacente não está disponível.</span><span class="sxs-lookup"><span data-stu-id="144a3-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="144a3-137">Este construtor não pode produzir um resultado em que <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> é `true`.</span><span class="sxs-lookup"><span data-stu-id="144a3-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="144a3-138">Em vez disso, a lógica do reflector padrão relata o tipo subjacente que <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="144a3-139">No entanto, esse comportamento pode mudar devido a <xref:System.Xaml.XamlType.LookupIsUnknown%2A> substituir.</span><span class="sxs-lookup"><span data-stu-id="144a3-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="144a3-140">Um ou mais dentre <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> ou <paramref name="schemaContext" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-141">Obtém uma coleção somente leitura dos tipos que são utilizáveis como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-142">Uma coleção somente leitura de possíveis tipos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="144a3-142">A read-only collection of possible content types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-143">Tipos que podem ser atribuídos um tipo específico de conteúdo (por exemplo, pode ser atribuído a um tipo base que é um tipo de conteúdo permitido) não são considerados vários tipos para fins de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="144a3-144">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-145">Obtém o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="144a3-146">A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</span><span class="sxs-lookup"><span data-stu-id="144a3-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <value><span data-ttu-id="144a3-147">O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-148">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupBaseType%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-149">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupBaseType%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="144a3-150">Por padrão, <xref:System.Xaml.XamlType.BaseType%2A> retorna uma constante interna que representa uma <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> é `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-152">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar as informações de tipo informada sobre um tipo XAML para que ele não precisa mais se alinhe de maneira esperada com as informações do sistema de tipo de seu tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="144a3-153">Para nenhuma verificação de segurança crítica das operações de atribuição e de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="144a3-154">O tipo para verificar em relação ao <see cref="T:System.Xaml.XamlType" /> atual.</span><span class="sxs-lookup"><span data-stu-id="144a3-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span></span></param>
        <summary><span data-ttu-id="144a3-155">Retorna um valor que indica se uma instância deste <see cref="T:System.Xaml.XamlType" /> tem o <see cref="T:System.Xaml.XamlType" /> especificado em sua lista de tipos atribuíveis.</span><span class="sxs-lookup"><span data-stu-id="144a3-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span></span></summary>
        <returns><span data-ttu-id="144a3-156"><see langword="true" /> se <paramref name="xamlType" /> está na lista de tipos atribuíveis; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-156"><see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-157">Embora o tipo pode ser atribuído não tem todos os recursos do tipo de referência, você pode usá-lo para a atribuição.</span><span class="sxs-lookup"><span data-stu-id="144a3-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="144a3-158">Por exemplo, você pode usar a atribuição para fazer as correspondências de tipo para os valores de uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="144a3-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="144a3-159">O conceito de tipos atribuíveis no XAML é semelhante ao conceito de conversão de backup no sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="144a3-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="144a3-160">Por exemplo, em um sistema de tipos CLR, cada tipo tem um <xref:System.Object> na sua lista de tipos atribuíveis.</span><span class="sxs-lookup"><span data-stu-id="144a3-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="144a3-161">Se um dos dois <xref:System.Xaml.XamlType> instâncias que são usadas para comparação tem <xref:System.Xaml.XamlType.IsUnknown%2A> igual a `true`, esse método tem um modo desconhecido especial que retorna `true` se os dois <xref:System.Xaml.XamlType> instâncias forem equivalentes.</span><span class="sxs-lookup"><span data-stu-id="144a3-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="144a3-162">A implementação padrão usa o CLR <xref:System.Type> partir <xref:System.Xaml.XamlType.UnderlyingType%2A> para este <xref:System.Xaml.XamlType> e a entrada <xref:System.Xaml.XamlType>e chamadas <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="144a3-163">Substitua este método se você quiser uma determinação diferente de tipos atribuíveis.</span><span class="sxs-lookup"><span data-stu-id="144a3-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="144a3-164">Passando um valor nulo `xamlType` não gerará uma exceção e sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="144a3-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-166">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar a atribuição de um tipo XAML para que ele não precisa mais se alinhe de maneira esperada com o comportamento de conversão de tipo de seu tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="144a3-167">Para nenhuma verificação de segurança crítica das operações de atribuição e de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-168">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <value><span data-ttu-id="144a3-169"><see langword="true" /> Se a construção de uma instância exige algum valor de argumento; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-169"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-170">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-171">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-172">Obtém as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-173">As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-173"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="144a3-174">Pode ser <see langword="null" /> não se existir nenhuma propriedade de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="144a3-174">May be <see langword="null" /> if no content property exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-175">Ao usar a associação ou fazendo do sistema de tipos CLR, a propriedade de conteúdo XAML pode ser especificada em um tipo por meio da aplicação <xref:System.Windows.Markup.ContentPropertyAttribute> à definição de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="144a3-176">Essa propriedade se alinha com o `[content property]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-177">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupContentProperty%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-178">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupContentProperty%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-179">Obtém os tipos que são usados para encapsular conteúdo para uma propriedade de conteúdo quando não for uma correspondência de tipo estrito, como cadeias de caracteres em uma <see langword="Collection&lt;T&gt;" /> fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="144a3-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span></span></summary>
        <value><span data-ttu-id="144a3-180">Uma coleção somente leitura dos tipos possíveis de wrapper de conteúdo; Caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-181">Se não houver nenhum wrappers para levar em conta a correspondência de tipo flexibilizar, essa propriedade é `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="144a3-182">Tipos que são avaliadas como <xref:System.Xaml.XamlType.CanAssignTo%2A> para um tipo específico de conteúdo não são considerados o vários tipos para fins de <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="144a3-183">Na associação para CLR <xref:System.Xaml> e <xref:System.Xaml.XamlType>, o tipo de wrapper de conteúdo XAML pode ser especificado em um tipo como um <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="144a3-184">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupContentWrappers%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-185">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupContentWrappers%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-186">Obtém o <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa o comportamento de conversão de carregamento adiado para esse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span></span></summary>
        <value><span data-ttu-id="144a3-187">O <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com <see cref="T:System.Xaml.XamlDeferringLoader" /> que representa o comportamento de carregamento adiado para esse tipo de restrição.</span><span class="sxs-lookup"><span data-stu-id="144a3-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-188">Comportamento do modelo XAML no WPF é um exemplo de comportamento de carregamento adiado.</span><span class="sxs-lookup"><span data-stu-id="144a3-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="144a3-189">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-190">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="144a3-191">Indica se o objeto atual é igual a outro objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-191">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="144a3-192">O objeto a ser comparado com este objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-192">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="144a3-193">Indica se o objeto atual é igual a outro objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-193">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="144a3-194"><see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="obj" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-194"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="144a3-195">Um objeto para comparação com esse objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-195">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="144a3-196">Indica se o objeto atual é igual a outro objeto do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-196">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="144a3-197"><see langword="true" /> se o objeto atual for igual ao parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-197"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="144a3-198">A diretiva para a qual localizar o membro com alias.</span><span class="sxs-lookup"><span data-stu-id="144a3-198">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="144a3-199">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-200">O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-200">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-201">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-202">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-203">Retorna uma coleção que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-204">Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-205">Cada <xref:System.Xaml.XamlMember> na coleção retornada deve conter valores que suportam o conceito que o <xref:System.Xaml.XamlMember> é um membro anexável.</span><span class="sxs-lookup"><span data-stu-id="144a3-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="144a3-206">Por exemplo, os membros devem retornar `true` para <xref:System.Xaml.XamlMember.IsAttachable%2A>, um tipo para <xref:System.Xaml.XamlMember.TargetType%2A>e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="144a3-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="144a3-207">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-208">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-209">Retorna uma coleção que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-210">Uma coleção que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-211">Chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupAllMembers%2A> substituições em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="144a3-212">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="144a3-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="144a3-213">Retorna um <see cref="T:System.Xaml.XamlMember" /> que representa um membro anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-214">Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</span><span class="sxs-lookup"><span data-stu-id="144a3-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-215">Chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupAttachableMember%2A> substituições em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-217">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML para que eles não se alinham de maneira esperada com a <xref:System.ComponentModel.TypeDescriptor> `Get*` informações sobre o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="144a3-218">Para nenhuma verificação de segurança crítica de emissão de relatórios do membro, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-219">Retorna o código hash para esse objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-219">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="144a3-220">Um código hash inteiro.</span><span class="sxs-lookup"><span data-stu-id="144a3-220">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="144a3-221">O nome do membro a ser obtido (como uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="144a3-221">The name of the member to get (as a string).</span></span></param>
        <summary><span data-ttu-id="144a3-222">Retorna um <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-223">As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se esse membro for encontrado; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-224">O valor de `name` deve ser não qualificado.</span><span class="sxs-lookup"><span data-stu-id="144a3-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="144a3-225">Nomes de tipo qualificado que indicam que um membro anexado devem ser enviados ao <xref:System.Xaml.XamlType.GetAttachableMember%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="144a3-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="144a3-226">Membro de nomes não devem ser usados; o prefixo um prefixo é situacional a um uso e o sistema de tipos XAML não pode saber o contexto de tal uso e como o prefixo é mapeado.</span><span class="sxs-lookup"><span data-stu-id="144a3-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="144a3-227">Chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupMember%2A> substituições em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-228"><xref:System.Xaml.XamlType.LookupMember%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-229">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML para que eles não se alinham de maneira esperada com a <xref:System.ComponentModel.TypeDescriptor> `Get*` informações sobre o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="144a3-230">Para nenhuma verificação de segurança crítica de emissão de relatórios do membro, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="144a3-231">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</span><span class="sxs-lookup"><span data-stu-id="144a3-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="144a3-232">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-233">Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe.</span><span class="sxs-lookup"><span data-stu-id="144a3-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="144a3-234">Você deve especificar os tipos na mesma ordem em que fornecer a entrada de marcação para a extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-234">You must specify the types in the same order when you supply markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-235">Essa API só é relevante se este <xref:System.Xaml.XamlType> representa uma extensão de marcação (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> é `true`).</span><span class="sxs-lookup"><span data-stu-id="144a3-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="144a3-236">A entrada `parameterCount` não é para solicitar o tipo de um parâmetro posicional específico.</span><span class="sxs-lookup"><span data-stu-id="144a3-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="144a3-237">Ele é para especificar a aridade do uso de uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="144a3-238">Uso de extensão de marcação geralmente tem várias "assinaturas" e usa parâmetros diferentes arity (contagem) de parâmetros posicionais para diferenciar.</span><span class="sxs-lookup"><span data-stu-id="144a3-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="144a3-239">No entanto, você pode configurar um contexto de esquema para permitir arities duplicados e usar tipos dos parâmetros posicionais para diferenciação.</span><span class="sxs-lookup"><span data-stu-id="144a3-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="144a3-240">Para obter mais informações, consulte <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="144a3-241">Para arity específico (contagem), a posição de parâmetro e tipos podem variar.</span><span class="sxs-lookup"><span data-stu-id="144a3-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="144a3-242">Para obter o tipo posicional de uso de extensão de marcação de um específico igual à aridade, você primeiro chamar <xref:System.Xaml.XamlType.GetPositionalParameters%2A> especificar a contagem de arity.</span><span class="sxs-lookup"><span data-stu-id="144a3-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="144a3-243">Em seguida, obtenha o item nessa posição na coleção retornada.</span><span class="sxs-lookup"><span data-stu-id="144a3-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="144a3-244">Chamadas para esse método podem invocar <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> substituições em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-245">Retorna uma lista de identificadores de cadeia de caracteres para namespaces de XAML nos quais o tipo está incluído.</span><span class="sxs-lookup"><span data-stu-id="144a3-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span></span></summary>
        <returns><span data-ttu-id="144a3-246">Uma lista de valores de cadeia de caracteres, em que cada cadeia de caracteres é o identificador de URI para um namespace de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-247">Identificadores de namespace XAML típicos são cadeias de caracteres em forma de URI.</span><span class="sxs-lookup"><span data-stu-id="144a3-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="144a3-248">A implementação padrão verifica o seguinte, em ordem: o namespace XAML que é fornecido na construção (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> assinatura somente); e os namespaces que estão disponíveis no contexto de esquema.</span><span class="sxs-lookup"><span data-stu-id="144a3-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="144a3-249">Se cada um é `null`, uma nova lista é gerada que contém uma única cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="144a3-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="144a3-250">Você pode substituir esse método para alterar a metodologia de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="144a3-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-251">Obtém a implementação de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está associada a esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-252">O <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementação que está associada a este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-253">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamar <xref:System.Xaml.XamlType.Invoker%2A> pode invocar qualquer um <xref:System.Xaml.XamlType.LookupInvoker%2A> ou uma substituição específica desse método.</span><span class="sxs-lookup"><span data-stu-id="144a3-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="144a3-254">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupInvoker%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="144a3-255">Se um <xref:System.Xaml.XamlType.LookupInvoker%2A> substituir retorna `null`, ou se a implementação padrão retorna `null` devido à falta de <xref:System.Xaml.XamlType.UnderlyingType%2A> para este <xref:System.Xaml.XamlType>, em seguida, <xref:System.Xaml.XamlType.Invoker%2A> retorna <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-256">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-257"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-258">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsAmbient%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-259">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsAmbient%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-260">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma matriz.</span><span class="sxs-lookup"><span data-stu-id="144a3-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span></span></summary>
        <value><span data-ttu-id="144a3-261"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa uma matriz; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-262">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupCollectionKind%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-263">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupCollectionKind%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-264">Obtém um valor que indica se esse <see cref="T:System.Xaml.XamlType" /> representa uma coleção.</span><span class="sxs-lookup"><span data-stu-id="144a3-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span></span></summary>
        <value><span data-ttu-id="144a3-265"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-265"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-266">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupCollectionKind%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-267">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupCollectionKind%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-268">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-269"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-269"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-270">Essa propriedade se alinha com o `[is default constructible]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-271">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsConstructible%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-272">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsConstructible%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-273">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um dicionário, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-274"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa um dicionário; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-274"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-275">Essa propriedade se alinha com o `[is dictionary]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-276">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupCollectionKind%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-277">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupCollectionKind%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-278">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span></span></summary>
        <value><span data-ttu-id="144a3-279"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa um tipo genérico; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-280">Essa propriedade é uma propriedade de auxiliar que verifica se há um valor nulo de <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="144a3-281">Não há nenhum específicas `Lookup` método relacionados ao <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-282">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="144a3-283"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-283"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-284">Em termos de especificação de XAML, esse tipo deve ser atribuível ao `x:MarkupExtension` para retornar `true` para <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="144a3-285">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-286">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-287">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-288"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-288"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-289">Um namescope XAML impõe a exclusividade do nome da propriedade ou propriedades usadas para `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="144a3-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="144a3-290">Se <xref:System.Xaml.XamlType.IsNameScope%2A> é `true`, algum mecanismo para impor a exclusividade deve existir e deve avaliar a partir da perspectiva desse tipo de proprietário de um namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="144a3-291">O namescope XAML, em seguida, estende ao conteúdo do tipo até encontrar outro tipo de proprietário de namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="144a3-292">Essa propriedade se alinha com o `[is name scope]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-293">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsNameScope%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-294">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é inicializado usando uma cadeia de caracteres <see langword="xamlName" /> válida como seu <see cref="P:System.Xaml.XamlType.Name" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span></span></summary>
        <value><span data-ttu-id="144a3-295"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> é inicializada usando válido <see langword="xamlName" /> de cadeia de caracteres; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-295"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-296">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-297"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-297"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-298">Essa propriedade se alinha com o `[is nullable]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-299">Se você não estiver usando a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsNullable%2A> substituições em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-300">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</span><span class="sxs-lookup"><span data-stu-id="144a3-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <value><span data-ttu-id="144a3-301"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-301"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-302">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsPublic%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-304">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar as informações de acesso reportadas sobre um tipo XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso e o sistema de tipo de seu tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="144a3-305">Para nenhuma verificação de segurança crítica das operações de atribuição e de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-306">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <value><span data-ttu-id="144a3-307"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa um tipo pode ser resolvido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-307"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-308">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsUnknown%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="144a3-309">Para um caminho de carga que envolve <xref:System.Xaml.XamlObjectWriter>, um <xref:System.Xaml.XamlType> que tem `true` para <xref:System.Xaml.XamlType.IsUnknown%2A> não podem ser gravados em um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="144a3-310">Sob as implementações padrão no <xref:System.Xaml> , o <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> chamar lança uma <xref:System.Xaml.XamlObjectWriterException> quando o relevantes <xref:System.Xaml.XamlType> relatórios `true` para <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="144a3-311">Você não deve passar uma <xref:System.Xaml.XamlType> que tem <xref:System.Xaml.XamlType.IsUnknown%2A> como `true` , a menos que você está preparado para lidar com as exceções das <xref:System.Xaml.XamlObjectWriter>, ou você tem outras maneiras de ajustar o <xref:System.Xaml.XamlObjectWriter> comportamento ou o fluxo do nó XAML antes de gravar o objeto gráfico.</span><span class="sxs-lookup"><span data-stu-id="144a3-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-312">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <value><span data-ttu-id="144a3-313"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-313"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="144a3-314">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-314">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-315">De cima para baixo é uma metáfora que aproxima o comportamento do processador XAML ao criar o gráfico do objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="144a3-316">Quando compilado de cima para baixo, um tipo é instanciado, anexado ao pai, e, em seguida, configurou suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="144a3-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="144a3-317">Construção de cima para baixo evita invocar manipuladores de propriedades alteradas várias vezes.</span><span class="sxs-lookup"><span data-stu-id="144a3-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="144a3-318">Tal tratamento ripples o grafo de objeto e, portanto, elimina as várias chamadas do manipulador e fornece uma otimização de desempenho de inicialização do grafo do objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="144a3-319">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-320">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-321">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</span><span class="sxs-lookup"><span data-stu-id="144a3-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-322"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-322"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-323">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-324">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-325">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="144a3-326"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-326"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-327">Essa propriedade se alinha com o `[is xdata]` item de informação na especificação [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="144a3-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="144a3-328">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsXData%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-329">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsXData%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-330">Obtém um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-331">Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo dos itens na coleção; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma coleção.</span><span class="sxs-lookup"><span data-stu-id="144a3-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-332">Essa propriedade só é relevante se este <xref:System.Xaml.XamlType> representa uma coleção (<xref:System.Xaml.XamlType.IsCollection%2A> é `true`).</span><span class="sxs-lookup"><span data-stu-id="144a3-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="144a3-333">O `Items` é de propriedade de qualquer propriedade que contém os itens nesse tipo de coleção ou matriz.</span><span class="sxs-lookup"><span data-stu-id="144a3-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="144a3-334">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupItemType%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-335">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupItemType%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-336">Obtém um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</span><span class="sxs-lookup"><span data-stu-id="144a3-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <value><span data-ttu-id="144a3-337">Um <see cref="T:System.Xaml.XamlType" /> objeto para o tipo da chave para uso do dicionário, caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa um dicionário.</span><span class="sxs-lookup"><span data-stu-id="144a3-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-338">Essa propriedade só é relevante se este <xref:System.Xaml.XamlType> representa um dicionário (<xref:System.Xaml.XamlType.IsDictionary%2A> é `true`).</span><span class="sxs-lookup"><span data-stu-id="144a3-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="144a3-339">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupKeyType%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-340">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupKeyType%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="144a3-341">A diretiva para a qual localizar o membro com alias.</span><span class="sxs-lookup"><span data-stu-id="144a3-341">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="144a3-342">Retorna o membro XAML que é transformado em alias para uma diretiva XAML por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-343">O membro transformado em alias, se encontrado; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-343">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-344">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="144a3-345">A implementação padrão pode retornar resultados para as seguintes diretivas XAML: `Key`; `Name`; `Uid`; e `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="144a3-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="144a3-346">Os valores para eles dependem de reflexão subjacente e ainda podem retornar `null` se nenhuma propriedade de um alias for encontrada.</span><span class="sxs-lookup"><span data-stu-id="144a3-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="144a3-347">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou as informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-348">Retorna um conjunto enumerável que contém todas as propriedades anexáveis que são expostas por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-349">Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-350">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="144a3-351">Embora <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> retorna uma coleção genérica, isso `Lookup` método retorna um conjunto enumerável genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="144a3-352">A implementação padrão usa a reflexão do CLR interna.</span><span class="sxs-lookup"><span data-stu-id="144a3-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="144a3-353">Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> está `null`, a implementação padrão pode usar <xref:System.Xaml.XamlType.BaseType%2A>, se ele estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="144a3-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="144a3-354">Esse comportamento chama <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursivamente para tentar encontrar um tipo base válido e retorna `null` se não existe nenhum tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="144a3-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="144a3-355">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="144a3-356">Um retorno nulo deve ser reservado para casos em que as informações não podem ser determinadas devido à falta de suporte ao tipo de sistema ou reflexão.</span><span class="sxs-lookup"><span data-stu-id="144a3-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="144a3-357">Se um tipo é válido e reflexão ou outras técnicas estão disponíveis, mas um tipo não tem membros anexáveis, você deverá retornar um vazio <xref:System.Collections.Generic.IEnumerable%601> definido.</span><span class="sxs-lookup"><span data-stu-id="144a3-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-358">Retorna um conjunto enumerável que contém todos os membros que são expostos por esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-359">Um conjunto enumerável que contém zero ou mais valores <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-360">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="144a3-361">Embora <xref:System.Xaml.XamlType.GetAllMembers%2A> retorna uma coleção genérica, isso `Lookup` método retorna um conjunto enumerável genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="144a3-362">A implementação padrão usa a reflexão do CLR interna.</span><span class="sxs-lookup"><span data-stu-id="144a3-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="144a3-363">Para casos em que <xref:System.Xaml.XamlType.UnderlyingType%2A> está `null`, a implementação padrão pode usar <xref:System.Xaml.XamlType.BaseType%2A>, se ele estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="144a3-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="144a3-364">Esse comportamento chama <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursivamente para tentar encontrar um tipo base válido e retorna `null` se não existe nenhum tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="144a3-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="144a3-365">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="144a3-366">Um retorno nulo deve ser reservado para casos em que as informações não podem ser determinadas devido à falta de suporte ao tipo de sistema ou reflexão.</span><span class="sxs-lookup"><span data-stu-id="144a3-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="144a3-367">Se um tipo for válido, a reflexão ou outras técnicas estão disponíveis; Se um tipo não tem membros, você deverá retornar um vazio <xref:System.Collections.Generic.IEnumerable%601> definido.</span><span class="sxs-lookup"><span data-stu-id="144a3-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="144a3-368">Retornar valores para <xref:System.Xaml.XamlType.LookupAllMembers%2A> e <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> devem ser mutuamente exclusivos.</span><span class="sxs-lookup"><span data-stu-id="144a3-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="144a3-369">Se você tiver uma situação em que uma propriedade de sistema de tipo de suporte pode dar suporte a um uso de instância padrão, bem como um uso anexável, esse membro deve ser relatado como dois diferentes <xref:System.Xaml.XamlMember> valores, com um valor que aparece na lista anexável e outro no lista de membros padrão.</span><span class="sxs-lookup"><span data-stu-id="144a3-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-370">Retorna uma lista dos tipos que podem ser usados como o valor <see cref="P:System.Xaml.XamlType.ContentProperty" /> para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-371">Uma lista de possíveis tipos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="144a3-371">A list of possible content types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-372">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="144a3-373">Tipos que são avaliadas como <xref:System.Xaml.XamlType.CanAssignTo%2A> para um tipo específico de conteúdo não são considerados o vários tipos para fins de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="144a3-374">A implementação padrão pode usar outras propriedades de <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, ou <xref:System.Xaml.XamlType.ItemType%2A>) para obter um resultado.</span><span class="sxs-lookup"><span data-stu-id="144a3-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="144a3-375">O `Lookup` substituições para a lista de propriedade anterior também pode ser invocada nessa determinação.</span><span class="sxs-lookup"><span data-stu-id="144a3-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="144a3-376">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="144a3-377">O nome do membro anexável a ser obtido, no formato <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="144a3-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="144a3-378">Retorna um <see cref="T:System.Xaml.XamlMember" /> para um anexável nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-379">Um objeto <see cref="T:System.Xaml.XamlMember" /> para o membro anexável solicitado; caso contrário, <see langword="null" />, se não existir nenhum membro anexável com esse nome.</span><span class="sxs-lookup"><span data-stu-id="144a3-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-380">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="144a3-381">A implementação padrão usa a reflexão do CLR interna.</span><span class="sxs-lookup"><span data-stu-id="144a3-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="144a3-382">Quando <xref:System.Xaml.XamlType.UnderlyingType%2A> está `null`, a implementação padrão pode usar <xref:System.Xaml.XamlType.BaseType%2A>, se ele estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="144a3-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="144a3-383">Esse comportamento chama <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursivamente para tentar encontrar um tipo base válido e retorna `null` se não existe nenhum tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="144a3-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="144a3-384">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-386">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML para que eles não se alinham de maneira esperada com a <xref:System.ComponentModel.TypeDescriptor> `Get*` informações sobre o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="144a3-387">Para nenhuma verificação de segurança crítica de emissão de relatórios do membro, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-388">Retorna o <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="144a3-389">A determinação desse valor é baseada no tipo subjacente deste <see cref="T:System.Xaml.XamlType" /> e no contexto do esquema.</span><span class="sxs-lookup"><span data-stu-id="144a3-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <returns><span data-ttu-id="144a3-390">O <see cref="T:System.Xaml.XamlType" /> para o tipo base imediato desse tipo de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-391">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="144a3-392">A implementação padrão pode retornar uma constante interna que representa o <xref:System.Object> se <xref:System.Xaml.XamlType.UnderlyingType%2A> é `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="144a3-393">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-395">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar as informações de tipo informada sobre um tipo XAML para que ele não precisa mais se alinhe de maneira esperada com as informações do sistema de tipo de seu tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="144a3-396">Para nenhuma verificação de segurança crítica das operações de atribuição e de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-397">Retorna um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara qual tipo de coleção específica esse <see cref="T:System.Xaml.XamlType" /> usa.</span><span class="sxs-lookup"><span data-stu-id="144a3-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span></span></summary>
        <returns><span data-ttu-id="144a3-398">Um valor da enumeração <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-399">Esse método é invocado por um método privado interno (não público `CollectionKind` ou `GetCollectionKind` API existe em <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="144a3-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="144a3-400">A implementação padrão usa a reflexão do CLR interna.</span><span class="sxs-lookup"><span data-stu-id="144a3-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="144a3-401">Para casos em que <xref:System.Xaml.XamlType.UnderlyingType%2A> está `null`, a implementação padrão pode usar <xref:System.Xaml.XamlType.BaseType%2A>, se ele estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="144a3-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="144a3-402">Esse comportamento chama indiretamente <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursivamente para tentar encontrar um tipo base válido; ele retorna <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> se não existe nenhum tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="144a3-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="144a3-403">Em geral, a implementação padrão tenta localizar o `Add` método do tipo subjacente por reflexão.</span><span class="sxs-lookup"><span data-stu-id="144a3-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="144a3-404">Se encontrado, o <xref:System.Reflection.MethodInfo> do `Add` método é informações suficientes para determinar quais <xref:System.Xaml.Schema.XamlCollectionKind> valor deve ser retornado.</span><span class="sxs-lookup"><span data-stu-id="144a3-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="144a3-405">Caso contrário, retornará <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="144a3-406">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-407">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ter argumentos (restrições genéricas por meio de <see langword="x:TypeArguments" />, de texto de inicialização ou de outras técnicas de XAML) para construir uma instância válida do tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <returns><span data-ttu-id="144a3-408"><see langword="true" /> se a construção de uma instância exige algum valor de argumento; caso contrário, False.</span><span class="sxs-lookup"><span data-stu-id="144a3-408"><see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-409">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="144a3-410">A implementação padrão retorna `false` sistema de tipos para tipos considerados tipos de valor no CLR.</span><span class="sxs-lookup"><span data-stu-id="144a3-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="144a3-411">Para outros que tipos de valor, reflexo de CLR <xref:System.Reflection.ConstructorInfo> é usado para determinar se um construtor padrão existe.</span><span class="sxs-lookup"><span data-stu-id="144a3-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="144a3-412">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-413">Retorna as informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-414">As informações de <see cref="T:System.Xaml.XamlMember" /> para a propriedade de conteúdo deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-414"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="144a3-415">Pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-415">May be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-416">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="144a3-417">A implementação padrão verifica se há <xref:System.Windows.Markup.ContentPropertyAttribute> na definição de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="144a3-418">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-419">Se essas verificações não são descobertos por um tipo de conteúdo, a implementação padrão retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="144a3-420">Substitua este método se você não dependem de reflexão de CLR interno padrão e estiver usando metadados ou outras técnicas para as informações do sistema de tipo XAML ou informações de esquema de um tipo de relatório.</span><span class="sxs-lookup"><span data-stu-id="144a3-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-421">Obtém uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-422">Uma lista de valores <see cref="T:System.Xaml.XamlType" /> que representam os wrappers de conteúdo para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-423">Um wrapper de conteúdo é uma classe que representa o tipo de coleção de conteúdo quando os tipos que são usados na coleção não são contíguos no sistema de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="144a3-424">Os tipos de itens de coleta para o wrapper de conteúdo devem ser limitados de alguma maneira além do <xref:System.Object> ou um objeto neutro equivalente.</span><span class="sxs-lookup"><span data-stu-id="144a3-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="144a3-425">No entanto, essa limitação é imposta apenas pelo design ou a finalidade das propriedades que usam esse tipo e não pelo sistema de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="144a3-426">Mais de um wrapper de conteúdo pode existir em um tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="144a3-427">Para um exemplo de classe e o cenário da implementação do WPF XAML, consulte <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="144a3-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-428">Quando implementado em uma classe derivada, retorna uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="144a3-429">Uma implementação <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-430">Substitua este método para fornecer a reflexão interna com uma maneira alternativa para obter valores de atributo CLR.</span><span class="sxs-lookup"><span data-stu-id="144a3-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="144a3-431">Na ausência de uma substituição, o reflector interno usa a lógica de reflexão de CLR típica.</span><span class="sxs-lookup"><span data-stu-id="144a3-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="144a3-432">A implementação padrão retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-433">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado para o carregamento adiado de objetos declarados em XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span></span></summary>
        <returns><span data-ttu-id="144a3-434">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Xaml.XamlDeferringLoader" /> sobre o genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-435">Esse método pode ser invocado quando um chamador obtém um valor de <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="144a3-436">Substitua este método se você quiser <xref:System.Xaml.XamlType.DeferringLoader%2A> para retornar um valor diferente do que é habilitado por reflexão interno do padrão e também estão fornecendo personalizado <xref:System.Xaml.Schema.XamlTypeInvoker> informações.</span><span class="sxs-lookup"><span data-stu-id="144a3-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="144a3-437">A implementação padrão retorna um objeto com base na leitura <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="144a3-438">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-439">Se um valor não estiver disponível, esse método retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-440">Retorna um <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que é associado a esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-441">As informações <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-442">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="144a3-443">A implementação padrão não requer que um <xref:System.Xaml.XamlType> ser construído usando um dos construtores que passar um inicial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="144a3-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="144a3-444">No entanto, uma <xref:System.Xaml.XamlType.UnderlyingType%2A> valor deve existir para o <xref:System.Xaml.XamlType>; caso contrário, a implementação padrão retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="144a3-445">Substitua este método se você criar também uma classe derivada de <xref:System.Xaml.Schema.XamlTypeInvoker> e pretender retornar a classe derivada.</span><span class="sxs-lookup"><span data-stu-id="144a3-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="144a3-446">Se você retornar `null`, <xref:System.Xaml.XamlType.Invoker%2A> retorna <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> aos chamadores.</span><span class="sxs-lookup"><span data-stu-id="144a3-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-447">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-448"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo de ambiente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-448"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-449">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="144a3-450">A implementação padrão usa a reflexão do CLR no <xref:System.Xaml.XamlType.UnderlyingType%2A> e pode verificar os tipos base.</span><span class="sxs-lookup"><span data-stu-id="144a3-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="144a3-451">Essa implementação verifica os <xref:System.Windows.Markup.AmbientAttribute> que é aplicado à definição do tipo relevante no nível de classe e retorna `true` nesse caso.</span><span class="sxs-lookup"><span data-stu-id="144a3-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="144a3-452">Retornam todos os outros casos `false`.</span><span class="sxs-lookup"><span data-stu-id="144a3-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="144a3-453">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsAmbient%2A> para retornar um valor diferente do que é habilitado por reflexão de interno padrão.</span><span class="sxs-lookup"><span data-stu-id="144a3-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-454">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-455"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo construível; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-455"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-456">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="144a3-457">A implementação padrão usa a reflexão do CLR no <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="144a3-458">O tipo deve ser concreto, não aninhadas e fechado.</span><span class="sxs-lookup"><span data-stu-id="144a3-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="144a3-459">A implementação padrão verifica se o tipo é um tipo de valor e o retorno de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="144a3-460">Para um valor nulo <xref:System.Xaml.XamlType.UnderlyingType%2A>, esse método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="144a3-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="144a3-461">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsConstructible%2A> para retornar um valor diferente do que é habilitado por reflexão de interno padrão.</span><span class="sxs-lookup"><span data-stu-id="144a3-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-462">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="144a3-463"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma extensão de marcação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-463"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-464">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="144a3-465">A implementação padrão consiste apenas essa chamada:</span><span class="sxs-lookup"><span data-stu-id="144a3-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="144a3-466">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsMarkupExtension%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="144a3-467">Em termos de especificação de XAML, esse tipo deve ser atribuível ao `x:MarkupExtension` para retornar `true` para <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-468">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-469"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um namescope de XAML; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-469"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-470">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="144a3-471">A implementação padrão faz uma <xref:System.Xaml.XamlType.CanAssignTo%2A> chame indiretamente o tipo <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="144a3-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="144a3-472"><xref:System.Windows.Markup.INameScope> é uma interface que é definida no assembly WindowsBase. dll.</span><span class="sxs-lookup"><span data-stu-id="144a3-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="144a3-473">Essa técnica para identificação de namescope XAML é usada tanto pelo WPF e Windows Workflow Foundation implementações de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="144a3-474">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsNameScope%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="144a3-475">Um namescope XAML impõe a exclusividade do nome da propriedade ou propriedades que são usadas para `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="144a3-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="144a3-476">Se <xref:System.Xaml.XamlType.IsNameScope%2A> é `true`, em seguida, algum mecanismo para impor a exclusividade deve existir e deve avaliar a partir da perspectiva desse tipo de proprietário de um namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="144a3-477">O namescope XAML, em seguida, estende ao conteúdo do tipo até encontrar outro tipo de proprietário de namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-478">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-479"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que permite valor nulo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-479"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-480">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="144a3-481">A implementação padrão faz uma determinação com base no CLR principal que permite valor nulo conceito de biblioteca, verificado em relação <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="144a3-482">Para um valor nulo <xref:System.Xaml.XamlType.UnderlyingType%2A>, ele retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="144a3-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="144a3-483">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsNullable%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-484">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público no sistema de tipos relevante.</span><span class="sxs-lookup"><span data-stu-id="144a3-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <returns><span data-ttu-id="144a3-485"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo público; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-485"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-486">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="144a3-487">A implementação padrão usa a reflexão do CLR em relação a não-nulo <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="144a3-488">Para um valor nulo <xref:System.Xaml.XamlType.UnderlyingType%2A>, ele retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="144a3-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="144a3-489">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsPublic%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-491">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar as informações de acesso reportadas sobre um tipo XAML para que ele não precisa mais se alinhe de maneira esperada com as informações de acesso ou o sistema de tipo de seu tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="144a3-492">Para nenhuma verificação de segurança crítica das operações de atribuição e de acesso, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-493">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que não pode ser resolvido no sistema de tipos subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <returns><span data-ttu-id="144a3-494"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa um tipo não resolvido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-494"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-495">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="144a3-496">A implementação padrão pode usar a reflexão do CLR.</span><span class="sxs-lookup"><span data-stu-id="144a3-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="144a3-497">Para um valor nulo <xref:System.Xaml.XamlType.UnderlyingType%2A>, ele retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="144a3-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="144a3-498">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsUnknown%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-499">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco, de acordo com a definição de XML.</span><span class="sxs-lookup"><span data-stu-id="144a3-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-500"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa uma coleção significativa de espaço em branco; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-500"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-501">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="144a3-502">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="144a3-503">Ele também pode verificar o <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-504">Se um valor não estiver disponível, ele retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="144a3-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="144a3-505">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-506">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> representa um <see langword="XDATA" /> XML, de acordo com a definição de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="144a3-507"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-507"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-508">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="144a3-509">A implementação padrão faz uma <xref:System.Xaml.XamlType.CanAssignTo%2A> chame indiretamente o tipo <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="144a3-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="144a3-510">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsXData%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-511">Retorna um valor que fornece as informações de tipo para a propriedade <see langword="Items" /> deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-512">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo dos itens na coleção; caso contrário, <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa uma coleção.</span><span class="sxs-lookup"><span data-stu-id="144a3-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-513">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="144a3-514">A implementação padrão pode usar os conceitos de reflexão do CLR, como a verificação para um `Add` método pelo <xref:System.Reflection.MethodInfo> e usando o <xref:System.Reflection.ParameterInfo>; verificação <xref:System.Xaml.XamlType.IsArray%2A>; e a verificação de <xref:System.Xaml.XamlType.BaseType%2A> e tentar a mesma lógica de lá.</span><span class="sxs-lookup"><span data-stu-id="144a3-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="144a3-515">Substitua este método se você quiser <xref:System.Xaml.XamlType.ItemType%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="144a3-516">Casos onde <xref:System.Xaml.XamlType.LookupCollectionKind%2A> retorna <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> deve retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-517">Retorna um valor que fornece as informações de tipo para a propriedade de chave deste <see cref="T:System.Xaml.XamlType" />, se o <see cref="T:System.Xaml.XamlType" /> representa um dicionário.</span><span class="sxs-lookup"><span data-stu-id="144a3-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <returns><span data-ttu-id="144a3-518">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo da chave para uso de dicionário ou <see langword="null" /> se este <see cref="T:System.Xaml.XamlType" /> não representa um dicionário,</span><span class="sxs-lookup"><span data-stu-id="144a3-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-519">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="144a3-520">A implementação padrão pode usar os conceitos de reflexão do CLR, como a verificação para um `Add` método pelo <xref:System.Reflection.MethodInfo> e usando o <xref:System.Reflection.ParameterInfo>; e a verificação de <xref:System.Xaml.XamlType.BaseType%2A> e tentar a mesma lógica de lá.</span><span class="sxs-lookup"><span data-stu-id="144a3-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="144a3-521">Substitua este método se você quiser <xref:System.Xaml.XamlType.KeyType%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="144a3-522">Casos onde <xref:System.Xaml.XamlType.LookupCollectionKind%2A> não retorna <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> deve retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-523">Retorna um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="144a3-524">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-525">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="144a3-526">A implementação padrão retorna um <xref:System.Xaml.XamlType> com base na leitura <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="144a3-527">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-528">Se um valor não estiver disponível, ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="144a3-529">Substitua este método se você quiser <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="144a3-530">O nome do membro a ser obtido (como uma cadeia de caracteres).</span><span class="sxs-lookup"><span data-stu-id="144a3-530">The name of the member to get (as a string).</span></span></param>
        <param name="skipReadOnlyCheck"><span data-ttu-id="144a3-531"><see langword="true" /> para retornar um membro, mesmo se esse membro tiver um valor <see langword="true" /> para <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> para não retornar um membro <see cref="P:System.Xaml.XamlMember.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-531"><see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span></span> <span data-ttu-id="144a3-532">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-532">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="144a3-533">Retorna o <see cref="T:System.Xaml.XamlMember" /> para um membro nomeado específico deste <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-534">As informações <see cref="T:System.Xaml.XamlMember" /> para o membro, se um membro for encontrado; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-535">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="144a3-536">A implementação padrão retorna um <xref:System.Xaml.XamlType> com base em reflexão interno do CLR e avaliação contra o contexto do esquema.</span><span class="sxs-lookup"><span data-stu-id="144a3-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="144a3-537">Substitua este método se você quiser <xref:System.Xaml.XamlType.GetMember%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="144a3-538"><xref:System.Xaml.XamlType.LookupMember%2A> é virtual e, portanto, pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="144a3-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="144a3-539">A substituição tem o potencial (seja para fins mal-intencionados ou de outra forma) para alterar os membros relatados de um tipo XAML para que eles não se alinham de maneira esperada com a <xref:System.ComponentModel.TypeDescriptor> `Get*` informações sobre o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="144a3-540">Para nenhuma verificação de segurança crítica de emissão de relatórios do membro, use o tipo CLR subjacente.</span><span class="sxs-lookup"><span data-stu-id="144a3-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="144a3-541">A contagem (aridade) do modo de sintaxe ou de construtor específico do qual você deseja obter informações.</span><span class="sxs-lookup"><span data-stu-id="144a3-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="144a3-542">Para tipos de extensão de marcação, retorna os tipos dos parâmetros posicionais que são compatíveis no uso de extensão de marcação específica para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-543">Uma lista de valores <see cref="T:System.Xaml.XamlType" />, em que cada um desses <see cref="T:System.Xaml.XamlType" /> é o tipo da posição na sintaxe.</span><span class="sxs-lookup"><span data-stu-id="144a3-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="144a3-544">Você deve especificar esses tipos na mesma ordem ao fornecer a entrada de marcação para a extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-544">You must specify those types in the same order when supplying markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-545">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="144a3-546">A implementação padrão usa informações de reflexão interno com base na localização construtores e verificando o arity.</span><span class="sxs-lookup"><span data-stu-id="144a3-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="144a3-547">Substitua este método se você quiser <xref:System.Xaml.XamlType.GetPositionalParameters%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="144a3-548">Essa API só é relevante se este <xref:System.Xaml.XamlType> representa uma extensão de marcação (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> é `true`).</span><span class="sxs-lookup"><span data-stu-id="144a3-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="144a3-549">A entrada `parameterCount` não é para solicitar o tipo de um parâmetro posicional específico.</span><span class="sxs-lookup"><span data-stu-id="144a3-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="144a3-550">Ele é para especificar a aridade do uso de uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="144a3-551">Uso de extensão de marcação geralmente tem várias assinaturas e usa parâmetros diferentes arity (contagem) de parâmetros posicionais para diferenciar.</span><span class="sxs-lookup"><span data-stu-id="144a3-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="144a3-552">No entanto, você pode configurar um contexto de esquema para permitir arities duplicados e usar tipos dos parâmetros posicionais para diferenciação.</span><span class="sxs-lookup"><span data-stu-id="144a3-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="144a3-553">Para obter mais informações, consulte <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="144a3-554">Para uma contagem de arity específico, a posição de parâmetro e tipos podem variar.</span><span class="sxs-lookup"><span data-stu-id="144a3-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="144a3-555">Para obter o tipo posicional de uso de extensão de marcação de um específico igual à aridade, você primeiro chama <xref:System.Xaml.XamlType.GetPositionalParameters%2A> com a contagem de arity.</span><span class="sxs-lookup"><span data-stu-id="144a3-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="144a3-556">Em seguida, obtenha o item nessa posição na coleção retornada.</span><span class="sxs-lookup"><span data-stu-id="144a3-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-557">Retorna um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-557">Returns a handler callback to use for the set operations of markup extensions.</span></span></summary>
        <returns><span data-ttu-id="144a3-558">Um retorno de chamada do manipulador a ser usado para as operações de conjunto das extensões de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-558">A handler callback to use for the set operations of markup extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-559">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="144a3-560">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-561">Se um valor não estiver disponível, ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-562">Retorna um manipulador a ser usado para casos configuração de conversor de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-562">Returns a handler to use for type converter setting cases.</span></span></summary>
        <returns><span data-ttu-id="144a3-563">Um manipulador a ser usado para casos configuração de conversor de tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-563">A handler to use for type converter setting cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-564">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="144a3-565">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-566">Se um valor não estiver disponível, ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-567">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado usando um modo que corta os espaços em branco ao redor.</span><span class="sxs-lookup"><span data-stu-id="144a3-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span></span></summary>
        <returns><span data-ttu-id="144a3-568"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> deve ser serializado em um modo que corta os espaços em branco ao redor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-568"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-569">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="144a3-570">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="144a3-571">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-572">Se um valor não estiver disponível, ele retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="144a3-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-573">Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />, que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-574">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-575">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="144a3-576">A implementação padrão retorna um valor baseado na leitura <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="144a3-577">A implementação padrão também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-578">Ele também inclui uma lógica especial para a conversão de padrão de enumerações, tipos de valor comuns e genéricos.</span><span class="sxs-lookup"><span data-stu-id="144a3-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="144a3-579">Se um valor não estiver disponível, ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="144a3-580">Substitua este método se você quiser <xref:System.Xaml.XamlType.TypeConverter%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-581">Retorna o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-582">O <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-583">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="144a3-584">A implementação padrão retorna um campo interno.</span><span class="sxs-lookup"><span data-stu-id="144a3-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="144a3-585">Geralmente, esse campo é inicializado durante a construção e seu valor é baseado em qual construtor foi chamado e as informações que você forneceu.</span><span class="sxs-lookup"><span data-stu-id="144a3-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="144a3-586">Substitua este método se você quiser <xref:System.Xaml.XamlType.UnderlyingType%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-587">Retorna um valor que indica se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <returns><span data-ttu-id="144a3-588"><see langword="true" /> se este <see cref="T:System.Xaml.XamlType" /> é compilado de cima para baixo durante a inicialização do XAML; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-588"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-589">De cima para baixo é uma metáfora que aproxima o comportamento do processador XAML quando ele cria o gráfico do objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="144a3-590">Quando compilado de cima para baixo, um tipo é instanciado, anexado ao pai, e tem suas propriedades definidas.</span><span class="sxs-lookup"><span data-stu-id="144a3-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="144a3-591">Construção de cima para baixo evita invocar manipuladores de propriedades alteradas várias vezes.</span><span class="sxs-lookup"><span data-stu-id="144a3-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="144a3-592">Tal tratamento ripples o grafo de objeto e, portanto, elimina as várias chamadas do manipulador e fornece uma otimização de desempenho de inicialização do grafo do objeto.</span><span class="sxs-lookup"><span data-stu-id="144a3-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="144a3-593">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="144a3-594">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="144a3-595">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-596">Se um valor não estiver disponível, ele retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="144a3-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="144a3-597">Substitua este método se você quiser <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-598">Retorna um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-599">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-600">Esse método pode ser invocado por chamadas para <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="144a3-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="144a3-601">A implementação padrão retorna um valor baseado na leitura <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="144a3-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="144a3-602">Ele também pode verificar <xref:System.Xaml.XamlType.BaseType%2A> para o atributo se nenhum atributo for encontrado no tipo subjacente de imediato.</span><span class="sxs-lookup"><span data-stu-id="144a3-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="144a3-603">Ele também inclui uma lógica especial para a serialização padrão de enumerações, tipos de valor comuns ou genéricos.</span><span class="sxs-lookup"><span data-stu-id="144a3-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="144a3-604">Se um valor não estiver disponível, ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="144a3-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="144a3-605">Substitua este método se você quiser <xref:System.Xaml.XamlType.ValueSerializer%2A> para usar uma lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="144a3-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-606">Obtém um valor que fornece as informações de tipo para o <see langword="ProvideValue" /> retornado deste <see cref="T:System.Xaml.XamlType" />, se ele representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="144a3-607">Um objeto <see cref="T:System.Xaml.XamlType" /> para o tipo de retorno para o uso da extensão de marcação; caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa uma extensão de marcação.</span><span class="sxs-lookup"><span data-stu-id="144a3-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-608">Essa propriedade só é relevante se este <xref:System.Xaml.XamlType> representa uma extensão de marcação (`x:MarkupExtension` está na lista de tipos atribuíveis).</span><span class="sxs-lookup"><span data-stu-id="144a3-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="144a3-609">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-610">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-611">Obtém o nome da cadeia de caracteres do tipo que esse <see cref="T:System.Xaml.XamlType" /> representa.</span><span class="sxs-lookup"><span data-stu-id="144a3-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span></span></summary>
        <value><span data-ttu-id="144a3-612">O nome de cadeia de caracteres desse tipo de XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-612">The string name of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-613">Essa propriedade normalmente obtém o nome do esquema construído (pela <xref:System.Xaml.XamlType.%23ctor%2A> assinatura), ou o nome da <xref:System.Type>, se ele é construído usando o construtor pertinente do sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="144a3-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="144a3-614"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="144a3-615"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="144a3-616">Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="144a3-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="144a3-617"><see langword="true" /> se o valor de <paramref name="xamlType1" /> for o mesmo que o valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-617"><see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="144a3-618"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="144a3-619"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="144a3-620">Determina se dois objetos <see cref="T:System.Xaml.XamlType" /> especificados têm valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="144a3-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="144a3-621"><see langword="true" /> se o valor de <paramref name="xamlType1" /> for diferente do valor de <paramref name="xamlType2" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-621"><see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-622">Obtém o único namespace de XAML que é o namespace de XAML primário para este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-623">O identificador, como uma cadeia de caracteres do namespace XAML primário para este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-624">Essa implementação oferece o mesmo valor que chamar <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> e, em seguida, recebendo a primeira cadeia de caracteres do valor de conjunto enumerável retornado.</span><span class="sxs-lookup"><span data-stu-id="144a3-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-625">Obtém o <see cref="T:System.Xaml.XamlSchemaContext" /> ativo para o processamento desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-626">O Active Directory <see cref="T:System.Xaml.XamlSchemaContext" /> para o processamento desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-627"><xref:System.Xaml.XamlSchemaContext> é uma entrada de parâmetro obrigatório ao construir um <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="144a3-628">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="144a3-629">Uma representação da cadeia de caracteres desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-630">O <xref:System.Xaml.XamlType> implementação de <xref:System.Object.ToString%2A> retorna o <xref:System.Xaml.XamlType.Name%2A> propriedade do <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="144a3-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-631">Obtém um valor que indica se este <see cref="T:System.Xaml.XamlType" /> tem o comportamento de manipulação de espaço em branco para serialização que corta o espaço em branco ao redor em seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="144a3-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span></span></summary>
        <value><span data-ttu-id="144a3-632"><see langword="true" /> Se este <see cref="T:System.Xaml.XamlType" /> representa um tipo que usa o espaço em branco trimming; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-632"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-633">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-634">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-635">Obtém uma lista de argumentos de tipo para casos em que esse <see cref="T:System.Xaml.XamlType" /> representa um genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span></span></summary>
        <value><span data-ttu-id="144a3-636">Uma lista de tipos de argumento de tipo; Caso contrário, <see langword="null" />, se este <see cref="T:System.Xaml.XamlType" /> não representa um genérico.</span><span class="sxs-lookup"><span data-stu-id="144a3-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-637">Existem alguns cenários para uma <xref:System.Xaml.XamlType> em que chamar o <xref:System.Xaml.XamlType.TypeArguments%2A> parâmetro retorna uma lista em que os tipos ainda estão abertos.</span><span class="sxs-lookup"><span data-stu-id="144a3-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="144a3-638">Nesse caso, um ou mais dos retornado <xref:System.Xaml.XamlType> valores terão valores de espaço reservado <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, como `T`, para representar que o genérico ainda está aberto.</span><span class="sxs-lookup"><span data-stu-id="144a3-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="144a3-639">Este cenário poderá ocorrer se você receber um <xref:System.Xaml.XamlType> de uma chamada para <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, em vez de uma implementação de leitor XAML.</span><span class="sxs-lookup"><span data-stu-id="144a3-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-640">Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão de tipo para valores desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-641">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com <see cref="T:System.ComponentModel.TypeConverter" /> que representa o comportamento de conversão para valores desse tipo de restrição <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-642">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupTypeConverter%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-643">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupTypeConverter%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-644">Obtém o <see cref="T:System.Type" /> do CLR que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-645">O CLR <see cref="T:System.Type" /> que é subjacente a esse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="144a3-646">Obtém um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="144a3-647">Um <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> com restrição <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa o comportamento de serialização de valor para valores desse <see cref="T:System.Xaml.XamlType" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="144a3-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="144a3-648">Se você não usar a técnica de reflexão padrão interna CLR para um <xref:System.Xaml.XamlType>, chamadas para essa propriedade podem invocar <xref:System.Xaml.XamlType.LookupValueSerializer%2A> prevalece em <xref:System.Xaml.XamlType> classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="144a3-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="144a3-649">Para obter mais informações sobre valores de retorno e outros comportamentos, consulte a documentação para <xref:System.Xaml.XamlType.LookupValueSerializer%2A> nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="144a3-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>