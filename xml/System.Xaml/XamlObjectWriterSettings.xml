<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriterSettings.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a94fb89f28b3f761992da4505a75cc54c6b173a7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94fb89f28b3f761992da4505a75cc54c6b173a7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Provides specific XAML writer settings for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">Fornece configurações específicas de gravador XAML para <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> can function within specified <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> pode funcionar em especificado <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Where settings are not specified, an instance of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> exists that has default values for a constructed <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">Em que as configurações não forem especificadas, uma instância de <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> existe com valores padrão para um construído <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, e essa instância pode ser usada em mesclagens de configurações para uma classe derivada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>The settings instance to copy.</source>
          <target state="translated">A instância de configurações a copiar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class that is based on the copy of an existing instance.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> que se baseia na cópia de uma instância existente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>Gets or sets <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions that the XAML writer observes.</source>
          <target state="translated">Obtém ou define permissões <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> que o gravador XAML observa.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissões.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">Essa propriedade indica o nível de acesso esperado para membros não-públicos, que são acessados em confiança parcial, por meio de um tempo de execução de tolerância a falhas de confiança parcial.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> do tempo de vida do objeto para cada objeto criado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Um retorno de chamada é invocado pelo gravador XAML no <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> fase do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> do tempo de vida do objeto para cada objeto criado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">Um retorno de chamada é invocado pelo gravador XAML no <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> fase do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pós-gravação do membro do tempo de vida do objeto para cada objeto criado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">Um retorno de chamada é invocado pelo gravador XAML na fase de pós-member-gravação do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">Obtém ou define uma referência a um retorno de chamada invocado pelo gravador de XAML na fase de pré-gravação do membro do tempo de vida do objeto para cada objeto criado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">Um retorno de chamada é invocado pelo gravador XAML na fase de member-gravação do tempo de vida do objeto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o namescope XAML a usar para registrar nomes de a XAML se <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> for <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">O XAML namescope a ser usado para registro de nomes.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Specific contexts for a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might use an external XAML namescope.</source>
          <target state="translated">Contextos específicos para um <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> pode usar um namescope XAML externo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">Notas de uso do WPF</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In the WPF XAML implementation, XAML writer operations that are initiated by <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> specify a separate XAML namescope.</source>
          <target state="translated">Na implementação do WPF XAML, operações de gravador XAML que são iniciadas por <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> especificar um namescope XAML separado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">Neste cenário de WPF, modelos não devem compartilhar um namescope XAML com a raiz da página XAML que define-los.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">Em vez disso, eles devem processar em um namescope XAML separado, designado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations on a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> in type-converter situations.</source>
          <target state="translated">Obtém ou define um valor que especifica se o gravador XAML deve ignorar (não chamar) implementações <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> em situações de conversor de tipo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XAML writer ignores <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o gravador XAML ignora <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementações; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe e seu <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> método fazem parte de um design geral para a conversão de tipo CLR.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">Em sistemas XAML, você normalmente pode presumir que o conversor de tipo de entrada é identificável pelo leitor de XAML e para fins de entrada, é sempre uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">Se você definir essa propriedade como <ph id="ph1">`true`</ph>, você ativar o modo em que essa suposição é codificada no comportamento XAML objeto gravador.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">Esse modo oferece suporte a um requisito de compatibilidade para versões anteriores do WPF XAML.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>Gets or sets a value that determines whether to disable a default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> feature that runs type conversion on the <ph id="ph2">&lt;paramref name="K" /&gt;</ph> component of a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> before writing the object graph representation.</source>
          <target state="translated">Obtém ou define um valor que determina se necessário desabilitar um recurso <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> padrão que executa conversão de tipo no componente <ph id="ph2">&lt;paramref name="K" /&gt;</ph> de um <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> antes de gravar a representação de gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object should be disabled.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se <ph id="ph2">&lt;paramref name="K" /&gt;</ph> conversão de tipo para um <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> objeto deve ser desabilitado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if performing <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object applies.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> Se estiver executando <ph id="ph2">&lt;paramref name="K" /&gt;</ph> conversão de tipo para um <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> objeto se aplica.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o <ph id="ph1">`K`</ph> recurso de conversão de tipo, consulte comentários em <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>Gets or sets a value that determines whether name registration should occur against the specified <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define um valor que determina se o registro do nome deve ocorrer em relação ao <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if name registration should occur against the <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o registro do nome deve ocorrer em relação a <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> se ocorrer o registro do nome para o namescope XAML pai.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Gets or sets a preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Obtém ou define um objeto raiz preexistente para operações <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>A preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">Um objeto raiz preexistentes para <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operações.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>If you set this value, the root object instance is used as an implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">Se você definir esse valor, a instância do objeto raiz é usada como um implícito <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> chamada (com a entrada de objeto que é o direct em vez de provenientes do leitor) que precede a primeira chamada de gravação de nó explícito, o <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call, instead of being checked when you set this settings property.</source>
          <target state="translated">Nenhuma verificação de erro, como verificar o tipo de XAML do objeto raiz fornecido, é adiada até que implícita <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> chamada, em vez de verificação quando você definir essa propriedade de configurações.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">Obtém ou define um valor que determina se o gravador XAML omite a verificação do caminho do código que verifica se há propriedades duplicadas.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the duplicate property check should be omitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a verificação de propriedade duplicados deve ser omitida; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">O caminho de código especificada verifica as propriedades atribuídas no momento e lança uma exceção se uma tentativa de um conjunto de propriedade duplicados da propriedade de ambiente nomeada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated">Obtém ou define um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> deve omitir a chamada a <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> em uma extensão de marcação, o que é relevante quando a extensão de marcação representa a raiz de um gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> deve omitir chamar <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> em uma extensão de marcação; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This setting is used when the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes the root node (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, or members within the root node).</source>
          <target state="translated">Essa configuração é usada quando o <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processa o nó raiz (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, ou os membros dentro do nó raiz).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">Esta propriedade é relevante para cenários de modelo e carga adiar.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used in the <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">Usado no <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> em lugar do <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph> real.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to be used in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> a ser usado no lugar de real <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">Usada internamente para fornecer as informações corretas no manipulador, enquanto mantém o comportamento de tempo de execução totalmente compatível.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> for dependency properties.</source>
          <target state="translated">Obtém ou define o manipulador a ser usado quando o gravador de objeto chama em um <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> implementado por CLR para propriedades de dependência.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">Uma implementação do manipulador que manipula nesse caso.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>The event handler is based on the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data.</source>
          <target state="translated">O manipulador de eventos se baseia genérica <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegado que utiliza o <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> dados de evento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>