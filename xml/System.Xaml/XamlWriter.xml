<Type Name="XamlWriter" FullName="System.Xaml.XamlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0eee4990fee035e3caee65baff737024203a8eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719570" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlWriter abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cb819-101">Fornece definições de classe base e implementação padrão para um gravador XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb819-101">Provides default implementation and base class definitions for a XAML writer.</span>
      </span>
      <span data-ttu-id="cb819-102">Esse não é um gravador XAML padrão de trabalho, você deve derivar de <see cref="T:System.Xaml.XamlWriter" /> e implementar seus membros abstratos ou usar uma classe derivada <see cref="T:System.Xaml.XamlWriter" /> existente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cb819-102">This is not a working default XAML writer; you must either derive from <see cref="T:System.Xaml.XamlWriter" /> and implement its abstract members, or use an existing <see cref="T:System.Xaml.XamlWriter" /> derived class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb819-103">A prática mais relevantes duas classes derivadas de <xref:System.Xaml.XamlWriter> são o <xref:System.Xaml.XamlXmlWriter> e <xref:System.Xaml.XamlObjectWriter> classes, como explicam os seguintes detalhes:</span><span class="sxs-lookup"><span data-stu-id="cb819-103">The two most relevant practical derived classes of <xref:System.Xaml.XamlWriter> are the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes, as the following details explain:</span></span>  
  
-   <span data-ttu-id="cb819-104"><xref:System.Xaml.XamlXmlWriter> processa um conjunto de nós XAML e produz um arquivo de texto XML.</span><span class="sxs-lookup"><span data-stu-id="cb819-104"><xref:System.Xaml.XamlXmlWriter> processes a XAML node set and produces an XML text file.</span></span> <span data-ttu-id="cb819-105">Essa classe pode ser usada para a serialização ou como parte da função de uma ferramenta que funciona com a representação na memória de XAML e produz saída de arquivo XAML.</span><span class="sxs-lookup"><span data-stu-id="cb819-105">This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</span></span>  
  
-   <span data-ttu-id="cb819-106"><xref:System.Xaml.XamlObjectWriter> processa um conjunto de nós XAML e produz um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="cb819-106"><xref:System.Xaml.XamlObjectWriter> processes a XAML node set and produces an object graph.</span></span> <span data-ttu-id="cb819-107">Essa classe pode ser usada como parte de uma personalização completa ou parcial do analisador XAML da tecnologia.</span><span class="sxs-lookup"><span data-stu-id="cb819-107">This class might be used as part of a full or partial customization of a technology's XAML parser.</span></span>  
  
 <span data-ttu-id="cb819-108"><xref:System.Xaml.XamlWriterSettings> é uma classe de configurações que são usados por um <xref:System.Xaml.XamlWriter>; no entanto, por padrão, o <xref:System.Xaml.XamlWriterSettings> classe não possui quaisquer configurações específicas.</span><span class="sxs-lookup"><span data-stu-id="cb819-108"><xref:System.Xaml.XamlWriterSettings> is a class for settings that are used by a <xref:System.Xaml.XamlWriter>; however, by default, the <xref:System.Xaml.XamlWriterSettings> class does not hold any specific settings.</span></span> <span data-ttu-id="cb819-109">O <xref:System.Xaml.XamlWriter> construtor base não usar esta classe de configurações como um argumento, nem a qualquer outro <xref:System.Xaml.XamlWriter> membro.</span><span class="sxs-lookup"><span data-stu-id="cb819-109">The <xref:System.Xaml.XamlWriter> base constructor does not use this settings class as an argument, nor does any other <xref:System.Xaml.XamlWriter> member.</span></span> <span data-ttu-id="cb819-110">Em vez disso, o <xref:System.Xaml.XamlXmlWriter> e <xref:System.Xaml.XamlObjectWriter> classes incluem suas próprias classes de configurações como argumentos de construção.</span><span class="sxs-lookup"><span data-stu-id="cb819-110">Instead, the <xref:System.Xaml.XamlXmlWriter> and <xref:System.Xaml.XamlObjectWriter> classes include their own settings classes as construction arguments.</span></span> <span data-ttu-id="cb819-111">Essas classes de configurações são <xref:System.Xaml.XamlXmlWriterSettings> e <xref:System.Xaml.XamlObjectWriterSettings>.</span><span class="sxs-lookup"><span data-stu-id="cb819-111">These settings classes are <xref:System.Xaml.XamlXmlWriterSettings> and <xref:System.Xaml.XamlObjectWriterSettings>.</span></span> <span data-ttu-id="cb819-112">As classes de configuração definem valores de configurações reais e são baseadas em <xref:System.Xaml.XamlWriterSettings>, para que eles possam usar o <xref:System.Xaml.XamlWriterSettings> recurso de mesclagem.</span><span class="sxs-lookup"><span data-stu-id="cb819-112">The settings classes define actual settings values and are based on <xref:System.Xaml.XamlWriterSettings>, so that they can use the <xref:System.Xaml.XamlWriterSettings> merge feature.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-113">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-114">Fecha o objeto do gravador de XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-114">Closes the XAML writer object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb819-115">Na implementação de base, chamada <xref:System.Xaml.XamlWriter.Close%2A> chama o <xref:System.Xaml.XamlWriter.Dispose%2A> método com o `isDisposing` parâmetro como `true`.</span><span class="sxs-lookup"><span data-stu-id="cb819-115">In the base implementation, calling <xref:System.Xaml.XamlWriter.Close%2A> calls the <xref:System.Xaml.XamlWriter.Dispose%2A> method with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cb819-116">
            <see langword="true" /> para liberar os recursos gerenciados, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-116">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-117">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlWriter" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-117">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb819-118">Você deve chamar a classe base para obter <xref:System.Xaml.XamlWriter.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="cb819-118">You must call the base class to get <xref:System.Xaml.XamlWriter.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb819-119">Obtém se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-119">Gets whether <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb819-120">
            <see langword="true" /> Se <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> foi chamado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-120">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cb819-121">Quando implementado em uma classe derivada, obtém o contexto do esquema XAML ativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-121">When implemented in a derived class, gets the active XAML schema context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cb819-122">O contexto do esquema XAML ativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-122">The active XAML schema context.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-123">Consulte <see cref="M:System.IDisposable.Dispose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-123">See <see cref="M:System.IDisposable.Dispose" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public abstract void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-124">Quando implementado em uma classe derivada, gera a representação de um nó de membro final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-124">When implemented in a derived class, produces the representation of an end member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-125">Quando implementada em uma classe derivada, gera a representação de um nó de objeto final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-125">When implemented in a derived class, produces the representation of an end object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public abstract void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteGetObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cb819-126">Quando implementada em uma classe derivada, gera um objeto para casos em que o objeto é um valor padrão ou implícito da propriedade que sendo definida, em vez de ser especificado como um valor de objeto discreto no conjunto de nós XAML de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-126">When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public abstract void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">
          <span data-ttu-id="cb819-127">A declaração de namespace a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-127">The namespace declaration to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-128">Quando implementado em uma classe derivada, grava um nó de declaração de namespace de XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-128">When implemented in a derived class, writes a XAML namespace declaration node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public void WriteNode (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNode(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNode (reader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNode(System::Xaml::XamlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="cb819-129">O leitor a ser usado para a determinação de nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-129">The reader to use for node determination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-130">Executa a comutação com base no tipo de nó do leitor de XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) e chama o método <see langword="Write" /> relevante para a implementação de gravador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-130">Performs switching based on node type from the XAML reader (<see cref="P:System.Xaml.XamlReader.NodeType" />) and calls the relevant <see langword="Write" /> method for the writer implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="notes-for-inheritors"></a><span data-ttu-id="cb819-131">Observações para herdeiros</span><span class="sxs-lookup"><span data-stu-id="cb819-131">Notes for Inheritors</span></span>  
 <span data-ttu-id="cb819-132">O <xref:System.Xaml.XamlWriter.WriteNode%2A> método não é um método virtual porque ela tem uma implementação prática para todas as existentes <xref:System.Xaml.XamlNodeType> valores.</span><span class="sxs-lookup"><span data-stu-id="cb819-132">The <xref:System.Xaml.XamlWriter.WriteNode%2A> method is not a virtual method because it has practical implementation for all existing <xref:System.Xaml.XamlNodeType> values.</span></span> <span data-ttu-id="cb819-133">Com base em <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> chama o `Write` membros virtuais que são dedicados a tipos de nó específico.</span><span class="sxs-lookup"><span data-stu-id="cb819-133">Based on <xref:System.Xaml.XamlNodeType>, <xref:System.Xaml.XamlWriter.WriteNode%2A> calls into the `Write` virtual members that are dedicated to particular node types.</span></span>  
  
 <span data-ttu-id="cb819-134">Se você tiver um cenário avançado de gravação de XAML que expande o sistema de tipo XAML e o conceito de fluxo de nó XAML assim que a nova tipos de nó são definidos, não use <xref:System.Xaml.XamlWriter.WriteNode%2A> chamadas em sua lógica.</span><span class="sxs-lookup"><span data-stu-id="cb819-134">If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <xref:System.Xaml.XamlWriter.WriteNode%2A> calls in your logic.</span></span> <span data-ttu-id="cb819-135">Em vez disso, você deve fornecer sua própria alternativa para lógica de comutação de tipo de nó na classe ou em substituições virtuais.</span><span class="sxs-lookup"><span data-stu-id="cb819-135">You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cb819-136">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-136">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cb819-137">A implementação padrão encontrou um <see cref="T:System.Xaml.XamlNodeType" /> que não está na enumeração padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-137">The default implementation encountered a <see cref="T:System.Xaml.XamlNodeType" /> that is not in the default enumeration.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public abstract void WriteStartMember (System.Xaml.XamlMember xamlMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartMember(class System.Xaml.XamlMember xamlMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartMember(System::Xaml::XamlMember ^ xamlMember);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember">
          <span data-ttu-id="cb819-138">O nó de membro a ser gravado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-138">The member node to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-139">Quando implementado em uma classe derivada, grava a representação de um nó de membro inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-139">When implemented in a derived class, writes the representation of a start member node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cb819-140">O tipo XAML do objeto a ser gravado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-140">The XAML type of the object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-141">Quando implementado em uma classe derivada, grava a representação de um nó de objeto inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-141">When implemented in a derived class, writes the representation of a start object node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public abstract void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="cb819-142">O valor a ser gravado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-142">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cb819-143">Quando implementado em uma classe derivada, grava um nó de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cb819-143">When implemented in a derived class, writes a value node.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>