<Type Name="XamlNodeList" FullName="System.Xaml.XamlNodeList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47860c743db4d9177552548ada312d4a1080183c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39762766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlNodeList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlNodeList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlNodeList" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlNodeList" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlNodeList" />
  <TypeSignature Language="F#" Value="type XamlNodeList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bd490-101">Fornece uma lista de nós XAML, que podem ser usados para cenários como gravar nós XAML de forma adiada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd490-101">Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd490-102">Quando você cria um <xref:System.Xaml.XamlNodeList>, você cria um delegado de gravador que existe como o <xref:System.Xaml.XamlNodeList.Writer%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="bd490-102">When you create a <xref:System.Xaml.XamlNodeList>, you create a writer delegate that exists as the <xref:System.Xaml.XamlNodeList.Writer%2A> value.</span></span> <span data-ttu-id="bd490-103">O delegado de gravador baseia-se em uma classe interna de gravador XAML que é especificamente para nós XAML.</span><span class="sxs-lookup"><span data-stu-id="bd490-103">The writer delegate is based on an internal XAML writer class that is specifically for XAML nodes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlNodeQueue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd490-104">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-104">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeList (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeList(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeList : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlNodeList" Usage="new System.Xaml.XamlNodeList schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="bd490-105">O contexto do esquema a ser usado para operações de nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-105">The schema context to use for node operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd490-106">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-106">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class, using a provided schema context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd490-107">O contexto do esquema é aplicado para o gravador XAML que existe como o <xref:System.Xaml.XamlNodeList.Writer%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="bd490-107">The schema context is applied to the XAML writer that exists as the <xref:System.Xaml.XamlNodeList.Writer%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd490-108">
            <paramref name="schemaContext" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-108">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeList (System.Xaml.XamlSchemaContext schemaContext, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeList(System::Xaml::XamlSchemaContext ^ schemaContext, int size);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeList : System.Xaml.XamlSchemaContext * int -&gt; System.Xaml.XamlNodeList" Usage="new System.Xaml.XamlNodeList (schemaContext, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemaContext">
          <span data-ttu-id="bd490-109">O contexto do esquema a ser usado para operações de nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-109">The schema context to use for node operations.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="bd490-110">A contagem do item desejado na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-110">The intended item count of the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd490-111">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlNodeList" /> usando um contexto de esquema e um tamanho de lista fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class, using a provided schema context and list size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd490-112">
            <paramref name="schemaContext" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-112">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlNodeList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd490-113">Limpa os itens nessa lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-113">Clears the items in this list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd490-114">Este método chama `Clear` sobre a implementação da lista subjacente.</span><span class="sxs-lookup"><span data-stu-id="bd490-114">This method calls `Clear` on the underlying list implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeList.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xaml.XamlNodeList.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd490-115">Obtém o número de nós nesta <see cref="T:System.Xaml.XamlNodeList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-115">Gets the number of nodes in this <see cref="T:System.Xaml.XamlNodeList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd490-116">O número de nós neste <see cref="T:System.Xaml.XamlNodeList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-116">The number of nodes in this <see cref="T:System.Xaml.XamlNodeList" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlReader GetReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlReader GetReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.GetReader" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReader () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlReader ^ GetReader();" />
      <MemberSignature Language="F#" Value="member this.GetReader : unit -&gt; System.Xaml.XamlReader" Usage="xamlNodeList.GetReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd490-117">Retorna um representante de implementação de leitor de XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-117">Returns a XAML reader implementation delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd490-118">Um representante de implementação de leitor de XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-118">A XAML reader implementation delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd490-119">Embora não seja especificamente um provedor de serviços, você pode usar o <xref:System.Xaml.XamlReader> que é retornado do delegado <xref:System.Xaml.XamlNodeList.GetReader%2A?displayProperty=nameWithType> em um modo de serviço, em que você converta-o em <xref:System.Xaml.IXamlIndexingReader>.</span><span class="sxs-lookup"><span data-stu-id="bd490-119">Although it is not specifically a service provider, you can use the <xref:System.Xaml.XamlReader> delegate that is returned from <xref:System.Xaml.XamlNodeList.GetReader%2A?displayProperty=nameWithType> in a service mode, where you cast it to <xref:System.Xaml.IXamlIndexingReader>.</span></span> <span data-ttu-id="bd490-120">Nesse modo, você pode obter e definir os valores de índice para <xref:System.Xaml.IXamlIndexingReader.CurrentIndex%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bd490-120">In that mode you can get and set the index values for <xref:System.Xaml.IXamlIndexingReader.CurrentIndex%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="bd490-121">Dessa forma, o modo do conjunto permite ignorar nós sem usar o padrão `Read` e `Skip`.</span><span class="sxs-lookup"><span data-stu-id="bd490-121">In this manner, the set mode enables skipping nodes without using the standard `Read` and `Skip`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlException">
          <span data-ttu-id="bd490-122">A <see cref="T:System.Xaml.XamlNodeList" /> ainda está no modo de gravação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-122">The <see cref="T:System.Xaml.XamlNodeList" /> is still in Write mode.</span>
          </span>
          <span data-ttu-id="bd490-123">– ou –  O gravador usado para a lista de nós não tem nenhum contexto de esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-123">-or-  The writer that is used for the node list has no schema context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlWriter Writer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeList.Writer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Writer As XamlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlWriter ^ Writer { System::Xaml::XamlWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.Xaml.XamlWriter" Usage="System.Xaml.XamlNodeList.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd490-124">Obtém o gravador de XAML associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-124">Gets the associated XAML writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd490-125">O gravador de XAML associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd490-125">The associated XAML writer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlObjectWriter" />
      </Docs>
    </Member>
  </Members>
</Type>