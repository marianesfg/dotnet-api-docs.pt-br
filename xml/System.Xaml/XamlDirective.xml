<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95fab87d5eed7bb70a2918e6a942597a62d78e89" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51934943" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="37c61-101">Fornece o identificador do sistema tipo XAML para um membro se o membro também for uma diretiva XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span></span> <span data-ttu-id="37c61-102">Leitores XAML e gravadores XAML usam o identificador <see cref="T:System.Xaml.XamlDirective" /> durante o processamento de nós membro.</span><span class="sxs-lookup"><span data-stu-id="37c61-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span></span> <span data-ttu-id="37c61-103">O identificador é usado quando o leitor XAML é posicionado em um <see cref="F:System.Xaml.XamlNodeType.StartMember" /> e <see cref="P:System.Xaml.XamlMember.IsDirective" /> é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-104"><xref:System.Xaml.XamlDirective> fornece valores esperados para o sistema de tipos XAML quando o membro é uma diretiva XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="37c61-105">Por definição, uma diretiva XAML tem características que sempre retornam os mesmos resultados para um subconjunto do <xref:System.Xaml.XamlMember> propriedades e as mesmas informações de sistema de tipo XAML é relatado para todos os possíveis diretivas XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="37c61-106">A emissão de relatórios de características do sistema de tipo XAML são específicas para diretivas é realizada pelo comportamento interno ou por meio de substituições de <xref:System.Xaml.XamlMember> `Lookup*` membros virtuais no <xref:System.Xaml.XamlDirective> classe.</span><span class="sxs-lookup"><span data-stu-id="37c61-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="37c61-107">A lista a seguir mostra os resultados retornados de uma diretiva XAML para <xref:System.Xaml.XamlMember> quando o membro é realmente um <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="37c61-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="37c61-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> é sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="37c61-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> é sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="37c61-110"><xref:System.Xaml.XamlMember.DependsOn%2A> é sempre `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="37c61-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> é sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="37c61-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="37c61-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> é sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="37c61-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="37c61-113"><xref:System.Xaml.XamlMember.IsDirective%2A> é sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="37c61-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="37c61-114"><xref:System.Xaml.XamlMember.IsEvent%2A> é sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="37c61-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="37c61-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> é sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="37c61-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="37c61-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> é sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="37c61-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="37c61-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> é sempre `true`.</span><span class="sxs-lookup"><span data-stu-id="37c61-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="37c61-118">Além disso, o suporte interno para <xref:System.Xaml.XamlMember.DeclaringType%2A> mantém indefinido e retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="37c61-119"><xref:System.Xaml.XamlDirective> é um <xref:System.Xaml.XamlMember> subclasse.</span><span class="sxs-lookup"><span data-stu-id="37c61-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="37c61-120">Assim como acontece com <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> tem considerações de segurança sobre como o sistema de tipos XAML relatórios o acesso.</span><span class="sxs-lookup"><span data-stu-id="37c61-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="37c61-121">Consulte <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="37c61-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="37c61-122">Noções básicas sobre estruturas e conceitos do fluxo de nó XAML</span><span class="sxs-lookup"><span data-stu-id="37c61-122">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37c61-123">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-123">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="37c61-124">O namespace XAML primário em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir.</span><span class="sxs-lookup"><span data-stu-id="37c61-124">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span></span></param>
        <param name="name"><span data-ttu-id="37c61-125">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-125">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <summary><span data-ttu-id="37c61-126">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para um nome e um namespace XAML único.</span><span class="sxs-lookup"><span data-stu-id="37c61-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span></span> <span data-ttu-id="37c61-127">Use esta assinatura somente quando você quiser ou esperar que <see cref="P:System.Xaml.XamlMember.IsUnknown" /> relate <see langword="true" /> para a diretiva.</span><span class="sxs-lookup"><span data-stu-id="37c61-127">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="37c61-128">Essa assinatura do construtor sempre gera um identificador para a diretiva onde <xref:System.Xaml.XamlMember.IsUnknown%2A> relatórios `true` sistema de tipo para o XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-128">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="37c61-129">Se as informações necessárias estão disponíveis (o tipo de suporte e um item de informações de sintaxe de texto para conversão) e desejar que um identificador que pode aplicar a diretiva, use o <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> assinatura de construtor em vez disso.</span><span class="sxs-lookup"><span data-stu-id="37c61-129">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="37c61-130">Se você usar essa assinatura, o <xref:System.Xaml.XamlDirective.AllowedLocation%2A> de valor para a instância é <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; e o <xref:System.Xaml.XamlMember.Type%2A> valor e <xref:System.Xaml.XamlMember.TypeConverter%2A> valor são ambos `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-130">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces"><span data-ttu-id="37c61-131">Um conjunto de namespaces XAML em que este <see cref="T:System.Xaml.XamlDirective" /> pode existir, passado como um conjunto enumerável de cadeias de caracteres identificadoras.</span><span class="sxs-lookup"><span data-stu-id="37c61-131">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span></span></param>
        <param name="name"><span data-ttu-id="37c61-132">O nome de identificação do <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-132">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="xamlType"><span data-ttu-id="37c61-133">O tipo de XAML que faz o <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-133">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span></span></param>
        <param name="typeConverter"><span data-ttu-id="37c61-134">O conversor de tipo que este <see cref="T:System.Xaml.XamlDirective" /> usa para conversão de sintaxe do texto.</span><span class="sxs-lookup"><span data-stu-id="37c61-134">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span></span></param>
        <param name="allowedLocation"><span data-ttu-id="37c61-135">Um valor da enumeração <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-135">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="37c61-136">Inicializa uma nova instância da classe <see cref="T:System.Xaml.XamlDirective" />, especificando valores para cada valor por caso de um <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-137">Você deve usar esse construtor para gerar uma <xref:System.Xaml.XamlDirective> não relata <xref:System.Xaml.XamlMember.IsUnknown%2A> como `true`.</span><span class="sxs-lookup"><span data-stu-id="37c61-137">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37c61-138">O parâmetro <paramref name="xamlType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-138">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37c61-139">Obtém um valor que especifica os tipos de nó XAML em que a diretiva pode ser especificada.</span><span class="sxs-lookup"><span data-stu-id="37c61-139">Gets a value that specifies the XAML node types where the directive can be specified.</span></span></summary>
        <value><span data-ttu-id="37c61-140">Um valor da enumeração.</span><span class="sxs-lookup"><span data-stu-id="37c61-140">A value of the enumeration.</span></span> <span data-ttu-id="37c61-141">O padrão é o padrão de enumeração, que é <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-141">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-142">Você pode definir esse valor <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> assinatura de construtor.</span><span class="sxs-lookup"><span data-stu-id="37c61-142">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="37c61-143">Se você construir usando o <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> assinatura de construtor, o <xref:System.Xaml.XamlDirective.AllowedLocation%2A> valor para a instância é <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span><span class="sxs-lookup"><span data-stu-id="37c61-143">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="37c61-144">No entanto, a instância sempre informa <xref:System.Xaml.XamlMember.IsUnknown%2A> como `true`.</span><span class="sxs-lookup"><span data-stu-id="37c61-144">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="37c61-145">Normalmente, esse comportamento afeta tentativas de gravar os gráficos de objeto e também afeta outros usos práticos de uma <xref:System.Xaml.XamlMember> valor.</span><span class="sxs-lookup"><span data-stu-id="37c61-145">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="37c61-146">Você normalmente não seria criar um caso de diretiva de XAML em que <xref:System.Xaml.XamlDirective.AllowedLocation%2A> é <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="37c61-146">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-147">Retorna o código hash para esse objeto.</span><span class="sxs-lookup"><span data-stu-id="37c61-147">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="37c61-148">Um código hash inteiro.</span><span class="sxs-lookup"><span data-stu-id="37c61-148">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-149">Retorna uma lista de namespaces XAML em que esse membro XAML pode existir.</span><span class="sxs-lookup"><span data-stu-id="37c61-149">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="37c61-150">Uma lista de identificadores de namespace XAML, como cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="37c61-150">A list of XAML namespace identifiers, as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-151">Os identificadores de namespace XAML são cadeias de caracteres que normalmente são exibidos na forma de cadeia de caracteres de identificador de recurso uniforme (URI) acordo com as convenções comuns para namespaces XAML e XML.</span><span class="sxs-lookup"><span data-stu-id="37c61-151">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="37c61-152">Se a lista contiver mais de um item, o primeiro item no conjunto de geralmente é o namespace XAML primário relevante para fins de processamento e os outros itens são alternativas.</span><span class="sxs-lookup"><span data-stu-id="37c61-152">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="37c61-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> se baseia nesta ordem.</span><span class="sxs-lookup"><span data-stu-id="37c61-153"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-154">Retorna um implementação de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-154">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span> <span data-ttu-id="37c61-155">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-155">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-156">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-156">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-157">Porque uma diretiva XAML não pode ter atributos personalizados, essa implementação sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-157">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="37c61-158"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-158"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-159">Retorna um objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que é usado durante o carregamento adiado de objetos declarados em XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-159">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span></span> <span data-ttu-id="37c61-160">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-160">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-161">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-161">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-162">Porque uma diretiva não pode ter adiado o carregamento, essa implementação sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-162">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="37c61-163"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-163"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-164">Retorna uma lista de objetos <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-164">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="37c61-165">A lista relata os membros em que há relações de dependência para a ordem de inicialização em relação a esse <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-165">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span> <span data-ttu-id="37c61-166">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-166">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-167">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-167">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-168">Porque uma diretiva XAML não pode ter uma ordem de inicialização, essa implementação sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-168">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="37c61-169"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-169"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-170">Retorna o <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que é associado a um <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-170">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-171">As informações de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-171">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-172">Esse método pode ser chamado por chamadas para <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c61-172">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="37c61-173">Essa implementação retorna um estático interno <xref:System.Xaml.Schema.XamlMemberInvoker> valor específico para as diretivas no sistema de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="37c61-173">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="37c61-174"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-174"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-175">Retorna se este <see cref="T:System.Xaml.XamlMember" /> é relatado como uma propriedade de ambiente.</span><span class="sxs-lookup"><span data-stu-id="37c61-175">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="37c61-176">Sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-176">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-177">Como uma diretiva XAML não pode ser um tipo de ambiente, essa implementação sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="37c61-177">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="37c61-178"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-178"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-179">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um evento.</span><span class="sxs-lookup"><span data-stu-id="37c61-179">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="37c61-180">Sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-180">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-181"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-181"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-182">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente leitura pretendida.</span><span class="sxs-lookup"><span data-stu-id="37c61-182">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="37c61-183">Sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-183">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-184">Por definição, as diretivas são configuráveis.</span><span class="sxs-lookup"><span data-stu-id="37c61-184">By definition, directives are settable.</span></span> <span data-ttu-id="37c61-185"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-185"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-186">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="get" /> público.</span><span class="sxs-lookup"><span data-stu-id="37c61-186">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="37c61-187">Sempre retorna <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-187">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-188"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-188"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-189">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa um membro que não pode ser resolvido pelo sistema de backup que é usado para a resolução de tipo e membro.</span><span class="sxs-lookup"><span data-stu-id="37c61-189">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="37c61-190"><see langword="true" /> se este <see cref="T:System.Xaml.XamlDirective" /> representar um membro não pode ser resolvido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-190"><see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-191">O <xref:System.Xaml.XamlDirective> implementação apenas chama base e não faz nada mais.</span><span class="sxs-lookup"><span data-stu-id="37c61-191">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="37c61-192">A implementação base retorna os resultados nesta ordem: os resultados são baseados em reflexão interno; ou os resultados baseiam-se sobre a verificação de um valor nulo a <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c61-192">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="37c61-193">O <xref:System.Xaml.XamlDirective> implementação lacra isso virtual membro; portanto, todos <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-193">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-194">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade somente gravação pretendida.</span><span class="sxs-lookup"><span data-stu-id="37c61-194">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span></span></summary>
        <returns><span data-ttu-id="37c61-195">Sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-195">Always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-196"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-196"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-197">Retorna se este <see cref="T:System.Xaml.XamlDirective" /> representa uma propriedade que tem um acessador <see langword="set" /> público.</span><span class="sxs-lookup"><span data-stu-id="37c61-197">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="37c61-198">Sempre retorna <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-198">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-199"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-199"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-200">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo em que o <see cref="T:System.Xaml.XamlMember" /> pode existir.</span><span class="sxs-lookup"><span data-stu-id="37c61-200">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span> <span data-ttu-id="37c61-201">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-201">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-202">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-202">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-203">Tipos de destino não são relevantes para diretivas; Portanto, essa implementação sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="37c61-203">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="37c61-204"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-204"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-205">Retorna o <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span><span class="sxs-lookup"><span data-stu-id="37c61-205">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="37c61-206">O <see cref="T:System.Xaml.XamlType" /> do tipo que é usado pelo membro.</span><span class="sxs-lookup"><span data-stu-id="37c61-206">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-207">O <xref:System.Xaml.XamlDirective> implementação apenas chama base e não faz nada mais.</span><span class="sxs-lookup"><span data-stu-id="37c61-207">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="37c61-208">A implementação base retorna os resultados com base em reflexão interno ou procurando um valor nulo de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, o processamento, nessa ordem.</span><span class="sxs-lookup"><span data-stu-id="37c61-208">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="37c61-209"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-209"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="37c61-210">Consulte os comentários no <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> para obter mais informações sobre quais informações <xref:System.Xaml.XamlMember.Type%2A> executa.</span><span class="sxs-lookup"><span data-stu-id="37c61-210">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-211">Retorna uma implementação do conversos de tipo associado a este <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-211">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-212">Uma instância de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tem uma restrição <see cref="T:System.ComponentModel.TypeConverter" />; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-212">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-213">O <xref:System.Xaml.XamlDirective> implementação apenas chama base e não faz nada mais.</span><span class="sxs-lookup"><span data-stu-id="37c61-213">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="37c61-214">Consulte <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="37c61-214">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="37c61-215"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-215"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-216">Retorna um acessador <see langword="get" /> associado a este <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-216">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="37c61-217">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-217">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-218">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-218">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-219"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-219"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-220">Retorna um reflexo de CLR <see cref="T:System.Reflection.MemberInfo" /> associado a este <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-220">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="37c61-221">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-221">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-222">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-222">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-223"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-223"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-224">Retorna um acessador <see langword="set" /> associado a este <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-224">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span></span> <span data-ttu-id="37c61-225">Essa implementação sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-225">This implementation always returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-226">Sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-226">Always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-227"><xref:System.Xaml.XamlDirective> lacra a esse membro virtual; Portanto, todas as <xref:System.Xaml.XamlDirective> tipos e todas as diretivas predefinidas de XAML devem usar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="37c61-227"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37c61-228">Retorna uma representação de cadeia de caracteres desse <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-228">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></summary>
        <returns><span data-ttu-id="37c61-229">Uma representação da cadeia de caracteres desse <see cref="T:System.Xaml.XamlDirective" />.</span><span class="sxs-lookup"><span data-stu-id="37c61-229">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c61-230">Se as informações de namespace XAML estiverem disponíveis, essa implementação retorna uma combinação de cadeia de caracteres de <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> e <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c61-230">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="37c61-231">Se as informações de namespace XAML não estiverem disponíveis, essa implementação retorna <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c61-231">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>