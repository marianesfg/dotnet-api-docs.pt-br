<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2c5d677ab741eb848cf99fa1f0d969968ff9639" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="79c00-101">Fornece definições de base para classes que consomem entradas XAML e produzem fluxos de nós XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79c00-101">Provides base definitions for classes that consume XAML input and produce XAML node streams.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-102"><xref:System.Xaml.XamlReader> é uma classe abstrata e não fornece implementações ou definições que tem um resultado do trabalho para todos os membros.</span><span class="sxs-lookup"><span data-stu-id="79c00-102"><xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members.</span></span> <span data-ttu-id="79c00-103">Membros que possuem uma implementação <xref:System.Xaml.XamlReader> são indicados na seção comentários para esse membro.</span><span class="sxs-lookup"><span data-stu-id="79c00-103">Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member.</span></span> <span data-ttu-id="79c00-104">Especificamente, <xref:System.Xaml.XamlReader> tem vários membros abstratos que devem ser implementados e vários membros virtuais.</span><span class="sxs-lookup"><span data-stu-id="79c00-104">Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.</span></span>  
  
 <span data-ttu-id="79c00-105">Os membros virtuais, <xref:System.Xaml.XamlReader.ReadSubtree%2A> e <xref:System.Xaml.XamlReader.Skip%2A> cada fornecem uma implementação padrão que é apropriada para a maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="79c00-105">Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases.</span></span> <span data-ttu-id="79c00-106">No entanto, o <xref:System.Xaml.XamlReader.ReadSubtree%2A> e <xref:System.Xaml.XamlReader.Skip%2A> implementações padrão dependem de outro comportamento esperado do leitor XAML implementando; em particular, eles dependem de <xref:System.Xaml.XamlReader.Read%2A> substituir.</span><span class="sxs-lookup"><span data-stu-id="79c00-106">However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override.</span></span> <span data-ttu-id="79c00-107"><xref:System.Xaml.XamlReader.Dispose%2A> também é um membro virtual que tem uma implementação padrão de trabalho.</span><span class="sxs-lookup"><span data-stu-id="79c00-107"><xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.</span></span>  
  
 <span data-ttu-id="79c00-108">As seguintes classes são as classes derivadas mais relevantes e práticas em serviços XAML do .NET Framework e o assembly System. XAML:</span><span class="sxs-lookup"><span data-stu-id="79c00-108">The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</span></span>  
  
-   <span data-ttu-id="79c00-109"><xref:System.Xaml.XamlObjectReader>, que lê um gráfico de objeto, como o gráfico de objeto ativo de um aplicativo em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="79c00-109"><xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.</span></span>  
  
-   <span data-ttu-id="79c00-110"><xref:System.Xaml.XamlXmlReader>, que lê o XAML no formato de um arquivo de texto XML usando geral <xref:System.Xml.XmlReader> que carrega o arquivo como uma classe auxiliar intermediário.</span><span class="sxs-lookup"><span data-stu-id="79c00-110"><xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.</span></span>  
  
 <span data-ttu-id="79c00-111">Incluem outros leitores XAML das outras estruturas <xref:System.Windows.Baml2006.Baml2006Reader> e <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="79c00-111">Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span></span>  
  
 <span data-ttu-id="79c00-112"><xref:System.Xaml.XamlReader> difere [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] e <xref:System.Xml.XmlReader> princípios de design porque <xref:System.Xaml.XamlReader> não tem um `Create` método para retornar padrão subjacente implementações do leitor XAML.</span><span class="sxs-lookup"><span data-stu-id="79c00-112"><xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations.</span></span> <span data-ttu-id="79c00-113">Em vez disso, você deve instanciar específicas classes derivadas de leitor XAML chamando seus construtores ou outros APIs do auxiliar de classe específica.</span><span class="sxs-lookup"><span data-stu-id="79c00-113">You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</span></span>  
  
## <a name="subtree-readers"></a><span data-ttu-id="79c00-114">Leitores de subárvore</span><span class="sxs-lookup"><span data-stu-id="79c00-114">Subtree Readers</span></span>  
 <span data-ttu-id="79c00-115">A maior parte do tempo, você chama <xref:System.Xaml.XamlReader> API no contexto de classes específicas de leitor XAML que derivam de <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="79c00-115">For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="79c00-116">No entanto, em um caso específico, acessar <xref:System.Xaml.XamlReader> API em uma instância do leitor XAML prática que não é público e não derivada de <xref:System.Xaml.XamlObjectReader> ou <xref:System.Xaml.XamlXmlReader>.</span><span class="sxs-lookup"><span data-stu-id="79c00-116">However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>.</span></span> <span data-ttu-id="79c00-117">Nesse caso é quando você chama <xref:System.Xaml.XamlReader.ReadSubtree%2A>, que retorna um <xref:System.Xaml.XamlReader> instância.</span><span class="sxs-lookup"><span data-stu-id="79c00-117">This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance.</span></span> <span data-ttu-id="79c00-118">Na implementação do padrão, o <xref:System.Xaml.XamlReader> que é retornado por essa API é uma classe interna.</span><span class="sxs-lookup"><span data-stu-id="79c00-118">In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.</span></span>  
  
 <span data-ttu-id="79c00-119">O <xref:System.Xaml.XamlReader> obtido para leitura de subárvore tem ações válidas para APIs, como <xref:System.Xaml.XamlReader.Read%2A> e <xref:System.Xaml.XamlReader.NodeType%2A>, e essas ações são baseadas na classe pai leitor.</span><span class="sxs-lookup"><span data-stu-id="79c00-119">The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class.</span></span> <span data-ttu-id="79c00-120">Esse design permite que a classe interna controlar o nível de quadro onde a subárvore foi inserida.</span><span class="sxs-lookup"><span data-stu-id="79c00-120">This design enables the internal class to track the frame level where the subtree was entered.</span></span> <span data-ttu-id="79c00-121">A subárvore atuar <xref:System.Xaml.XamlReader> certifica-se de que, se a posição do nó atual for movida além dos limites da subárvore, o leitor de subárvore específico relatórios final do arquivo ou `null` no nó atual.</span><span class="sxs-lookup"><span data-stu-id="79c00-121">The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.</span></span>  
  
 <span data-ttu-id="79c00-122">Observações sobre o uso de leitor de subárvore são incluídas em determinados <xref:System.Xaml.XamlReader> APIs.</span><span class="sxs-lookup"><span data-stu-id="79c00-122">Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-123">Inicializa a classe <see cref="T:System.Xaml.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-123">Initializes the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-124">Fecha o fluxo de nós XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-124">Closes the XAML node stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-125">Na implementação de base, chamada <xref:System.Xaml.XamlReader.Close%2A> chamadas <xref:System.Xaml.XamlReader.Dispose%2A> com o `isDisposing` parâmetro como `true`.</span><span class="sxs-lookup"><span data-stu-id="79c00-125">In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="79c00-126">
            <see langword="true" /> para liberar os recursos gerenciados, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-126">
              <see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79c00-127">Libera os recursos não gerenciados usados pelo <see cref="T:System.Xaml.XamlReader" /> e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-127">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlReader" />, and optionally, releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-128">Você deve chamar a classe base para obter <xref:System.Xaml.XamlReader.IsDisposed%2A>  =  `true`.</span><span class="sxs-lookup"><span data-stu-id="79c00-128">You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-129">Obtém se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> foi chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-129">Gets whether <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-130">
            <see langword="true" /> Se <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> foi chamado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-130">
              <see langword="true" /> if <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-131">Quando implementado em uma classe derivada, obtém um valor que informa se a posição do leitor está no fim do arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-131">When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-132">
            <see langword="true" /> Se a posição está no conceitual final do arquivo de fluxo do nó XAML; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-132">
              <see langword="true" /> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-133">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.IsEof%2A>, com o comportamento que reflete corretamente os limites da subárvore inserido.</span><span class="sxs-lookup"><span data-stu-id="79c00-133">Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree.</span></span> <span data-ttu-id="79c00-134">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-134">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-135">Quando implementada em uma classe derivada, obterá o membro atual na posição do leitor, se a posição do leitor estiver em um <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-135">When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-136">O membro atual; ou <see langword="null" />, se a posição do leitor não está em um membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-136">The current member; or <see langword="null" />, if the reader position is not on a member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-137">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.Member%2A>, com restrições de comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-137">Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions.</span></span> <span data-ttu-id="79c00-138">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-138">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-139">Quando implementado em uma classe derivada, obtém as informações do namespace de XAML do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-139">When implemented in a derived class, gets the XAML namespace information from the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-140">As informações de namespace XAML, se ele está disponível. Caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-140">The XAML namespace information, if it is available; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-141">O design desejado desta API é retornar somente-se um resultado não nulo a <xref:System.Xaml.XamlReader.NodeType%2A> do nó atual é <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="79c00-141">The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="79c00-142">A propriedade não relata o namespace XAML que se aplica a objetos ou membros de forma geral escopo, como em um contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="79c00-142">The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</span></span> <span data-ttu-id="79c00-143">Seu aplicativo deve fornecer um meio para armazenar em cache as informações para a ação do namespace XAML que atravessa nós XAML, se você precisar que informações de maneira diferente como o contexto do esquema XAML reporta a um gravador.</span><span class="sxs-lookup"><span data-stu-id="79c00-143">Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</span></span> <span data-ttu-id="79c00-144">Consulte <xref:System.Xaml.XamlXmlReader.Namespace%2A> para observações sobre a implementação da referência.</span><span class="sxs-lookup"><span data-stu-id="79c00-144">See <xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-145">Quando implementado em uma classe derivada, obtém o tipo do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-145">When implemented in a derived class, gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-146">Um valor da enumeração <see cref="T:System.Xaml.XamlNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-146">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-147">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.NodeType%2A>, com restrições de comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-147">Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions.</span></span> <span data-ttu-id="79c00-148">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-148">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-149">Quando implementado em uma classe derivada, fornecerá o próximo nó XAML da origem, se houver um nó disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-149">When implemented in a derived class, provides the next XAML node from the source, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79c00-150">
            <see langword="true" /> se um nó estiver disponível, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-150">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-151">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.Read%2A>, com restrições de comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-151">Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions.</span></span> <span data-ttu-id="79c00-152">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-152">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-153">Retorna um <see cref="T:System.Xaml.XamlReader" /> que se baseia no <see cref="T:System.Xaml.XamlReader" /> atual, no qual o <see cref="T:System.Xaml.XamlReader" /> retornado é usado para iterar em uma subárvore da estrutura de nós XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-153">Returns a <see cref="T:System.Xaml.XamlReader" /> that is based on the current <see cref="T:System.Xaml.XamlReader" />, where the returned <see cref="T:System.Xaml.XamlReader" /> is used to iterate through a subtree of the XAML node structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79c00-154">Uma nova instância de leitor de XAML da subárvore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-154">A new XAML reader instance for the subtree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-155">Esse método tem uma implementação padrão e retorna um válido <xref:System.Xaml.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="79c00-155">This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="79c00-156">Retornado <xref:System.Xaml.XamlReader> é uma classe interna que restringe certos <xref:System.Xaml.XamlReader> ações.</span><span class="sxs-lookup"><span data-stu-id="79c00-156">The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions.</span></span> <span data-ttu-id="79c00-157">As restrições são consistentes com o objetivo de ler apenas uma subárvore dimensionada de uma fonte maior para um conjunto de nós XAML e retornando a fim de arquivo ou `null` no nó atual quando a subárvore for fechada.</span><span class="sxs-lookup"><span data-stu-id="79c00-157">The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.</span></span>  
  
 <span data-ttu-id="79c00-158">Em geral, você deve verificar o nó atual do inicial <xref:System.Xaml.XamlReader.Read%2A> para determinar se é necessário um leitor de subárvore.</span><span class="sxs-lookup"><span data-stu-id="79c00-158">Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader.</span></span> <span data-ttu-id="79c00-159">Como você marcar essa opção pode ser específico da implementação; No entanto, evite criar vários leitores de subárvore para cada subárvore.</span><span class="sxs-lookup"><span data-stu-id="79c00-159">How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</span></span> <span data-ttu-id="79c00-160">Além disso, evite chamar um leitor de subárvore em certos casos de nó (por exemplo, para <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) que não pode conter uma subárvore de nós.</span><span class="sxs-lookup"><span data-stu-id="79c00-160">In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.</span></span>  
  
 <span data-ttu-id="79c00-161">Depois de obter um leitor de subárvore, você deve chamar <xref:System.Xaml.XamlReader.Read%2A> nele para obter um nó atual (ou chamar <xref:System.Xaml.XamlReader.Skip%2A> para obter um próximo nó).</span><span class="sxs-lookup"><span data-stu-id="79c00-161">After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node).</span></span> <span data-ttu-id="79c00-162">Você não automaticamente obter uma posição inicial do nó do leitor de subárvore ao criá-lo.</span><span class="sxs-lookup"><span data-stu-id="79c00-162">You do not automatically obtain an initial node position from the subtree reader when you create it.</span></span>  
  
 <span data-ttu-id="79c00-163">O leitor obter chamando <xref:System.Xaml.XamlReader.ReadSubtree%2A> deste padrão implementação é uma classe interna.</span><span class="sxs-lookup"><span data-stu-id="79c00-163">The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class.</span></span> <span data-ttu-id="79c00-164">A classe interna baseia seu comportamento no <xref:System.Xaml.XamlReader> implementação que está sendo usado quando <xref:System.Xaml.XamlReader.ReadSubtree%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="79c00-164">The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called.</span></span> <span data-ttu-id="79c00-165">A finalidade da classe interna é usada incluir o <xref:System.Xaml.XamlReader.Read%2A> e o comportamento geral de passagem.</span><span class="sxs-lookup"><span data-stu-id="79c00-165">The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior.</span></span> <span data-ttu-id="79c00-166">Passagem permanece dentro da subárvore pretendida, controlando de <xref:System.Xaml.XamlNodeType.StartMember> / <xref:System.Xaml.XamlNodeType.EndMember> pares ou <xref:System.Xaml.XamlNodeType.StartObject> / <xref:System.Xaml.XamlNodeType.EndObject> pares.</span><span class="sxs-lookup"><span data-stu-id="79c00-166">The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs.</span></span> <span data-ttu-id="79c00-167">Ele também corretamente retorna `false` para <xref:System.Xaml.XamlReader.Read%2A> e `true` para <xref:System.Xaml.XamlReader.IsEof%2A> quando o leitor estiver no final da subárvore, conforme definido pelo seu ponto de entrada.</span><span class="sxs-lookup"><span data-stu-id="79c00-167">It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point.</span></span> <span data-ttu-id="79c00-168">Em geral, você assume que qualquer <xref:System.Xaml.XamlReader> API chamada de um leitor de subárvore tem a mesma implementação como geral <xref:System.Xaml.XamlReader> , exceto o percurso delimitadora comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-168">In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.</span></span>  
  
 <span data-ttu-id="79c00-169">No entanto, <xref:System.Xaml.XamlReader.ReadSubtree%2A> é virtual.</span><span class="sxs-lookup"><span data-stu-id="79c00-169">However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual.</span></span> <span data-ttu-id="79c00-170">Portanto, um determinado <xref:System.Xaml.XamlReader> implementação pode fornecer um comportamento que difere o <xref:System.Xaml.XamlReader> comportamento de wrapper interna e um <xref:System.Xaml.XamlReader> implementação ainda pode desabilitar a funcionalidade de leitor de subárvore retornando <xref:System.NotImplementedException> ou outras exceções.</span><span class="sxs-lookup"><span data-stu-id="79c00-170">Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-171">Quando implementado em uma classe derivada, obtém um objeto que fornece informações de contexto do esquema XAML para o conjunto de informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-171">When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-172">Um objeto que fornece informações de contexto de esquema XAML para as informações de conjunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-172">An object that provides XAML schema context information for the information set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-173">Ignora o nó atual e avança a posição do leitor para o próximo nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-173">Skips the current node and advances the reader position to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-174">Uma vez ignorada, <xref:System.Xaml.XamlReader.Read%2A> é chamado pelo padrão <xref:System.Xaml.XamlReader.Skip%2A> implementação.</span><span class="sxs-lookup"><span data-stu-id="79c00-174">Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation.</span></span> <span data-ttu-id="79c00-175">Você normalmente não chama <xref:System.Xaml.XamlReader.Skip%2A> e <xref:System.Xaml.XamlReader.Read%2A> em sequência.</span><span class="sxs-lookup"><span data-stu-id="79c00-175">You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.</span></span>  
  
 <span data-ttu-id="79c00-176">No padrão <xref:System.Xaml.XamlReader.Skip%2A> implementação, diferentes ações são tomadas dependendo de quais <xref:System.Xaml.XamlReader.NodeType%2A> a posição do leitor é na momento.</span><span class="sxs-lookup"><span data-stu-id="79c00-176">In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on.</span></span> <span data-ttu-id="79c00-177">Se a posição do leitor está atualmente em um <xref:System.Xaml.XamlNodeType.StartMember> ou <xref:System.Xaml.XamlNodeType.StartObject>, que o membro ou objeto é ignorado.</span><span class="sxs-lookup"><span data-stu-id="79c00-177">If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped.</span></span> <span data-ttu-id="79c00-178">Para outros <xref:System.Xaml.XamlReader.NodeType%2A> valores, nenhuma ação será tomada diferente chamada <xref:System.Xaml.XamlReader.Read%2A> da posição atual.</span><span class="sxs-lookup"><span data-stu-id="79c00-178">For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.</span></span>  
  
 <span data-ttu-id="79c00-179">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.Skip%2A>, com restrições de comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-179">Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions.</span></span> <span data-ttu-id="79c00-180">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-180">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 <span data-ttu-id="79c00-181">O comportamento de árvore do nó de <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> se baseia o equivalente XML <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="79c00-181">The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="79c00-182">Com base no <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> equivalência de comportamento <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> ignora o nó e sua subárvore, não apenas o nó de entrada único.</span><span class="sxs-lookup"><span data-stu-id="79c00-182">Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> skips the node and its subtree, not just the single entry node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79c00-183">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Xaml.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-183">Releases all resources used by the current instance of the <see cref="T:System.Xaml.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-184">Quando implementado em uma classe derivada, obtém o <see cref="T:System.Xaml.XamlType" /> do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-184">When implemented in a derived class, gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-185">O <see cref="T:System.Xaml.XamlType" /> do nó atual; ou <see langword="null" />, se a posição atual do leitor não está em um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-185">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79c00-186">Leitores de subárvore podem chamar <xref:System.Xaml.XamlReader.Type%2A>, com restrições de comportamento.</span><span class="sxs-lookup"><span data-stu-id="79c00-186">Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions.</span></span> <span data-ttu-id="79c00-187">Para obter mais informações, consulte a seção "Subárvore leitores" <xref:System.Xaml.XamlReader>, ou consulte <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span><span class="sxs-lookup"><span data-stu-id="79c00-187">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79c00-188">Quando implementado em uma classe derivada, obtém o valor do nó atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-188">When implemented in a derived class, gets the value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79c00-189">O valor do nó atual; ou <see langword="null" />, se a posição atual do leitor não está em um <see cref="F:System.Xaml.XamlNodeType.Value" /> tipo de nó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79c00-189">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>