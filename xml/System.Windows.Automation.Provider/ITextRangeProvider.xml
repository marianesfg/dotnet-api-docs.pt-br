<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67ed0d50e905d13f155ad6d9af79aaeb9b73490b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39805968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2819e-101">Expõe métodos e propriedades para compatibilidade com o acesso para cliente de Automação da Interface do Usuário para um trecho de texto contínuo em um contêiner de texto que implementa <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2819e-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-102">Implementado em um provedor de automação de interface do usuário que deve dar suporte a <xref:System.Windows.Automation.TextPattern> padrão de controle.</span><span class="sxs-lookup"><span data-stu-id="2819e-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="2819e-103">Um <xref:System.Windows.Automation.Text.TextPatternRange> pode representar um ponto de inserção, um subconjunto ou todo o texto em um <xref:System.Windows.Automation.TextPattern> contêiner.</span><span class="sxs-lookup"><span data-stu-id="2819e-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-104">Adiciona à coleção do texto realçado em um contêiner de texto que dá suporte a várias seleções não contíguas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-104">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-105">Move o ponto de inserção de texto para a área da nova seleção.</span><span class="sxs-lookup"><span data-stu-id="2819e-105">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="2819e-106">Fornece um intervalo de texto de degeneração move o ponto de inserção.</span><span class="sxs-lookup"><span data-stu-id="2819e-106">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2819e-107">Se o provedor de texto não é compatível com várias seleções não contíguas (por exemplo, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> deve ter um valor de <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-107">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-108">Retorna um novo <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> idêntico ao <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> original e herdando todas as propriedades do original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-108">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-109">O novo intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-109">The new text range.</span>
          </span>
          <span data-ttu-id="2819e-110">Uma referência nula (<see langword="Nothing" /> no Visual Basic) nunca é retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-110">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-111">O novo intervalo de pode ser manipulado de forma independente do original.</span><span class="sxs-lookup"><span data-stu-id="2819e-111">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="2819e-112">Um intervalo de texto a ser comparado</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-112">A text range to compare</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-113">Retorna um valor que indica se o alcance (o ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> até o ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />) de um intervalo de texto é igual a outro intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-113">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-114">
            <see langword="true" /> se o alcance dos dois intervalos de texto for idêntico, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-114">
              <see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2819e-115">Se o intervalo sendo comparado não vem do mesmo provedor de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-115">If the range being compared does not come from the same text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="2819e-116">O ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> ou <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do chamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-116">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="2819e-117">O intervalo de destino para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-117">The target range for comparison.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="2819e-118">O ponto de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> ou <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-118">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-119">Retorna um valor que especifica se dois intervalos de texto têm pontos de extremidade idênticos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-119">Returns a value that specifies whether two text ranges have identical endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-120">Retorna um valor negativo se o ponto de extremidade do chamador ocorre antes no texto do que o ponto de extremidade de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-120">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span>
          </span>
          <span data-ttu-id="2819e-121">Retorna zero se o ponto de extremidade do chamador está no mesmo local que o ponto de extremidade de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-121">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span>
          </span>
          <span data-ttu-id="2819e-122">Retorna um valor positivo se o ponto de extremidade do chamador ocorre depois no texto do que o ponto de extremidade de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-122">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2819e-123">Se <paramref name="targetRange" /> é de um provedor de texto diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-123">If <paramref name="targetRange" /> is from a different text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="2819e-124">A unidade textual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-124">The textual unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-125">Expande o intervalo de texto para a unidade de texto especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-125">Expands the text range to the specified text unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-126">Se o intervalo já é uma quantidade exata de unidades especificadas permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="2819e-126">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="2819e-127">Há uma série de etapas envolvidas nos bastidores para que o <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> método a ser executado com êxito.</span><span class="sxs-lookup"><span data-stu-id="2819e-127">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="2819e-128">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido em um intervalo de degeneração a <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> ponto de extremidade, o que torna o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> supérfluo de ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="2819e-128">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="2819e-129">Essa etapa é necessária para remover a ambiguidade em situações onde um intervalo de texto abrange `unit` limites; por exemplo, "{a U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) é inserido no texto" onde "{" e "}" é o texto de pontos de extremidade do intervalo.</span><span class="sxs-lookup"><span data-stu-id="2819e-129">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="2819e-130">O intervalo resultante é movido para trás na <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> para o início da solicitada `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-130">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="2819e-131">O intervalo é movido para frente ou para trás na <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> pelo número solicitado de `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-131">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="2819e-132">O intervalo é expandido de um estado de intervalo de degeneração, em seguida, movendo o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> ponto de extremidade por um solicitado `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-132">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="2819e-133">![Ajustes de intervalo por Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "ajustes de intervalo por Move & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="2819e-133">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="2819e-134">Exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit)</span><span class="sxs-lookup"><span data-stu-id="2819e-134">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2819e-135">Essas etapas são necessárias, pois é comum que um leitor de tela sejam lidos uma palavra inteira, frase ou parágrafo inteiro em qualquer posição do cursor virtual ou o ponto de inserção.</span><span class="sxs-lookup"><span data-stu-id="2819e-135">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="2819e-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respeita o texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="2819e-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> adia para a próxima maior <xref:System.Windows.Automation.Text.TextUnit> com suporte se o determinado <xref:System.Windows.Automation.Text.TextUnit> não é compatível com o controle.</span><span class="sxs-lookup"><span data-stu-id="2819e-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="2819e-138">A ordem, da unidade menor ao maior, é listada abaixo.</span><span class="sxs-lookup"><span data-stu-id="2819e-138">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2819e-139">O atributo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-139">The attribute to search for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2819e-140">O valor de atributo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-140">The attribute value to search for.</span>
          </span>
          <span data-ttu-id="2819e-141">Esse valor deve corresponder ao tipo especificado para o atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-141">This value must match the type specified for the attribute.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="2819e-142">
            <see langword="true" /> se o último intervalo de texto que ocorre por último deve ser retornada em vez da primeira, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-142">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-143">Retorna um subconjunto do intervalo de texto que tem o valor de atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-143">Returns a text range subset that has the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-144">Um intervalo de texto com um atributo e um valor de atributo correspondentes, caso contrário, nulo (<see langword="Nothing" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-144">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-145">Não há nenhuma diferenciação entre texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-145">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="2819e-146">A cadeia de caracteres de texto a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-146">The text string to search for.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="2819e-147">
            <see langword="true" /> se o último intervalo de texto que ocorre por último deve ser retornada em vez da primeira, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-147">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="2819e-148">
            <see langword="true" /> se o uso de maiúsculas e minúsculas deve ser ignorado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-148">
              <see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-149">Retorna um subconjunto do intervalo de texto que contém o texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-149">Returns a text range subset that contains the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-150">Um intervalo de texto que corresponde ao texto especificado, caso contrário, nulo (<see langword="Nothing" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-150">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-151">Não há nenhuma diferenciação entre texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-151">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2819e-152">O atributo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-152">The text attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-153">Recupera o valor do atributo especificado no intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-153">Retrieves the value of the specified attribute across the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-154">Recupera um objeto que representa o valor do atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-154">Retrieves an object representing the value of the specified attribute.</span>
          </span>
          <span data-ttu-id="2819e-155">Por exemplo, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> retornaria uma cadeia de caracteres que representa o nome da fonte, se for único, do intervalo de texto, ao passo que <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> retornaria um valor de tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-155">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="2819e-156">Retorna <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> se o valor do atributo especificado varia ao longo do intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-156">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span>
          </span>
          <span data-ttu-id="2819e-157">Retorna <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> se o atributo especificado não for compatível com o provedor ou com o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-157">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-158">Não há nenhuma diferenciação entre texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-158">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2819e-159">Se o atributo especificado não for válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-159">If the specified attribute is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-160">Recupera uma coleção de retângulos delimitadores para cada linha de texto parcial ou totalmente visível em um intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-160">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-161">Uma matriz de retângulos delimitadores para cada linha de texto total ou parcial em um intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-161">An array of bounding rectangles for each full or partial line of text in a text range.</span>
          </span>
          <span data-ttu-id="2819e-162">Uma matriz vazia para um intervalo de degeneração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-162">An empty array for a degenerate range.</span>
          </span>
          <span data-ttu-id="2819e-163">Uma matriz vazia para um intervalo de texto que tem as coordenadas da tela colocando-o completamente fora da tela, rolado para fora da exibição ou obscurecido por uma janela sobreposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-163">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-164">Recupera uma coleção de todos os objetos inseridos que estão dentro do intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-164">Retrieves a collection of all embedded objects that fall within the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-165">Uma coleção de objetos filhos que estão dentro do intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-165">A collection of child objects that fall within the range.</span>
          </span>
          <span data-ttu-id="2819e-166">Os filhos que se sobrepuserem ao intervalo de texto mas não estiverem totalmente dentro dele também serão incluídos na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-166">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span>
          </span>
          <span data-ttu-id="2819e-167">Retorna uma coleção vazia se não há nenhum objeto filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-167">Returns an empty collection if there are no child objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-168">Retorna o controle mais interno que inclui o intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-168">Returns the innermost control that encloses the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-169">O controle delimitador, normalmente o provedor de texto que fornece o intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-169">The enclosing control, typically the text provider that supplies the text range.</span>
          </span>
          <span data-ttu-id="2819e-170">No entanto, se o provedor de texto é compatível com elementos filhos como tabelas ou hiperlinks, o elemento de fechamento pode ser um descendente do provedor de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-170">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength">
          <span data-ttu-id="2819e-171">O tamanho máximo da cadeia de caracteres a ser retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-171">The maximum length of the string to return.</span>
          </span>
          <span data-ttu-id="2819e-172">Use <c>-1</c> se não for necessário nenhum limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-172">Use <c>-1</c> if no limit is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-173">Recupera o texto sem formatação do intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-173">Retrieves the plain text of the range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-174">O texto sem formatação do intervalo de texto, possivelmente truncado no <paramref name="maxLength" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-174">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respeita o texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="2819e-176">Se `maxLength` é maior que o comprimento do intervalo de texto do chamador, a cadeia de caracteres retornada será o texto sem formatação do intervalo de texto.</span><span class="sxs-lookup"><span data-stu-id="2819e-176">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="2819e-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> não serão afetados pela ordem dos pontos de extremidade no fluxo de texto; ele sempre retornará o texto entre os pontos de extremidade de início e término do intervalo de texto na ordem de fluxo de texto lógico.</span><span class="sxs-lookup"><span data-stu-id="2819e-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2819e-178">Se <paramref name="maxLength" /> for menor que -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-178">If <paramref name="maxLength" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="2819e-179">O limite da unidade de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-179">The text unit boundary.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2819e-180">O número de unidades de texto a serem movidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-180">The number of text units to move.</span>
          </span>
          <span data-ttu-id="2819e-181">Um valor positivo move o intervalo de texto para frente, um valor negativo move o intervalo de texto para trás e 0 não tem nenhum efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-181">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-182">Move o intervalo de texto conforme o número de unidades de texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-182">Moves the text range the specified number of text units.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-183">O número de unidades realmente movidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-183">The number of units actually moved.</span>
          </span>
          <span data-ttu-id="2819e-184">Isso pode ser menos que o número solicitado se um dos pontos de extremidade do novo intervalo de texto for maior ou menor do que os pontos de extremidade de <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-184">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-185">Quando for necessário atravessar o conteúdo de um intervalo de texto, uma série de etapas envolvidas nos bastidores para que o <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> método a ser executado com êxito.</span><span class="sxs-lookup"><span data-stu-id="2819e-185">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="2819e-186">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido em um intervalo de degeneração a <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> ponto de extremidade, o que torna o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> supérfluo de ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="2819e-186">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="2819e-187">Essa etapa é necessária para remover a ambiguidade em situações onde um intervalo de texto abrange `unit` limites; por exemplo, "{a U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) é inserido no texto" onde "{" e "}" é o texto de pontos de extremidade do intervalo.</span><span class="sxs-lookup"><span data-stu-id="2819e-187">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="2819e-188">O intervalo resultante é movido para trás na <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> para o início da solicitada `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-188">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="2819e-189">O intervalo é movido para frente ou para trás na <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> pelo número solicitado de `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-189">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="2819e-190">O intervalo é expandido de um estado de intervalo de degeneração, em seguida, movendo o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> ponto de extremidade por um solicitado `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-190">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="2819e-191">![Ajustes de intervalo por Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "ajustes de intervalo por Move & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="2819e-191">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="2819e-192">Exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit)</span><span class="sxs-lookup"><span data-stu-id="2819e-192">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="2819e-193">O conteúdo textual (ou texto interno) de um contêiner de texto e um objeto inserido, como um hiperlink ou célula de tabela, é exposto como um fluxo de texto única e contínua na visualização de controle e exibição de conteúdo a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] de árvore; objeto limites são ignorados.</span><span class="sxs-lookup"><span data-stu-id="2819e-193">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="2819e-194">![Intervalos de texto abrangidos por objetos inseridos. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Intervalos de texto abrangidos por objetos inseridos.")</span><span class="sxs-lookup"><span data-stu-id="2819e-194">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="2819e-195">Exemplo de um fluxo de texto com objetos inseridos e seus intervalos abrangentes</span><span class="sxs-lookup"><span data-stu-id="2819e-195">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="2819e-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respeita o texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="2819e-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> adia para a próxima maior <xref:System.Windows.Automation.Text.TextUnit> com suporte se o determinado <xref:System.Windows.Automation.Text.TextUnit> não é compatível com o controle.</span><span class="sxs-lookup"><span data-stu-id="2819e-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="2819e-198">A ordem, da unidade menor ao maior, é listada abaixo.</span><span class="sxs-lookup"><span data-stu-id="2819e-198">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="2819e-199">O texto não é alterado de qualquer forma, o intervalo de texto abrange apenas uma parte diferente do texto.</span><span class="sxs-lookup"><span data-stu-id="2819e-199">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="2819e-200">O ponto de extremidade a ser movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-200">The endpoint to move.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="2819e-201">Outro intervalo do mesmo provedor de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-201">Another range from the same text provider.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="2819e-202">Um ponto de extremidade no outro intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-202">An endpoint on the other range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-203">Move um ponto de extremidade de um intervalo de texto para o ponto de extremidade especificado de um segundo intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-203">Moves one endpoint of a text range to the specified endpoint of a second text range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-204">Se o ponto de extremidade que está sendo movido cruza o outro ponto de extremidade do mesmo intervalo de texto, em seguida, outro ponto de extremidade é movido também, resultando em um intervalo de degeneração e assegurar a ordenação correta dos pontos de extremidade (ou seja, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> é sempre menor ou igual a <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="2819e-204">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="2819e-205">O ponto de extremidade a ser movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-205">The endpoint to move.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="2819e-206">A unidade textual para mover.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-206">The textual unit for moving.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2819e-207">O número de unidades a serem movidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-207">The number of units to move.</span>
          </span>
          <span data-ttu-id="2819e-208">Um valor positivo move o ponto de extremidade para a frente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-208">A positive value moves the endpoint forward.</span>
          </span>
          <span data-ttu-id="2819e-209">Um valor negativo move-o para trás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-209">A negative value moves backward.</span>
          </span>
          <span data-ttu-id="2819e-210">Um valor de 0 não tem nenhum efeito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-210">A value of 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-211">Move um ponto de extremidade do intervalo de texto conforme o número especificado de unidades de texto dentro do intervalo do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-211">Moves one endpoint of the text range the specified number of text units within the document range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2819e-212">O número de unidades realmente movidos, que pode ser menor que o número solicitado se mover que o ponto de extremidade é executado no início ou no final do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-212">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-213">Quando for necessário atravessar o conteúdo de um intervalo de texto, uma série de etapas envolvidas nos bastidores para que o <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> método a ser executado com êxito.</span><span class="sxs-lookup"><span data-stu-id="2819e-213">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="2819e-214">O intervalo de texto é normalizado; ou seja, o intervalo de texto é recolhido em um intervalo de degeneração a <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> ponto de extremidade, o que torna o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> supérfluo de ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="2819e-214">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="2819e-215">Essa etapa é necessária para remover a ambiguidade em situações onde um intervalo de texto abrange `unit` limites; por exemplo, "{a U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) é inserido no texto" onde "{" e "}" é o texto de pontos de extremidade do intervalo.</span><span class="sxs-lookup"><span data-stu-id="2819e-215">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="2819e-216">O intervalo resultante é movido para trás na <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> para o início da solicitada `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-216">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="2819e-217">O intervalo é expandido de um estado de intervalo de degeneração, em seguida, movendo o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> ponto de extremidade por um solicitado `unit` limites.</span><span class="sxs-lookup"><span data-stu-id="2819e-217">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="2819e-218">![Ajustes de intervalo por Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "ajustes de intervalo por Move & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="2819e-218">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="2819e-219">Exemplos de como um intervalo de texto é ajustado para Move () e ExpandToEnclosingUnit)</span><span class="sxs-lookup"><span data-stu-id="2819e-219">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="2819e-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> adia para a próxima maior <xref:System.Windows.Automation.Text.TextUnit> com suporte se o determinado <xref:System.Windows.Automation.Text.TextUnit> não é compatível com o controle.</span><span class="sxs-lookup"><span data-stu-id="2819e-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="2819e-221">A ordem, da unidade menor ao maior, é listada abaixo.</span><span class="sxs-lookup"><span data-stu-id="2819e-221">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-222">Remove uma seção realçada de texto, correspondente aos pontos de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do chamador, da coleção de texto realçado em um contêiner de texto compatível com várias seleções não contíguas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-222">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-223">O ponto de inserção de texto será movido para a área do realce removido.</span><span class="sxs-lookup"><span data-stu-id="2819e-223">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="2819e-224">Fornece um intervalo de texto de degeneração moverá o ponto de inserção.</span><span class="sxs-lookup"><span data-stu-id="2819e-224">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2819e-225">Se o provedor de texto não der suporte a várias seleções não contíguas (por exemplo, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> deve ter um valor de <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-225">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop">
          <span data-ttu-id="2819e-226">
            <see langword="true" /> se o controle de texto deve ser rolado para que o intervalo de texto seja alinhado à parte superior do visor, <see langword="false" /> se ele deve ser alinhado à parte inferior do visor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-226">
              <see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2819e-227">Faz com que o controle de texto role verticalmente até o intervalo do texto ser visível no visor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-227">Causes the text control to scroll vertically until the text range is visible in the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respeita o texto oculto e visível.</span><span class="sxs-lookup"><span data-stu-id="2819e-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="2819e-229">Se o intervalo de texto estiver oculta, o controle de texto rolará somente se o texto oculto tem uma âncora no visor.</span><span class="sxs-lookup"><span data-stu-id="2819e-229">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2819e-230">Realça o texto no controle de texto correspondente aos pontos de extremidade <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> e <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> do intervalo de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-230">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2819e-231">Se um intervalo de texto de degeneração for fornecido, o ponto de inserção de texto será movido para o <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> ponto de extremidade do intervalo de texto.</span><span class="sxs-lookup"><span data-stu-id="2819e-231">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2819e-232">Ocorre quando a seleção de texto não é compatível com o controle de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2819e-232">Occurs when text selection is not supported by the text control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>