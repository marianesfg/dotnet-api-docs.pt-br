<Type Name="Validator" FullName="System.Workflow.ComponentModel.Compiler.Validator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2613662fe095c58d561a7b5dc243eada1c5abad" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53289646" /></Metadata><TypeSignature Language="C#" Value="public class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.Validator" />
  <TypeSignature Language="VB.NET" Value="Public Class Validator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validator" />
  <TypeSignature Language="F#" Value="type Validator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Classe base para todos os componentes do validador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 A classe de validador é usada para garantir que as atividades são configuradas corretamente no tempo de design. Validadores são instanciados durante o tempo de design quando o designer valida as propriedades atribuídas a atividades; Se os parâmetros de uma atividade não estiverem configurados corretamente, o designer mostrará os erros de marca inteligente para os valores incorretos. Validadores também executadas durante o tempo de compilação e retornarão erros de validação se as restrições, como o tipo de objeto pai ou filho, o número mínimo de filhos, etc. não estiverem corretos.  Validadores também serão executado em tempo de execução quando um fluxo de trabalho baseados em marcação é instanciado usando o <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> método.  
  
 O objetivo principal de um validador é garantir que os erros são conhecidos em tempo de design e não são expostos como exceções durante o tempo de execução.  
  
 Validadores estão associados com as atividades que eles validam usando o <xref:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.ValidatorTypeName%2A> atributo; todas as atividades de validadores devem herdar a <xref:System.Workflow.ComponentModel.Compiler.ActivityValidator> classe.  
  
 Por padrão, validadores validará metapropriedades; eles não validam as propriedades de instância que são configuráveis no tempo de execução.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Validator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Validator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFullPropertyName">
      <MemberSignature Language="C#" Value="protected string GetFullPropertyName (System.Workflow.ComponentModel.Compiler.ValidationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetFullPropertyName(class System.Workflow.ComponentModel.Compiler.ValidationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetFullPropertyName (manager As ValidationManager) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetFullPropertyName(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.GetFullPropertyName : System.Workflow.ComponentModel.Compiler.ValidationManager -&gt; string" Usage="validator.GetFullPropertyName manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
      </Parameters>
      <Docs>
        <param name="manager">O <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> vinculado à validação.</param>
        <summary>Método auxiliar para extrair o nome completo da propriedade.</summary>
        <returns>O nome completo da propriedade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 É útil quando a propriedade validada está aninhada.  O método percorre o <xref:System.Workflow.ComponentModel.Compiler.PropertyValidationContext> na pilha para construir o nome completo da propriedade.  
  
 Por exemplo: o nome My.Actor.Bas baseia-se usando três <xref:System.Workflow.ComponentModel.Compiler.PropertyValidationContext> itens.  
  
 Se a propriedade validada pertence a um objeto que é um item em uma coleção, o método produzirá o nome da coleção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate (System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate(class System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (manager As ValidationManager, obj As Object) As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Validate(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection&#xA;override this.Validate : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.Validate (manager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">O gerenciador de validação é vinculado à validação.</param>
        <param name="obj">O <see cref="T:System.Object" /> a ser validado.</param>
        <summary>Valida o objeto especificado e retorna uma coleção de erros de validação.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contém os erros de validação resultantes dessa operação.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).

- ou -

<paramref name="obj" /> é uma referência nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateActivityChange">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationError ValidateActivityChange (System.Workflow.ComponentModel.Activity activity, System.Workflow.ComponentModel.ActivityChangeAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationError ValidateActivityChange(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.ComponentModel.ActivityChangeAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationError ^ ValidateActivityChange(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::ComponentModel::ActivityChangeAction ^ action);" />
      <MemberSignature Language="F#" Value="abstract member ValidateActivityChange : System.Workflow.ComponentModel.Activity * System.Workflow.ComponentModel.ActivityChangeAction -&gt; System.Workflow.ComponentModel.Compiler.ValidationError&#xA;override this.ValidateActivityChange : System.Workflow.ComponentModel.Activity * System.Workflow.ComponentModel.ActivityChangeAction -&gt; System.Workflow.ComponentModel.Compiler.ValidationError" Usage="validator.ValidateActivityChange (activity, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="action" Type="System.Workflow.ComponentModel.ActivityChangeAction" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:System.Workflow.ComponentModel.Activity" /> especificado.</param>
        <param name="action">O <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> especificado.</param>
        <summary>Quando substituído em uma classe derivada, valida uma alteração com base em um <see cref="T:System.Workflow.ComponentModel.Activity" /> especificado que está sendo adicionado ou removido. Essa função é chamada durante a aplicação de alterações ao fluxo de trabalho durante atualizações dinâmicas.</summary>
        <returns>O <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> gerado pela operação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na implementação de base, uma referência nula (Visual Basic `Nothing`) será retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activity" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).

- ou -

<paramref name="action" /> é uma referência nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperties">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperties (System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperties(class System.Workflow.ComponentModel.Compiler.ValidationManager manager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateProperties (manager As ValidationManager, obj As Object) As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ ValidateProperties(System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member ValidateProperties : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection&#xA;override this.ValidateProperties : System.Workflow.ComponentModel.Compiler.ValidationManager * obj -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.ValidateProperties (manager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">O gerenciador de validação é vinculado à validação.</param>
        <param name="obj">O <see cref="T:System.Workflow.ComponentModel.Activity" /> a ser validado.</param>
        <summary>Método auxiliar para validar automaticamente as propriedades de objetos específicos.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contém os erros de validação resultantes dessa operação.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).

- ou -

<paramref name="obj" /> é uma referência nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="protected internal System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperty (System.Reflection.PropertyInfo propertyInfo, object propertyOwner, object propertyValue, System.Workflow.ComponentModel.Compiler.ValidationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection ValidateProperty(class System.Reflection.PropertyInfo propertyInfo, object propertyOwner, object propertyValue, class System.Workflow.ComponentModel.Compiler.ValidationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ ValidateProperty(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ propertyOwner, System::Object ^ propertyValue, System::Workflow::ComponentModel::Compiler::ValidationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ValidateProperty : System.Reflection.PropertyInfo * obj * obj * System.Workflow.ComponentModel.Compiler.ValidationManager -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="validator.ValidateProperty (propertyInfo, propertyOwner, propertyValue, manager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="propertyOwner" Type="System.Object" />
        <Parameter Name="propertyValue" Type="System.Object" />
        <Parameter Name="manager" Type="System.Workflow.ComponentModel.Compiler.ValidationManager" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">O <see cref="T:System.Reflection.PropertyInfo" /> na propriedade de entidade.</param>
        <param name="propertyOwner">O proprietário da propriedade.</param>
        <param name="propertyValue">O valor da propriedade.</param>
        <param name="manager">Um <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> para essa operação.</param>
        <summary>Realiza a validação em uma propriedade e retorna um <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contém os resultados dessa validação.</summary>
        <returns>Um <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contém os resultados dessa validação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se nenhum erro de resultado da validação, vazia <xref:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection> é retornado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>