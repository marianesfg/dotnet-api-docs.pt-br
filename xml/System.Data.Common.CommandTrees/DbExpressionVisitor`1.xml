<Type Name="DbExpressionVisitor&lt;TResultType&gt;" FullName="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33915be4cc71eb6b50789ebbb438e2b5c73874f4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39793914" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbExpressionVisitor&lt;TResultType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbExpressionVisitor`1&lt;TResultType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbExpressionVisitor(Of TResultType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResultType&gt;&#xA;public ref class DbExpressionVisitor abstract" />
  <TypeSignature Language="F#" Value="type DbExpressionVisitor&lt;'ResultType&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResultType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResultType"><span data-ttu-id="e718c-101">O tipo do resultado produzido pelo visitante.</span><span class="sxs-lookup"><span data-stu-id="e718c-101">The type of the result produced by the visitor.</span></span></typeparam>
    <summary><span data-ttu-id="e718c-102">Define a funcionalidade básica que deve ser implementada por visitantes que retornam um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-102">Defines the basic functionality that should be implemented by visitors that return a result value of a specific type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e718c-103">O <xref:System.Data.Common.CommandTrees.DbExpressionVisitor%601> é uma classe abstrata que descreve a passagem de expressão.</span><span class="sxs-lookup"><span data-stu-id="e718c-103">The <xref:System.Data.Common.CommandTrees.DbExpressionVisitor%601> is an abstract class that describes expression traversal.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e718c-104">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-104">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e718c-105">Implementa o padrão de visitante para expressões.</span><span class="sxs-lookup"><span data-stu-id="e718c-105">Implements the visitor pattern for expressions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbAndExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-106">O <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-106">The <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-107">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-107">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-108">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-108">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbApplyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-109">O <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-109">The <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-110">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-110">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-111">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-111">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbArithmeticExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-112">O <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-112">The <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-113">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-113">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-114">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-114">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCaseExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-115">O <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-115">The <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-116">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-116">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-117">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-117">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCastExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-118">O <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-118">The <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-119">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-119">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-120">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-120">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbComparisonExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-121">O <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-121">The <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-122">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-122">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-123">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-123">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbConstantExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-124">O <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-124">The <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-125">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-125">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-126">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-126">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCrossJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-127">O <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-127">The <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-128">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-128">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-129">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-129">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDerefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-130">O <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-130">The <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-131">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-131">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-132">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-132">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDistinctExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-133">O <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-133">The <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-134">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-134">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-135">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-135">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbElementExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-136">O <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-136">The <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-137">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-137">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-138">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-138">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbEntityRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-139">O <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-139">The <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-140">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-140">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-141">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-141">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExceptExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-142">O <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-142">The <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-143">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-143">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-144">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-144">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-145">O <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-145">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-146">Quando substituído em uma classe derivada, manipula qualquer expressão de um tipo não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="e718c-146">When overridden in a derived class, handles any expression of an unrecognized type.</span></span></summary>
        <returns><span data-ttu-id="e718c-147">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-147">A result value of a specific type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e718c-148">Esse método é chamado quando uma expressão de um caso contrário, não reconhecida tipo for encontrado.</span><span class="sxs-lookup"><span data-stu-id="e718c-148">This method is called when an expression of an otherwise unrecognized type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFilterExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-149">O <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-149">The <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-150">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-150">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-151">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-151">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFunctionExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-152">O <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-152">The <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-153">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-153">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-154">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-154">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbGroupByExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-155">O <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-155">The <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-156">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-156">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-157">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-157">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIntersectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-158">O <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-158">The <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-159">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-159">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-160">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-160">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsEmptyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-161">O <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-161">The <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-162">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-162">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-163">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-163">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-164">O <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-164">The <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-165">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-165">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-166">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-166">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsOfExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-167">O <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-167">The <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-168">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-168">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-169">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-169">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-170">O <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-170">The <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-171">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-171">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-172">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-172">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResultType Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Visit (expression As DbLambdaExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResultType Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType&#xA;override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-173">O <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-173">The <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-174">Quando substituído em uma classe derivada, implementa o método padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-174">When overridden in a derived class, implements the visitor pattern method for <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-175">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-175">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLikeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-176">O <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-176">The <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-177">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-177">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-178">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-178">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLimitExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-179">O <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-179">The <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-180">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-180">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-181">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-181">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNewInstanceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-182">O <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-182">The <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-183">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-183">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-184">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-184">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNotExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-185">O <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-185">The <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-186">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-186">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-187">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-187">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-188">O <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-188">The <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-189">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-189">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-190">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-190">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOfTypeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-191">O <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-191">The <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-192">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-192">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-193">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-193">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOrExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-194">O <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-194">The <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-195">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-195">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-196">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-196">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbParameterReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-197">O <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-197">The <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-198">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-198">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-199">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-199">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbProjectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-200">O <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-200">The <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-201">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-201">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-202">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-202">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbPropertyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-203">O <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-203">The <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-204">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-204">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-205">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-205">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbQuantifierExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-206">O <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-206">The <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-207">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-207">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-208">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-208">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-209">O <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-209">The <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-210">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-210">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-211">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-211">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefKeyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-212">O <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-212">The <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-213">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-213">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-214">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-214">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRelationshipNavigationExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-215">O <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-215">The <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-216">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-216">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-217">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-217">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbScanExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-218">O <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-218">The <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-219">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-219">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-220">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-220">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSkipExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-221">O <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-221">The <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-222">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-222">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-223">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-223">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSortExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-224">O <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-224">The <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-225">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-225">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-226">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-226">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbTreatExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-227">O <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-227">The <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-228">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-228">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-229">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-229">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbUnionAllExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-230">O <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-230">The <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-231">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-231">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-232">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-232">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbVariableReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e718c-233">O <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que está sendo visitado.</span><span class="sxs-lookup"><span data-stu-id="e718c-233">The <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that is being visited.</span></span></param>
        <summary><span data-ttu-id="e718c-234">Quando substituído em uma classe derivada, implementa o padrão de visitante para <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="e718c-234">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span></span></summary>
        <returns><span data-ttu-id="e718c-235">Um valor de resultado de um tipo específico.</span><span class="sxs-lookup"><span data-stu-id="e718c-235">A result value of a specific type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>