<Type Name="DbLikeExpression" FullName="System.Data.Common.CommandTrees.DbLikeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1871312325fbfbb9ed04c965b18838d424d68af9" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52246313" /></Metadata><TypeSignature Language="C#" Value="public sealed class DbLikeExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbLikeExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbLikeExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbLikeExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbLikeExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbLikeExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma comparação de cadeia de caracteres contra o padrão especificado com uma cadeia de caracteres de escape opcional. Essa classe não pode ser herdada.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbLikeExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">Uma instância de <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
        <summary>Implementa o padrão de visitante para expressões que não produzem um valor de resultado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="visitor" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbLikeExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">O tipo do resultado produzido por <paramref name="visitor" />.</typeparam>
        <param name="visitor">Uma instância de um <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> com tipo que produz um valor de resultado de um tipo específico.</param>
        <summary>Implementa o padrão de visitante para expressões que produzem um valor de resultado de um tipo específico.</summary>
        <returns>Um valor de resultado de um tipo específico produzido por <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="visitor" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Argument" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Argument As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Argument { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Argument : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLikeExpression.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma expressão que especifica a cadeia de caracteres a ser comparada contra o padrão fornecido.</summary>
        <value>Uma expressão que especifica a cadeia de caracteres a ser comparada com o padrão fornecido.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">A expressão é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A expressão não está associada à árvore de comandos de <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> ou seu tipo de resultado não é um tipo de cadeia de caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Escape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Escape" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Escape As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Escape { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Escape : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLikeExpression.Escape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma expressão que fornece uma cadeia de caracteres de escape opcional a ser usada para a comparação.</summary>
        <value>Uma expressão que fornece uma cadeia de caracteres de escape opcional a ser usado para a comparação.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">A expressão é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A expressão não está associada à árvore de comandos de <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> ou seu tipo de resultado não é um tipo de cadeia de caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Pattern { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLikeExpression.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma expressão que especifica o padrão contra o qual a cadeia de caracteres fornecida deve ser comparada.</summary>
        <value>Uma expressão que especifica o padrão em relação ao qual a cadeia de caracteres fornecida deve ser comparada.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">A expressão é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">A expressão não está associada à árvore de comandos de <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> ou seu tipo de resultado não é um tipo de cadeia de caracteres.</exception>
      </Docs>
    </Member>
  </Members>
</Type>