<Type Name="DataflowBlock" FullName="System.Threading.Tasks.Dataflow.DataflowBlock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="363d80c93ed84b3be24a1ccc952c5fc0c4467af3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataflowBlock extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.DataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Module DataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataflowBlock abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ae2c7-101">Fornece um conjunto de métodos estáticos (compartilhado no Visual Basic) para trabalhar com blocos de fluxo de dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae2c7-101">Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsObservable&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IObservable&lt;TOutput&gt; AsObservable&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObservable`1&lt;!!TOutput&gt; AsObservable&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObservable(Of TOutput) (source As ISourceBlock(Of TOutput)) As IObservable(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObservable&lt;TOutput&gt; ^ AsObservable(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObservable&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-102">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-102">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-103">A origem a ser encapsulada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-103">The source to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-104">Cria uma nova abstração <see cref="T:System.IObservable`1" /> em relação a <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-104">Creates a new <see cref="T:System.IObservable`1" /> abstraction over the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-105">Um <see cref="T:System.IObservable`1" /> que permite aos observadores serem inscrito na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-105">An <see cref="T:System.IObservable`1" /> that enables observers to be subscribed to the source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-106">O <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-106">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsObserver&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static IObserver&lt;TInput&gt; AsObserver&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObserver`1&lt;!!TInput&gt; AsObserver&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObserver(Of TInput) (target As ITargetBlock(Of TInput)) As IObserver(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObserver&lt;TInput&gt; ^ AsObserver(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-107">Especifica o tipo de entrada aceita pelo bloco de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-107">Specifies the type of input accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="ae2c7-108">O destino a ser encapsulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-108">The target to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-109">Cria uma nova abstração <see cref="T:System.IObserver`1" /> em relação a <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-109">Creates a new <see cref="T:System.IObserver`1" /> abstraction over the  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-110">Um observador que encapsula o bloco de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-110">An observer that wraps the target block.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="ae2c7-111">Especifica o tipo de dados contidos na fonte de primeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-111">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="ae2c7-112">Especifica o tipo de dados contidos na fonte de segundo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-112">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="ae2c7-113">A primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-113">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="ae2c7-114">O manipulador a ser executado nos dados da primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-114">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="ae2c7-115">A segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-115">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="ae2c7-116">O manipulador a ser executado nos dados da segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-116">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-117">Monitora duas fontes de fluxo de dados, invocando o manipulador fornecido para a fonte que disponibilizar os dados primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-117">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-118">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a escolha assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-118">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="ae2c7-119">Se ambas as fontes forem concluídas antes de concluir a opção, a tarefa resultante será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-119">If both sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-120">Quando uma das fontes tem dados disponíveis e os propaga com êxito para a escolha, a tarefa resultante será concluída quando o manipulador for concluído; se o manipulador gerar uma exceção, a tarefa terminará no estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterá a exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-120">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="ae2c7-121">Caso contrário, a tarefa será finalizada com seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> definido como 0 ou 1 para representar a primeira ou segunda fonte, respectivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-121">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
          <span data-ttu-id="ae2c7-122">Esse método só consumirá um elemento de uma das duas fontes de dados, nunca de ambas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-122">This method will only consume an element from one of the two data sources, never both.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-123">O <paramref name="source1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-123">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-124">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-124">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-125">O <paramref name="action1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-125">The  <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-126">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-126">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-127">O <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-127">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-128">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-128">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-129">O <paramref name="action2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-129">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="ae2c7-130">Especifica o tipo de dados contidos na fonte de primeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-130">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="ae2c7-131">Especifica o tipo de dados contidos na fonte de segundo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-131">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="ae2c7-132">A primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-132">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="ae2c7-133">O manipulador a ser executado nos dados da primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-133">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="ae2c7-134">A segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-134">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="ae2c7-135">O manipulador a ser executado nos dados da segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-135">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="ae2c7-136">As opções com as quais esta escolha será configurada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-136">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-137">Monitora duas fontes de fluxo de dados, invocando o manipulador fornecido para a fonte que disponibilizar os dados primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-137">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-138">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a escolha assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-138">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="ae2c7-139">Se ambas as fontes forem concluídas antes de concluir a opção ou, se o <see cref="T:System.Threading.CancellationToken" /> fornecido como parte do <paramref name="dataflowBlockOptions" /> foi cancelado antes de concluir a opção, a tarefa resultante será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-139">If both sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-140">Quando uma das fontes tem dados disponíveis e os propaga com êxito para a escolha, a tarefa resultante será concluída quando o manipulador for concluído; se o manipulador gerar uma exceção, a tarefa terminará no estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterá a exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-140">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="ae2c7-141">Caso contrário, a tarefa será finalizada com seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> definido como 0 ou 1 para representar a primeira ou segunda fonte, respectivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-141">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-142">O <paramref name="source1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-142">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-143">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-143">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-144">O <paramref name="action1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-144">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-145">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-145">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-146">O <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-146">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-147">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-147">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-148">O <paramref name="action2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-148">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-149">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-149">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-150">O <paramref name="dataflowBlockOptions" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-150">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2, T3) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2), source3 As ISourceBlock(Of T3), action3 As Action(Of T3)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="ae2c7-151">Especifica o tipo de dados contidos na fonte de primeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-151">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="ae2c7-152">Especifica o tipo de dados contidos na fonte de segundo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-152">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="ae2c7-153">Especifica o tipo de dados contidos na fonte de terceiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-153">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="ae2c7-154">A primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-154">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="ae2c7-155">O manipulador a ser executado nos dados da primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-155">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="ae2c7-156">A segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-156">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="ae2c7-157">O manipulador a ser executado nos dados da segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-157">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="ae2c7-158">A terceira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-158">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="ae2c7-159">O manipulador a ser executado nos dados da terceira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-159">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-160">Monitora as três fontes de fluxo de dados, invocando o manipulador fornecido para a fonte que disponibilizar os dados primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-160">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-161">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a escolha assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-161">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="ae2c7-162">Se todas as fontes forem concluídas antes de concluir a opção, a tarefa resultante será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-162">If all sources are completed prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-163">Quando uma das fontes tem dados disponíveis e os propaga com êxito para a escolha, a tarefa resultante será concluída quando o manipulador for concluído; se o manipulador gerar uma exceção, a tarefa terminará no estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterá a exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-163">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="ae2c7-164">Caso contrário, a tarefa terminará com a seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> definido para o índice de base 0 da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-164">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="ae2c7-165">Esse método só consumirá um elemento de uma das fontes de dados, nunca mais de uma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-165">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-166">O <paramref name="source1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-166">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-167">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-167">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-168">O <paramref name="action1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-168">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-169">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-169">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-170">O <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-170">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-171">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-171">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-172">O <paramref name="action2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-172">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-173">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-173">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-174">O <paramref name="source3" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-174">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-175">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-175">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-176">O <paramref name="action3" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-176">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1">
          <span data-ttu-id="ae2c7-177">Especifica o tipo de dados contidos na fonte de primeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-177">Specifies type of data contained in the first source.</span>
          </span>
        </typeparam>
        <typeparam name="T2">
          <span data-ttu-id="ae2c7-178">Especifica o tipo de dados contidos na fonte de segundo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-178">Specifies type of data contained in the second source.</span>
          </span>
        </typeparam>
        <typeparam name="T3">
          <span data-ttu-id="ae2c7-179">Especifica o tipo de dados contidos na fonte de terceiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-179">Specifies type of data contained in the third source.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="ae2c7-180">A primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-180">The first source.</span>
          </span>
        </param>
        <param name="action1">
          <span data-ttu-id="ae2c7-181">O manipulador a ser executado nos dados da primeira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-181">The handler to execute on data from the first source.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="ae2c7-182">A segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-182">The second source.</span>
          </span>
        </param>
        <param name="action2">
          <span data-ttu-id="ae2c7-183">O manipulador a ser executado nos dados da segunda origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-183">The handler to execute on data from the second source.</span>
          </span>
        </param>
        <param name="source3">
          <span data-ttu-id="ae2c7-184">A terceira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-184">The third source.</span>
          </span>
        </param>
        <param name="action3">
          <span data-ttu-id="ae2c7-185">O manipulador a ser executado nos dados da terceira origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-185">The handler to execute on data from the third source.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="ae2c7-186">As opções com as quais esta escolha será configurada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-186">The options with which to configure this choice.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-187">Monitora as três fontes de fluxo de dados, invocando o manipulador fornecido para a fonte que disponibilizar os dados primeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-187">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-188">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa a escolha assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-188">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span>
          </span>
          <span data-ttu-id="ae2c7-189">Se todas as fontes forem concluídas antes de concluir a opção ou, se o <see cref="T:System.Threading.CancellationToken" /> fornecido como parte do <paramref name="dataflowBlockOptions" /> foi cancelado antes de concluir a opção, a tarefa resultante será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-189">If all sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-190">Quando uma das fontes tem dados disponíveis e os propaga com êxito para a escolha, a tarefa resultante será concluída quando o manipulador for concluído; se o manipulador gerar uma exceção, a tarefa terminará no estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e conterá a exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-190">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span>
          </span>
          <span data-ttu-id="ae2c7-191">Caso contrário, a tarefa terminará com a seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> definido para o índice de base 0 da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-191">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span>
          </span>
          <span data-ttu-id="ae2c7-192">Esse método só consumirá um elemento de uma das fontes de dados, nunca mais de uma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-192">This method will only consume an element from one of the data sources, never more than one.</span>
          </span>
          <span data-ttu-id="ae2c7-193">Se o cancelamento for solicitado após um elemento ser recebido, a solicitação de cancelamento será ignorada e o manipulador relevante terá permissão para executar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-193">If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-194">O <paramref name="source1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-194">The <paramref name="source1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-195">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-195">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-196">O <paramref name="action1" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-196">The <paramref name="action1" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-197">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-197">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-198">O <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-198">The <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-199">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-199">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-200">O <paramref name="action2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-200">The <paramref name="action2" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-201">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-201">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-202">O <paramref name="source3" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-202">The <paramref name="source3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-203">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-203">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-204">O <paramref name="action3" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-204">The <paramref name="action3" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-205">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-205">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-206">O <paramref name="dataflowBlockOptions" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-206">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encapsulate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt; Encapsulate&lt;TInput,TOutput&gt; (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!!TInput, !!TOutput&gt; Encapsulate&lt;TInput, TOutput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encapsulate(Of TInput, TOutput) (target As ITargetBlock(Of TInput), source As ISourceBlock(Of TOutput)) As IPropagatorBlock(Of TInput, TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt; ^ Encapsulate(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-207">Especifica o tipo de entrada esperado pelo destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-207">Specifies the type of input expected by the target.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-208">Especifica o tipo de saída produzida pela origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-208">Specifies the type of output produced by the source.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="ae2c7-209">O destino a ser encapsulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-209">The target to encapsulate.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="ae2c7-210">A origem a ser encapsulada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-210">The source to encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-211">Encapsula um destino e uma origem em um único propagador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-211">Encapsulates a target and a source into a single propagator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-212">O destino e a origem encapsulados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-212">The encapsulated target and source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-213">O <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> método requer dois blocos existentes: um bloco de destino (uma instância de uma classe que implementa <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) e um bloco de código-fonte (uma instância de uma classe que implementa <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span><span class="sxs-lookup"><span data-stu-id="ae2c7-213">The <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> method requires two existing blocks: a target block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) and a source block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span></span> <span data-ttu-id="ae2c7-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> cria uma nova instância de uma classe interna que se conecta o <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> membros de interface de `target` parâmetro e o <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> membros de interface de `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> creates a new instance of an internal class that connects the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> interface members to the `target` parameter and the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> interface members to the `source` parameter.</span></span>  <span data-ttu-id="ae2c7-215">Ambos <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> e <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derivam <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-215">Both <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> and <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derive from <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span></span> <span data-ttu-id="ae2c7-216">Conclusão de bloco é passado explicitamente de fontes para destinos.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-216">Block completion is explicitly passed from sources to targets.</span></span> <span data-ttu-id="ae2c7-217">Portanto, o <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> e <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> métodos estão conectados ao destino durante o <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> propriedade está conectada à fonte de.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-217">Therefore, the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> and <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> methods are connected to the target while the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> property is connected to the source.</span></span>  <span data-ttu-id="ae2c7-218">Certifique-se de que, quando o destino metade for concluído, a fonte de metade obtém concluído da maneira mais adequada; Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="ae2c7-218">You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</span></span>  
  
 `target.Completion.ContinueWith(completion => source.Complete());`  
  
 <span data-ttu-id="ae2c7-219">Ou, se você quiser se propague o tipo de conclusão, você pode usar esse código mais sofisticado:</span><span class="sxs-lookup"><span data-stu-id="ae2c7-219">Or, if you want to propagate the completion type, you can use this more sophisticated code:</span></span>  
  
```  
target.Completion.ContinueWith(completion => { if (completion.IsFaulted) 3   
  
((IDataflowBlock)batchBlock).Fault(completion.Exception);   
else   
batchBlock.Complete();   
});  
  
```  
  
 <span data-ttu-id="ae2c7-220">Explicitamente, você deve fornecer a propagação de mensagem do destino para a origem.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-220">You must also explicitly provide the message propagation from target to source.</span></span> <span data-ttu-id="ae2c7-221">O benefício dessa conexão explícita é que ele oferece liberdade para executar qualquer processamento irrestrito entre os dois blocos encapsulados.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-221">The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</span></span> <span data-ttu-id="ae2c7-222">Você pode fazer isso por codificação de processamento necessário em delegados os blocos (se os blocos levar delegados) ou inserindo uma subrede de blocos entre eles.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-222">You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</span></span> <span data-ttu-id="ae2c7-223">A maneira mais fácil é usar um bloco que usa delegados; Por exemplo, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (se aplicável), ou um bloco personalizado.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-223">The easier way is to use a block that takes delegates; for example, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (if applicable), or a custom block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-224">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-224">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-225">A origem da qual ocorrerá a vinculação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-225">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ae2c7-226">O <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> ao qual a fonte será conectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-226">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-227">Vincula o <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> ao <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-227">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-228">Um <see cref="T:System.IDisposable" /> que, após chamar <see langword="Dispose" />, desvinculará a origem do destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-228">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-229">O <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-229">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-230">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-230">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-231">O <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-231">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-232">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-232">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-233">A origem da qual ocorrerá a vinculação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-233">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ae2c7-234">O <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> ao qual a fonte será conectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-234">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="ae2c7-235">O filtro de uma mensagem deve ser passado para ser propagado da origem para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-235">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-236">Vincula o <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> ao <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> especificado usando o filtro indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-236">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-237">Um <see cref="T:System.IDisposable" /> que, após chamar <see langword="Dispose" />, desvinculará a origem do destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-237">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-238">O <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-238">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-239">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-239">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-240">O <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-240">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae2c7-241">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-241">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-242">O <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-242">The <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions, predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-243">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-243">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-244">A origem da qual ocorrerá a vinculação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-244">The source from which to link.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="ae2c7-245">O <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> ao qual a fonte será conectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-245">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="ae2c7-246">Um dos valores de enumeração que especifica como configurar um link entre blocos de fluxo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-246">One of the enumeration values that specifies how to configure a link between dataflow blocks.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="ae2c7-247">O filtro de uma mensagem deve ser passado para ser propagado da origem para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-247">The filter a message must pass in order for it to propagate from the source to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-248">Vincula o <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> para o <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> especificado usando o filtro indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-248">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-249">Um <see cref="T:System.IDisposable" /> que, após chamar <see langword="Dispose" />, desvinculará a origem do destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-249">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-250">O <paramref name="source" /> é nulo (Nothing no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-250">The  <paramref name="source" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="ae2c7-251">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-251">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-252">O <paramref name="target" /> é nulo (Nothing no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-252">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="ae2c7-253">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-253">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-254">O <paramref name="linkOptions" /> é nulo (Nothing no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-254">The  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="ae2c7-255">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-255">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-256">O <paramref name="predicate" /> é nulo (Nothing no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-256">The  <paramref name="predicate" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NullTarget&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; NullTarget&lt;TInput&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; NullTarget&lt;TInput&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <MemberSignature Language="VB.NET" Value="Public Function NullTarget(Of TInput) () As ITargetBlock(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA; static System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ NullTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-257">O tipo de mensagens que pode aceitar esse bloco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-257">The type of the messages this block can accept.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ae2c7-258">Obtém um bloco de destino que aceita de forma síncrona todas as mensagens oferecidas a ele e os solta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-258">Gets a target block that synchronously accepts all messages offered to it and drops them.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-259">Um <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> que aceita e subsequentemente solta todas as mensagens oferecidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-259">A <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> that accepts and subsequently drops all offered messages.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OutputAvailableAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-260">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-260">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-261">A origem a ser monitorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-261">The source to monitor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-262">Fornece um <see cref="T:System.Threading.Tasks.Task`1" /> que monitora assincronamente a saída disponível na fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-262">Provides a <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-263">Um <see cref="T:System.Threading.Tasks.Task`1" /> que informa se e quando mais saída mais está disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-263">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="ae2c7-264">Se, quando a tarefa for concluída, seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> for <see langword="true" />, mais saída estará disponível na origem (embora outro consumidor da origem possa recuperar os dados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-264">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="ae2c7-265">Se ela retorna <see langword="false" />, mais saída não estará disponível nunca mais, devido à conclusão da fonte antes da saída estar disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-265">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-266">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-266">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-267">A origem a ser monitorada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-267">The source to monitor.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-268">O token de cancelamento com o qual cancelar a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-268">The cancellation token with which to cancel the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-269">Fornece um <see cref="T:System.Threading.Tasks.Task`1" /> que monitora assincronamente a fonte de saída disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-269">Provides a  <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-270">Um <see cref="T:System.Threading.Tasks.Task`1" /> que informa se e quando mais saída mais está disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-270">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span>
          </span>
          <span data-ttu-id="ae2c7-271">Se, quando a tarefa for concluída, seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> for <see langword="true" />, mais saída estará disponível na origem (embora outro consumidor da origem possa recuperar os dados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-271">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span>
          </span>
          <span data-ttu-id="ae2c7-272">Se ela retorna <see langword="false" />, mais saída não estará disponível nunca mais, devido à conclusão da fonte antes da saída estar disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-272">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static bool Post&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Post&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Post(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Post(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-273">Especifica o tipo de dados aceitos pelo bloco de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-273">Specifies the type of data accepted by the target block.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="ae2c7-274">O bloco de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-274">The target block.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ae2c7-275">O item que está sendo oferecido para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-275">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-276">Adiciona um item ao <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-276">Posts an item to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-277">
            <see langword="true" /> se o item foi aceito pelo bloco de destino; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-277">
              <see langword="true" /> if the item was accepted by the target block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-278">Esse método retornará depois que o bloco de destino decidiu aceitar ou recusar o item, mas a menos que o contrário ditada pela semântica especial do bloco de destino, ele não espera para o item a ser processada na verdade.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-278">This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</span></span> <span data-ttu-id="ae2c7-279">Por exemplo, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> retornará <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> assim que o item postado tenham sido armazenadas em sua fila de entrada).</span><span class="sxs-lookup"><span data-stu-id="ae2c7-279">For example, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> will return from <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> as soon as it has stored the posted item into its input queue).</span></span> <span data-ttu-id="ae2c7-280">Da perspectiva de processamento do bloco, `Post` é assíncrona.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-280">From the perspective of the block's processing, `Post` is asynchronous.</span></span> <span data-ttu-id="ae2c7-281">Para blocos de destino que suporte adiar oferecidos mensagens ou dos blocos que podem fazer mais processamento no seu `Post` implementação, considere o uso de <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, que será retornado imediatamente e permitirá que o destino adiar a mensagem postada e posteriormente consumi-lo após `SendAsync` retorna.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-281">For target blocks that support postponing offered messages, or for blocks that may do more processing in their `Post` implementation, consider using <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, which will return immediately and will enable the target to postpone the posted message and later consume it after `SendAsync` returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput)) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-282">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-282">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-283">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-283">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-284">Recebe de forma síncrona um valor de uma origem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-284">Synchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-285">O valor recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-285">The received value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-286">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-286">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ae2c7-287">Nenhum item pode ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-287">No item could be received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-288">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-288">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-289">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-289">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-290">O token a ser usado para cancelar a operação de recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-290">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-291">Recebe de forma síncrona um valor de uma origem especificada e fornece um token para cancelar a operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-291">Synchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-292">O valor recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-292">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-293">Se a fonte oferecido com êxito um item que foi recebido por essa operação, esse item será retornado mesmo que ocorra uma solicitação de cancelamento simultâneas.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-293">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-294">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-294">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ae2c7-295">Nenhum item pode ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-295">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="ae2c7-296">A operação foi cancelada antes de um item ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-296">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-297">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-297">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-298">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-298">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ae2c7-299">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-299">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-300">Recebe de forma síncrona um valor de uma origem especificada, observando um período de tempo limite opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-300">Synchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-301">O valor recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-301">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-302">Se a fonte oferecido com êxito um item que foi recebido por essa operação, esse item será retornado mesmo que ocorra um tempo limite simultâneo.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-302">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae2c7-303">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um período de tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-303">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="ae2c7-304">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-304">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-305">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-305">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-306">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-306">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ae2c7-307">Nenhum item pode ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-307">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="ae2c7-308">O tempo limite especificado expirou antes de um item ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-308">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-309">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-309">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-310">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-310">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ae2c7-311">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-311">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-312">O token a ser usado para cancelar a operação de recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-312">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-313">Recebe de forma síncrona um valor de uma fonte especificada, fornecendo um token para cancelar a operação e observando um intervalo de tempo limite opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-313">Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-314">O valor recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-314">The received value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-315">Se a fonte oferecido com êxito um valor do item que foi recebido por essa operação, esse valor será retornado, mesmo que uma solicitação de cancelamento ou de tempo limite simultânea ocorra.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-315">If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-316">O <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-316">The <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae2c7-317">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um período de tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-317">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="ae2c7-318">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-318">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-319">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-319">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ae2c7-320">Nenhum item pode ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-320">No item could be received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="ae2c7-321">O tempo limite especificado expirou antes de um item ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-321">The specified time-out expired before an item was received from the source.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="ae2c7-322">A operação foi cancelada antes de um item ser recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-322">The operation was canceled before an item was received from the source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-323">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-323">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-324">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-324">The source from which to receive the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-325">Recebe assincronamente um valor de uma origem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-325">Asynchronously receives a value from a specified source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-326">Uma tarefa que representa a operação de recebimento assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-326">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="ae2c7-327">Quando um valor de item é recebido com êxito da origem, a tarefa retornada é concluída e seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> retorna o valor recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-327">When an item value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the received value.</span>
          </span>
          <span data-ttu-id="ae2c7-328">Se um valor do item não puder ser recuperado porque a fonte está vazia e concluída, uma exceção <see cref="T:System.InvalidOperationException" /> será gerada na tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-328">If an item value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-329">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-329">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-330">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-330">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-331">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-331">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-332">O token a ser usado para cancelar a operação de recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-332">The token to use to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-333">Recebe assincronamente um valor de uma origem especificada e fornece um token para cancelar a operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-333">Asynchronously receives a value from a specified source and provides a token to cancel the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-334">Uma tarefa que representa a operação de recebimento assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-334">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="ae2c7-335">Quando um valor é recebido com êxito da origem, a tarefa retornada é concluída e seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> retorna o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-335">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="ae2c7-336">Se um valor não puder ser recuperado porque o cancelamento foi solicitado, a tarefa retornada será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-336">If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-337">Se o valor não puder ser recuperado porque a fonte está vazia e concluída, uma exceção <see cref="T:System.InvalidOperationException" /> será gerada na tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-337">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-338">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-338">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-339">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-339">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-340">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-340">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ae2c7-341">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-341">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-342">Recebe assincronamente um valor de uma origem especificada, observando um período de tempo limite opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-342">Asynchronously receives a value from a specified source, observing an optional time-out period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-343">Uma tarefa que representa a operação de recebimento assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-343">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="ae2c7-344">Quando um valor é recebido com êxito da origem, a tarefa retornada é concluída e seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> retorna o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-344">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="ae2c7-345">Se um valor não puder ser recuperado porque o tempo limite expirou, a tarefa retornada será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-345">If a value cannot be retrieved because the time-out expired, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-346">Se o valor não puder ser recuperado porque a fonte está vazia e concluída, uma exceção <see cref="T:System.InvalidOperationException" /> será gerada na tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-346">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-347">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-347">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae2c7-348">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um período de tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-348">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="ae2c7-349">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-349">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-350">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-350">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-351">O tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-351">The type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-352">A origem da qual o valor será recebido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-352">The source from which to receive the value.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ae2c7-353">O intervalo de tempo máximo, em milissegundos, de espera para a operação síncrona ser concluída ou um intervalo que representa -1 milissegundos para aguardar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-353">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-354">O token que pode ser usado para cancelar a operação de recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-354">The token which may be used to cancel the receive operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-355">Recebe assincronamente um valor de uma fonte especificada, fornecendo um token para cancelar a operação e observando um intervalo de tempo limite opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-355">Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-356">Uma tarefa que representa a operação de recebimento assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-356">A task that represents the asynchronous receive operation.</span>
          </span>
          <span data-ttu-id="ae2c7-357">Quando um valor é recebido com êxito da origem, a tarefa retornada é concluída e seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> retorna o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-357">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span>
          </span>
          <span data-ttu-id="ae2c7-358">Se um valor não puder ser recuperado porque o tempo limite expirou ou o cancelamento foi solicitado, a tarefa retornada será cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-358">If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</span>
          </span>
          <span data-ttu-id="ae2c7-359">Se o valor não puder ser recuperado porque a fonte está vazia e concluída, uma exceção <see cref="T:System.InvalidOperationException" /> será gerada na tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-359">If the value cannot be retrieved because the source is empty and completed, an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-360">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-360">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae2c7-361">
            <paramref name="timeout" /> é um número negativo diferente de -1 milissegundo, que representa um período de tempo limite infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-361">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span>
          </span>
          <span data-ttu-id="ae2c7-362">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-362">-or-</span>
          </span>
          <span data-ttu-id="ae2c7-363">
            <paramref name="timeout" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-363">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-364">Especifica o tipo de dados para enviar para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-364">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="ae2c7-365">O destino no qual os dados serão publicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-365">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ae2c7-366">O item que está sendo oferecido para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-366">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-367">Oferece assincronamente uma mensagem para o bloco de mensagens de destino, permitindo adiamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-367">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-368">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o envio assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-368">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="ae2c7-369">Se o destino aceitar e consumir o elemento oferecido durante a chamada para <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, após retornar da chamada, o <see cref="T:System.Threading.Tasks.Task`1" /> resultante será concluído e sua propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> retornará <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-369">If the target accepts and consumes the offered element during the call to <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="ae2c7-370">Se o destino recusar o elemento oferecido durante a chamada, após retornar da chamada, o <see cref="T:System.Threading.Tasks.Task`1" /> resultante será concluído e sua propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> retornará <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-370">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ae2c7-371">Se o destino adiar o elemento oferecido, este será armazenado em buffer até o momento em que o destino o consumir ou liberar, quando então a tarefa estará concluída, com seu <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicando se a mensagem foi consumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-371">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="ae2c7-372">Se o destino nunca tentar consumir ou liberar a mensagem, a tarefa retornada nunca será concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-372">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-373">O <paramref name="target" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-373">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="ae2c7-374">Especifica o tipo de dados para enviar para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-374">Specifies the type of the data to post to the target.</span>
          </span>
        </typeparam>
        <param name="target">
          <span data-ttu-id="ae2c7-375">O destino no qual os dados serão publicados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-375">The target to which to post the data.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ae2c7-376">O item que está sendo oferecido para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-376">The item being offered to the target.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ae2c7-377">O token de cancelamento com o qual solicitar o cancelamento da operação de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-377">The cancellation token with which to request cancellation of the send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-378">Oferece assincronamente uma mensagem para o bloco de mensagens de destino, permitindo adiamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-378">Asynchronously offers a message to the target message block, allowing for postponement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-379">Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o envio assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-379">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span>
          </span>
          <span data-ttu-id="ae2c7-380">Se o destino aceitar e consumir o elemento oferecido durante a chamada para SendAsync, após retornar da chamada, o <see cref="T:System.Threading.Tasks.Task`1" /> resultante será concluído e sua propriedade <c>Resultado</c> retornará verdadeiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-380">If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return true.</span>
          </span>
          <span data-ttu-id="ae2c7-381">Se o destino recusar o elemento oferecido durante a chamada, após retornar da chamada, o <see cref="T:System.Threading.Tasks.Task`1" /> resultante será concluído e sua propriedade <c>Resultado</c> retornará falso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-381">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return false.</span>
          </span>
          <span data-ttu-id="ae2c7-382">Se o destino adiar o elemento oferecido, este será armazenado em buffer até o momento em que o destino o consumir ou liberar, quando então a tarefa estará concluída, com seu <c>Resultado</c> indicando se a mensagem foi consumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-382">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <c>Result</c> indicating whether the message was consumed.</span>
          </span>
          <span data-ttu-id="ae2c7-383">Se o destino nunca tentar consumir ou liberar a mensagem, a tarefa retornada nunca será concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-383">If the target never attempts to consume or release the message, the returned task will never complete.</span>
          </span>
          <span data-ttu-id="ae2c7-384">Se o cancelamento for solicitado antes do destino ter consumido com êxito os dados enviados, a tarefa retornada será concluída no estado Cancelado e os dados não estarão mais disponíveis para o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-384">If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae2c7-385">O <paramref name="target" /> é nulo (Nothing no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-385">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReceive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt; source, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReceive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!!TOutput&gt; source, [out] !!TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReceive(Of TOutput) (source As IReceivableSourceBlock(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReceive(System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt; ^ source, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="item" Type="TOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="ae2c7-386">Especifica o tipo de dados contidos na origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-386">Specifies the type of data contained in the source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="ae2c7-387">A origem da qual receber.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-387">The source from which to receive.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ae2c7-388">O item recebido da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-388">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae2c7-389">Tentativas de receber assincronamente um item do <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-389">Attempts to synchronously receive an item from the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae2c7-390">
            <see langword="true" /> se foi possível receber um item; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae2c7-390">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae2c7-391">Esse método não espera até que a origem tem um item para fornecer.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-391">This method does not wait until the source has an item to provide.</span></span>  
  
 <span data-ttu-id="ae2c7-392">Será retornado se um elemento estava disponível ou não.</span><span class="sxs-lookup"><span data-stu-id="ae2c7-392">It will return whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>