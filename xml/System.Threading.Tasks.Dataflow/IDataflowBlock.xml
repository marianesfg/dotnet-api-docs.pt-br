<Type Name="IDataflowBlock" FullName="System.Threading.Tasks.Dataflow.IDataflowBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f93664f38a2b1309ca4ebb43f549e6e4a57847d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56345990" /></Metadata><TypeSignature Language="C#" Value="public interface IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataflowBlock" />
  <TypeSignature Language="F#" Value="type IDataflowBlock = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Representa um bloco de fluxo de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit" Usage="iDataflowBlock.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sinaliza para o <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> que ele não deve aceitar nem produzir mais mensagens, e não deve consumir mais mensagens adiadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Depois que <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> foi chamado em um bloco de fluxo de dados, esse bloco será concluída e seu <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> tarefa entrará no estado final depois de processar todos os dados disponíveis anteriormente. <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> será não bloco aguardando a conclusão ocorra, mas em vez disso, iniciará a solicitação; para aguardar a conclusão ocorra, o <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> tarefa pode ser usada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um <see cref="T:System.Threading.Tasks.Task" /> que representa a operação assíncrona e a conclusão do bloco de fluxo de dados.</summary>
        <value>A tarefa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um bloco de fluxo de dados é considerado concluído quando ele não está processando uma mensagem e quando ele tem a garantia de que ele não processará mais mensagens. Retornado <xref:System.Threading.Tasks.Task> será a transição para um estado concluído quando o bloco associado for concluída. Ele fará a transição para o <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> estado quando o bloco conclui o processamento com êxito, de acordo com o bloco de fluxo de dados definido pelo semântica. Ele fará a transição para o <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted> estado quando o bloco de fluxo de dados concluiu o processamento prematuramente devido a uma exceção sem tratamento, e ele fará a transição para o <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> estado quando o bloco de fluxo de dados foi concluída Processando prematuramente devido ao recebimento de uma solicitação de cancelamento. Se a tarefa é concluída na <xref:System.Threading.Tasks.TaskStatus.Faulted> estado, seu `Exception` propriedade retornará um <xref:System.AggregateException> que contém uma ou mais exceções que fez o bloco falha.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public void Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Fault(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member Fault : Exception -&gt; unit" Usage="iDataflowBlock.Fault exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">O <see cref="T:System.Exception" /> que causou a falha.</param>
        <summary>Faz com que o <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> seja concluído em um estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> foi chamado em um bloco de fluxo de dados, esse bloco será concluída e seu <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> tarefa entrará no estado final. Falha de um bloco, como cancelar um bloco, faz com que mensagens em buffer (mensagens de entrada não processadas, bem como mensagens de saída unoffered) serão perdidos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O <paramref name="exception" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>