<Type Name="ExecutionDataflowBlockOptions" FullName="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2441cee5ecf4a65633b6e22821a6642ef80abbdf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExecutionDataflowBlockOptions : System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExecutionDataflowBlockOptions extends System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ExecutionDataflowBlockOptions&#xA;Inherits DataflowBlockOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionDataflowBlockOptions : System::Threading::Tasks::Dataflow::DataflowBlockOptions" />
  <TypeSignature Language="F#" Value="type ExecutionDataflowBlockOptions = class&#xA;    inherit DataflowBlockOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Dataflow.DataflowBlockOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2db10-101">Fornece as opções usadas para configurar o processamento executado pelos blocos de fluxo de dados que processam cada mensagem por meio da invocação de um representante fornecido por um usuário.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2db10-101">Provides options used to configure the processing performed by dataflow blocks that process each message through the invocation of a user-provided delegate.</span>
      </span>
      <span data-ttu-id="2db10-102">Esses são blocos de fluxo de dados, como <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> e <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2db10-102">These are dataflow blocks such as  <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> and  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 <span data-ttu-id="2db10-103"><xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> é mutável e pode ser configurado por meio de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="2db10-103"><xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> is mutable and can be configured through its properties.</span></span>  
  
 <span data-ttu-id="2db10-104">Quando as opções de configuração específicos não forem definidas, os seguintes padrões são usados:</span><span class="sxs-lookup"><span data-stu-id="2db10-104">When specific configuration options are not set, the following defaults are used:</span></span>  
  
|<span data-ttu-id="2db10-105">Opções</span><span class="sxs-lookup"><span data-stu-id="2db10-105">Options</span></span>|<span data-ttu-id="2db10-106">Padrão</span><span class="sxs-lookup"><span data-stu-id="2db10-106">Default</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="2db10-107">TaskScheduler</span><span class="sxs-lookup"><span data-stu-id="2db10-107">TaskScheduler</span></span>|<xref:System.Threading.Tasks.TaskScheduler.Default%2A>|  
|<span data-ttu-id="2db10-108">CancellationToken</span><span class="sxs-lookup"><span data-stu-id="2db10-108">CancellationToken</span></span>|<xref:System.Threading.CancellationToken.None%2A>|  
|<span data-ttu-id="2db10-109">MaxMessagesPerTask</span><span class="sxs-lookup"><span data-stu-id="2db10-109">MaxMessagesPerTask</span></span>|<span data-ttu-id="2db10-110">DataflowBlockOptions.Unbounded (-1)</span><span class="sxs-lookup"><span data-stu-id="2db10-110">DataflowBlockOptions.Unbounded (-1)</span></span>|  
|<span data-ttu-id="2db10-111">BoundedCapacity</span><span class="sxs-lookup"><span data-stu-id="2db10-111">BoundedCapacity</span></span>|<span data-ttu-id="2db10-112">DataflowBlockOptions.Unbounded (-1)</span><span class="sxs-lookup"><span data-stu-id="2db10-112">DataflowBlockOptions.Unbounded (-1)</span></span>|  
|<span data-ttu-id="2db10-113">MaxDegreeOfParallelism</span><span class="sxs-lookup"><span data-stu-id="2db10-113">MaxDegreeOfParallelism</span></span>|<span data-ttu-id="2db10-114">1</span><span class="sxs-lookup"><span data-stu-id="2db10-114">1</span></span>|  
  
 <span data-ttu-id="2db10-115">Bloco de fluxo de dados capturar o estado das opções em sua construção.</span><span class="sxs-lookup"><span data-stu-id="2db10-115">Dataflow block capture the state of the options at their construction.</span></span> <span data-ttu-id="2db10-116">As alterações subsequentes fornecido <xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> instância não deve afetar o comportamento de um bloco de fluxo de dados.</span><span class="sxs-lookup"><span data-stu-id="2db10-116">Subsequent changes to the provided <xref:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions> instance should not affect the behavior of a dataflow block.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExecutionDataflowBlockOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExecutionDataflowBlockOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2db10-117">Inicializa um novo <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2db10-117">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2db10-118">Obtém o número máximo de mensagens que podem ser processadas pelo bloco simultaneamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2db10-118">Gets the maximum number of messages that may be processed by the block concurrently.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2db10-119">O número máximo de mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2db10-119">The maximum number of messages.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleProducerConstrained">
      <MemberSignature Language="C#" Value="public bool SingleProducerConstrained { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleProducerConstrained" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleProducerConstrained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleProducerConstrained { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleProducerConstrained : bool with get, set" Usage="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2db10-120">Obtém se o código que usa o bloco de fluxo de dados é restrito a um produtor por vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2db10-120">Gets whether code using the dataflow block is constrained to one producer at a time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2db10-121">Retorna <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2db10-121">Returns  <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2db10-122">Essa propriedade padroniza como false, que o bloco pode ser usado por vários produtores simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="2db10-122">This property defaults to false, such that the block may be used by multiple producers concurrently.</span></span> <span data-ttu-id="2db10-123">Essa propriedade só deve ser definida como true se o código usando o bloco pode garantir que ele só será usado por um operador (por exemplo, uma fonte de vinculado para o bloco) ao mesmo tempo, que significa que métodos, como Post, concluir, falhas e OfferMessage nunca serão chamados simultâneos r.</span><span class="sxs-lookup"><span data-stu-id="2db10-123">This property should only be set to true if the code using the block can guarantee that it will only ever be used by one producer (e.g. a source linked to the block) at a time, meaning that methods like Post, Complete, Fault, and OfferMessage will never be called concurrently.</span></span> <span data-ttu-id="2db10-124">Alguns blocos poderá aproveitar o conhecimento que haverá apenas um operador em um momento para oferecer melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="2db10-124">Some blocks may choose to capitalize on the knowledge that there will only be one producer at a time in order to provide better performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>