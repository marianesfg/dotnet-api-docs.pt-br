<Type Name="ScopeElementCollection" FullName="System.ServiceModel.Discovery.Configuration.ScopeElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8f795a7b775d3b423a5a7f1292538b52f272502" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49142945" /></Metadata><TypeSignature Language="C#" Value="public sealed class ScopeElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Discovery.Configuration.ScopeElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScopeElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Discovery.Configuration.ScopeElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScopeElementCollection&#xA;Inherits ServiceModelConfigurationElementCollection(Of ScopeElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScopeElementCollection sealed : System::ServiceModel::Configuration::ServiceModelConfigurationElementCollection&lt;System::ServiceModel::Discovery::Configuration::ScopeElement ^&gt;" />
  <TypeSignature Language="F#" Value="type ScopeElementCollection = class&#xA;    inherit ServiceModelConfigurationElementCollection&lt;ScopeElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Discovery.Configuration.ScopeElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ServiceModel.Discovery.Configuration.ScopeElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0b6bc-101">Um elemento de configuração que contém uma coleção de elementos de escopo.</span><span class="sxs-lookup"><span data-stu-id="0b6bc-101">A configuration element that contains a collection of scope elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b6bc-102">O exemplo a seguir mostra como adicionar dois URIs de escopo para um ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="0b6bc-102">The following example shows how to add two scope URIs for an endpoint.</span></span>  
  
```  
<configuration>  
    <system.serviceModel>  
      <services>  
        <service name="Microsoft.Samples.Discovery.CalculatorService"  
                 behaviorConfiguration="calculatorServiceBehavior">  
          <endpoint address=""  
                    binding="wsHttpBinding"  
                    contract="Microsoft.Samples.Discovery.ICalculatorService"  
                    behaviorConfiguration="ep1Behavior" />  
  
        </service>  
      </services>  
      <behaviors>  
        <serviceBehaviors>  
          <behavior name="calculatorServiceBehavior">  
            <serviceDiscovery />  
          </behavior>  
        </serviceBehaviors>  
        <endpointBehaviors>  
          <behavior name="ep1Behavior">  
            <endpointDiscovery>  
              <scopes>  
                <add scope="http://www.mycalculator.com"/>  
                <add scope="ldap:///ou=engineering,o=exampleorg,c=us"/>  
              </scopes>  
            </endpointDiscovery>  
          </behavior>            
        </endpointBehaviors>  
      </behaviors>  
      <extensions>  
        <behaviorExtensions>  
          <add name="serviceDiscovery" type="System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />  
          <add name="endpointDiscovery" type="System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />  
        </behaviorExtensions>  
      </extensions>  
    </system.serviceModel>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScopeElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScopeElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b6bc-103">Cria uma nova instância da classe <see cref="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />.</span><span class="sxs-lookup"><span data-stu-id="0b6bc-103">Creates a new instance of the <see cref="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member GetElementKey : System.Configuration.ConfigurationElement -&gt; obj&#xA;override this.GetElementKey : System.Configuration.ConfigurationElement -&gt; obj" Usage="scopeElementCollection.GetElementKey element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>