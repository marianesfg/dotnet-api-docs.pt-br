<Type Name="SoapAttributeOverrides" FullName="System.Xml.Serialization.SoapAttributeOverrides">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5122fddf1d6cc038f775b882a72ac089cb5269d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37484745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributeOverrides" />
  <TypeSignature Language="F#" Value="type SoapAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Permite substituir os atributos aplicados a propriedades, campos e classes quando se utiliza um <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar ou desserializar um objeto como codificado em SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.SoapAttributeOverrides> classe permite que um <xref:System.Xml.Serialization.XmlSerializer> para substituir a forma padrão de serializar um conjunto de objetos. Substituir a serialização dessa maneira tem dois usos: primeiro, você pode controlar e aumentar a serialização de objetos encontrados em uma DLL, mesmo se você não tenha acesso à fonte de; em segundo lugar, você pode criar um conjunto de classes serializáveis, mas serializar os objetos de várias maneiras. Por exemplo, em vez de serializar os membros de uma instância da classe como elementos XML, você pode serializá-los como atributos XML, resultando em um documento mais eficiente de transporte.  
  
 Depois de criar uma <xref:System.Xml.Serialization.SoapAttributeOverrides>, você cria um <xref:System.Xml.Serialization.XmlTypeMapping> usando o <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> método da <xref:System.Xml.Serialization.SoapReflectionImporter> classe. Passe o objeto resultante como um argumento para o <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> construtor. Resultante <xref:System.Xml.Serialization.XmlSerializer> usa os dados contidos pelo <xref:System.Xml.Serialization.SoapAttributeOverrides> substituir os atributos que controlam como os objetos são serializados. Para fazer isso, o <xref:System.Xml.Serialization.SoapAttributeOverrides> contém uma coleção dos tipos de objeto são substituídas, bem como um <xref:System.Xml.Serialization.SoapAttributes> associado com cada tipo de objeto substituídas. Cada <xref:System.Xml.Serialization.SoapAttributes> contém um conjunto apropriado de objetos de atributos que controlam como cada campo, propriedade ou classe é serializada.  
  
 O processo para criar e usar um <xref:System.Xml.Serialization.SoapAttributeOverrides> é da seguinte maneira:  
  
1.  Criará um <xref:System.Xml.Serialization.SoapAttributes>.  
  
2.  Crie um objeto de atributo que é apropriado para o objeto que está sendo substituído. Por exemplo, para substituir um campo ou propriedade, crie um <xref:System.Xml.Serialization.SoapElementAttribute>, usando o novo tipo derivado. Opcionalmente, você pode atribuir um novo <xref:System.Xml.Serialization.SoapElementAttribute.ElementName%2A> que substitui o nome do atributo ou o namespace da classe base.  
  
3.  Adicionar o objeto de atributo apropriado <xref:System.Xml.Serialization.SoapAttributes> propriedade ou a coleção. Por exemplo, você definiria o <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propriedade do <xref:System.Xml.Serialization.SoapAttributes> do objeto para o <xref:System.Xml.Serialization.SoapElementAttribute> e especifique o nome do membro que está sendo substituído.  
  
4.  Criará um <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
5.  Adicione a <xref:System.Xml.Serialization.SoapAttributes> para o <xref:System.Xml.Serialization.SoapAttributeOverrides> usando o <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> método. Se o objeto que está sendo substituído for um <xref:System.Xml.Serialization.SoapTypeAttribute>, você precisa apenas especificar o tipo do objeto substituído. Mas se você está substituindo um campo ou propriedade, você também deve especificar o nome do membro substituído.  
  
6.  Criar uma <xref:System.Xml.Serialization.XmlTypeMapping> usando o <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> método o <xref:System.Xml.Serialization.SoapReflectionImporter> classe.  
  
7.  Ao construir o <xref:System.Xml.Serialization.XmlSerializer>, passe o <xref:System.Xml.Serialization.XmlTypeMapping> para o <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> construtor.  
  
8.  Usar resultante <xref:System.Xml.Serialization.XmlSerializer> para serializar ou desserializar os objetos de classe.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group`. A serialização do `GroupName` e `IgnoreThis` campos e os membros do `GroupType` enumeração são substituídas. No `CreateOverrideSerializer` método, uma <xref:System.Xml.Serialization.SoapAttributeOverrides> é criado e para cada membro substituído ou enumeração, um <xref:System.Xml.Serialization.SoapAttributes> é criada com a propriedade apropriada definida e adicionado ao <xref:System.Xml.Serialization.SoapAttributeOverrides>. Uma <xref:System.Xml.Serialization.XmlTypeMapping> é criado usando o <xref:System.Xml.Serialization.SoapAttributeOverrides>e que <xref:System.Xml.Serialization.XmlTypeMapping> é usado para criar o <xref:System.Xml.Serialization.XmlSerializer> que substitui a serialização padrão.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group`. A serialização do `GroupName` e `IgnoreThis` campos e os membros do `GroupType` enumeração são substituídas. No `CreateOverrideSerializer` método, uma <xref:System.Xml.Serialization.SoapAttributeOverrides> é criado e para cada membro substituído ou enumeração, um <xref:System.Xml.Serialization.SoapAttributes> é criada com a propriedade apropriada definida e adicionado ao <xref:System.Xml.Serialization.SoapAttributeOverrides>. Uma <xref:System.Xml.Serialization.XmlTypeMapping> é criado usando o <xref:System.Xml.Serialization.SoapAttributeOverrides>e que <xref:System.Xml.Serialization.XmlTypeMapping> é usado para criar o <xref:System.Xml.Serialization.XmlSerializer> que substitui a serialização padrão.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> contidos pelo <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Type" /> do objeto que será substituído.</param>
        <param name="attributes">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
        <summary>Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> a uma coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.SoapAttributes> contém uma união dos objetos de atributo que fazem com que o <xref:System.Xml.Serialization.XmlSerializer> substituir seu comportamento de serialização padrão para um conjunto de objetos. Você escolha os objetos de atributo para colocar nas <xref:System.Xml.Serialization.SoapAttributes>, dependendo dos comportamentos específicos que você deseja substituir. Por exemplo, o <xref:System.Xml.Serialization.XmlSerializer> serializa um membro de classe como um elemento XML por padrão. Se você quiser que o membro a ser serializado como um atributo XML em vez disso, você precisará criar uma <xref:System.Xml.Serialization.SoapAttributeAttribute>, atribuí-lo para o <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> propriedade de um <xref:System.Xml.Serialization.SoapAttributes>e adicione o <xref:System.Xml.Serialization.XmlAttributes> para o <xref:System.Xml.Serialization.SoapAttributeOverrides>. Use o <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> método para adicionar o <xref:System.Xml.Serialization.SoapAttributes> para o <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 Use essa sobrecarga para adicionar um <xref:System.Xml.Serialization.SoapAttributes> que contém um <xref:System.Xml.Serialization.SoapTypeAttribute>. Porque o <xref:System.Xml.Serialization.SoapTypeAttribute> substitui a serialização de uma classe, você não precisa especificar um membro da classe para substituir, apenas o tipo da classe.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group`. A serialização do `GroupName` e `IgnoreThis` campos e os membros do `GroupType` enumeração são substituídas. No `CreateOverrideSerializer` método, uma <xref:System.Xml.Serialization.SoapAttributeOverrides> é criado e para cada membro substituído ou enumeração, um <xref:System.Xml.Serialization.SoapAttributes> é criada com a propriedade apropriada definida e adicionado ao <xref:System.Xml.Serialization.SoapAttributeOverrides>. Uma <xref:System.Xml.Serialization.XmlTypeMapping> é criado usando o <xref:System.Xml.Serialization.SoapAttributeOverrides>e que <xref:System.Xml.Serialization.XmlTypeMapping> é usado para criar o <xref:System.Xml.Serialization.XmlSerializer> que substitui a serialização padrão.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">O <see cref="T:System.Type" /> do objeto a ser substituído.</param>
        <param name="member">O nome do membro a ser substituído.</param>
        <param name="attributes">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
        <summary>Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> contidos pelo <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. O parâmetro <paramref name="type" /> especifica o objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="member" /> especifica o nome de um membro que é substituído.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.SoapAttributes> contém uma união dos objetos de atributo que fazem com que o <xref:System.Xml.Serialization.XmlSerializer> substituir seu comportamento de serialização padrão para um conjunto de objetos. Você escolha os objetos de atributo para colocar nas <xref:System.Xml.Serialization.SoapAttributes>, dependendo dos comportamentos específicos que você deseja substituir. Por exemplo, o <xref:System.Xml.Serialization.XmlSerializer> serializa um membro de classe como um elemento XML por padrão. Se você quiser que o membro a ser serializado como um atributo SOAP em vez disso, você precisará criar uma <xref:System.Xml.Serialization.SoapAttributeAttribute>, atribuí-lo para o <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> propriedade de um <xref:System.Xml.Serialization.SoapAttributes>e adicione o <xref:System.Xml.Serialization.XmlAttributes> para o <xref:System.Xml.Serialization.SoapAttributeOverrides>. Use o <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> método para adicionar o <xref:System.Xml.Serialization.SoapAttributes> para o <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 Use esse método quando o <xref:System.Xml.Serialization.SoapAttributes> contém uma <xref:System.Xml.Serialization.SoapAttributeAttribute>, <xref:System.ComponentModel.DefaultValueAttribute> <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapEnumAttribute>, ou <xref:System.Xml.Serialization.SoapIgnoreAttribute>.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group`. A serialização do `GroupName` e `IgnoreThis` campos e os membros do `GroupType` enumeração são substituídas. No `CreateOverrideSerializer` método, uma <xref:System.Xml.Serialization.SoapAttributeOverrides> é criado e para cada membro substituído ou enumeração, um <xref:System.Xml.Serialization.SoapAttributes> é criada com a propriedade apropriada definida e adicionado ao <xref:System.Xml.Serialization.SoapAttributeOverrides>. Uma <xref:System.Xml.Serialization.XmlTypeMapping> é criado usando o <xref:System.Xml.Serialization.SoapAttributeOverrides>e que <xref:System.Xml.Serialization.XmlTypeMapping> é usado para criar o <xref:System.Xml.Serialization.XmlSerializer> que substitui a serialização padrão.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém um objeto que representa a coleção de atributos SOAP de substituição.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja recuperar.</param>
        <summary>Obtém o objeto associado ao tipo especificado (classe base).</summary>
        <value>Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga para retornar um <xref:System.Xml.Serialization.SoapAttributes> que contém atributos para um <xref:System.Xml.Serialization.SoapTypeAttribute>.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Xml.Serialization.SoapAttributeOverrides> que é usada para substituir a serialização de uma instância da `Group` classe. O exemplo também usa o <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> propriedade para recuperar o <xref:System.Xml.Serialization.SoapAttributes> que é usado para especificar como a serialização está sendo substituída.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CPP/attadd2.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CS/attadd2.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/VB/attadd2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">A classe base <see cref="T:System.Type" /> associada com a coleção de atributos que você deseja substituir.</param>
        <param name="member">O nome do membro substituído que especifica o <see cref="T:System.Xml.Serialization.SoapAttributes" /> a ser retornado.</param>
        <summary>Obtém o objeto associado ao tipo especificado (classe base). O parâmetro <paramref name="member" /> especifica o membro da classe base que é substituído.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga para retornar um <xref:System.Xml.Serialization.SoapAttributes> que contém atributos que substituem uma <xref:System.Xml.Serialization.SoapAttributeAttribute>, <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapIgnoreAttribute>, ou <xref:System.Xml.Serialization.SoapEnumAttribute>. Você também pode retornar um <xref:System.Xml.Serialization.SoapAttributes> que contém a substituição de um valor padrão que usa um <xref:System.ComponentModel.DefaultValueAttribute>.  
  
 Se o <xref:System.Xml.Serialization.SoapAttributes> contém um <xref:System.Xml.Serialization.SoapTypeAttribute>, você deve usar a sobrecarga que especifica somente o tipo substituído.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Xml.Serialization.SoapAttributeOverrides> usada para substituir a serialização de uma instância da `Group` classe. O exemplo também usa o <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> propriedade para recuperar o <xref:System.Xml.Serialization.SoapAttributes> que é usado para especificar como a serialização está sendo substituída.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CPP/attadd.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CS/attadd.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/VB/attadd.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>