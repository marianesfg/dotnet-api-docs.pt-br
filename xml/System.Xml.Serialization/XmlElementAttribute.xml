<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a3ee602aac8b9d5af9ec42ec2fbb9974f9e4cf8" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52235435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="57a50-101">Indica que um campo ou propriedade pública representa um elemento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa ou desserializa o objeto que o contém.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-102">O <xref:System.Xml.Serialization.XmlElementAttribute> pertence a uma família de atributos que controla como o <xref:System.Xml.Serialization.XmlSerializer> serializa ou desserializa um objeto.</span><span class="sxs-lookup"><span data-stu-id="57a50-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="57a50-103">Para obter uma lista completa de atributos semelhantes, consulte [atributos que controlam a serialização XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="57a50-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="57a50-104">Geralmente, um documento XML contém elementos XML, cada uma delas consiste em três partes: uma marca de abertura com atributos possíveis, uma marca de fechamento e os dados entre as marcas.</span><span class="sxs-lookup"><span data-stu-id="57a50-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="57a50-105">As marcas XML podem ser aninhadas, que é, os dados entre as marcas também podem ser elementos XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="57a50-106">Essa capacidade de um elemento para incluir outro permite que o documento para conter hierarquias de dados.</span><span class="sxs-lookup"><span data-stu-id="57a50-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="57a50-107">Um elemento XML também pode incluir atributos.</span><span class="sxs-lookup"><span data-stu-id="57a50-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="57a50-108">Aplicar o <xref:System.Xml.Serialization.XmlElementAttribute> a campos públicos ou propriedades de leitura/gravação pública para controlar características dos elementos XML, como o nome do elemento e o namespace.</span><span class="sxs-lookup"><span data-stu-id="57a50-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="57a50-109">O <xref:System.Xml.Serialization.XmlElementAttribute> pode ser aplicado várias vezes a um campo que retorna uma matriz de objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="57a50-110">O objetivo é especificar (por meio do <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade) tipos diferentes que podem ser inseridos na matriz.</span><span class="sxs-lookup"><span data-stu-id="57a50-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="57a50-111">Por exemplo, a matriz em que o código c# a seguir aceita cadeias de caracteres e inteiros.</span><span class="sxs-lookup"><span data-stu-id="57a50-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="57a50-112">Isso resulta em XML que pode ser semelhante ao seguinte.</span><span class="sxs-lookup"><span data-stu-id="57a50-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="57a50-113">Observe que, quando você aplicar a <xref:System.Xml.Serialization.XmlElementAttribute> várias vezes sem especificar um <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> valor da propriedade, os elementos são nomeados após o tipo dos objetos aceitáveis.</span><span class="sxs-lookup"><span data-stu-id="57a50-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="57a50-114">Se você aplicar o <xref:System.Xml.Serialization.XmlElementAttribute> a um campo ou propriedade que retorna uma matriz, os itens na matriz são codificados como uma sequência de elementos XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="57a50-115">Por outro lado se um <xref:System.Xml.Serialization.XmlElementAttribute> não é aplicado a esse campo ou propriedade, os itens na matriz são codificados como uma sequência de elementos, aninhado em um elemento nomeado após o campo ou propriedade.</span><span class="sxs-lookup"><span data-stu-id="57a50-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="57a50-116">(Use o <xref:System.Xml.Serialization.XmlArrayAttribute> e <xref:System.Xml.Serialization.XmlArrayItemAttribute> atributos para controlar como uma matriz é serializada.)</span><span class="sxs-lookup"><span data-stu-id="57a50-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="57a50-117">Você pode definir as <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade para especificar um tipo que é derivado do tipo do campo original ou da propriedade – ou seja, o campo ou propriedade à qual você aplicou o <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="57a50-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="57a50-118">Se um campo ou propriedade retorna um <xref:System.Collections.ArrayList>, você pode aplicar várias instâncias do <xref:System.Xml.Serialization.XmlElementAttribute> ao membro.</span><span class="sxs-lookup"><span data-stu-id="57a50-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="57a50-119">Para cada instância, defina o <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade para um tipo de objeto que pode ser inserido na matriz.</span><span class="sxs-lookup"><span data-stu-id="57a50-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="57a50-120">Para obter mais informações sobre como usar atributos, consulte [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="57a50-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57a50-121">Você pode usar a palavra `XmlElement` em seu código, em vez de mais tempo <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="57a50-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-122">O exemplo a seguir serializa uma classe chamada `Group` e aplica o <xref:System.Xml.Serialization.XmlElementAttribute> para vários dos seus membros.</span><span class="sxs-lookup"><span data-stu-id="57a50-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="57a50-123">O campo denominado `Employees` retorna uma matriz de `Employee` objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="57a50-124">Nesse caso, o <xref:System.Xml.Serialization.XmlElementAttribute> Especifica que o XML resultante será não ser aninhado (que é o comportamento padrão de itens em uma matriz).</span><span class="sxs-lookup"><span data-stu-id="57a50-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">
      <span data-ttu-id="57a50-125">Apresentando a serialização XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-125">Introducing XML Serialization</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">
      <span data-ttu-id="57a50-126">Como especificar um nome de elemento alternativo para um fluxo XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-126">How to: Specify an Alternate Element Name for an XML Stream</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">
      <span data-ttu-id="57a50-127">Controlando a serialização XML usando atributos</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-127">Controlling XML Serialization Using Attributes</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">
      <span data-ttu-id="57a50-128">Exemplos de Serialização XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-128">Examples of XML Serialization</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">
      <span data-ttu-id="57a50-129">Ferramenta de Definição de Esquema XML (Xsd.exe)</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a50-129">XML Schema Definition Tool (Xsd.exe)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-130">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57a50-131">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57a50-132">O exemplo a seguir se aplica a <xref:System.Xml.Serialization.XmlElementAttribute> a uma classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="57a50-133">O nome do elemento XML do membro serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-133">The XML element name of the serialized member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a50-134">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica o nome do elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-135">Por padrão, o <xref:System.Xml.Serialization.XmlSerializer> usa o nome do membro como o nome do elemento XML ao serializar uma instância da classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="57a50-136">Por exemplo, um campo chamado `Vehicle` gera um elemento XML chamado `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="57a50-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="57a50-137">No entanto se você precisa de um elemento diferente, como `Cars`, passá-la a `elementName` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="57a50-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-138">O exemplo a seguir mostra uma classe simples que contém um único campo chamado `Vehicles`.</span><span class="sxs-lookup"><span data-stu-id="57a50-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="57a50-139">O exemplo aplica-se a <xref:System.Xml.Serialization.XmlElementAttribute> ao campo e inclui o `elementName` parâmetro, assim, instruindo o <xref:System.Xml.Serialization.XmlSerializer> para gerar elementos XML denominados "Carros" em vez de "Veículos".</span><span class="sxs-lookup"><span data-stu-id="57a50-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="57a50-140">O <see cref="T:System.Type" /> de um objeto derivado do tipo do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a50-141">Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica um tipo para o membro ao qual o <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> é aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span>
          </span>
          <span data-ttu-id="57a50-142">Esse tipo é usado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> ao serializar ou desserializar um objeto que o contém.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-143">Use o `type` parâmetro para especificar um tipo que é derivado de uma classe base.</span><span class="sxs-lookup"><span data-stu-id="57a50-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="57a50-144">Por exemplo, suponha que uma propriedade chamada `MyAnimal` retorna um `Animal` objeto.</span><span class="sxs-lookup"><span data-stu-id="57a50-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="57a50-145">Você deseja aprimorar o objeto, para que você criar uma nova classe chamada `Mammal` que herda o `Animal` classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="57a50-146">Para instruir o <xref:System.Xml.Serialization.XmlSerializer> para aceitar o `Mammal` classe quando ele serializa a `MyAnimal` propriedade, passe o <xref:System.Type> do `Mammal` classe para o construtor.</span><span class="sxs-lookup"><span data-stu-id="57a50-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-147">O exemplo a seguir serializa uma classe chamada `Orchestra` que contém um único campo chamado `Instruments`, que retorna uma matriz de `Instrument` objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="57a50-148">Uma segunda classe denominada `Brass` herda o `Instrument` classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="57a50-149">O exemplo aplica-se a <xref:System.Xml.Serialization.XmlElementAttribute> para o `Instruments` campo e especifica a `Brass` digita, permitindo que o `Instruments` campo para aceitar `Brass` objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="57a50-150">O exemplo também especifica o nome do elemento XML, definindo o <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="57a50-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="57a50-151">O nome do elemento XML do membro serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-151">The XML element name of the serialized member.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="57a50-152">O <see cref="T:System.Type" /> de um objeto derivado do tipo do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a50-153">Inicializa uma nova instância do <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> e especifica o nome do elemento XML e um tipo derivado do membro ao qual o <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> é aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span>
          </span>
          <span data-ttu-id="57a50-154">Esse tipo de membro é usado quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o objeto que o contém.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-155">Por padrão, o <xref:System.Xml.Serialization.XmlSerializer> usa o nome do membro como o nome do elemento XML ao serializar uma instância da classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="57a50-156">Por exemplo, um campo chamado `Vehicle` gera um elemento XML chamado `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="57a50-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="57a50-157">No entanto, se você precisa de um elemento diferente, como `Cars`, passá-la a `elementName` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="57a50-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="57a50-158">Use o `type` parâmetro para especificar um tipo que é derivado de uma classe base.</span><span class="sxs-lookup"><span data-stu-id="57a50-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="57a50-159">Por exemplo, suponha que uma propriedade chamada `MyAnimal` retorna um `Animal` objeto.</span><span class="sxs-lookup"><span data-stu-id="57a50-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="57a50-160">Você deseja aprimorar o objeto, para que você criar uma nova classe chamada `Mammal` que herda o `Animal` classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="57a50-161">Para instruir o <xref:System.Xml.Serialization.XmlSerializer> para aceitar o `Mammal` classe quando ele serializa a `MyAnimal` propriedade, passe o <xref:System.Type> do `Mammal` classe para o construtor.</span><span class="sxs-lookup"><span data-stu-id="57a50-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-162">O exemplo a seguir serializa uma classe chamada `Orchestra` que contém um único campo chamado `Instruments`, que retorna uma matriz de `Instrument` objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="57a50-163">Uma segunda classe denominada `Brass` herda o `Instrument` classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="57a50-164">O exemplo aplica-se a <xref:System.Xml.Serialization.XmlElementAttribute> para o `Instruments` campo e especifica a `Brass` digita, permitindo que o `Instruments` campo para aceitar `Brass` objetos.</span><span class="sxs-lookup"><span data-stu-id="57a50-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="57a50-165">O exemplo também especifica o nome do elemento XML, definindo o <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="57a50-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-166">Obtém ou define o tipo de dados XSD (definição de esquema XML) do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-167">Um tipo de dados de esquema XML, conforme definido pelo documento do World Wide Web Consortium (www.w3.org) denominado "XML Schema Part 2: Datatypes".</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-167">An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-168">A tabela a seguir lista os tipos de dados simples do esquema XML por seus equivalentes.</span><span class="sxs-lookup"><span data-stu-id="57a50-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="57a50-169">Para o esquema XML `base64Binary` e `hexBinary` tipos de dados, use uma matriz de <xref:System.Byte> estruturas e aplicar um <xref:System.Xml.Serialization.XmlElementAttribute> com o <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> definido como "base64Binary" ou "hexBinary", conforme apropriado.</span><span class="sxs-lookup"><span data-stu-id="57a50-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="57a50-170">Para o esquema XML `time` e `date` tipos de dados, use o <xref:System.DateTime> digitar e aplicar o <xref:System.Xml.Serialization.XmlElementAttribute> com o <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> definido como "Data" ou "Hora".</span><span class="sxs-lookup"><span data-stu-id="57a50-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="57a50-171">Para cada tipo de esquema XML que é mapeado para uma cadeia de caracteres, se aplicam a <xref:System.Xml.Serialization.XmlElementAttribute> com seu <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> propriedade definida como o tipo de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="57a50-172">É possível que isso pode alterar o formato de serialização, não apenas o esquema para o membro.</span><span class="sxs-lookup"><span data-stu-id="57a50-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57a50-173">A propriedade diferencia maiusculas de minúsculas, portanto, você deve configurá-lo exatamente a um dos tipos de dados de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57a50-174">Elemento passando dados binários como um XML é mais eficiente do que passando-o como um atributo de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="57a50-175">Para obter mais informações sobre tipos de dados XML, consulte o documento do World Wide Web Consortium (www.w3.org) denominado "XML Schema Part 2: Datatypes".</span><span class="sxs-lookup"><span data-stu-id="57a50-175">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="57a50-176">Tipo de dados XSD</span><span class="sxs-lookup"><span data-stu-id="57a50-176">XSD data type</span></span>|<span data-ttu-id="57a50-177">Tipo de dados do .NET</span><span class="sxs-lookup"><span data-stu-id="57a50-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="57a50-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="57a50-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="57a50-179">base64Binary</span></span>|<span data-ttu-id="57a50-180">Matriz de <xref:System.Byte> objetos</span><span class="sxs-lookup"><span data-stu-id="57a50-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="57a50-181">boolean</span><span class="sxs-lookup"><span data-stu-id="57a50-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="57a50-182">byte</span><span class="sxs-lookup"><span data-stu-id="57a50-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="57a50-183">date</span><span class="sxs-lookup"><span data-stu-id="57a50-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="57a50-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="57a50-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="57a50-185">decimal</span><span class="sxs-lookup"><span data-stu-id="57a50-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="57a50-186">double</span><span class="sxs-lookup"><span data-stu-id="57a50-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="57a50-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="57a50-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-188">ENTIDADES</span><span class="sxs-lookup"><span data-stu-id="57a50-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-189">float</span><span class="sxs-lookup"><span data-stu-id="57a50-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="57a50-190">gDay</span><span class="sxs-lookup"><span data-stu-id="57a50-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="57a50-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="57a50-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-193">gYear</span><span class="sxs-lookup"><span data-stu-id="57a50-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="57a50-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="57a50-195">hexBinary</span></span>|<span data-ttu-id="57a50-196">Matriz de <xref:System.Byte> objetos</span><span class="sxs-lookup"><span data-stu-id="57a50-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="57a50-197">ID</span><span class="sxs-lookup"><span data-stu-id="57a50-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="57a50-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="57a50-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-200">int</span><span class="sxs-lookup"><span data-stu-id="57a50-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="57a50-201">inteiro</span><span class="sxs-lookup"><span data-stu-id="57a50-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-202">linguagem</span><span class="sxs-lookup"><span data-stu-id="57a50-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-203">long</span><span class="sxs-lookup"><span data-stu-id="57a50-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="57a50-204">Nome</span><span class="sxs-lookup"><span data-stu-id="57a50-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-205">NCName</span><span class="sxs-lookup"><span data-stu-id="57a50-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="57a50-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="57a50-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="57a50-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="57a50-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="57a50-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-211">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="57a50-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="57a50-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="57a50-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-214">QName</span><span class="sxs-lookup"><span data-stu-id="57a50-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="57a50-215">duration</span><span class="sxs-lookup"><span data-stu-id="57a50-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-216">cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="57a50-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-217">short</span><span class="sxs-lookup"><span data-stu-id="57a50-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="57a50-218">hora</span><span class="sxs-lookup"><span data-stu-id="57a50-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="57a50-219">token</span><span class="sxs-lookup"><span data-stu-id="57a50-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="57a50-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="57a50-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="57a50-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="57a50-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="57a50-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="57a50-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="57a50-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="57a50-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="57a50-224">O exemplo a seguir serializa uma classe chamada `Group` que contém um campo chamado `ExtraInfo`, que retorna um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="57a50-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="57a50-225">O exemplo aplica-se duas instâncias do <xref:System.Xml.Serialization.XmlElementAttribute> ao campo e especifica diferentes <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> valores para cada instância.</span><span class="sxs-lookup"><span data-stu-id="57a50-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="57a50-226">Cada instância permite que o <xref:System.Xml.Serialization.XmlSerializer> para serializar os tipos especificados inseridos na matriz.</span><span class="sxs-lookup"><span data-stu-id="57a50-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="57a50-227">O tipo de dados de esquema XML que você especificou não pode ser mapeado para o tipo de dados .NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-228">Obtém ou define o nome do elemento XML gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-228">Gets or sets the name of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-229">O nome do elemento XML gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-229">The name of the generated XML element.</span>
          </span>
          <span data-ttu-id="57a50-230">O padrão é o identificador do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-230">The default is the member identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-231">Especifique um <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> se você deseja que o nome do elemento XML gerado para ser diferente do identificador do membro.</span><span class="sxs-lookup"><span data-stu-id="57a50-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="57a50-232">Você pode definir o mesmo <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> a mais de um membro de classe de valor se o documento XML gerado usa namespaces XML para distinguir entre os membros com nomes idênticos.</span><span class="sxs-lookup"><span data-stu-id="57a50-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="57a50-233">Para obter detalhes sobre como usar namespaces e nomes prefixados no documento XML, consulte o <xref:System.Xml.Serialization.XmlSerializerNamespaces> classe.</span><span class="sxs-lookup"><span data-stu-id="57a50-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-234">O exemplo a seguir define o <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propriedade de um <xref:System.Xml.Serialization.XmlElementAttribute> para um novo valor.</span><span class="sxs-lookup"><span data-stu-id="57a50-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-235">Obtém ou define um valor que indica se o elemento está qualificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-235">Gets or sets a value that indicates whether the element is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-236">Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="57a50-237">O padrão é <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-238">O <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> propriedade determina se um elemento XML é qualificado ou não.</span><span class="sxs-lookup"><span data-stu-id="57a50-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="57a50-239">O <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> propriedade está de acordo com a especificação do World Wide Web Consortium (www.w3.org) 1999, "Namespaces em XML".</span><span class="sxs-lookup"><span data-stu-id="57a50-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="57a50-240">Se o <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> estiver definida como qualquer valor, a tentativa de definir o <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> propriedade `XmlSchemaForm.Unqualified` gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="57a50-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="57a50-241">A configuração padrão, `XmlSchemaForm.None`, instrui o <xref:System.Xml.Serialization.XmlSerializer> para verificar se o esquema para o documento XML determinar se o namespace é qualificado.</span><span class="sxs-lookup"><span data-stu-id="57a50-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="57a50-242">Se o esquema não especificar um valor para um elemento individual ou um atributo, o <xref:System.Xml.Serialization.XmlSerializer> usa o `elementFormDefault` e `attributeFormDefault` valores para determinar se um elemento ou atributo é qualificado.</span><span class="sxs-lookup"><span data-stu-id="57a50-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="57a50-243">O código XML a seguir mostra um esquema:</span><span class="sxs-lookup"><span data-stu-id="57a50-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="57a50-244">Quando o <xref:System.Xml.Serialization.XmlSerializer> lê o esquema, o <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> valor para ambos o `Name` e `Number` é `XmlSchemaForm.None`, mas o `Name` elemento é qualificado, enquanto o `Number` elemento não for qualificado.</span><span class="sxs-lookup"><span data-stu-id="57a50-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-245">O exemplo a seguir define o <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> propriedade para `XmlSchemaForm.Unqualified`.</span><span class="sxs-lookup"><span data-stu-id="57a50-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-246">Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro definido como <see langword="null" /> como uma marca vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-247">
            <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-247">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-248">A especificação do esquema XML para estruturas permite que um documento XML indicar explicitamente que o conteúdo de um elemento está ausente.</span><span class="sxs-lookup"><span data-stu-id="57a50-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="57a50-249">Esse elemento contém o atributo `xsi:nil` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="57a50-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="57a50-250">Para obter mais informações, consulte a especificação do World Wide Web Consortium (www.w3.org), "XML Schema Part 1: estruturas".</span><span class="sxs-lookup"><span data-stu-id="57a50-250">For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</span></span>  
  
 <span data-ttu-id="57a50-251">Se o <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> estiver definida como `true`, o `xsi:nil` atributo é gerado para os membros de classe que foram definidos como `null`.</span><span class="sxs-lookup"><span data-stu-id="57a50-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="57a50-252">Por exemplo, se você definir um campo chamado `MyStringArray` à `null`, o <xref:System.Xml.Serialization.XmlSerializer> gera o seguinte código XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="57a50-253">Se o <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> é de propriedade `false`, nenhum elemento XML é gerado para os membros de classe que foram definidos como `null`.</span><span class="sxs-lookup"><span data-stu-id="57a50-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57a50-254">Não é possível aplicar a <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propriedade para um membro é digitada como um tipo de valor como um tipo de valor não pode conter `null`.</span><span class="sxs-lookup"><span data-stu-id="57a50-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="57a50-255">Além disso, você não pode definir essa propriedade `false` para tipos de valor anuláveis.</span><span class="sxs-lookup"><span data-stu-id="57a50-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="57a50-256">Quando esses tipos são `null`, eles serão serializados, definindo `xsi:nil` para `true`.</span><span class="sxs-lookup"><span data-stu-id="57a50-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-257">O exemplo a seguir mostra um campo com o <xref:System.Xml.Serialization.XmlElementAttribute> aplicado a ele e o <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propriedade definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="57a50-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-258">Obtém ou define o namespace atribuído ao elemento XML resultante quando a classe é serializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-259">O namespace do elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-259">The namespace of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-260">O <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> propriedade está de acordo com a especificação do World Wide Web Consortium (www.w3.org), "Namespaces em XML".</span><span class="sxs-lookup"><span data-stu-id="57a50-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="57a50-261">Para criar namespaces que estão associados com um prefixo, você deve criar um <xref:System.Xml.Serialization.XmlSerializerNamespaces> que contém os namespaces e prefixos usados no documento XML.</span><span class="sxs-lookup"><span data-stu-id="57a50-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="57a50-262">Como você define o namespace para cada <xref:System.Xml.Serialization.XmlArrayAttribute>, ele deve corresponder a um dos namespaces no <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="57a50-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="57a50-263">Quando o XML é gerado, cada matriz corretamente é prefixado com o prefixo associado com o namespace especificado.</span><span class="sxs-lookup"><span data-stu-id="57a50-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-264">Obtém ou define a ordem explícita na qual os elementos são serializados ou desserializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-265">A ordem de geração de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-265">The order of the code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-266">Use o <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeração para instruir o <xref:System.Web.Services.Description.ServiceDescriptionImporter> para gerar o código que define o <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="57a50-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57a50-267">Uma vez o <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> foi usada em uma propriedade pública ou campo em um tipo de propriedade, ele deve ser aplicado a todas as propriedades públicas e campos para esse tipo e tipos herdados tudo.</span><span class="sxs-lookup"><span data-stu-id="57a50-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a50-268">Obtém ou define o tipo de objeto usado para representar o elemento XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-268">Gets or sets the object type used to represent the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a50-269">O <see cref="T:System.Type" /> do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a50-269">The <see cref="T:System.Type" /> of the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a50-270">Use o <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade para especificar um tipo derivado de um campo ou propriedade.</span><span class="sxs-lookup"><span data-stu-id="57a50-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="57a50-271">Se um campo ou propriedade retorna um <xref:System.Collections.ArrayList>, você pode aplicar várias instâncias do <xref:System.Xml.Serialization.XmlElementAttribute> ao membro.</span><span class="sxs-lookup"><span data-stu-id="57a50-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="57a50-272">Para cada instância, defina o <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade para um tipo de objeto que pode ser inserido na matriz.</span><span class="sxs-lookup"><span data-stu-id="57a50-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a50-273">O exemplo a seguir usa o <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriedade para especificar um objeto derivado de um <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="57a50-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="57a50-274">O exemplo também se aplica a três instâncias de <xref:System.Xml.Serialization.XmlElementAttribute> a um campo que retorna um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="57a50-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="57a50-275">Cada instância Especifica um tipo permitido no campo.</span><span class="sxs-lookup"><span data-stu-id="57a50-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>