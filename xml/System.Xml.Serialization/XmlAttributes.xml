<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="699be6d7170c7863cead8c110b37b70275ee3113" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46686498" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma coleção de objetos de atributos que controlam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Criando o <xref:System.Xml.Serialization.XmlAttributes> faz parte de um processo que substitui o padrão forma, o <xref:System.Xml.Serialization.XmlSerializer> serializa instâncias de classe. Por exemplo, suponha que você deseja serializar um objeto que é criado a partir de uma DLL que tem uma fonte acessível. Usando o <xref:System.Xml.Serialization.XmlAttributeOverrides>, você pode ampliar ou outra forma controla como o objeto é serializado.  
  
 Os membros do <xref:System.Xml.Serialization.XmlAttributes> classe correspondem diretamente a uma família de classes de atributos que controlam a serialização. Por exemplo, o <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> propriedade deve ser definida como um <xref:System.Xml.Serialization.XmlTextAttribute>, que permite que você substituir a serialização de um campo ou propriedade instruindo o <xref:System.Xml.Serialization.XmlSerializer> para serializar o valor da propriedade como texto XML. Para obter uma lista completa de atributos que controlam a serialização, consulte o <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Para obter mais detalhes sobre como usar o <xref:System.Xml.Serialization.XmlAttributeOverrides> com o <xref:System.Xml.Serialization.XmlAttributes> classe, consulte [como: especificar um nome de elemento alternativo para um Stream do XML](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).  
  
   
  
## Examples  
 O exemplo a seguir serializa uma instância de uma classe chamada `Orchestra`, que contém um único campo chamado `Instruments` que retorna uma matriz de `Instrument` objetos. Uma segunda classe denominada `Brass` herda o `Instrument` classe. O exemplo cria um <xref:System.Xml.Serialization.XmlAttributes> objeto para sobrescrever o `Instrument` campo--permitindo que o campo aceitar `Brass` objetos – e adiciona o <xref:System.Xml.Serialization.XmlAttributes> objeto a uma instância da <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Apresentando a serialização XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Como especificar um nome de elemento alternativo para um fluxo XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Controlando a serialização XML usando atributos</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemplos de Serialização XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Ferramenta de Definição de Esquema XML (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir serializa uma instância de uma classe chamada `Orchestra`, que contém um único campo chamado `Instruments` que retorna uma matriz de `Instrument` objetos. Uma segunda classe denominada `Brass` herda o `Instrument` classe. O exemplo cria um <xref:System.Xml.Serialization.XmlAttributes> objeto para sobrescrever o `Instrument` campo--permitindo que o campo aceitar `Brass` objetos – e adiciona o <xref:System.Xml.Serialization.XmlAttributes> objeto a uma instância da <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Uma classe que pode fornecer implementações alternativas dos atributos que controlam a serialização de XML.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> e personaliza a maneira como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o construtor padrão para o <xref:System.Xml.Serialization.XmlAttributes> classe, em vez de usar esse construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a propriedade <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituída.</summary>
        <value>O <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituído.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> pode ser aplicado a um membro que retorna uma matriz de <xref:System.Xml.XmlAttribute> objetos na desserialização. Isso permite que o <xref:System.Xml.Serialization.XmlSerializer> desserializar todos os atributos que não têm um membro correspondente no objeto que está sendo desserializado – portanto, esses elementos são "desconhecidos" para o <xref:System.Xml.Serialization.XmlSerializer>. Isso é útil quando o fluxo XML foi alterado por um serviço Web XML, ou quando se sabe que os dados aleatórios são sempre incluídos com o fluxo XML.  
  
 O <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> propriedade permite substituir a serialização de um membro ao qual o <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> foi aplicada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a serem substituídos.</summary>
        <value>Um objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.XmlAnyElementAttribute> pode ser aplicado a um membro que retorna uma matriz de <xref:System.Xml.XmlElement> objetos na desserialização. Isso permite que o <xref:System.Xml.Serialization.XmlSerializer> desserializar todos os elementos que não têm um membro correspondente no objeto que está sendo desserializado – portanto, esses elementos são "desconhecidos" para o <xref:System.Xml.Serialization.XmlSerializer>. Isso é útil quando o fluxo XML foi alterado por um serviço Web XML, ou quando se sabe que os dados aleatórios são sempre incluídos com o fluxo XML.  
  
 O <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> propriedade permite substituir a serialização de um membro para funcionar como um membro ao qual o <xref:System.Xml.Serialization.XmlAnyElementAttribute> foi aplicada.  
  
   
  
## Examples  
 O exemplo a seguir cria um novo <xref:System.Xml.Serialization.XmlAnyElementAttribute> do objeto e o adiciona à coleção de objetos acessados por meio de <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> propriedade. O <xref:System.Xml.Serialization.XmlAttributes> objeto, em seguida, é adicionado a um <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto que é usado para criar um <xref:System.Xml.Serialization.XmlSerializer> objeto. O <xref:System.Xml.Serialization.XmlSerializer> é usado para serializar ou desserializar um objeto. Para ver o efeito de usar o <xref:System.Xml.Serialization.XmlAnyElementAttributes> propriedade, criar um documento XML chamado "UnknownElements.xml" executando o `SerializeObject` método no `Main` método. Edite o documento resultante para incluir outros elementos (desconhecidos). Comente a `SerializeObject` chamar o `Main` método, e remova a chamada para o `DeserializeObject` método, que imprime o nome e valor de qualquer elemento XML desconhecido.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Há duas maneiras em que um campo público ou propriedade pública de leitura/gravação que retorna uma matriz é serializada pelo <xref:System.Xml.Serialization.XmlSerializer>: a serialização padrão e a serialização de controlado.  
  
 Na serialização padrão, nenhum atributo for aplicado ao membro. Quando serializada, a matriz é serializada como uma sequência de elementos XML aninhados com o nome do elemento XML da sequência aninhada obtido do nome do membro.  
  
 Para controlar a serialização mais precisamente, aplique um <xref:System.Xml.Serialization.XmlArrayAttribute> para o campo ou propriedade. Por exemplo, você pode alterar o nome do elemento XML gerado do padrão para um nome diferente, definindo o <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> propriedade para um novo valor.  
  
 O <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> propriedade permite substituir a serialização padrão, bem como a serialização controlada aplicando um <xref:System.Xml.Serialization.XmlArrayAttribute> ao membro. Por exemplo, você pode alterar o nome do elemento XML gerado do padrão (o identificador de membro) para um novo valor. Além disso, se você aplicar uma <xref:System.Xml.Serialization.XmlArrayAttribute> a um membro, ele é substituído por qualquer <xref:System.Xml.Serialization.XmlArrayAttribute> atribuída ao <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe que contém um campo chamado `Members` que retorna uma matriz de objetos. O <xref:System.Xml.Serialization.XmlArrayAttribute> é usado para substituir a serialização do campo e renomear o nome do elemento para `Staff`.  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma coleção de objetos que especificam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os itens inseridos em uma matriz retornada por um campo público ou uma propriedade de leitura/gravação.</summary>
        <value>Um objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> propriedade permite que você especifique os tipos derivados que podem ser inseridos em uma matriz retornada por um campo público ou propriedade de leitura/gravação pública. Para cada novo tipo que você deseja que o campo ou propriedade para aceitar, criar uma <xref:System.Xml.Serialization.XmlArrayItemAttribute> objeto e <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> -o para o <xref:System.Xml.Serialization.XmlArrayItemAttributes>) retornado pelo <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> propriedade. (O novo tipo deve ser derivado do tipo já foi aceito pelo campo ou propriedade). <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> as <xref:System.Xml.Serialization.XmlAttributes> do objeto para um <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto e especifique o tipo do objeto que contém o campo ou propriedade e o nome do campo ou propriedade. Construir uma <xref:System.Xml.Serialization.XmlSerializer> com o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto antes de chamar <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> ou <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe que contém um campo chamado `Members` que retorna uma matriz de objetos. Duas <xref:System.Xml.Serialization.XmlArrayItemAttribute> objetos são criados para permitir que o campo aceitar objetos que derivam da classe base chamado `Member`. Cada objeto é adicionado para o <xref:System.Xml.Serialization.XmlAttributes> por meio de <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> propriedade.  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação pública como um atributo XML.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla a serialização de um campo público ou de uma propriedade de leitura/gravação como um atributo XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, se nenhum atributo for aplicado a um campo público ou propriedade de leitura/gravação pública, ele é serializado como um elemento XML. Você também pode instruir o <xref:System.Xml.Serialization.XmlSerializer> para gerar um atributo XML aplicando um <xref:System.Xml.Serialization.XmlAttributeAttribute> para o campo ou propriedade.  
  
 O <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> propriedade permite substituir a serialização padrão, bem como a serialização controlada aplicando um <xref:System.Xml.Serialization.XmlAttributeAttribute> ao membro. Para fazer isso, crie uma <xref:System.Xml.Serialization.XmlAttributeAttribute> e defina suas propriedades (como <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>). Atribuir o novo objeto para o <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> propriedade de um <xref:System.Xml.Serialization.XmlAttributes> objeto. Adicione a <xref:System.Xml.Serialization.XmlAttributes> do objeto para um <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto e especifique o tipo do objeto que contém o campo ou propriedade e o nome do campo ou propriedade. Por fim, crie uma <xref:System.Xml.Serialization.XmlSerializer> usando o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto e a chamada a <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> ou <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group` que contém uma propriedade chamada `GroupName`; o `GroupName` propriedade é serializada como um atributo XML. O exemplo cria um <xref:System.Xml.Serialization.XmlAttributeOverrides> e um <xref:System.Xml.Serialization.XmlAttributes> objeto para substituir a serialização padrão do campo. O exemplo a seguir cria um <xref:System.Xml.Serialization.XmlAttributeAttribute> para substituição especificamente a propriedade e o objeto é definido como o <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> propriedade o <xref:System.Xml.Serialization.XmlAttributes> objeto é adicionado para o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto com o nome do membro substituído especificado. Por fim, uma <xref:System.Xml.Serialization.XmlSerializer> é construído e retornados usando o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que permite distinguir entre um conjunto de opções.</summary>
        <value>Uma <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que pode ser aplicado a um membro de classe é serializado como um <see langword="xsi:choice" /> elemento.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor padrão de um atributo ou elemento XML.</summary>
        <value>Um <see cref="T:System.Object" /> que representa o valor padrão de um atributo ou elemento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode especificar o valor padrão de um elemento XML ou atributo XML aplicando um <xref:System.ComponentModel.DefaultValueAttribute> a um membro. Para examinar o resultado de aplicar o valor, compilar o aplicativo em uma DLL ou executável e passar o arquivo resultante como um argumento para a ferramenta de definição de esquema XML (XSD.exe). No documento de esquema XML, um valor padrão é atribuído para o `default` atributo. No exemplo a seguir, o padrão para o \<Animal > elemento é "Cachorros".  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 Para substituir o valor padrão, crie uma <xref:System.Object> e o atribui a <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.  
  
 Se o valor atribuído a um campo ou propriedade é igual ao valor padrão para esse campo ou propriedade, o <xref:System.Xml.Serialization.XmlSerializer> não serializar o valor para a instância XML. Isso ocorre porque o valor atribuído pode ser recuperado do esquema XML. Em outras palavras, definindo um campo ou propriedade como seu próprio valor padrão é equivalente a não defini-lo. Da mesma forma, se nenhum valor estiver definido para o campo ou propriedade, o <xref:System.Xml.Serialization.XmlSerializer> usa o valor padrão é encontrado no esquema. Em ambos casos, (definindo a propriedade como seu padrão ou não configurá-la), a instância de documento XML não contém nenhum valor para a propriedade.  
  
 Você pode usar os construtores de classe em vez do esquema para atribuir os valores padrão. Se você estiver usando Xsd.exe para gerar uma classe de esquemas, você pode comentar ou remover todos os atributos [System.ComponentModel.DefaultValueAttribute("myFieldName")] dos arquivos de classe.  
  
   
  
## Examples  
 O exemplo a seguir mostra uma classe chamada `Pet` que contém um campo que tem um valor padrão definido como "Cachorro". No entanto, o exemplo também cria um <xref:System.Xml.Serialization.XmlAttributes> objeto e define seu <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> propriedade para um novo valor padrão ("gato"). Isso substitui o valor padrão original. Portanto, se o valor do campo é definido como "Gato", o <xref:System.Xml.Serialization.XmlSerializer> tratará como o valor padrão e não serializá-lo. Se ele for definido como qualquer outro valor, o <xref:System.Xml.Serialization.XmlSerializer> serializa o valor.  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação como um elemento XML.</summary>
        <value>Uma <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para cada membro substituído é serializado como um elemento XML, você deve adicionar uma nova <xref:System.Xml.Serialization.XmlElementAttribute> para um <xref:System.Xml.Serialization.XmlElementAttributes> chamando o <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> método. Por padrão, uma <xref:System.Xml.Serialization.XmlElementAttributes> objeto é criado e atribuído ao <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir serializa o `Transportation` classe, que contém um único campo chamado `Vehicles` que retorna um <xref:System.Collections.ArrayList>. O exemplo aplica dois <xref:System.Xml.Serialization.XmlElementAttribute> atributos para o `Vehicles` campo. O exemplo cria duas <xref:System.Xml.Serialization.XmlElementAttribute> objetos e adicioná-los para o <xref:System.Xml.Serialization.XmlElementAttributes> coleção de um <xref:System.Xml.Serialization.XmlAttributes> objeto. Para permitir que a matriz aceitar diferentes tipos de objeto, o <xref:System.Xml.Serialization.XmlAttributes> objeto é adicionado para o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto.  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para cada identificador que você deseja substituir, você deve criar uma <xref:System.Xml.Serialization.XmlAttributes> do objeto e defina o <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> propriedade para um <xref:System.Xml.Serialization.XmlEnumAttribute> que substitui o identificador. Adicionar o <xref:System.Xml.Serialization.XmlAttributes> do objeto para o <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto e especifique ambos os <xref:System.Type> da classe que contém a enumeração e o nome do membro substituído.  
  
   
  
## Examples  
 O exemplo a seguir serializa duas classes chamadas `Food` e `FoodType`. O `FoodType` classe contém duas enumerações que são substituídas e, para cada tipo de enumeração, o exemplo cria um <xref:System.Xml.Serialization.XmlEnumAttribute> objeto que atribui o <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> propriedade de um <xref:System.Xml.Serialization.XmlAttributes> objeto. O exemplo, em seguida, adiciona o <xref:System.Xml.Serialization.XmlAttributes> do objeto para um <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto, que é usado para criar um <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa ou não um campo público ou uma propriedade de leitura/gravação pública.</summary>
        <value><see langword="true" /> se o campo ou propriedade não for serializada por <see cref="T:System.Xml.Serialization.XmlSerializer" />; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, todos os campos públicos e propriedades de leitura/gravação pública são serializadas pelo <xref:System.Xml.Serialization.XmlSerializer>. Ou seja, o valor de cada campo público ou propriedade é mantido como um elemento XML ou atributo XML em uma instância de documento XML.  
  
 Para substituir a serialização padrão de um campo ou propriedade, crie uma <xref:System.Xml.Serialization.XmlAttributes> do objeto e defina sua <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> propriedade `true`. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> o objeto a ser um <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto e especifique o tipo do objeto que contém o campo ou propriedade para ignorar e o nome do campo ou propriedade para ignorar.  
  
 Se um <xref:System.Xml.Serialization.XmlIgnoreAttribute> é aplicado a um campo ou propriedade, campo ou propriedade é ignorada. No entanto, você pode substituir esse comportamento, criando um <xref:System.Xml.Serialization.XmlAttributes> objeto, definindo seu <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> propriedade a ser `false`, adicionando-o a um <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto que especifica o tipo do objeto que contém o campo ou propriedade e o nome das campo ou propriedade.  
  
   
  
## Examples  
 O exemplo a seguir serializa uma classe chamada `Group`, que contém um membro chamado `Comment` ao qual o <xref:System.Xml.Serialization.XmlIgnoreAttribute> é aplicado. O exemplo cria um <xref:System.Xml.Serialization.XmlAttributes> objeto e define o <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> propriedade a ser `false`, assim, substituindo o <xref:System.Xml.Serialization.XmlIgnoreAttribute>.  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se é necessário manter todas as declarações de namespace quando um objeto que contém um membro que retorna um objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> é substituído.</summary>
        <value><see langword="true" /> se as declarações de namespace precisarem ser mantidas; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir contém uma classe denominada `Student`. A classe contém um membro chamado `MyNamespaces` que retorna um <xref:System.Xml.Serialization.XmlSerializerNamespaces> objeto. O exemplo cria um <xref:System.Xml.Serialization.XmlAttributes> que é adicionado a uma instância do objeto a <xref:System.Xml.Serialization.XmlAttributeOverrides> classe. O <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> estiver definida como `true`, que instrui o <xref:System.Xml.Serialization.XmlSerializer> para preservar os namespaces quando a serialização do `Student` objeto é substituído.  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe como um elemento raiz XML.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que substitui uma classe atribuída como um elemento raiz XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto, um <xref:System.Xml.Serialization.XmlAttributes> objeto e um <xref:System.Xml.Serialization.XmlRootAttribute> objeto. O exemplo atribui a <xref:System.Xml.Serialization.XmlRootAttribute> para o <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> propriedade da <xref:System.Xml.Serialization.XmlAttributes> e o adiciona a <xref:System.Xml.Serialization.XmlAttributes> do objeto para o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto. Por fim, o exemplo obtém as <xref:System.Xml.Serialization.XmlAttributes> objeto, passando a <xref:System.Type> da classe serializada para o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto. (Neste exemplo, o <xref:System.Type> é `Group`.)  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que instrui o <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar um campo público ou propriedade de leitura/gravação pública como texto XML.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que substitui a serialização padrão de uma propriedade pública ou campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, um campo público ou propriedade de leitura/gravação pública é serializada como um elemento XML pelo <xref:System.Xml.Serialization.XmlSerializer>. No entanto, ele pode forçar o campo ou propriedade a ser serializada como texto XML aplicando um <xref:System.Xml.Serialization.XmlTextAttribute> para o campo ou propriedade.  
  
> [!NOTE]
>  O <xref:System.Xml.Serialization.XmlTextAttribute> não pode ser aplicado a um campo ou propriedade que retorna uma matriz.  
  
 Para substituir a serialização padrão de um campo ou propriedade (que não retorna uma matriz), crie uma <xref:System.Xml.Serialization.XmlTextAttribute> e atribuí-lo para o <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> propriedade de um <xref:System.Xml.Serialization.XmlAttributes> objeto. Adicione a <xref:System.Xml.Serialization.XmlAttributes> do objeto para um <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto e especifique o tipo do objeto que contém o campo substituído ou a propriedade e o nome do campo substituído ou propriedade.  
  
   
  
## Examples  
 O exemplo a seguir serializa a classe denominada `Group`, que contém um campo chamado `Comment`. Para substituir o padrão de forma, o <xref:System.Xml.Serialization.XmlSerializer> serializa um campo, o exemplo cria um <xref:System.Xml.Serialization.XmlAttributeOverrides> e um <xref:System.Xml.Serialization.XmlAttributes> objeto. O exemplo a seguir cria uma <xref:System.Xml.Serialization.XmlTextAttribute> objeto, que atribui ao <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> propriedade e adiciona os <xref:System.Xml.Serialization.XmlAttributes> do objeto (com o nome do campo a ser serializado como texto XML) para o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto. Por fim, o exemplo cria um <xref:System.Xml.Serialization.XmlSerializer> usando o <xref:System.Xml.Serialization.XmlAttributeOverrides> objeto.  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe à qual o <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> foi aplicado.</summary>
        <value>Um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que substitui um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a uma declaração de classe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Serialization.XmlTypeAttribute> podem ser usadas para controlar como um tipo é serializado pelo <xref:System.Xml.Serialization.XmlSerializer>. Por exemplo, por padrão, quando um tipo é serializado, o <xref:System.Xml.Serialization.XmlSerializer> usa o nome de classe como o nome do elemento XML. Criando um <xref:System.Xml.Serialization.XmlTypeAttribute>, definindo o <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> propriedade a ele e criando um <xref:System.Xml.Serialization.XmlAttributeOverrides> do objeto, você pode alterar o nome do elemento XML.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Xml.Serialization.XmlTypeAttribute> do objeto e a atribui a <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> propriedade de um <xref:System.Xml.Serialization.XmlAttributes> objeto.  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>