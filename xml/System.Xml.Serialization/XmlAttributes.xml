<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlAttributes.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edc9671be617b74dce18228bd8abdf746446c9c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc9671be617b74dce18228bd8abdf746446c9c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Represents a collection of attribute objects that control how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">Representa uma coleção de objetos de atributos que controlam como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa e desserializa um objeto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Creating the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> is part of a process that overrides the default way the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes class instances.</source>
          <target state="translated">Criando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> faz parte de um processo que substitui o padrão de forma a <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializa instâncias de classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</source>
          <target state="translated">Por exemplo, suponha que você deseja serializar um objeto que é criado a partir de uma DLL que tem uma fonte acessível.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>By using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>, you can augment or otherwise control how the object is serialized.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>, você pode aumentar ou controlar como o objeto é serializado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class correspond directly to a family of attribute classes that control serialization.</source>
          <target state="translated">Os membros de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> classe correspondem diretamente a uma família de classes de atributos que controlam a serialização.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property must be set to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>, which allows you to override serialization of a field or property by instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the property value as XML text.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> propriedade deve ser definida um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>, que permite que você substituir a serialização de um campo ou propriedade instruindo o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para serializar o valor da propriedade como texto XML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For a complete list of attributes that control serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">Para obter uma lista completa de atributos que controlam a serialização, consulte o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For more details on using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, see <bpt id="p1">[</bpt>How to: Specify an Alternate Element Name for an XML Stream<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>.</source>
          <target state="translated">Para obter mais detalhes sobre como usar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> com o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> de classe, consulte <bpt id="p1">[</bpt>como: especificar um nome de elemento alternativo para um fluxo XML<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">O exemplo a seguir serializa uma instância de uma classe denominada <ph id="ph1">`Orchestra`</ph>, que contém um único campo chamado <ph id="ph2">`Instruments`</ph> que retorna uma matriz de <ph id="ph3">`Instrument`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Uma segunda classe denominada <ph id="ph1">`Brass`</ph> herda o <ph id="ph2">`Instrument`</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto para substituir o <ph id="ph2">`Instrument`</ph> campo--permitindo que o campo aceitar <ph id="ph3">`Brass`</ph> objetos – e adiciona o <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto para uma instância do <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">O exemplo a seguir serializa uma instância de uma classe denominada <ph id="ph1">`Orchestra`</ph>, que contém um único campo chamado <ph id="ph2">`Instruments`</ph> que retorna uma matriz de <ph id="ph3">`Instrument`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Uma segunda classe denominada <ph id="ph1">`Brass`</ph> herda o <ph id="ph2">`Instrument`</ph> classe.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto para substituir o <ph id="ph2">`Instrument`</ph> campo--permitindo que o campo aceitar <ph id="ph3">`Brass`</ph> objetos – e adiciona o <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto para uma instância do <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>A class that can provide alternative implementations of attributes that control XML serialization.</source>
          <target state="translated">Uma classe que pode fornecer implementações alternativas dos atributos que controlam a serialização de XML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class and customizes how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> e personaliza a maneira como o <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa e desserializa um objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Use the default constructor for the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, rather than using this constructor.</source>
          <target state="translated">Use o construtor padrão para o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> classe, em vez de usar este construtor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">Obtém ou define a propriedade <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> a ser substituída.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> a ser substituído.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects on deserialization.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> pode ser aplicado a um membro que retorna uma matriz de <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objetos na desserialização.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">Isso permite que o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar os atributos que não têm um membro correspondente no objeto que está sendo desserializado –, portanto, esses elementos são "desconhecidos" para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">Isso é útil quando o fluxo XML foi alterado por um serviço Web XML, ou quando se sabe que dados aleatórios serão sempre incluídos com o fluxo XML.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph> property allows you to override the serialization of a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph> propriedade permite que você substitua a serialização de um membro ao qual o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> foi aplicada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects to override.</source>
          <target state="translated">Obtém a coleção de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> a serem substituídos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> object that represents the collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> que representa a coleção de objetos <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects on deserialization.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> pode ser aplicado a um membro que retorna uma matriz de <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objetos na desserialização.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">Isso permite que o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar os elementos que não têm um membro correspondente no objeto que está sendo desserializado –, portanto, esses elementos são "desconhecidos" para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">Isso é útil quando o fluxo XML foi alterado por um serviço Web XML, ou quando se sabe que dados aleatórios serão sempre incluídos com o fluxo XML.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property allows you to override the serialization of a member to function as a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> has been applied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> propriedade permite que você substitua a serialização de um membro para funcionar como um membro ao qual o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> foi aplicada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> object and adds it to the collection of objects accessed through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo a seguir cria um novo <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> e o adiciona à coleção de objetos acessados por meio de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is then added to a <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto, em seguida, é adicionado a um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto que é usado para criar um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is used to serialize or deserialize an object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> é usado para serializar ou desserializar um objeto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>To see the effect of using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph> property, create an XML document named "UnknownElements.xml" by running the <ph id="ph2">`SerializeObject`</ph> method in the <ph id="ph3">`Main`</ph> method.</source>
          <target state="translated">Para ver o efeito de usar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph> propriedade, criar um documento XML chamado "UnknownElements.xml" executando o <ph id="ph2">`SerializeObject`</ph> método o <ph id="ph3">`Main`</ph> método.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Edit the resulting document to include other (unknown) elements.</source>
          <target state="translated">Edite o documento resultante para incluir outros elementos (desconhecidos).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Comment out the <ph id="ph1">`SerializeObject`</ph> call in the <ph id="ph2">`Main`</ph> method, and uncomment the call to the <ph id="ph3">`DeserializeObject`</ph> method, which prints out the name and value of any unknown XML element.</source>
          <target state="translated">Comente o <ph id="ph1">`SerializeObject`</ph> chamar o <ph id="ph2">`Main`</ph> método, e remova a chamada para o <ph id="ph3">`DeserializeObject`</ph> método, que imprime o nome e o valor de qualquer elemento XML desconhecido.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated">Obtém ou define um objeto que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph> que especifica como o <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>There are two ways in which a public field or public read/write property that returns an array is serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>: the default serialization, and the controlled serialization.</source>
          <target state="translated">Há duas maneiras em que um campo público ou propriedade pública de leitura/gravação que retorna uma matriz é serializada pelo <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>: a serialização padrão e a serialização controlada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In the default serialization, no attribute is applied to the member.</source>
          <target state="translated">Na serialização padrão, nenhum atributo for aplicado ao membro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</source>
          <target state="translated">Quando serializado, a matriz é serializada como uma sequência aninhada de elementos XML com o nome do elemento XML da sequência aninhada obtido o nome do membro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>To control the serialization more precisely, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">Para controlar a serialização mais precisamente, aplique um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> para o campo ou propriedade.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the generated XML element name from the default to a different name by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> property to a new value.</source>
          <target state="translated">Por exemplo, você pode alterar o nome do elemento XML gerado do padrão para um nome diferente, definindo o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> propriedade para um novo valor.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> propriedade permite que você substitua a serialização padrão, bem como a serialização controlada aplicando um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> ao membro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the XML element name generated from the default (the member identifier) to a new value.</source>
          <target state="translated">Por exemplo, você pode alterar o nome do elemento XML gerado do padrão (o identificador de membro) para um novo valor.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In addition, if you apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a member, it is overridden by any <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> that is assigned to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property.</source>
          <target state="translated">Além disso, se você aplicar uma <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> para um membro, ele é substituído por qualquer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> que é atribuído para o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">O exemplo a seguir serializa uma classe que contém um campo chamado <ph id="ph1">`Members`</ph> que retorna uma matriz de objetos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> is used to override the serialization of the field, and rename the element name to <ph id="ph2">`Staff`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> é usado para substituir a serialização do campo e renomeie o nome do elemento para <ph id="ph2">`Staff`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Gets or sets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes items inserted into an array returned by a public field or read/write property.</source>
          <target state="translated">Obtém ou define uma coleção de objetos que especificam como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa os itens inseridos em uma matriz retornada por um campo público ou uma propriedade de leitura/gravação.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> object that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph> objects.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> que contém uma coleção de objetos <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> propriedade permite que você especifique os tipos derivados que podem ser inseridos em uma matriz retornada por um campo público ou propriedade pública de leitura/gravação.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>For each new type you want the field or property to accept, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> object and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph> it to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) returned by the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">Para cada novo tipo que você deseja que o campo ou propriedade para aceitar, crie um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> objeto e <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph> para o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) retornado pelo <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>(The new type must be derived from the type already accepted by the field or property.) <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">(O novo tipo deve ser derivado do tipo já foi aceito pelo campo ou propriedade.) <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> de objeto e especificar o tipo do objeto que contém o campo ou propriedade e o nome do campo ou propriedade.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Construct an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object before calling <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">Construir um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> com o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto antes de chamar <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">O exemplo a seguir serializa uma classe que contém um campo chamado <ph id="ph1">`Members`</ph> que retorna uma matriz de objetos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> objects are created to allow the field to accept objects that derive from the base class named <ph id="ph2">`Member`</ph>.</source>
          <target state="translated">Dois <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> objetos são criados para permitir que o campo aceitar os objetos que derivam da classe base chamado <ph id="ph2">`Member`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Each object is added to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">Cada objeto é adicionado para o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> por meio de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property as an XML attribute.</source>
          <target state="translated">Obtém ou define um objeto que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um campo público ou uma propriedade de leitura/gravação pública como um atributo XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph> that controls the serialization of a public field or read/write property as an XML attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph> que controla a serialização de um campo público ou de uma propriedade de leitura/gravação como um atributo XML.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</source>
          <target state="translated">Por padrão, se nenhum atributo for aplicado a um campo público ou propriedade pública de leitura/gravação, ele é serializado como um elemento XML.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>You can also instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate an XML attribute by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">Você também pode instruir o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para gerar um atributo XML aplicando um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> para o campo ou propriedade.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the member.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> propriedade permite que você substitua a serialização padrão, bem como a serialização controlada aplicando um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> ao membro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>To do this, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> and set its properties (such as <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>).</source>
          <target state="translated">Para fazer isso, crie um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> e defina suas propriedades (como <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Assign the new object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">Atribuir o novo objeto para o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">Adicionar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> de objeto e especificar o tipo do objeto que contém o campo ou propriedade e o nome do campo ou propriedade.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Lastly, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and call the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">Por fim, crie um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> usando o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto e a chamada a <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a property named <ph id="ph2">`GroupName`</ph>; the <ph id="ph3">`GroupName`</ph> property is serialized as an XML attribute.</source>
          <target state="translated">O exemplo a seguir serializa uma classe denominada <ph id="ph1">`Group`</ph> que contém uma propriedade chamada <ph id="ph2">`GroupName`</ph>; o <ph id="ph3">`GroupName`</ph> propriedade é serializada como um atributo XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the default serialization of the field.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> e um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto para substituir a serialização padrão do campo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to specifically override the property, and the object is set to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property The <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object with the name of the overridden member specified.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> de especificamente substituir a propriedade e o objeto é definido como o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> propriedade o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto é adicionado ao <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto com o nome do membro substituído especificado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Finally, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is constructed and returned using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">Por fim, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> é criada e retornada usando o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>Gets or sets an object that allows you to distinguish between a set of choices.</source>
          <target state="translated">Obtém ou define um objeto que permite distinguir entre um conjunto de opções.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph> that can be applied to a class member that is serialized as an <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> element.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph> que pode ser aplicado a um membro de classe é serializado como um <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Gets or sets the default value of an XML element or attribute.</source>
          <target state="translated">Obtém ou define o valor padrão de um atributo ou elemento XML.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the default value of an XML element or attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa o valor padrão de um atributo ou elemento XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can specify the default value of an XML element or XML attribute by applying a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> to a member.</source>
          <target state="translated">Você pode especificar o valor padrão de um elemento XML ou atributo XML aplicando um <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> a um membro.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</source>
          <target state="translated">Para examinar o resultado da aplicação de valor, compilar o aplicativo em uma DLL ou executável e passar o arquivo resultante como um argumento para a ferramenta de definição de esquema XML (XSD.exe).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the XML schema document, a default value is assigned to the <ph id="ph1">`default`</ph> attribute.</source>
          <target state="translated">No documento de esquema XML, um valor padrão é atribuído para o <ph id="ph1">`default`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the following example, the default for the <ph id="ph1">\&lt;</ph>Animal&gt; element is "Dogs."</source>
          <target state="translated">No exemplo a seguir, o padrão para o <ph id="ph1">\&lt;</ph>Animal &gt; elemento é "Cachorros".</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To override the default value, create an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>.</source>
          <target state="translated">Para substituir o valor padrão, crie um <ph id="ph1">&lt;xref:System.Object&gt;</ph> e atribuí-la para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If the value assigned to a field or property is equal to the default value for that field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not serialize the value to the XML-instance.</source>
          <target state="translated">Se o valor atribuído a um campo ou propriedade é igual ao valor padrão para esse campo ou propriedade, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não serializar o valor para a instância XML.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This is because the assigned value can be recovered from the XML schema.</source>
          <target state="translated">Isso ocorre porque o valor atribuído pode ser recuperado do esquema XML.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In other words, setting a field or property to its own default value is equivalent of not setting it at all.</source>
          <target state="translated">Em outras palavras, a definição de um campo ou propriedade com seu próprio valor padrão é equivalente de não configurá-la.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Likewise, if no value is set for the field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the default value found in the schema.</source>
          <target state="translated">Da mesma forma, se nenhum valor for definido para o campo ou propriedade, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> usa o valor padrão é encontrado no esquema.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</source>
          <target state="translated">Em ambos os casos, (definindo a propriedade como seu padrão ou não configurá-la), a instância de documento XML não contém qualquer valor para a propriedade.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can use the class constructors instead of the schema to assign the default values.</source>
          <target state="translated">Você pode usar os construtores de classe em vez do esquema para atribuir os valores padrão.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</source>
          <target state="translated">Se você estiver usando Xsd.exe para gerar uma classe de esquemas, você pode comentar ou remover todos os atributos [System.ComponentModel.DefaultValueAttribute("myFieldName")] dos arquivos de classe.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>The following example shows a class named <ph id="ph1">`Pet`</ph> that contains a field that has a default value set to "Dog".</source>
          <target state="translated">O exemplo a seguir mostra uma classe chamada <ph id="ph1">`Pet`</ph> que contém um campo que tem um valor padrão definido como "Dog".</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>However, the example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph> property to a new default value ("Cat").</source>
          <target state="translated">No entanto, o exemplo também cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto e define seu <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph> propriedade para um novo valor padrão ("Cat").</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This overrides the original default value.</source>
          <target state="translated">Isso substitui o valor padrão original.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Thus, if the field value is set to "Cat", the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> treats it as the default value, and not serialize it.</source>
          <target state="translated">Portanto, se o valor do campo é definido como "Cat", o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> tratará como o valor padrão e não serializá-lo.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If it is set to any other value, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the value.</source>
          <target state="translated">Se ele for definido como qualquer outro valor, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializa o valor.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>Gets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property as an XML element.</source>
          <target state="translated">Obtém uma coleção de objetos que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um campo público ou uma propriedade de leitura/gravação como um elemento XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> que contém uma coleção de objetos <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>For each overridden member that is serialized as an XML element, you must add a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> by calling the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph> method.</source>
          <target state="translated">Para cada membro substituído é serializado como um elemento XML, você deve adicionar um novo <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> chamando o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>By default, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> object is created and assigned to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> property.</source>
          <target state="translated">Por padrão, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> objeto é criado e atribuído para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The following example serializes the <ph id="ph1">`Transportation`</ph> class, which contains a single field named <ph id="ph2">`Vehicles`</ph> that returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir serializa o <ph id="ph1">`Transportation`</ph> classe, que contém um único campo chamado <ph id="ph2">`Vehicles`</ph> que retorna um <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example applies two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to the <ph id="ph2">`Vehicles`</ph> field.</source>
          <target state="translated">O exemplo aplica dois <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> atributos para o <ph id="ph2">`Vehicles`</ph> campo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example creates two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> objects and adds them to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> collection of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">O exemplo cria dois <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> objetos e adiciona-os para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> coleção de um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>To allow the array to accept different object types, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">Para permitir que a matriz aceitar diferentes tipos de objeto, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto é adicionado para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated">Obtém ou define um objeto que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um membro de enumeração.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph> que especifica como o <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa um membro de enumeração.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>For each identifier you want to override, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> that overrides the identifier.</source>
          <target state="translated">Para cada identificador que você deseja substituir, você deve criar um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> do objeto e defina o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> propriedade para um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> que substitui o identificador.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify both the <ph id="ph3">&lt;xref:System.Type&gt;</ph> of the class that contains the enumeration, and the overridden member name.</source>
          <target state="translated">Adicionar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> do objeto e especificar os dois o <ph id="ph3">&lt;xref:System.Type&gt;</ph> da classe que contém a enumeração e o nome de membro substituído.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The following example serializes two classes named <ph id="ph1">`Food`</ph> and <ph id="ph2">`FoodType`</ph>.</source>
          <target state="translated">O exemplo a seguir serializa duas classes chamadas <ph id="ph1">`Food`</ph> e <ph id="ph2">`FoodType`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The <ph id="ph1">`FoodType`</ph> class contains two enumerations that are overridden and, for each enumeration, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> object that it assigns to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property of an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">O <ph id="ph1">`FoodType`</ph> classe contém duas enumerações que são substituídas e, para cada tipo de enumeração, o exemplo cria um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> que ele atribui ao objeto de <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> propriedade de um <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The example then adds the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">O exemplo adiciona o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto, que é usado para criar um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>Gets or sets a value that specifies whether or not the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property.</source>
          <target state="translated">Obtém ou define um valor que especifica se o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa ou não um campo público ou uma propriedade de leitura/gravação pública.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must not serialize the field or property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o campo ou propriedade não for serializada por <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>By default, all public fields and public read/write properties are serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">Por padrão, todos os campos públicos e as propriedades públicas de leitura/gravação são serializadas pelo <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</source>
          <target state="translated">Ou seja, o valor de cada campo público ou propriedade é mantido como um elemento XML ou atributo XML em uma instância de documento XML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>To override the default serialization of a field or property, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para substituir a serialização padrão de um campo ou propriedade, crie um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> do objeto e defina seu <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> propriedade <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> o objeto para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> de objeto e especificar o tipo do objeto que contém o campo ou propriedade para ignorar e o nome do campo ou propriedade para ignorar.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied to a field or property, the field or property is ignored.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> é aplicado a um campo ou propriedade, campo ou propriedade é ignorada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>However you can override that behavior by creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, setting its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, adding it to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object specifying the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">No entanto, você pode substituir esse comportamento, criando um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto, definindo seu <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> propriedade <ph id="ph3">`false`</ph>, adicioná-lo para um <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> Especifica o tipo do objeto que contém o campo ou propriedade e o nome do campo ou propriedade de objeto.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>, which contains a member named <ph id="ph2">`Comment`</ph> to which the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied.</source>
          <target state="translated">O exemplo a seguir serializa uma classe denominada <ph id="ph1">`Group`</ph>, que contém um membro chamado <ph id="ph2">`Comment`</ph> para que o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> é aplicada.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, thereby overriding the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto e define o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> propriedade <ph id="ph3">`false`</ph>, assim, substituindo o <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> object is overridden.</source>
          <target state="translated">Obtém ou define um valor que especifica se é necessário manter todas as declarações de namespace quando um objeto que contém um membro que retorna um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> é substituído.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace declarations should be kept; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se as declarações de namespace precisarem ser mantidas; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The following example contains a class named <ph id="ph1">`Student`</ph>.</source>
          <target state="translated">O exemplo a seguir contém uma classe denominada <ph id="ph1">`Student`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The class contains a member named <ph id="ph1">`MyNamespaces`</ph> that returns an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object.</source>
          <target state="translated">A classe contém um membro chamado <ph id="ph1">`MyNamespaces`</ph> que retorna um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object that is added to an instance of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> que é adicionado a uma instância do objeto de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, which instructs the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to preserve the namespaces when the serialization of the <ph id="ph4">`Student`</ph> object is overridden.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph> está definida como <ph id="ph2">`true`</ph>, que instrui o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para preservar os namespaces quando a serialização do <ph id="ph4">`Student`</ph> objeto é substituído.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class as an XML root element.</source>
          <target state="translated">Obtém ou define um objeto que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa uma classe como um elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that overrides a class attributed as an XML root element.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> que substitui uma classe atribuída como um elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto, um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto e um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The example assigns the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">O exemplo atribui o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph> propriedade do <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> e o adiciona a <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para o <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Lastly, the example gets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object by passing the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the serialized class to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">Por fim, o exemplo obtém o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto passando o <ph id="ph2">&lt;xref:System.Type&gt;</ph> da classe serializada para o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>(In this example, the <ph id="ph1">&lt;xref:System.Type&gt;</ph> is <ph id="ph2">`Group`</ph>.)</source>
          <target state="translated">(Neste exemplo, o <ph id="ph1">&lt;xref:System.Type&gt;</ph> é <ph id="ph2">`Group`</ph>.)</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Gets or sets an object that instructs the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> to serialize a public field or public read/write property as XML text.</source>
          <target state="translated">Obtém ou define um objeto que instrui o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> para serializar um campo público ou propriedade de leitura/gravação pública como texto XML.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph> that overrides the default serialization of a public property or field.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph> que substitui a serialização padrão de uma propriedade pública ou campo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>By default, a public field or public read/write property is serialized as an XML element by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">Por padrão, um campo público ou propriedade pública de leitura/gravação é serializada como um elemento XML de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>However, it can force the field or property to be serialized as XML text by applying an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">No entanto, ele pode forçar o campo ou propriedade a ser serializado como texto XML aplicando um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> para o campo ou propriedade.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> cannot be applied to a field or property that returns an array.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> não pode ser aplicado a um campo ou propriedade que retorna uma matriz.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default serialization of a field or property (that does not return an array), create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">Para substituir a serialização padrão de um campo ou propriedade (que não retorna uma matriz), crie um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> e atribuí-la para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> propriedade de um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</source>
          <target state="translated">Adicionar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> o objeto para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> de objeto e especificar o tipo do objeto que contém a propriedade ou campo substituído e o nome do campo substituído ou propriedade.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The following example serializes the class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">O exemplo a seguir serializa a classe denominada <ph id="ph1">`Group`</ph>, que contém um campo chamado <ph id="ph2">`Comment`</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default way the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the field, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">Para substituir o padrão de forma a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializa o campo, o exemplo cria um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> e um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> object, which it assigns to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property, and adds the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object (with the name of the field to be serialized as XML text) to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> objeto, que atribui para a <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> propriedade e adiciona o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto (com o nome do campo a ser serializado como texto XML) para o <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Lastly the example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">Por fim o exemplo cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> usando o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> has been applied.</source>
          <target state="translated">Obtém ou define um objeto que especifica como o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa uma classe à qual o <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> foi aplicado.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> that overrides an <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> applied to a class declaration.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> que substitui um <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> aplicado a uma declaração de classe.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> can be used to control how a type is serialized by the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> podem ser usadas para controlar como um tipo é serializado pelo <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>For example, by default, when a type is serialized, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the class name as the XML element name.</source>
          <target state="translated">Por exemplo, por padrão, quando um tipo é serializado, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> usa o nome de classe como o nome do elemento XML.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property to it, and creating an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, you can change the XML element name.</source>
          <target state="translated">Criando um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, a definição de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> propriedade e criar um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> do objeto, você pode alterar o nome do elemento XML.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> object, and assigns it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> de objeto e atribui-lo para o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> propriedade de um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> objeto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>