<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSerializer.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d07956b41790d10b90106ace692180cac099fd6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d07956b41790d10b90106ace692180cac099fd6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serializes and deserializes objects into and from XML documents.</source>
          <target state="translated">Serializa e desserializa objetos de e para documentos XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> enables you to control how objects are encoded into XML.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> permite controlar como os objetos são codificados em XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.</source>
          <target state="translated">Serialização de XML é o processo de conversão de campos e propriedades públicas de um objeto em um formato serial (nesse caso, XML) para armazenamento e transporte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Deserialization re-creates the object in its original state from the XML output.</source>
          <target state="translated">Desserialização recria o objeto em seu estado original da saída XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can think of serialization as a way of saving the state of an object into a stream or buffer.</source>
          <target state="translated">Você pode pensar serialização como uma maneira de salvar o estado de um objeto em um fluxo ou um buffer.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, ASP.NET uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to encode XML Web service messages.</source>
          <target state="translated">Por exemplo, o ASP.NET usa a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> classe para codificar mensagens do serviço da Web em XML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects.</source>
          <target state="translated">Os dados em seus objetos são descritos com o uso de construções de linguagem de programação, como classes, campos, propriedades, tipos primitivos, matrizes e até mesmo XML inserido na forma de objetos <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> ou <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You have the option of creating your own classes, annotated with attributes, or using the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2)</ept> to generate the classes based on an existing XML Schema definition (XSD) document.</source>
          <target state="translated">Você tem a opção de criar suas próprias classes anotados com atributos ou usando o <bpt id="p1">[</bpt>ferramenta de definição de esquema XML (Xsd.exe)<ept id="p1">](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2)</ept> para gerar as classes com base em um documento XSD (definição) de esquema XML existente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.</source>
          <target state="translated">Se você tiver um esquema XML, você pode executar o Xsd.exe para produzir um conjunto de classes que são de tipo forte para o esquema e anotado com atributos de acordo com o esquema quando serializado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs.</source>
          <target state="translated">Para transferir dados entre objetos e XML requer um mapeamento das construções de linguagem de programação para o esquema XML e de esquema XML para as construções de linguagem de programação.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> e ferramentas relacionadas como Xsd.exe fornecem a ponte entre essas duas tecnologias em tanto tempo de design e tempo de execução.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema.</source>
          <target state="translated">Em tempo de design, use o Xsd.exe para produzir um documento de esquema XML (. xsd) de suas classes personalizadas ou para gerar classes de um determinado esquema.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>In either case, the classes are annotated with custom attributes to instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> how to map between the XML schema system and the common language runtime.</source>
          <target state="translated">Em ambos os casos, as classes são anotadas com atributos personalizados para instruir o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> como mapear entre o sistema de esquema XML e o common language runtime.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>At runtime, instances of the classes can be serialized into XML documents that follow the given schema.</source>
          <target state="translated">Em tempo de execução, as instâncias das classes podem ser serializadas em documentos XML que seguem o esquema fornecido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Likewise, these XML documents can be deserialized into runtime objects.</source>
          <target state="translated">Da mesma forma, esses documentos XML podem ser desserializados em objetos de tempo de execução.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Note that the XML schema is optional, and not required at design time or runtime.</source>
          <target state="translated">Observe que o esquema XML é opcional e não é necessária no tempo de design ou tempo de execução.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Controlling Generated XML</source>
          <target state="translated">Controlando o XML gerado</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To control the generated XML, you can apply special attributes to classes and members.</source>
          <target state="translated">Para controlar o XML gerado, você pode aplicar atributos especiais para classes e membros.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, to specify a different XML element name, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a public field or property, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">Por exemplo, para especificar um nome diferente do elemento XML, aplicar um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> para um campo público ou propriedade e conjunto de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)</ept>.</source>
          <target state="translated">Para obter uma lista completa de atributos semelhantes, consulte <bpt id="p1">[</bpt>atributos que controle a serialização XML<ept id="p1">](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can also implement the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface to control the XML output.</source>
          <target state="translated">Você também pode implementar o <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface para controlar a saída XML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If the XML generated must conform to section 5 of the World Wide Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1", you must construct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph>.</source>
          <target state="translated">Se o XML gerado deve estar de acordo com a seção 5 do documento World Wide Consortium (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1", você deve construir o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> com um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To further control the encoded SOAP XML, use the attributes listed in <bpt id="p1">[</bpt>Attributes That Control Encoded SOAP Serialization<ept id="p1">](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91)</ept>.</source>
          <target state="translated">Para obter mais controle XML codificado em SOAP, use os atributos listados no <bpt id="p1">[</bpt>atributos que controle codificado serialização SOAP<ept id="p1">](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>With the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> you can take advantage of working with strongly typed classes and still have the flexibility of XML.</source>
          <target state="translated">Com o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> você pode tirar proveito de trabalhar com classes digitadas e ainda tem a flexibilidade de XML.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Using fields or properties of type <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> in your strongly typed classes, you can read parts of the XML document directly into XML objects.</source>
          <target state="translated">Usando campos ou propriedades de tipo <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> ou <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> em suas classes com rigidez de tipos, você pode ler partes do documento XML diretamente em objetos XML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you work with extensible XML schemas, you can also use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> attributes to serialize and deserialize elements or attributes that are not found in the original schema.</source>
          <target state="translated">Se você trabalhar com os esquemas XML extensíveis, você também pode usar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> atributos para serializar e desserializar elementos ou atributos que não são encontrados no esquema original.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To use the objects, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects, or apply an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> to a field that returns an array of <ph id="ph4">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects.</source>
          <target state="translated">Para usar os objetos, aplicar um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> para um campo que retorna uma matriz de <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objetos ou aplicar um <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> para um campo que retorna uma matriz de <ph id="ph4">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If a property or field returns a complex object (such as an array or a class instance), the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> converts it to an element nested within the main XML document.</source>
          <target state="translated">Se uma propriedade ou um campo retornar um objeto complexo (como uma matriz ou uma instância da classe), <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> o converterá em elemento aninhado dentro do documento XML principal.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, the first class in the following code returns an instance of the second class.</source>
          <target state="translated">Por exemplo, a primeira classe no código a seguir retorna uma instância da classe de segundo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The serialized, XML output looks like this:</source>
          <target state="translated">O serializado, saída XML tem esta aparência:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If a schema includes an element that is optional (minOccurs = '0'), or if the schema includes a default value, you have two options.</source>
          <target state="translated">Se um esquema inclui um elemento que é opcional (minOccurs = '0'), ou se o esquema inclui um valor padrão, você tem duas opções.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>One option is to use <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType&gt;</ph> to specify the default value, as shown in the following code.</source>
          <target state="translated">Uma opção é usar <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType&gt;</ph> para especificar o valor padrão, conforme mostrado no código a seguir.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Another option is to use a special pattern to create a Boolean field recognized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, and to apply the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to the field.</source>
          <target state="translated">Outra opção é usar um padrão especial para criar um campo booleano reconhecido pelo <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>e aplicar o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> ao campo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The pattern is created in the form of <ph id="ph1">`propertyNameSpecified`</ph>.</source>
          <target state="translated">O padrão é criado na forma de <ph id="ph1">`propertyNameSpecified`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, if there is a field named "MyFirstName" you would also create a field named "MyFirstNameSpecified" that instructs the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> whether to generate the XML element named "MyFirstName".</source>
          <target state="translated">Por exemplo, se houver um campo chamado "MyFirstName", você também deve criar um campo chamado "MyFirstNameSpecified" que instrui o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> se deseja gerar o elemento XML chamado "MyFirstName".</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This is shown in the following example.</source>
          <target state="translated">Isso é mostrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Overriding Default Serialization</source>
          <target state="translated">Substituir a serialização padrão</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class.</source>
          <target state="translated">Você também pode substituir a serialização de qualquer conjunto de objetos e suas propriedades e campos criando um dos atributos apropriados e adicioná-la a uma instância do <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</source>
          <target state="translated">Substituir a serialização dessa maneira tem dois usos: primeiro, você pode controlar e aumentar a serialização de objetos encontrados em uma DLL, mesmo se você não tiver acesso à fonte de; em seguida, você pode criar um conjunto de classes serializáveis, mas serializar os objetos de várias maneiras.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For more details, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class and <bpt id="p1">[</bpt>How to: Control Serialization of Derived Classes<ept id="p1">](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)</ept>.</source>
          <target state="translated">Para obter mais detalhes, consulte o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> classe e <bpt id="p1">[</bpt>como: serialização de controle de Classes derivadas de<ept id="p1">](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To serialize an object, call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Para serializar um objeto, chame o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To deserialize an object, call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">Para desserializar um objeto, chame o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To add XML namespaces to an XML document, see <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">Para adicionar namespaces XML para um documento XML, consulte <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> gives special treatment to classes that implement <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> fornece tratamento especial para as classes que implementam <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> must implement a public <ph id="ph2">`Add`</ph> method that takes a single parameter.</source>
          <target state="translated">Uma classe que implementa <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> deve implementar um método <ph id="ph2">`Add`</ph> público que aceita um único parâmetro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`Add`</ph> method's parameter must be of the same type as is returned from the <ph id="ph2">`Current`</ph> property on the value returned from <ph id="ph3">`GetEnumerator`</ph>, or one of that type's bases.</source>
          <target state="translated">O <ph id="ph1">`Add`</ph> parâmetro do método deve ser do mesmo tipo que é retornado o <ph id="ph2">`Current`</ph> o valor retornado da propriedade <ph id="ph3">`GetEnumerator`</ph>, ou uma das bases de dados do tipo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> (such as <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>) in addition to <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> must have a public <ph id="ph4">`Item`</ph> indexed property (indexer in C#) that takes an integer, and it must have a public <ph id="ph5">`Count`</ph> property of type integer.</source>
          <target state="translated">Uma classe que implementa <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> (como <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>) além <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> deve ter um <ph id="ph4">`Item`</ph> indexado propriedade (indexador em c#) que utiliza um número inteiro, e ele deve ter um público <ph id="ph5">`Count`</ph> propriedade do tipo inteiro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The parameter to the <ph id="ph1">`Add`</ph> method must be the same type as is returned from the <ph id="ph2">`Item`</ph> property, or one of that type's bases.</source>
          <target state="translated">O parâmetro para o <ph id="ph1">`Add`</ph> método deve ser do mesmo tipo que é retornado a partir de <ph id="ph2">`Item`</ph> propriedade ou uma das bases de dados do tipo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For classes that implement <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>, values to be serialized are retrieved from the indexed <ph id="ph2">`Item`</ph> property, not by calling <ph id="ph3">`GetEnumerator`</ph>.</source>
          <target state="translated">Para classes que implementam <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>, valores a serem serializados são recuperados do indexada <ph id="ph2">`Item`</ph> propriedade não chamando <ph id="ph3">`GetEnumerator`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.</source>
          <target state="translated">Você deve ter permissão para gravar no diretório temporário (conforme definido pela variável de ambiente TEMP) desserializar um objeto.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Dynamically Generated Assemblies</source>
          <target state="translated">Assemblies gerados dinamicamente</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types.</source>
          <target state="translated">Para aumentar o desempenho, a infraestrutura de serialização XML gera dinamicamente os assemblies para serializar e desserializar os tipos especificados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The infrastructure finds and reuses those assemblies.</source>
          <target state="translated">A infraestrutura localiza e reutiliza os assemblies.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This behavior occurs only when using the following constructors:</source>
          <target state="translated">Esse comportamento ocorre apenas ao usar construtores a seguir:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance.</source>
          <target state="translated">Se você usar qualquer um dos outros construtores, várias versões do mesmo assembly são geradas e nunca descarregadas, que resulta em um vazamento de memória e um baixo desempenho.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The easiest solution is to use one of the previously mentioned two constructors.</source>
          <target state="translated">A solução mais fácil é usar um dos dois construtores mencionados anteriormente.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Otherwise, you must cache the assemblies in a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, as shown in the following example.</source>
          <target state="translated">Caso contrário, você deve armazenar em cache os assemblies em um <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, conforme mostrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serialization of ArrayList and Generic List</source>
          <target state="translated">Serialização ArrayList e lista genérica</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize or deserialize the following:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar ou desserializar o seguinte:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Arrays of <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph></source>
          <target state="translated">Matrizes de <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Arrays of <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph></source>
          <target state="translated">Matrizes de <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serialization of Enumerations of Unsigned Long</source>
          <target state="translated">Serialização de enumerações do tempo Unsigned</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (<ph id="ph2">`ulong`</ph> in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não pode ser instanciado para serializar uma enumeração, se as seguintes condições forem verdadeiras: A enumeração é do tipo unsigned long (<ph id="ph2">`ulong`</ph> em c#) e a enumeração contém qualquer membro com um valor maior que 9.223.372.036.854.775.807.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>For example, the following cannot be serialized.</source>
          <target state="translated">Por exemplo, a seguir não pode ser serializado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Objects marked with the Obsolete Attribute no longer serialized</source>
          <target state="translated">Objetos marcados com o atributo obsoleto não serializado</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>In the <ph id="ph1">[!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class no longer serializes objects that are marked as <ph id="ph3">`[Obsolete]`</ph>.</source>
          <target state="translated">No <ph id="ph1">[!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)]</ph> o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> classe não serializa objetos marcados como <ph id="ph3">`[Obsolete]`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The following example contains two main classes: <ph id="ph1">`PurchaseOrder`</ph> and <ph id="ph2">`Test`</ph>.</source>
          <target state="translated">O exemplo a seguir contém duas classes principais: <ph id="ph1">`PurchaseOrder`</ph> e <ph id="ph2">`Test`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`PurchaseOrder`</ph> class contains information about a single purchase.</source>
          <target state="translated">O <ph id="ph1">`PurchaseOrder`</ph> classe contém informações sobre uma compra único.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <ph id="ph1">`Test`</ph> class contains the methods that create the purchase order, and that read the created purchase order.</source>
          <target state="translated">O <ph id="ph1">`Test`</ph> classe contém métodos que criar a ordem de compra e que ler a ordem de compra criada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Commonly, an application defines several classes that the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> converts into a single XML-instance document.</source>
          <target state="translated">Normalmente, um aplicativo define várias classes que o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> converte em um único documento de instância XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>However, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must know only one type--the type of the class that represents the XML root element.</source>
          <target state="translated">No entanto, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve saber apenas um tipo – o tipo da classe que representa o elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> automatically serializes all subordinate class instances.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializa automaticamente todas as instâncias de classe subordinada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>Similarly, only the type of the XML root element is required for deserialization.</source>
          <target state="translated">Da mesma forma, somente o tipo do elemento raiz XML é necessário para desserialização.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that serializes an object named <ph id="ph2">`Widget`</ph>.</source>
          <target state="translated">O exemplo a seguir constrói um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> que serializa um objeto chamado <ph id="ph2">`Widget`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
          <source>The example sets various properties of the object before calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo define várias propriedades do objeto antes de chamar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> that maps one type to another.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> que mapeia um tipo para outro.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class using an object that maps one type to another.</source>
          <target state="translated">Inicializa uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> usando um objeto que mapeia um tipo para outro.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>This constructor is used to create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when you serialize an object into a SOAP message.</source>
          <target state="translated">Este construtor é usado para criar um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ao serializar um objeto em uma mensagem SOAP.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>To control the SOAP messages generated, use the special attributes (beginning with the word "Soap") found in the <ph id="ph1">&lt;xref:System.Xml.Serialization&gt;</ph> namespace.</source>
          <target state="translated">Para controlar as mensagens SOAP geradas, use os atributos especiais (começando com a palavra "Soap") encontrados no <ph id="ph1">&lt;xref:System.Xml.Serialization&gt;</ph> namespace.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">O exemplo a seguir serializa uma classe denominada <ph id="ph1">`Group`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>The serialization of the <ph id="ph1">`GroupName`</ph>, <ph id="ph2">`IgnoreThis`</ph> fields, and the members of the <ph id="ph3">`GroupType`</ph> enumeration are overridden.</source>
          <target state="translated">A serialização do <ph id="ph1">`GroupName`</ph>, <ph id="ph2">`IgnoreThis`</ph> campos e os membros do <ph id="ph3">`GroupType`</ph> enumeração são substituídas.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>In the <ph id="ph1">`CreateOverrideSerializer`</ph> method, a <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object is created, and for each overridden member or enumeration, a <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> object is created with the appropriate property set and added to the <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">No <ph id="ph1">`CreateOverrideSerializer`</ph> método, uma <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> objeto é criado e para cada membro substituído ou de enumeração, uma <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> objeto é criado com a propriedade apropriada definido e adicionados ao <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> object is created using the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> object, and that <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> object is used to create the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that overrides the default serialization.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> objeto é criado usando o <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> objeto e que <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlMapping&gt;</ph> objeto é usado para criar o <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> que substitui a serialização padrão.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The default namespace to use for all the XML elements.</source>
          <target state="translated">O namespace padrão a ser usado para todos os elementos XML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>Specifies the default namespace for all the XML elements.</source>
          <target state="translated">Especifica o namespace padrão para todos os elementos XML.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that serializes an object named <ph id="ph2">`Widget`</ph>.</source>
          <target state="translated">O exemplo a seguir constrói um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> que serializa um objeto chamado <ph id="ph2">`Widget`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
          <source>The example sets various properties of the object before calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo define várias propriedades do objeto antes de chamar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de tipos de objeto adicionais a serem serializados.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em um objeto de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>If a property or field returns an array, the <ph id="ph1">&lt;paramref name="extraTypes" /&gt;</ph> parameter specifies objects that can be inserted into the array.</source>
          <target state="translated">Se uma propriedade ou um campo retornar uma matriz, o parâmetro <ph id="ph1">&lt;paramref name="extraTypes" /&gt;</ph> especificará os objetos que podem ser inseridos na matriz.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</source>
          <target state="translated">Por padrão, se um campo ou propriedade pública retorna um objeto, ou uma matriz de objetos, os tipos de objeto automaticamente são serializados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>However, if a class contains a field or property that returns an array of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>, any object can be inserted into that array.</source>
          <target state="translated">No entanto, se uma classe contém um campo ou propriedade que retorna uma matriz do tipo <ph id="ph1">&lt;xref:System.Object&gt;</ph>, qualquer objeto pode ser inserido nessa matriz.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be instructed to expect all the possible object types that are inserted into the <ph id="ph2">&lt;xref:System.Object&gt;</ph> array.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve ser instruído a espera que todos os tipos de objeto possíveis que são inseridos a <ph id="ph2">&lt;xref:System.Object&gt;</ph> matriz.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>To do this, use the <ph id="ph1">`extraTypes`</ph> parameter to specify the extra object types to serialize or deserialize.</source>
          <target state="translated">Para fazer isso, use o <ph id="ph1">`extraTypes`</ph> parâmetro para especificar os tipos de objeto extra para serializar ou desserializar.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>You can also use the <ph id="ph1">`extraTypes`</ph> parameter to specify types derived from a base class.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">`extraTypes`</ph> para especificar os tipos derivados de uma classe base.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>For example, suppose a base class named <ph id="ph1">`Phone`</ph> exists, and a class named <ph id="ph2">`InternationalPhone`</ph> derives from it.</source>
          <target state="translated">Por exemplo, suponha que uma classe base chamada <ph id="ph1">`Phone`</ph> existir e uma classe denominada <ph id="ph2">`InternationalPhone`</ph> dele derivado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>Use the <ph id="ph1">`extraTypes`</ph> parameter to specify the derived type as well.</source>
          <target state="translated">Use o <ph id="ph1">`extraTypes`</ph> parâmetro para especificar o tipo derivado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The following example serializes an instance of a class that contains a public field that returns an array of objects.</source>
          <target state="translated">O exemplo a seguir serializa uma instância de uma classe que contém um campo público que retorna uma matriz de objetos.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
          <source>The <ph id="ph1">`extraTypes`</ph> parameter of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> constructor specifies the types of the objects that can be serialized in the array.</source>
          <target state="translated">O <ph id="ph1">`extraTypes`</ph> parâmetro o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> construtor Especifica os tipos de objetos que podem ser serializados na matriz.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The type of the object to serialize.</source>
          <target state="translated">O tipo do objeto a serializar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</source>
          <target state="translated">Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The <ph id="ph1">`overrides`</ph> parameter can be used to control how fields and properties are encoded in XML.</source>
          <target state="translated">O <ph id="ph1">`overrides`</ph> parâmetro pode ser usado para controlar como os campos e propriedades são codificadas em XML.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>These settings override any attributes that already exist on the objects.</source>
          <target state="translated">Essas configurações substituem todos os atributos que já existem nos objetos.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</source>
          <target state="translated">Isso pode ser útil quando o código-fonte não pode ser modificado ou várias codificações são necessárias para as mesmas classes.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
          <source>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.</source>
          <target state="translated">O exemplo a seguir serializa uma instância de uma classe que é definido em uma DLL e para fazer isso, substituirá os membros públicos encontrados na DLL.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that represents the XML root element.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> que representa o elemento raiz de XML.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em documentos XML e desserializar um documento XML no objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>It also specifies the class to use as the XML root element.</source>
          <target state="translated">Também especifica a classe a ser usado como o elemento raiz de XML.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The root element of an XML document encloses all the other elements.</source>
          <target state="translated">O elemento raiz de um documento XML inclui todos os outros elementos.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>By default, the object specified by the <ph id="ph1">`type`</ph> parameter is serialized as the root element.</source>
          <target state="translated">Por padrão, o objeto especificado pelo <ph id="ph1">`type`</ph> parâmetro é serializado como o elemento raiz.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>Properties, such as the XML element name of the root element, are taken from the <ph id="ph1">`type`</ph> object.</source>
          <target state="translated">Propriedades, como o nome do elemento XML do elemento raiz, são tiradas de <ph id="ph1">`type`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>However, the <ph id="ph1">`root`</ph> parameter allows you to replace the default object's information by specifying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>; the object allows you to set a different namespace, element name, and so on.</source>
          <target state="translated">No entanto, o <ph id="ph1">`root`</ph> parâmetro permite que você substitua as informações do objeto padrão especificando um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>; o objeto permite que você defina um namespace diferente, o nome do elemento e assim por diante.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
          <source>The following example constructs an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> that uses an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> that contains various properties of the XML root element, such as its namespace and element name.</source>
          <target state="translated">O exemplo a seguir constrói um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> que usa um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> que contém várias propriedades do elemento raiz XML, como seu nome de namespace e o elemento.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> que estende ou substitui o comportamento da classe especificada no parâmetro <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de tipos de objeto adicionais a serem serializados.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> que define as propriedades do elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">O namespace padrão de todos os elementos XML no documento XML.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of type <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> into XML document instances, and deserialize XML document instances into objects of type <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</source>
          <target state="translated">Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</source>
          <target state="translated">Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The <ph id="ph1">`overrides`</ph> parameter allows for the creation of an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt; that serializes a class that extends or overrides the behavior of a base class.</source>
          <target state="translated">O <ph id="ph1">`overrides`</ph> parâmetro permite a criação de um [construtor XmlSerializer (, XmlAttributeOverrides, tipo<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt; que serializa uma classe que estende ou substitui o comportamento de um classe base.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL.</source>
          <target state="translated">Por exemplo, dada uma DLL, é possível criar uma classe que herda ou estende uma classe contida na DLL.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>To serialize such a class, you must use an instance of the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides&gt; class when constructing the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt;.</source>
          <target state="translated">Para serializar dessa classe, você deve usar uma instância da [construtor XmlSerializer (, XmlAttributeOverrides, tipo<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides &gt; classe ao construir [construtor XmlSerializer ( Tipo de tipo, XmlAttributeOverrides,<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt;.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>For more details, see [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides&gt;.</source>
          <target state="translated">Para obter mais detalhes, consulte [construtor XmlSerializer (tipo de tipo, XmlAttributeOverrides,<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlAttributeOverrides &gt;.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</source>
          <target state="translated">Por padrão, se um campo ou propriedade pública retorna um objeto, ou uma matriz de objetos, os tipos de objeto automaticamente são serializados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>However, if a class contains a field or property that returns an array of type [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Object&gt;, any object can be inserted into that array.</source>
          <target state="translated">No entanto, se uma classe contém um campo ou propriedade que retorna uma matriz do tipo [construtor XmlSerializer (tipo de tipo, XmlAttributeOverrides,<ph id="ph1">\&lt;</ph>xref:System.Object &gt;, qualquer objeto pode ser inserido nessa matriz.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>In that case, the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt; must be instructed to expect all the possible object types that are inserted into the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Object&gt; array.</source>
          <target state="translated">Nesse caso, o [construtor XmlSerializer (tipo de tipo, XmlAttributeOverrides,<ph id="ph1">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt; deve ser instruído a espera que todos os tipos de objeto possíveis que são inseridos em [XmlSerializer Construtor (tipo de tipo, XmlAttributeOverrides,<ph id="ph2">\&lt;</ph>xref:System.Object &gt; matriz.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>To do this, use the <ph id="ph1">`extraTypes`</ph> parameter to specify the extra object types to serialize or deserialize.</source>
          <target state="translated">Para fazer isso, use o <ph id="ph1">`extraTypes`</ph> parâmetro para especificar os tipos de objeto extra para serializar ou desserializar.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The root element of an XML document encloses all the other elements.</source>
          <target state="translated">O elemento raiz de um documento XML inclui todos os outros elementos.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>By default, the object specified by the <ph id="ph1">`type`</ph> parameter is serialized as the root element.</source>
          <target state="translated">Por padrão, o objeto especificado pelo <ph id="ph1">`type`</ph> parâmetro é serializado como o elemento raiz.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Properties, such as the XML element name of the root element are taken from the <ph id="ph1">`type`</ph> object.</source>
          <target state="translated">Propriedades, como o nome do elemento XML do elemento raiz são tiradas de <ph id="ph1">`type`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>However, the <ph id="ph1">`root`</ph> parameter allows you to replace the default object's information by specifying an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlRootAttribute&gt;; the object allows you to set a different namespace, element name, and so on.</source>
          <target state="translated">No entanto, o <ph id="ph1">`root`</ph> parâmetro permite que você substitua as informações do objeto padrão especificando um [construtor XmlSerializer (Type, XmlAttributeOverrides, tipo<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlRootAttribute &gt;; o objeto permite que você defina um namespace diferente, o nome do elemento e assim por diante.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>Use the <ph id="ph1">`defaultName`</ph> parameter to specify the default namespace of all XML elements generated by the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer&gt;.</source>
          <target state="translated">Use o <ph id="ph1">`defaultName`</ph> parâmetro para especificar o namespace padrão de todos os elementos XML gerados pelo [construtor XmlSerializer (, XmlAttributeOverrides, tipo<ph id="ph2">\&lt;</ph>xref:System.Xml.Serialization.XmlSerializer &gt;.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class.</source>
          <target state="translated">O exemplo a seguir serializa uma instância de uma classe que é definido em uma DLL e para fazer isso, substituirá os membros públicos localizados na classe.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information.</source>
          <target state="translated">O exemplo também especifica uma matriz de tipos extras, o namespace padrão para todos os elementos XML e a classe usar que fornece as informações de elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
          <source>The example assumes that the code at the beginning has been compiled into a DLL named <ph id="ph1">`HighSchool`</ph>.</source>
          <target state="translated">O exemplo supõe que o código no início tiver sido compilado em uma DLL denominada <ph id="ph1">`HighSchool`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> que estende ou substitui o comportamento da classe especificada no parâmetro <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de tipos de objeto adicionais a serem serializados.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> que define as propriedades do elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">O namespace padrão de todos os elementos XML no documento XML.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>The location of the types.</source>
          <target state="translated">O local dos tipos.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of type <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> into XML document instances, and deserialize XML document instances into objects of type <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</source>
          <target state="translated">Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
          <source>This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</source>
          <target state="translated">Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The type of the object that this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can serialize.</source>
          <target state="translated">O tipo do objeto que este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode serializar.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> that extends or overrides the behavior of the class specified in the <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /&gt;</ph> que estende ou substitui o comportamento da classe especificada no parâmetro <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> array of additional object types to serialize.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de tipos de objeto adicionais a serem serializados.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that defines the XML root element properties.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> que define as propriedades do elemento raiz XML.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The default namespace of all XML elements in the XML document.</source>
          <target state="translated">O namespace padrão de todos os elementos XML no documento XML.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>The location of the types.</source>
          <target state="translated">O local dos tipos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> class that contains credentials required to access types.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> que contém as credenciais necessárias para acessar os tipos.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> que pode serializar objetos do tipo especificado em instâncias de documento XML e desserializar instâncias de documento XML em objetos do tipo especificado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</source>
          <target state="translated">Essa sobrecarga permite que você forneça outros tipos que podem ser encontrados durante uma operação de serialização ou desserialização, bem como um namespace padrão para todos os elementos XML, a classe a ser usada como o elemento raiz XML, seu local e as credenciais necessárias para obter acesso.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Allows more precise control over access to a temporary directory and prevents code injection and exploitation.</source>
          <target state="translated">Permite um controle mais preciso sobre o acesso a um diretório temporário e impede a exploração e injeção de código.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>To use this method, specify a location and give access only to specific users.</source>
          <target state="translated">Para usar esse método, especifique um local e dar acesso somente a usuários específicos.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
          <source>Administrators can set up policies with evidence lists that match evidence to permissions.</source>
          <target state="translated">Os administradores podem configurar políticas com listas de evidência que correspondem a evidência para permissões.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that points to the document to deserialize.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que aponta para o documento a ser desserializado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can deserialize a specified XML document.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> pode desserializar um documento XML especificado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> can deserialize the object that the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> points to; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> puder desserializar o objeto ao qual o <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> aponta, caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A&gt;</ph> method to check whether an XML document can be deserialized.</source>
          <target state="translated">A exemplo a seguir chama o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A&gt;</ph> método para verificar se um documento XML pode ser desserializado.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>Returns an object used to read the XML document to be serialized.</source>
          <target state="translated">Retorna um objeto usado para ler o documento XML a ser serializado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> used to read the XML document.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> usado para ler o documento XML.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateReader">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>When overridden in a derived class, returns a writer used to serialize the object.</source>
          <target state="translated">Quando substituído em uma classe derivada, retorna um gravador usado para serializar o objeto.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> class.</source>
          <target state="translated">Uma instância que implementa a classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Deserializes an XML document.</source>
          <target state="translated">Desserializa um documento XML.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> que contém o documento XML a ser desserializado.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Desserializa o documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">Desserialização é o processo de ler um documento XML e construir um objeto que terá rigidez de tipos para o esquema XML (XSD) do documento.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">Antes de desserializá, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve ser criada usando o tipo do objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Use the <ph id="ph1">`stream`</ph> parameter to specify an object that derives from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which is designed to write to streams.</source>
          <target state="translated">Use o <ph id="ph1">`stream`</ph> parâmetro para especificar um objeto que deriva de <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> classe, que é projetado para gravar fluxos.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include:</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> classe incluem:</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível desserializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
          <source>The following example deserializes an object using a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir desserializa um objeto usando um <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> que contém o documento XML a ser desserializado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Desserializa o documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">Desserialização é o processo de leitura de uma instância de um documento XML e construir um objeto que terá rigidez de tipos para o esquema XML (XSD) do documento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">Antes de desserializá, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve ser criada usando o tipo do objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> include <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StreamReader&gt;</ph>.</source>
          <target state="translated">Classes que herdam de <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> incluem <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> e <ph id="ph3">&lt;xref:System.IO.StreamReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>If you are using a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> to deserialize an object, you must construct the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> with an appropriate <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph>.</source>
          <target state="translated">Se você estiver usando um <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> para desserializar um objeto, você deve construir o <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> com um número apropriado <ph id="ph3">&lt;xref:System.Text.Encoding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The encoding specified by the XML document is ignored.</source>
          <target state="translated">A codificação especificada pelo documento XML será ignorada.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>To use the encoding specified by the XML document, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> overload that takes an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instead.</source>
          <target state="translated">Para usar a codificação especificada pelo documento XML, use o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> sobrecarga que utiliza um <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automatically detects and uses the encoding specified by the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automaticamente detecta e usa a codificação especificada pelo documento XML.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível desserializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The following example deserializes an object using a <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir desserializa um objeto usando um <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">Ocorreu um erro durante a desserialização.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> que contém o documento XML a ser desserializado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph>.</source>
          <target state="translated">Desserializa o documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contém o documento XML a ser desserializado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Desserializa o documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">Desserialização é o processo de leitura de uma instância de um documento XML e construir um objeto que terá rigidez de tipos para o esquema XML (XSD) do documento.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">Antes de desserializá, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve ser criada usando o tipo do objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automatically detects and uses the encoding specified by the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> automaticamente detecta e usa a codificação especificada pelo documento XML.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível desserializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The following example deserializes an object using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir desserializa um objeto usando um <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">Ocorreu um erro durante a desserialização.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the XML document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contém o documento XML a ser desserializado.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The encoding style of the serialized XML.</source>
          <target state="translated">O estilo de codificação do XML serializado.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Deserializes the XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and encoding style.</source>
          <target state="translated">Desserializa o documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> e estilo de codificação especificados.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</source>
          <target state="translated">Desserialização é o processo de leitura de uma instância de um documento XML e construir um objeto que terá rigidez de tipos para o esquema XML (XSD) do documento.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Before deserializing, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> must be constructed using the type of the object that is being deserialized.</source>
          <target state="translated">Antes de desserializá, um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> deve ser criada usando o tipo do objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>Set the <ph id="ph1">`encodingStyle`</ph> parameter to "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph> " for SOAP version 1.1 encoding; otherwise, set it to "<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" for SOAP version 1.2 encoding.</source>
          <target state="translated">Definir o <ph id="ph1">`encodingStyle`</ph> parâmetro para "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph> " para a codificação do SOAP 1.1 de versão; Caso contrário, defina-a como "<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" para a codificação do SOAP versão 1.2.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot deserialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível desserializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>An error occurred during deserialization.</source>
          <target state="translated">Ocorreu um erro durante a desserialização.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the document to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contém o documento a ser desserializado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> class.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>Deserializes an XML document contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and allows the overriding of events that occur during deserialization.</source>
          <target state="translated">Desserializa um documento XML contido pelo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> especificado e permite a substituição de eventos que ocorrem durante a desserialização.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> being deserialized.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The object being deserialized.</source>
          <target state="translated">O objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class used to read the document.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> usada para ler o documento.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The encoding used.</source>
          <target state="translated">A codificação usada.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph> class.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>Deserializes the object using the data contained by the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Desserializa o objeto usando os dados contidos pelo <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>The object being deserialized.</source>
          <target state="translated">O objeto que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>This method is required for deserialization of unknown headers for Web Service scenarios only.</source>
          <target state="translated">Este método é necessário para desserialização de cabeçalhos desconhecidos para cenários de serviço da Web somente.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
          <source>This method allows you to avoid event synchronization in Web Service methods.</source>
          <target state="translated">Esse método permite evitar a sincronização de evento nos métodos de serviço Web.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class from the specified mappings.</source>
          <target state="translated">Retorna uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> de mapeamentos especificados.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> that maps one type to another.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> que mapeia um tipo para outro.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects created from an array of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph> objects.</source>
          <target state="translated">Retorna uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> criados com base em uma matriz de objetos <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeMapping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects.</source>
          <target state="translated">Uma matriz de objetos de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects used to map one type to another.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> usados para mapear um tipo para outro.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> class that contains host and assembly data presented to the common language runtime policy system.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> que contém dados de host e de assembly apresentados para o sistema de política do Common Language Runtime.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class created from mappings of one XML type to another.</source>
          <target state="translated">Retorna uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> criada com base em mapeamentos de um tipo XML para outro.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects.</source>
          <target state="translated">Uma matriz de objetos de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the deserialized object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto desserializado.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class from the specified mappings.</source>
          <target state="translated">Retorna uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> de mapeamentos especificados.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> class.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects.</source>
          <target state="translated">Uma matriz de objetos de <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects created from an array of types.</source>
          <target state="translated">Retorna uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> criados com base em uma matriz de tipos.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> objects.</source>
          <target state="translated">Uma matriz de objetos de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> method allows you to efficiently create an array of <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objects for processing an array of <ph id="ph3">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> método permite a criação eficiente de uma matriz de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objetos para o processamento de uma matriz de <ph id="ph3">&lt;xref:System.Type&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> method to return an array of <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objects.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A&gt;</ph> método para retornar uma matriz de <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
          <source>The code includes three class definitions that are each used to create an array of <ph id="ph1">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">O código inclui três definições de classe que cada um são usadas para criar uma matriz de <ph id="ph1">&lt;xref:System.Type&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns an assembly that contains typed serializers.</source>
          <target state="translated">Retorna um assembly que contém os serializadores tipados.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated">O <bpt id="p1">[</bpt>ferramenta XML Serializer Generator (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> cria um assembly de serialização de XML para tipos em um assembly especificado para melhorar o desempenho de tempo de execução de um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> quando ele serializa ou desserializa objetos do tipos especificados.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> para retornar o nome de um assembly.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Se você estiver distribuindo um assembly como parte de um aplicativo cliente que chama um serviço Web, você pode aplicar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> para o tipo de cliente para especificar o local e o nome do assembly.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>A collection of types.</source>
          <target state="translated">Uma coleção de tipos.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> objects used to convert one type to another.</source>
          <target state="translated">Uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> usados para converter um tipo em outro.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</source>
          <target state="translated">Retorna um assembly que contém os serializadores personalizados usados para serializar ou desserializar os tipos especificados usando os mapeamentos definidos.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> object that contains serializers for the supplied types and mappings.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> que contém os serializadores para os tipos e mapeamentos fornecidos.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that contains objects used to serialize and deserialize data.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que contém objetos usados para serializar e desserializar dados.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> that maps the XML data to the type data.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlMapping" /&gt;</ph> que mapeia os dados XML para os dados do tipo.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class that represents the parameters used to invoke a compiler.</source>
          <target state="translated">Uma instância da classe <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> que representa os parâmetros usados para invocar um compilador.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</source>
          <target state="translated">Retorna um assembly que contém os serializadores personalizados usados para serializar ou desserializar os tipos especificados usando os mapeamentos, opções e configurações do compilador especificados.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> that contains special versions of the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> que contém versões especiais do <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Returns the name of the assembly that contains one or more versions of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> especially created to serialize or deserialize specific types.</source>
          <target state="translated">Retorna o nome do assembly que contém uma ou mais versões do <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> criado especialmente para serializar ou desserializar tipos específicos.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated">O <bpt id="p1">[</bpt>ferramenta XML Serializer Generator (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> cria um assembly de serialização de XML para tipos em um assembly especificado para melhorar o desempenho de tempo de execução de um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> quando ele serializa ou desserializa objetos do tipos especificados.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> para retornar o nome de um assembly.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Se você estiver distribuindo um assembly como parte de um aplicativo cliente que chama um serviço Web, você pode aplicar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> para o tipo de cliente para especificar o local e o nome do assembly.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> you are deserializing.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que está sendo desserializado.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>Returns the name of the assembly that contains one or more versions of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> especially created to serialize or deserialize the specified type.</source>
          <target state="translated">Retorna o nome do assembly que contém uma ou mais versões do <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> criado especialmente para serializar ou desserializar o tipo especificado.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The name of the assembly that contains an <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> for the type.</source>
          <target state="translated">O nome do assembly que contém um <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> para o tipo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated">O <bpt id="p1">[</bpt>ferramenta XML Serializer Generator (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> cria um assembly de serialização de XML para tipos em um assembly especificado para melhorar o desempenho de tempo de execução de um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> quando ele serializa ou desserializa objetos do tipos especificados.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> para retornar o nome de um assembly.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Se você estiver distribuindo um assembly como parte de um aplicativo cliente que chama um serviço Web, você pode aplicar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> para o tipo de cliente para especificar o local e o nome do assembly.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> you are interested in.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de seu interesse.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The namespace of the type.</source>
          <target state="translated">O namespace do tipo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</source>
          <target state="translated">Retorna o nome do assembly que contém o serializador para o tipo especificado no namespace fornecido.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The name of the assembly that contains specially built serializers.</source>
          <target state="translated">O nome do assembly que contém os serializadores especialmente projetados.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>The <bpt id="p1">[</bpt>XML Serializer Generator Tool (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> when it serializes or deserializes objects of the specified types.</source>
          <target state="translated">O <bpt id="p1">[</bpt>ferramenta XML Serializer Generator (Sgen.exe)<ept id="p1">](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)</ept> cria um assembly de serialização de XML para tipos em um assembly especificado para melhorar o desempenho de tempo de execução de um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> quando ele serializa ou desserializa objetos do tipos especificados.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> to return the name of such an assembly.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A&gt;</ph> para retornar o nome de um assembly.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
          <source>If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> to the client type to specify the location and name of the assembly.</source>
          <target state="translated">Se você estiver distribuindo um assembly como parte de um aplicativo cliente que chama um serviço Web, você pode aplicar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute&gt;</ph> para o tipo de cliente para especificar o local e o nome do assembly.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlSerializer">
          <source>Serializes an object into an XML document.</source>
          <target state="translated">Serializa um objeto em um documento XML.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método converte os campos públicos e as propriedades de leitura/gravação de um objeto em XML.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">Ele não converte indexadores, métodos, campos particulares ou propriedades somente leitura.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>To serialize all of an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar todos os campos e propriedades de um objeto, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>In the <ph id="ph1">`stream`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class.</source>
          <target state="translated">No <ph id="ph1">`stream`</ph> parâmetro, especifique um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> include:</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> incluem:</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The following example serializes an object using a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir serializa um objeto usando um <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método converte os campos públicos e as propriedades de leitura/gravação de um objeto em XML.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">Ele não converte indexadores, métodos, campos particulares ou propriedades somente leitura.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>To serialize all an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar os campos e propriedades de todos os um objeto, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>In the <ph id="ph1">`textWriter`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> class.</source>
          <target state="translated">No <ph id="ph1">`textWriter`</ph> parâmetro, especifique um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> include:</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> incluem:</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
          <source>The following example serializes an object using a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir serializa um objeto usando um <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph>.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializationWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
          <source>Any attempt is made to access the method when the method is not overridden in a descendant class.</source>
          <target state="translated">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method converts the public fields and read/write properties of an object into XML.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método converte os campos públicos e as propriedades de leitura/gravação de um objeto em XML.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>It does not convert methods, indexers, private fields, or read-only properties.</source>
          <target state="translated">Ele não converte indexadores, métodos, campos particulares ou propriedades somente leitura.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>To serialize all an object's fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar os campos e propriedades de todos os um objeto, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>In the <ph id="ph1">`xmlWriter`</ph> parameter, specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class.</source>
          <target state="translated">No <ph id="ph1">`xmlWriter`</ph> parâmetro, especifique um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> deriva de <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The following example serializes an object using an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir serializa um objeto usando um <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenciado pelo objeto.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that references the specified namespaces.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> fornecido que faz referência aos namespaces indicados.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método é invocado, os campos públicos e as propriedades de leitura/gravação de um objeto são convertidas em XML.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">Métodos e propriedades somente leitura, campos particulares e indexadores não são serializadas.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar todos os campos e propriedades, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`stream`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which is designed to write to streams.</source>
          <target state="translated">Use o <ph id="ph1">`stream`</ph> parâmetro para especificar um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> classe, que é projetado para gravar fluxos.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include:</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> classe incluem:</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir serializa um objeto com um <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> and adds two namespaces to the object.</source>
          <target state="translated">O exemplo também cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> e adiciona dois namespaces para o objeto.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The class that defines the serialized object is also attributed with <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to specify the namespace for each element.</source>
          <target state="translated">A classe que define o objeto serializado também é atribuída com <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> atributos para especificar o namespace para cada elemento.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> that contains namespaces for the generated XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> que contém namespaces para o documento XML gerado.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and references the specified namespaces.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado, grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado e referencia os namespaces especificados.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método é invocado os campos públicos e as propriedades de leitura/gravação de um objeto são convertidas em XML.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">Métodos e propriedades somente leitura, campos particulares e indexadores não são serializadas.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar todos os campos e propriedades, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`textWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> class.</source>
          <target state="translated">Use o <ph id="ph1">`textWriter`</ph> parâmetro para especificar um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class include:</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> classe incluem:</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir serializa um objeto com um <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object and adds two namespaces to the object.</source>
          <target state="translated">O exemplo também cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> e o adiciona dois namespaces para o objeto.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The class that defines the serialized object is also attributed with <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to specify the namespace for each element.</source>
          <target state="translated">A classe que define o objeto serializado também é atribuída com <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> atributos para especificar o namespace para cada elemento.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to serialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser serializado.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenciado pelo objeto.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and references the specified namespaces.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado, grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado e referencia os namespaces especificados.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método é invocado, os campos públicos e as propriedades de leitura/gravação de um objeto são convertidas em XML.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">Métodos e propriedades somente leitura, campos particulares e indexadores não são serializadas.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar todos os campos e propriedades, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Use the <ph id="ph1">`xmlWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, which is designed to write XML documents.</source>
          <target state="translated">Use o <ph id="ph1">`xmlWriter`</ph> parâmetro para especificar um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> classe, que é projetado para gravar documentos XML.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> deriva de <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The following example serializes an object with an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir serializa um objeto com um <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> and adds two namespaces to the object.</source>
          <target state="translated">O exemplo também cria um <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> e adiciona dois namespaces para o objeto.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>Several instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> class are applied to the class members to specify the namespace for each element.</source>
          <target state="translated">Várias instâncias do <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> classe são aplicadas aos membros da classe para especificar o namespace para cada elemento.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The object to serialize.</source>
          <target state="translated">O objeto a ser serializado.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenced by the object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> referenciado pelo objeto.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The encoding style of the serialized XML.</source>
          <target state="translated">O estilo de codificação do XML serializado.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Serializes the specified object and writes the XML document to a file using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and references the specified namespaces and encoding style.</source>
          <target state="translated">Serializa o objeto especificado, grava o documento XML em um arquivo usando o <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> especificado e referencia os namespaces e o estilo de codificação especificados.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> method is invoked, the public fields and read/write properties of an object are converted into XML.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> método é invocado, os campos públicos e as propriedades de leitura/gravação de um objeto são convertidas em XML.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Methods, indexers, private fields, and read-only properties are not serialized.</source>
          <target state="translated">Métodos e propriedades somente leitura, campos particulares e indexadores não são serializadas.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>To serialize all fields and properties, both public and private, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Para serializar todos os campos e propriedades, públicas e privadas, use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Use the <ph id="ph1">`xmlWriter`</ph> parameter to specify an object that derives from the abstract <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, which is designed to write XML documents.</source>
          <target state="translated">Use o <ph id="ph1">`xmlWriter`</ph> parâmetro para especificar um objeto que deriva de abstrata <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> classe, que é projetado para gravar documentos XML.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> deriva de <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>Set the <ph id="ph1">`encodingStyle`</ph> parameter to "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph>" for SOAP version 1.1 encoding; otherwise, set it to "<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" for SOAP version 1.2 encoding.</source>
          <target state="translated">Definir o <ph id="ph1">`encodingStyle`</ph> parâmetro para "<ph id="ph2">http://schemas.xmlsoap.org/soap/encoding/</ph>"para a codificação de versão 1.1 SOAP; caso contrário, defina-a como"<ph id="ph3">http://www.w3.org/2001/12/soap-encoding</ph>" para a codificação do SOAP versão 1.2.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> cannot serialize the following: arrays of <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> and arrays of <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> não é possível serializar o seguinte: matrizes de <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> e matrizes de <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>An error occurred during serialization.</source>
          <target state="translated">Ocorreu um erro durante a serialização.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
          <source>The original exception is available using the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph> property.</source>
          <target state="translated">A exceção original está disponível com o uso da propriedade <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The object to serialize.</source>
          <target state="translated">O objeto a ser serializado.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>An instance of the <ph id="ph1">&lt;see langword="XmlSerializaerNamespaces" /&gt;</ph> that contains namespaces and prefixes to use.</source>
          <target state="translated">Uma instância do <ph id="ph1">&lt;see langword="XmlSerializaerNamespaces" /&gt;</ph> que contém namespaces e prefixos a serem usados.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The encoding used in the document.</source>
          <target state="translated">A codificação usada no documento.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>For SOAP encoded messages, the base used to generate id attributes.</source>
          <target state="translated">Para mensagens codificadas em SOAP, a base usada para gerar atributos de ID.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>Serializes the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and writes the XML document to a file using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, XML namespaces, and encoding.</source>
          <target state="translated">Serializa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e grava o documento XML em um arquivo usando o <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, namespaces XML e a codificação especificados.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>The <bpt id="p1">*</bpt>id<ept id="p1">*</ept> parameter supplies the base string used to create SOAP ids.</source>
          <target state="translated">O <bpt id="p1">*</bpt>id<ept id="p1">*</ept> parâmetro fornece a cadeia de caracteres de base usada para criar ids SOAP.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>By default, these are "id1", "id2" and so on.</source>
          <target state="translated">Por padrão, esses são "id1", "id2" e assim por diante.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>But if the parameter is set to "myBase" the generated values are "myBaseid1", "myBaseid2" and so on.</source>
          <target state="translated">Mas se o parâmetro for definido para "myBase", os valores gerados é "myBaseid1", "myBaseid2" e assim por diante.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
          <source>This functionality is used to create unique id values across the whole SOAP message.</source>
          <target state="translated">Essa funcionalidade é usada para criar valores de id exclusiva em toda a mensagem SOAP.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML attribute of unknown type during deserialization.</source>
          <target state="translated">Ocorre quando o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encontra um atributo XML de tipo desconhecido durante a desserialização.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML attributes of unknown types.</source>
          <target state="translated">Por padrão, depois de chamar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignora os atributos XML de tipos desconhecidos.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">No entanto, você pode usar esse evento para lidar com esses tipos de nó.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>If the instance of the class being deserialized contains a field that returns an array of <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied to the field, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> event does not occur.</source>
          <target state="translated">Se a instância da classe que está sendo desserializada contém um campo que retorna uma matriz de <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objetos e um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> foi aplicada ao campo, o <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> evento não ocorrerá.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>Instead, all unknown XML attributes are collected into the array.</source>
          <target state="translated">Em vez disso, todos os atributos XML desconhecidos serão coletados para a matriz.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
          <source>The following example prints information about any unknown attributes encountered while deserializing an XML document.</source>
          <target state="translated">O exemplo a seguir imprime as informações sobre os atributos desconhecidos encontrado ao desserializar um documento XML.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML element of unknown type during deserialization.</source>
          <target state="translated">Ocorre quando o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encontra um elemento XML de tipo desconhecido durante a desserialização.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML attributes of unknown types.</source>
          <target state="translated">Por padrão, depois de chamar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignora os atributos XML de tipos desconhecidos.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">No entanto, você pode usar esse evento para lidar com esses tipos de nó.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> is applied to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects, all unknown elements are collected in the array.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> é aplicado a um campo que retorna uma matriz de <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objetos, todos os elementos desconhecidos são coletados na matriz.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> event does not occur.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> evento não ocorrerá.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>The following example deserializes a class named <ph id="ph1">`Group`</ph> from a file named UnknownElements.xml.</source>
          <target state="translated">O exemplo a seguir desserializa uma classe denominada <ph id="ph1">`Group`</ph> de um arquivo chamado UnknownElements.xml.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>Whenever an element is found in the file that has no corresponding member in the class, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> event occurs.</source>
          <target state="translated">Sempre que um elemento foi encontrado no arquivo que não tem nenhum membro correspondente na classe, o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> evento ocorre.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
          <source>To try the example, paste the following XML code into a file named UnknownElements.xml.</source>
          <target state="translated">Para testar o exemplo, cole o seguinte código XML em um arquivo chamado UnknownElements.xml.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters an XML node of unknown type during deserialization.</source>
          <target state="translated">Ocorre quando o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encontra um nó XML de tipo desconhecido durante a desserialização.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>By default, after calling the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores XML nodes of unknown types.</source>
          <target state="translated">Por padrão, depois de chamar o <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignora nós XML de tipos desconhecidos.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>However, you can use this event to handle such node types.</source>
          <target state="translated">No entanto, você pode usar esse evento para lidar com esses tipos de nó.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
          <source>The following example prints the type of any encountered unknown node.</source>
          <target state="translated">O exemplo a seguir exibe o tipo de qualquer nó desconhecido encontrado.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Occurs during deserialization of a SOAP-encoded XML stream, when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encounters a recognized type that is not used or is unreferenced.</source>
          <target state="translated">Ocorre durante a desserialização de um fluxo XML codificado em SOAP, quando o <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> encontra um tipo reconhecido que não é usado ou não está referenciado.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event only occurs when the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> evento ocorre somente quando o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> é usado para desserializar um documento XML que contém uma mensagem SOAP que está em conformidade com a seção 5 do documento na World Wide Web Consortium (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1".</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Documents that conform to section 5 are in a special format.</source>
          <target state="translated">Documentos de acordo com a seção 5 estão em um formato especial.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>At the very least, such a document includes the main body of the SOAP message.</source>
          <target state="translated">No mínimo, um documento inclui o corpo principal da mensagem SOAP.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document.</source>
          <target state="translated">No entanto, em vez de ter todos os tipos definidos embutido no documento, algumas definições de tipo podem ser codificadas como referências a elementos de nível superior no documento.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition.</source>
          <target state="translated">Portanto, para cada elemento encontrado no corpo principal que é uma referência, deve haver um elemento correspondente que contém a definição de tipo.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>To correlate the referencing element and the type definition, the type definition has an <ph id="ph1">`id`</ph> attribute set to a unique string ID and the referencing element has an <ph id="ph2">`href`</ph> attribute that references the same ID.</source>
          <target state="translated">Para correlacionar o elemento de referência e a definição de tipo, a definição de tipo tem um <ph id="ph1">`id`</ph> atributo definido como uma ID de cadeia de caracteres exclusiva e o elemento de referência tem uma <ph id="ph2">`href`</ph> atributo que referencia a mesma ID.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event occur when there is a type definition found in the document, but no parameter in the main body references it.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> evento ocorre quando há uma definição de tipo localizada no documento, mas nenhum parâmetro no corpo principal faz referência a ele.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs&gt;</ph> class.</source>
          <target state="translated">Quando o evento ocorrer, você pode recuperar o tipo XML do objeto não referenciado examinando o <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The XML ID of the object is returned by the <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A&gt;</ph> property.</source>
          <target state="translated">A ID de XML do objeto é retornada pelo <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> event should not be confused with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> events, which occur when there is no class member that corresponds to the XML node or element type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject&gt;</ph> evento não deve ser confundido com o <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownElement&gt;</ph> e <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> eventos que ocorrem quando não há nenhum membro de classe que corresponde ao tipo de elemento ou nó de XML.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The following example adds an <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventHandler&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir adiciona uma <ph id="ph1">&lt;xref:System.Xml.Serialization.UnreferencedObjectEventHandler&gt;</ph> para um <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>The event is handled by the <ph id="ph1">`Serializer``_``UnreferencedObject`</ph> method.</source>
          <target state="translated">O evento é manipulado pelo <ph id="ph1">`Serializer``_``UnreferencedObject`</ph> método.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
          <source>To run the example, cut and paste the following XML into a file named "UnrefObj.xml".</source>
          <target state="translated">Para executar o exemplo, recorte e cole o seguinte XML em um arquivo denominado "UnrefObj.xml".</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>