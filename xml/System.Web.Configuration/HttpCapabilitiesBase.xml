<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0d0af9270a7e64e9da6317aec0fb9470ab64bfd" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57922998" /></Metadata><TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bb3af-101">Fornece acesso a informações detalhadas sobre os recursos do navegador do cliente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-101">Provides access to detailed information about the capabilities of the client's browser.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> é a classe base da qual o <xref:System.Web.HttpBrowserCapabilities> classe é derivada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="bb3af-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> oferece um grande número de propriedades somente leitura que fornece acesso fortemente tipado ao dicionário de recursos do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="bb3af-104">Você pode acessar o <xref:System.Web.HttpBrowserCapabilities> classe por meio de <xref:System.Web.HttpRequest.Browser%2A> propriedade que é exposta pelo ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb3af-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-105">O exemplo a seguir mostra como acessar informações sobre o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb3af-106">Cria uma nova instância da classe <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-107">Obtém um valor que indica se o navegador dá suporte a controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="bb3af-107">Gets a value indicating whether the browser supports ActiveX controls.</span></span></summary>
        <value><span data-ttu-id="bb3af-108"><see langword="true" /> Se o navegador dá suporte a controles ActiveX. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-108"><see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-109">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-109">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-110">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="bb3af-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-111">Retorna a coleção de adaptadores de controle disponíveis.</span><span class="sxs-lookup"><span data-stu-id="bb3af-111">Returns the collection of available control adapters.</span></span></summary>
        <value><span data-ttu-id="bb3af-112">A coleção de adaptadores de controle registrado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-112">The collection of registered control adapters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="bb3af-113">O nome do navegador a adicionar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-113">The name of the browser to add.</span></span></param>
        <summary><span data-ttu-id="bb3af-114">Usada internamente para adicionar uma entrada à coleção interna de navegadores para os quais as funcionalidades são reconhecidas.</span><span class="sxs-lookup"><span data-stu-id="bb3af-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-115">Obtém um valor que indica se o cliente é um navegador da AOL (America Online).</span><span class="sxs-lookup"><span data-stu-id="bb3af-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-116"><see langword="true" /> Se o navegador é um navegador da AOL; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-116"><see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-117">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-117">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-118">O exemplo de código a seguir mostra como determinar se o navegador é um navegador da AOL.</span><span class="sxs-lookup"><span data-stu-id="bb3af-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-119">Obtém um valor que indica se o navegador dá suporte à reprodução de sons em segundo plano usando o elemento HTML <see langword="&lt;bgsounds&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span></span></summary>
        <value><span data-ttu-id="bb3af-120"><see langword="true" /> Se o navegador dá suporte a reprodução de sons de fundo; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-120"><see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-121">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-121">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-122">O exemplo de código a seguir mostra como determinar se o navegador dá suporte à reprodução de sons em segundo plano.</span><span class="sxs-lookup"><span data-stu-id="bb3af-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-123">Obtém um valor que indica se o navegador é uma versão beta.</span><span class="sxs-lookup"><span data-stu-id="bb3af-123">Gets a value indicating whether the browser is a beta version.</span></span></summary>
        <value><span data-ttu-id="bb3af-124"><see langword="true" /> Se o navegador é uma versão beta. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-124"><see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-125">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-126">Navegadores da versão beta podem apresentar um comportamento imprevisível.</span><span class="sxs-lookup"><span data-stu-id="bb3af-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-127">O exemplo de código a seguir mostra como determinar se o navegador é uma versão beta.</span><span class="sxs-lookup"><span data-stu-id="bb3af-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-128">Obtém a cadeia de caracteres do navegador (se houver) que foi enviada pelo navegador no cabeçalho de solicitação <see langword="User-Agent" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span></span></summary>
        <value><span data-ttu-id="bb3af-129">O conteúdo do cabeçalho de solicitação <see langword="User-Agent" /> enviado pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-130">O exemplo de código a seguir mostra como determinar o `User-Agent` cabeçalho da solicitação enviado pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-131">Obtém ou define o objeto <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> para o navegador atual.</span><span class="sxs-lookup"><span data-stu-id="bb3af-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-132">O objeto <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> para o navegador atual.</span><span class="sxs-lookup"><span data-stu-id="bb3af-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-133">Obtém um <see cref="T:System.Collections.ArrayList" /> de navegadores no dicionário <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="bb3af-134">Um <see cref="T:System.Collections.ArrayList" /> de navegadores no dicionário <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-135">Obtém um valor que indica se o navegador dá suporte a coleções que contêm vários formulários, tais como cartões separados.</span><span class="sxs-lookup"><span data-stu-id="bb3af-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span></span></summary>
        <value><span data-ttu-id="bb3af-136"><see langword="true" /> Se o navegador dá suporte a coleções que contêm vários formulários; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-136"><see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-137">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-137">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-138">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="bb3af-139">Se for true, o adaptador pode produzir várias formas da mesma página como cartões de um único baralho, sempre que possível.</span><span class="sxs-lookup"><span data-stu-id="bb3af-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-140">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a coleções que contêm vários formulários, tais como cartões separados.</span><span class="sxs-lookup"><span data-stu-id="bb3af-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-141">Obtém um valor que indica se o dispositivo de navegador é capaz de iniciar uma chamada de voz.</span><span class="sxs-lookup"><span data-stu-id="bb3af-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span></span></summary>
        <value><span data-ttu-id="bb3af-142"><see langword="true" /> Se o dispositivo de navegador é capaz de iniciar uma chamada de voz; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-142"><see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-143">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-144">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-145">O exemplo de código a seguir mostra como determinar se o dispositivo de navegador é capaz de iniciar uma chamada de voz.</span><span class="sxs-lookup"><span data-stu-id="bb3af-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-146">Obtém um valor que indica se o navegador dá suporte a conteúdo de página depois dos elementos WML <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-147"><see langword="true" /> Se o navegador dá suporte a conteúdo HTML a seguir da página <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-147"><see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-148">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-148">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-149">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-150">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a conteúdo HTML a seguir da página `<select>` ou `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-151">Obtém um valor que indica se o navegador dá suporte a conteúdo de página depois dos elementos HTML <see langword="&lt;select&gt;" /> vazios.</span><span class="sxs-lookup"><span data-stu-id="bb3af-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-152"><see langword="true" /> Se o navegador dá suporte a HTML vazia <see langword="&lt;select&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-152"><see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-153">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-154">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML vazia `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-155">Obtém um valor que indica se o navegador dá suporte aos elementos WML <see langword="INPUT" /> e <see langword="SELECT" /> juntos no mesmo cartão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span></span></summary>
        <value><span data-ttu-id="bb3af-156"><see langword="true" /> Se o navegador dá suporte a WML <see langword="&lt;input&gt;" /> e <see langword="&lt;select&gt;" /> elementos juntos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-156"><see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-157">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-157">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-158">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-159">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML `<input>` e `<select>` elementos juntos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-160">Obtém um valor que indica se o navegador dá suporte a elementos WML <see langword="&lt;option&gt;" /> que especificam ambos os atributos <see langword="onpick" /> e <see langword="value" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span></span></summary>
        <value><span data-ttu-id="bb3af-161"><see langword="true" /> Se o navegador dá suporte a WML <see langword="&lt;option&gt;" /> elementos que especificam ambos <see langword="onpick" /> e <see langword="value" /> atributos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-161"><see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-162">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-162">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-163">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-164">Se `false`, `onpick` valores são exibidos como hiperlinks e `value` atributos exigem um `<do>` elemento para postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-165">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML `<option>` elementos que especificam ambos `onpick` e `value` atributos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-166">Obtém um valor que indica se o navegador dá suporte a elementos WML <see langword="&lt;onevent&gt;" /> e <see langword="&lt;prev&gt;" /> que coexistem dentro do mesmo cartão WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span></span></summary>
        <value><span data-ttu-id="bb3af-167"><see langword="true" /> Se o navegador dá suporte a WML <see langword="&lt;onevent&gt;" /> e <see langword="&lt;prev&gt;" /> elementos coexistam no mesmo cartão WML; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-167"><see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-168">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-168">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-169">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-170">Se `false`, WML `<onevent>` e `<prev>` elementos que coexistem dentro do mesmo cartão WML não serão ser renderizados corretamente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-171">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a WML `<onevent>` e `<prev>` elementos que coexistem dentro do mesmo cartão WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-172">Obtém um valor que indica se o navegador dá suporte a cartões WML para postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-172">Gets a value indicating whether the browser supports WML cards for postback.</span></span></summary>
        <value><span data-ttu-id="bb3af-173"><see langword="true" /> Se o navegador dá suporte a cartões WML para postback; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-173"><see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-174">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-175">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> propriedade se aplica somente aos navegadores de dispositivo móvel compatível com WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="bb3af-176">Se `false`, postback cartões não serão renderizados corretamente pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-177">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a cartões WML para postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-178">Obtém um valor que indica se o navegador dá suporte a elementos WML <see langword="&lt;setvar&gt;" /> com um atributo <see langword="value" /> de 0.</span><span class="sxs-lookup"><span data-stu-id="bb3af-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span></span></summary>
        <value><span data-ttu-id="bb3af-179"><see langword="true" /> Se o navegador dá suporte a WML <see langword="&lt;setvar&gt;" /> elementos com um <see langword="value" /> atributo do <see langword="0" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-179"><see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-180">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-180">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-181">O <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-182">Se `false`, HTML `<setvar>` elementos com um `value` atributo do `0` não serão exibidos corretamente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-183">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a WML `<setvar>` elementos com um `value` atributo igual a 0.</span><span class="sxs-lookup"><span data-stu-id="bb3af-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-184">Obtém um valor que indica se o navegador dá suporte ao envio de emails usando o elemento HTML <see langword="&lt;mailto&gt;" /> para exibir endereços eletrônicos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span></span></summary>
        <value><span data-ttu-id="bb3af-185"><see langword="true" /> Se o navegador dá suporte ao envio de email usando o HTML <see langword="&lt;mailto&gt;" /> elemento para exibir endereços eletrônicos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-185"><see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-186">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-186">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-187">O exemplo de código a seguir mostra como determinar se o navegador dá suporte ao envio de emails usando o HTML `<mailto>` elemento para exibir endereços eletrônicos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-188">Usada internamente para obter as funcionalidades definidas do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-188">Used internally to get the defined capabilities of the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-189">As funcionalidades definidas do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-189">The defined capabilities of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-190">Obtém um valor que indica se o navegador dá suporte ao CDF (formato de definição de canais) para webcasting.</span><span class="sxs-lookup"><span data-stu-id="bb3af-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span></span></summary>
        <value><span data-ttu-id="bb3af-191"><see langword="true" /> Se o navegador dá suporte a CDF; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-191"><see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-192">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-192">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-193">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a CDF.</span><span class="sxs-lookup"><span data-stu-id="bb3af-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-194">Obtém a versão do .NET Framework que está instalada no cliente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-194">Gets the version of the .NET Framework that is installed on the client.</span></span></summary>
        <value><span data-ttu-id="bb3af-195">O common language runtime <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-195">The common language runtime <see cref="T:System.Version" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-196">O <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriedade só tem suporte quando o navegador for o Internet Explorer versão 5.0 e posterior.</span><span class="sxs-lookup"><span data-stu-id="bb3af-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="bb3af-197">Se o .NET Framework não está instalado no cliente, o valor dos elementos versão retornado é `0, 0,-1,-1`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="bb3af-198">Se mais de uma versão do .NET Framework está instalada no cliente, o <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> propriedade retorna a versão mais recente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-199">Obtém um valor que indica se o navegador dá suporte a cookies.</span><span class="sxs-lookup"><span data-stu-id="bb3af-199">Gets a value indicating whether the browser supports cookies.</span></span></summary>
        <value><span data-ttu-id="bb3af-200"><see langword="true" /> se o navegador der suporte a cookies; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-200"><see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-201">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-202">O <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriedade indica se o aplicativo de navegador dá suporte a cookies.</span><span class="sxs-lookup"><span data-stu-id="bb3af-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="bb3af-203">Se o usuário desabilitou cookies em seu aplicativo, o <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> propriedade não será afetada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-204">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a cookies.</span><span class="sxs-lookup"><span data-stu-id="bb3af-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-205">Obtém um valor que indica se o navegador é um rastreador da Web do mecanismo de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="bb3af-205">Gets a value indicating whether the browser is a search engine Web crawler.</span></span></summary>
        <value><span data-ttu-id="bb3af-206"><see langword="true" /> se o navegador for um mecanismo de pesquisa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-206"><see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-207">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-207">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-208">O exemplo de código a seguir mostra como determinar se o cliente é um rastreador de Web do mecanismo de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="bb3af-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="bb3af-209">O <see cref="T:System.IO.TextWriter" /> a ser criado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-209"><see cref="T:System.IO.TextWriter" /> to be created.</span></span></param>
        <summary><span data-ttu-id="bb3af-210">Cria uma nova instância do <see cref="T:System.Web.UI.HtmlTextWriter" /> a ser usado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></summary>
        <returns><span data-ttu-id="bb3af-211">Uma nova instância do <see cref="T:System.Web.UI.HtmlTextWriter" /> a ser usado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="bb3af-212">O método falhou ao criar uma instância de <see cref="T:System.Web.UI.HtmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-213">Retorna o número máximo de botões de envio que são permitidos para um formulário.</span><span class="sxs-lookup"><span data-stu-id="bb3af-213">Returns the maximum number of Submit buttons that are allowed for a form.</span></span></summary>
        <value><span data-ttu-id="bb3af-214">O número máximo de botões de envio que são permitidos para um formulário.</span><span class="sxs-lookup"><span data-stu-id="bb3af-214">The maximum number of Submit buttons that are allowed for a form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-215">O <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> propriedade principalmente representa o número de chaves de software que estão disponíveis em um dispositivo móvel de WML compatível.</span><span class="sxs-lookup"><span data-stu-id="bb3af-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="bb3af-216">Páginas de formulários da Web para dispositivos móveis podem conter um <xref:System.Web.UI.MobileControls.SelectionList> objeto e mais de um <xref:System.Web.UI.MobileControls.Command> controle.</span><span class="sxs-lookup"><span data-stu-id="bb3af-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="bb3af-217">O <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> permite que você escolha quais do <xref:System.Web.UI.MobileControls.Command> controles devem ser atribuídos a uma chave de software em dispositivos que têm várias chaves de software.</span><span class="sxs-lookup"><span data-stu-id="bb3af-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb3af-218">Usada internamente para desabilitar o uso de uma chave de cache otimizado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-218">Used internally to disable use of an optimized cache key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-219">Obtém o número de versão do ECMAScript para o qual o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-219">Gets the version number of ECMAScript that the browser supports.</span></span></summary>
        <value><span data-ttu-id="bb3af-220">O número de versão do ECMAScript para o qual o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-220">The version number of ECMAScript that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-221">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a um número de versão principal do ECMAScript maior que 1.</span><span class="sxs-lookup"><span data-stu-id="bb3af-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=42245"><span data-ttu-id="bb3af-222">Site oficial do ECMA</span><span class="sxs-lookup"><span data-stu-id="bb3af-222">ECMA official Web site</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-223">Obtém um valor que indica se o navegador dá suporte a quadros HTML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-223">Gets a value indicating whether the browser supports HTML frames.</span></span></summary>
        <value><span data-ttu-id="bb3af-224"><see langword="true" /> Se o navegador dá suporte a quadros. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-224"><see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-225">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-225">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-226">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a quadros HTML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-226">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-227">Obtém o número de versão principal do gateway sem fio que é usado para acessar o servidor, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-227">Gets the major version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="bb3af-228">O número de versão principal do gateway sem fio usado para acessar o servidor, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-228">The major version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="bb3af-229">O padrão é <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-229">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="bb3af-230">O número de versão principal do gateway sem fio não pode ser analisado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-230">The major version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-231">Obtém o número de versão secundária do gateway sem fio que é usado para acessar o servidor, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-231">Gets the minor version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="bb3af-232">O número de versão secundária do gateway sem fio usado para acessar o servidor, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-232">The minor version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="bb3af-233">O padrão é <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-233">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="bb3af-234">O número de versão secundária do gateway sem fio não pode ser analisado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-234">The minor version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-235">Obtém a versão do gateway sem fio que é usada para acessar o servidor, se conhecida.</span><span class="sxs-lookup"><span data-stu-id="bb3af-235">Gets the version of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="bb3af-236">O número de versão do gateway sem fio usado para acessar o servidor, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-236">The version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="bb3af-237">O padrão é <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-237">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-238">O exemplo de código a seguir mostra como determinar se o gateway é um `UP` gateway.</span><span class="sxs-lookup"><span data-stu-id="bb3af-238">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb3af-239">Retorna todas as versões do .NET Framework Common Language Runtime que estão instaladas no cliente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-239">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span></span></summary>
        <returns><span data-ttu-id="bb3af-240">Uma matriz de objetos de <see cref="T:System.Version" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-240">An array of <see cref="T:System.Version" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-241">O <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> método só tem suporte quando o navegador for o Internet Explorer versão 5.0 ou posterior.</span><span class="sxs-lookup"><span data-stu-id="bb3af-241">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="bb3af-242">Se o common language runtime não está instalado no cliente, a propriedade retorna uma matriz que contém um único <xref:System.Version> do objeto com os valores 0, 0, -1, -1.</span><span class="sxs-lookup"><span data-stu-id="bb3af-242">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey"><span data-ttu-id="bb3af-243">O nome da seção de configuração que configura funcionalidades do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-243">The name of the configuration section that configures browser capabilities.</span></span></param>
        <param name="request"><span data-ttu-id="bb3af-244">A <see cref="T:System.Web.HttpRequest" /> gerada pelo navegador para a qual retornar as funcionalidades e que geralmente é a <see cref="T:System.Web.HttpRequest" /> atual.</span><span class="sxs-lookup"><span data-stu-id="bb3af-244">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span></span></param>
        <summary><span data-ttu-id="bb3af-245">Usada internamente para retornar uma instância de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> que representa o navegador que gerou a <see cref="T:System.Web.HttpRequest" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-245">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></summary>
        <returns><span data-ttu-id="bb3af-246">Uma instância de <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> que representa o navegador que gerou a <see cref="T:System.Web.HttpRequest" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-246">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-247">Obtém um valor que indica se o navegador tem um botão **Voltar** dedicado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-247">Gets a value indicating whether the browser has a dedicated **Back** button.</span></span></summary>
        <value><span data-ttu-id="bb3af-248"><see langword="true" /> Se o navegador tem um dedicado **volta** botão; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-248"><see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-249">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-249">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-250">Se `false`, um controle de link pode ser necessário quando um **volta** botão não está disponível.</span><span class="sxs-lookup"><span data-stu-id="bb3af-250">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-251">O exemplo de código a seguir mostra como determinar se o navegador tem um dedicado **volta** botão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-251">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-252">Obtém um valor que indica se a barra de rolagem de um elemento HTML <see langword="&lt;select multiple&gt;" /> com um valor de atributo <see langword="align" /> de <see langword="right" /> é obscurecida após o a renderização.</span><span class="sxs-lookup"><span data-stu-id="bb3af-252">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span></span></summary>
        <value><span data-ttu-id="bb3af-253"><see langword="true" /> Se a barra de rolagem de um HTML <see langword="&lt;select multiple&gt;" /> elemento com um <see langword="align" /> valor de atributo <see langword="right" /> obscuros após a renderização; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-253"><see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-254">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-254">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-255">O exemplo de código a seguir mostra como determinar se o navegador obscurece a barra de rolagem para elementos de seleção múltipla alinhado à direita.</span><span class="sxs-lookup"><span data-stu-id="bb3af-255">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-256">Obtém ou define o nome de classe totalmente qualificado do <see cref="T:System.Web.UI.HtmlTextWriter" /> a utilizar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-256">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></summary>
        <value><span data-ttu-id="bb3af-257">O nome de classe totalmente qualificado a <see cref="T:System.Web.UI.HtmlTextWriter" /> usar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-257">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-258">Obtém o identificador interno do navegador conforme especificado no arquivo de definição do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-258">Gets the internal identifier of the browser as specified in the browser definition file.</span></span></summary>
        <value><span data-ttu-id="bb3af-259">Identificador interno do navegador conforme especificado no arquivo de definição do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-259">Internal identifier of the browser as specified in the browser definition file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb3af-260">Usada internamente para inicializar um conjunto interno de valores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-260">Used internally to initialize an internal set of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-261">Retorna o tipo de entrada com suporte pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-261">Returns the type of input supported by browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-262">O tipo de entrada com suporte pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-262">The type of input supported by browser.</span></span> <span data-ttu-id="bb3af-263">O padrão é <c>telephoneKeypad</c>.</span><span class="sxs-lookup"><span data-stu-id="bb3af-263">The default is <c>telephoneKeypad</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-264">Os valores de retornados possíveis incluem:</span><span class="sxs-lookup"><span data-stu-id="bb3af-264">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-265">O exemplo de código a seguir mostra como determinar o tipo de suporte à entrada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-265">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="bb3af-266">O navegador especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-266">The specified browser.</span></span></param>
        <summary><span data-ttu-id="bb3af-267">Obtém um valor indicando se o navegador do cliente é o mesmo que o navegador especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-267">Gets a value indicating whether the client browser is the same as the specified browser.</span></span></summary>
        <returns><span data-ttu-id="bb3af-268"><see langword="true" /> se o navegador do cliente é o mesmo que o navegador especificado, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-268"><see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-269">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-269">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-270">O <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> método também retornará `true` se a definição de navegador do cliente herda o navegador especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-270">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-271">Obtém um valor que indica se o navegador tem uma exibição em cores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-271">Gets a value indicating whether the browser has a color display.</span></span></summary>
        <value><span data-ttu-id="bb3af-272"><see langword="true" /> Se o navegador tem uma exibição em cores; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-272"><see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-273">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-273">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-274">O exemplo de código a seguir mostra se o navegador do cliente dá suporte a cores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-274">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="bb3af-275">O valor retornado pode ser usado para determinar a imagem apropriada para enviar para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-275">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-276">Obtém um valor que indica se o navegador é um dispositivo móvel reconhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-276">Gets a value indicating whether the browser is a recognized mobile device.</span></span></summary>
        <value><span data-ttu-id="bb3af-277"><see langword="true" /> se o navegador for um dispositivo móvel reconhecido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-277"><see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-278">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-278">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-279">O exemplo de código a seguir mostra como determinar se o navegador é um dispositivo móvel.</span><span class="sxs-lookup"><span data-stu-id="bb3af-279">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="bb3af-280">O nome da funcionalidade do navegador a recuperar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-280">The name of the browser capability to retrieve.</span></span></param>
        <summary><span data-ttu-id="bb3af-281">Obtém o valor da funcionalidade de navegador especificada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-281">Gets the value of the specified browser capability.</span></span> <span data-ttu-id="bb3af-282">No C#, essa propriedade é o indexador da classe.</span><span class="sxs-lookup"><span data-stu-id="bb3af-282">In C#, this property is the indexer for the class.</span></span></summary>
        <value><span data-ttu-id="bb3af-283">A capacidade de navegador com o nome da chave especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-283">The browser capability with the specified key name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-284">No JScript, você pode usar as propriedades indexadas padrão definidas por um tipo, mas você não pode definir explicitamente seus próprios.</span><span class="sxs-lookup"><span data-stu-id="bb3af-284">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="bb3af-285">No entanto, especificando o `expando` atributo em uma classe fornece automaticamente uma propriedade indexada padrão com um tipo de `Object` e um tipo de índice de `String`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-285">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-286">Obtém um valor que indica se o navegador dá suporte a Java.</span><span class="sxs-lookup"><span data-stu-id="bb3af-286">Gets a value indicating whether the browser supports Java.</span></span></summary>
        <value><span data-ttu-id="bb3af-287"><see langword="true" /> Se o navegador dá suporte a Java; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-287"><see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-288">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-289">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a Java.</span><span class="sxs-lookup"><span data-stu-id="bb3af-289">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-290">Obtém um valor que indica se o navegador dá suporte a JavaScript.</span><span class="sxs-lookup"><span data-stu-id="bb3af-290">Gets a value indicating whether the browser supports JavaScript.</span></span></summary>
        <value><span data-ttu-id="bb3af-291"><see langword="true" /> Se o navegador dá suporte a JavaScript; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-291"><see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-292">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-292">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-293">Se o navegador dá suporte a JavaScript, mas scripts são desabilitados por meio de uma configuração de segurança, o <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> propriedade retornará `true` , mas o script não será executado no navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-293">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-294">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a JavaScript.</span><span class="sxs-lookup"><span data-stu-id="bb3af-294">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-295">Obtém a versão de JScript à qual o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-295">Gets the JScript version that the browser supports.</span></span></summary>
        <value><span data-ttu-id="bb3af-296">O <see cref="T:System.Version" /> do JScript que o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-296">The <see cref="T:System.Version" /> of JScript that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-297">Obtém o número de versão principal (inteiro) do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-297">Gets the major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-298">O número de versão principal do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-298">The major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-299">O exemplo de código a seguir adiciona o principal e número de valores menores (inteiro e decimal) da versão do navegador e envia o resultado para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-299">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="bb3af-300">O valor de versão principal não é um inteiro.</span><span class="sxs-lookup"><span data-stu-id="bb3af-300">The major version value is not an integer.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-301">Obtém o comprimento máximo em caracteres para o atributo <see langword="href" /> de um elemento HTML <see langword="&lt;a&gt;" /> (âncora).</span><span class="sxs-lookup"><span data-stu-id="bb3af-301">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="bb3af-302">O comprimento máximo em caracteres para o <see langword="href" /> atributo de uma marca HTML <see langword="&lt;a&gt;" /> elemento (âncora).</span><span class="sxs-lookup"><span data-stu-id="bb3af-302">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-303">Obtém o tamanho máximo da página, em bytes, que o navegador pode exibir.</span><span class="sxs-lookup"><span data-stu-id="bb3af-303">Gets the maximum length of the page, in bytes, which the browser can display.</span></span></summary>
        <value><span data-ttu-id="bb3af-304">O tamanho máximo da página, em bytes, que o navegador pode exibir.</span><span class="sxs-lookup"><span data-stu-id="bb3af-304">The maximum length of the page, in bytes, which the browser can display.</span></span> <span data-ttu-id="bb3af-305">O padrão é <c>2000</c>.</span><span class="sxs-lookup"><span data-stu-id="bb3af-305">The default is <c>2000</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-306">Processamento por um gateway intermediário pode alterar o número de bytes que atingirem o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-306">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="bb3af-307">ASP.NET não impõe esse limite de tamanho de página.</span><span class="sxs-lookup"><span data-stu-id="bb3af-307">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="bb3af-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> é principalmente útil ao trabalhar com navegadores clientes móveis.</span><span class="sxs-lookup"><span data-stu-id="bb3af-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-309">Retorna o comprimento máximo do texto que um rótulo de tecla pode exibir.</span><span class="sxs-lookup"><span data-stu-id="bb3af-309">Returns the maximum length of the text that a soft-key label can display.</span></span></summary>
        <value><span data-ttu-id="bb3af-310">O comprimento máximo do texto que um rótulo de tecla pode exibir.</span><span class="sxs-lookup"><span data-stu-id="bb3af-310">The maximum length of the text that a soft-key label can display.</span></span> <span data-ttu-id="bb3af-311">O padrão é <see langword="5" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-311">The default is <see langword="5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-312">O <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-312">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-313">O exemplo de código a seguir mostra como determinar o comprimento máximo do rótulo de tecla para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-313">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-314">Obtém número de versão secundária (ou seja, decimal) do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-314">Gets the minor (that is, decimal) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-315">O número de versão secundária do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-315">The minor version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-316">O exemplo de código a seguir retorna a versão secundária do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-316">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="bb3af-317">O número de versão secundária no cabeçalho não é válido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-317">The minor version number in the header is not valid.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-318">Obtém o número de versão secundária (decimal) do navegador como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-318">Gets the minor (decimal) version number of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="bb3af-319">O número de versão secundária do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-319">The minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-320">Retorna o nome do fabricante de um dispositivo móvel, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-320">Returns the name of the manufacturer of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="bb3af-321">O nome do fabricante do dispositivo móvel, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-321">The name of the manufacturer of a mobile device, if known.</span></span> <span data-ttu-id="bb3af-322">O padrão é <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-322">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-323">Obtém o nome do modelo de um dispositivo móvel, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-323">Gets the model name of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="bb3af-324">O nome do modelo de um dispositivo móvel, se conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-324">The model name of a mobile device, if known.</span></span> <span data-ttu-id="bb3af-325">O padrão é <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-325">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-326">Obtém a versão do DOM (Modelo de Objeto do Documento) MSHTML (Microsoft HTML) à qual o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-326">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="bb3af-327">O número da versão do DOM MSHTML que o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-327">The number of the MSHTML DOM version that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-328">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a uma versão principal do DOM MSHTML maior que 1.</span><span class="sxs-lookup"><span data-stu-id="bb3af-328">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-329">Retorna o número de chaves de software em um dispositivo móvel.</span><span class="sxs-lookup"><span data-stu-id="bb3af-329">Returns the number of soft keys on a mobile device.</span></span></summary>
        <value><span data-ttu-id="bb3af-330">O número de chaves de software com suporte em um dispositivo móvel.</span><span class="sxs-lookup"><span data-stu-id="bb3af-330">The number of soft keys supported on a mobile device.</span></span> <span data-ttu-id="bb3af-331">O padrão é <see langword="0" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-331">The default is <see langword="0" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-332">O <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-332">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-333">Chaves de software são chaves especiais que o aplicativo poderá geralmente são mapeadas para tarefas personalizadas.</span><span class="sxs-lookup"><span data-stu-id="bb3af-333">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="bb3af-334">Texto da tecla é exibido na tela nos cantos inferior esquerdo e inferior direito.</span><span class="sxs-lookup"><span data-stu-id="bb3af-334">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-335">Obtém o nome da plataforma que o cliente usa, se ele for conhecido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-335">Gets the name of the platform that the client uses, if it is known.</span></span></summary>
        <value><span data-ttu-id="bb3af-336">O sistema operacional usado pelo cliente, se for conhecido. Caso contrário, o valor será definido como <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-336">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-337">Alguns dos possíveis valores para o <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> são de propriedade da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="bb3af-337">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="bb3af-338">`Windows NT 5.0` (Windows 2000)</span><span class="sxs-lookup"><span data-stu-id="bb3af-338">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="bb3af-339">`Windows NT 5.1` (Windows XP)</span><span class="sxs-lookup"><span data-stu-id="bb3af-339">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="bb3af-340">`WinNT` (todas as outras versões do Windows NT)</span><span class="sxs-lookup"><span data-stu-id="bb3af-340">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-341">O exemplo de código a seguir mostra como determinar se o navegador está em execução na plataforma Windows NT.</span><span class="sxs-lookup"><span data-stu-id="bb3af-341">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-342">Retorna o tipo MIME do tipo de conteúdo de imagem normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-342">Returns the MIME type of the type of image content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-343">O tipo MIME do tipo de conteúdo de imagem normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-343">The MIME type of the type of image content typically preferred by the browser.</span></span> <span data-ttu-id="bb3af-344">O padrão é <see langword="image/gif" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-344">The default is <see langword="image/gif" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-345">O exemplo de código a seguir mostra como determinar o tipo de imagem normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-345">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-346">Retorna o tipo MIME do tipo de conteúdo normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-346">Returns the MIME type of the type of content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-347">O tipo MIME do tipo de conteúdo normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-347">The MIME type of the type of content typically preferred by the browser.</span></span> <span data-ttu-id="bb3af-348">O padrão é <see langword="text/html" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-348">The default is <see langword="text/html" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-349">O exemplo de código a seguir mostra como determinar o tipo MIME normalmente preferido pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-349">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-350">Obtém o nome geral para o tipo de conteúdo que o navegador prefere.</span><span class="sxs-lookup"><span data-stu-id="bb3af-350">Gets the general name for the type of content that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="bb3af-351"><see langword="html32" /> ou <see langword="chtml10" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-351"><see langword="html32" /> or <see langword="chtml10" />.</span></span> <span data-ttu-id="bb3af-352">O padrão é <see langword="html32" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-352">The default is <see langword="html32" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-353">O exemplo de código a seguir mostra como determinar o tipo de conteúdo que o navegador prefere.</span><span class="sxs-lookup"><span data-stu-id="bb3af-353">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-354">Obtém a codificação de solicitação preferida pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-354">Gets the request encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-355">A codificação de solicitação preferida pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-355">The request encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-356">Obtém a codificação de resposta preferida pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-356">Gets the response encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-357">A codificação de resposta preferida pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-357">The response encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-358">Obtém um valor que indica se o navegador renderiza uma quebra de linha antes dos elementos <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-358">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-359"><see langword="true" /> Se o navegador renderiza uma quebra de linha antes de <see langword="&lt;select&gt;" /> ou <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-359"><see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-360">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-361">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-361">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-362">Se `true`, conteúdo a seguir `<select>` ou `<input>` elementos serão automaticamente colocados em uma nova linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-362">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-363">O exemplo de código a seguir mostra como determinar se o navegador renderiza uma quebra de linha antes de `<select>` ou `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-363">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-364">Obtém um valor que indica se o navegador renderiza uma quebra de linha após elementos de item de lista.</span><span class="sxs-lookup"><span data-stu-id="bb3af-364">Gets a value indicating whether the browser renders a line break after list-item elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-365"><see langword="true" /> Se o navegador renderiza uma quebra de linha após elementos de item de lista; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-365"><see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-366">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-366">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-367">Se `true`, o conteúdo de elementos de item de lista a seguir serão automaticamente colocada em uma nova linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-367">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-368">O exemplo de código a seguir mostra como determinar se o navegador renderiza uma quebra de linha após elementos de item de lista.</span><span class="sxs-lookup"><span data-stu-id="bb3af-368">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-369">Obtém um valor que indica se o navegador renderiza uma quebra de linha após um elemento HTML <see langword="&lt;a&gt;" /> (âncora) autônomo.</span><span class="sxs-lookup"><span data-stu-id="bb3af-369">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="bb3af-370"><see langword="true" /> Se o navegador renderiza uma quebra de linha após uma HTML autônomo <see langword="&lt;a&gt;" /> elemento (âncora); caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-370"><see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-371">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-371">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-372">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-372">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-373">Se `true`, o conteúdo a seguir uma HTML autônomo `<a>` elemento (âncora) serão automaticamente colocado em uma nova linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-373">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-374">O exemplo de código a seguir mostra como determinar se o navegador renderiza uma quebra de linha após um WML autônomo `<a>` elemento (âncora).</span><span class="sxs-lookup"><span data-stu-id="bb3af-374">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-375">Obtém um valor que indica se o navegador renderiza uma quebra de linha após um elemento HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-375">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="bb3af-376"><see langword="true" /> Se o navegador renderiza uma quebra de linha após um HTML <see langword="&lt;input&gt;" /> elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-376"><see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-377">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-377">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-378">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-378">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-379">Se `true`, o conteúdo de um HTML a seguir `<input>` elemento serão automaticamente colocado em uma nova linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-379">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-380">O exemplo de código a seguir mostra como determinar se o navegador renderiza uma quebra de linha após um HTML `<input>` elemento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-380">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-381">Obtém um valor que indica se o navegador de dispositivo móvel renderiza um constructo accept de formulário com base em <see langword="do" /> WML como um botão embutido em vez de como uma chave de software.</span><span class="sxs-lookup"><span data-stu-id="bb3af-381">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span></span></summary>
        <value><span data-ttu-id="bb3af-382"><see langword="true" /> Se o navegador de dispositivo móvel renderiza um WML <see langword="do" />-com base-constructo accept de formulário como um botão embutido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-382"><see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-383">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-383">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-384">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-384">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-385">O exemplo de código a seguir mostra como determinar se o navegador renderiza uma WML `do`-com base-constructo accept de formulário como um botão embutido.</span><span class="sxs-lookup"><span data-stu-id="bb3af-385">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-386">Obtém um valor que indica se o navegador renderiza elementos WML <see langword="&lt;select&gt;" /> como cartões de menu, em vez de como uma caixa de combinação.</span><span class="sxs-lookup"><span data-stu-id="bb3af-386">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span></span></summary>
        <value><span data-ttu-id="bb3af-387"><see langword="true" /> Se o navegador renderiza WML <see langword="&lt;select&gt;" /> elementos, como cartões de menu; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-387"><see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-388">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-388">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-389">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> propriedade se aplica somente a dispositivos móveis compatíveis WML.</span><span class="sxs-lookup"><span data-stu-id="bb3af-389">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-390">O exemplo de código a seguir mostra como determinar se o navegador renderiza WML `<select>` elementos como cartões de menu.</span><span class="sxs-lookup"><span data-stu-id="bb3af-390">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-391">Usada internamente para produzir uma marca meta requerida por alguns navegadores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-391">Used internally to produce a meta-tag required by some browsers.</span></span></summary>
        <value><span data-ttu-id="bb3af-392">Uma marca meta requerida por alguns navegadores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-392">A meta-tag required by some browsers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-393">Destinado apenas para uso interno.</span><span class="sxs-lookup"><span data-stu-id="bb3af-393">Intended for internal use only.</span></span> <span data-ttu-id="bb3af-394">Alguns navegadores exigem uma marca meta semelhante à seguinte para o navegador renderizar corretamente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-394">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-395">Obtém um valor que indica se o navegador requer dois-pontos em valores de atributo de elemento a serem substituídos por um caractere diferente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-395">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span></span></summary>
        <value><span data-ttu-id="bb3af-396"><see langword="true" /> Se o navegador requer dois-pontos em valores de atributo do elemento a ser substituído por um caractere diferente; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-396"><see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-397">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-397">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-398">Alguns navegadores não reconhecem dois-pontos em valores de atributo do elemento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-398">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="bb3af-399">Se `true`, um caractere diferente será substituído na renderização e retornado nos dados de postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-399">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-400">O exemplo de código a seguir mostra como determinar se o navegador requer dois-pontos em valores de atributo do elemento a ser substituído por um caractere diferente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-400">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-401">Obtém um valor que indica se o navegador requer um elemento HTML <see langword="&lt;meta&gt;" /> para o qual o atributo <see langword="content-type" /> é especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-401">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span></span></summary>
        <value><span data-ttu-id="bb3af-402"><see langword="true" /> Se o navegador requer um HTML <see langword="&lt;meta&gt;" /> elemento para o qual o <see langword="content-type" /> atributo é especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-402"><see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-403">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-403">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-404">Se `true`, os adaptadores de controle de servidor Inserir a seguinte marca no HTML `<head>` elemento de uma página da Web:</span><span class="sxs-lookup"><span data-stu-id="bb3af-404">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="bb3af-405">Neste exemplo, `CONTENT` é o valor retornado pela <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> propriedade, e `charset` é a codificação de caracteres usada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-405">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-406">O exemplo de código a seguir mostra como determinar se o navegador requer um HTML `<meta>` elemento para o qual o `content-type` atributo é especificado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-406">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-407">Obtém um valor que indica se o navegador requer que o controle de estado seja mantido nas sessões.</span><span class="sxs-lookup"><span data-stu-id="bb3af-407">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span></span></summary>
        <value><span data-ttu-id="bb3af-408"><see langword="true" /> Se o navegador requer que o controle de estado seja mantido nas sessões; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-408"><see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-409">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-409">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-410">O exemplo de código a seguir mostra como determinar se o navegador requer controle de estado seja mantido nas sessões.</span><span class="sxs-lookup"><span data-stu-id="bb3af-410">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-411">Obtém um valor que indica se o navegador requer um conjunto de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="bb3af-411">Gets a value indicating whether the browser requires a double-byte character set.</span></span></summary>
        <value><span data-ttu-id="bb3af-412"><see langword="true" /> Se o navegador requer um conjunto de caracteres de byte duplo; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-412"><see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-413">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-414">O exemplo de código a seguir mostra como determinar se o navegador requer um conjunto de caracteres de byte duplo.</span><span class="sxs-lookup"><span data-stu-id="bb3af-414">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-415">Obtém um valor que indica se o navegador requer mensagens de erro não padrão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-415">Gets a value indicating whether the browser requires nonstandard error messages.</span></span></summary>
        <value><span data-ttu-id="bb3af-416"><see langword="true" /> Se o navegador requer mensagens de erro não padrão; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-416"><see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-417">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-418">Se `true`, o navegador não processa corretamente as mensagens de erro HTTP.</span><span class="sxs-lookup"><span data-stu-id="bb3af-418">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="bb3af-419">Para corrigir isso, os adaptadores de controle de servidor geram uma página de erro personalizada para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-419">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-420">O exemplo de código a seguir mostra como determinar se o navegador requer mensagens de erro não padrão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-420">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-421">Obtém um valor que indica se o navegador exige que o primeiro elemento no corpo de uma página da Web seja um elemento HTML <see langword="&lt;br&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-421">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="bb3af-422"><see langword="true" /> Se o navegador requer que o primeiro elemento no corpo de uma página da Web seja um HTML <see langword="BR" /> elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-422"><see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-423">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-423">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-424">Se `true`, os adaptadores de controle de servidor Inserir adicional `<br>` elemento imediatamente após o `<body>` marca em uma página da Web.</span><span class="sxs-lookup"><span data-stu-id="bb3af-424">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-425">O exemplo de código a seguir mostra como determinar se o navegador requer o primeiro elemento no corpo de uma página da Web seja um HTML `<br>` elemento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-425">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-426">Obtém um valor que indica se o navegador não dá suporte a elementos HTML <see langword="&lt;br&gt;" /> para formatar quebras de linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-426">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span></span></summary>
        <value><span data-ttu-id="bb3af-427"><see langword="true" /> Se o navegador não dá suporte a HTML <see langword="&lt;br&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-427"><see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-428">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-428">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-429">Se `true`, o navegador não será renderizado corretamente as páginas que contém o HTML `<br>` elemento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-429">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-430">O exemplo de código a seguir mostra como determinar se o navegador não dá suporte a HTML `<br>` elementos para formatar quebras de linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-430">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-431">Obtém um valor que indica se o navegador requer que as páginas contenham um formulário com tamanho otimizado de marcas de linguagem de marcação.</span><span class="sxs-lookup"><span data-stu-id="bb3af-431">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span></summary>
        <value><span data-ttu-id="bb3af-432"><see langword="true" /> Se o navegador requer que as páginas contenham um formulário com tamanho otimizado de marcas de linguagem de marcação; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-432"><see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-433">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-433">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-434">Se `true`, adaptadores de controle de servidor geram saída mínima para reduzir o tamanho da página resultante.</span><span class="sxs-lookup"><span data-stu-id="bb3af-434">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb3af-435">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> propriedade retorna `true` para navegadores compatíveis com modo de i.</span><span class="sxs-lookup"><span data-stu-id="bb3af-435">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-436">O exemplo de código a seguir mostra como determinar se o navegador requer que as páginas contenham um formulário com tamanho otimizado de marcas de linguagem de marcação.</span><span class="sxs-lookup"><span data-stu-id="bb3af-436">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-437">Obtém um valor que indica se o navegador dá suporte a discagem telefônica com base em texto sem formatação ou se ele requer marcação especial.</span><span class="sxs-lookup"><span data-stu-id="bb3af-437">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span></summary>
        <value><span data-ttu-id="bb3af-438"><see langword="true" /> Se o navegador dá suporte a discagem telefônica com base em texto sem formatação apenas; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-438"><see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-439">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-439">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-440">O <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> a propriedade se aplica somente aos navegadores para os quais o <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-440">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-441">O seguinte exemplo de código mostra como determinar se o navegador dá suporte a discagem telefônica com base em texto sem formatação, ou se ele requer marcação especial.</span><span class="sxs-lookup"><span data-stu-id="bb3af-441">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-442">Obtém um valor que indica se o navegador requer que os valores de <see langword="VIEWSTATE" /> tenham codificação especial.</span><span class="sxs-lookup"><span data-stu-id="bb3af-442">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span></span></summary>
        <value><span data-ttu-id="bb3af-443"><see langword="true" /> Se o navegador requer <see langword="VIEWSTATE" /> valores a serem especialmente codificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-443"><see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-444">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-444">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-445">HTTP é um protocolo sem monitoração de estado, e `VIEWSTATE` é um mecanismo usado para persistir as alterações do cliente em várias solicitações.</span><span class="sxs-lookup"><span data-stu-id="bb3af-445">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="bb3af-446">Cada controle em uma página da Web contém um <xref:System.Web.UI.Control.ViewState%2A> propriedade, que representa o acúmulo de todas as alterações feitas pelo cliente.</span><span class="sxs-lookup"><span data-stu-id="bb3af-446">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="bb3af-447">Em uma página de Web Forms, essas alterações são codificadas nos dados de postback como o `value` de um HTML `<input>` elemento com um `type` atributo do `hidden`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-447">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="bb3af-448">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="bb3af-448">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 Se `true`, não alfabéticos caracteres no `VIEWSTATE` valor não será enviado corretamente pelo navegador, nem por um gateway intermediário. <span data-ttu-id="bb3af-450">Para corrigir isso, os adaptadores de controle de servidor substituem caracteres não alfabéticos no `VIEWSTATE` valor com aqueles que não exigem codificação em solicitações HTTP.</span><span class="sxs-lookup"><span data-stu-id="bb3af-450">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-451">O exemplo de código a seguir mostra como determinar se o navegador requer `VIEWSTATE` valores tenham codificação especial.</span><span class="sxs-lookup"><span data-stu-id="bb3af-451">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-452">Obtém um valor que indica se o navegador requer URLs de ação de formulário exclusivas.</span><span class="sxs-lookup"><span data-stu-id="bb3af-452">Gets a value indicating whether the browser requires unique form-action URLs.</span></span></summary>
        <value><span data-ttu-id="bb3af-453"><see langword="true" /> Se o navegador requer URLs de ação de formulário exclusivas. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-453"><see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-454">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-454">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-455">Uma referência interna HTML `<form>` elemento é aquele para o qual o `action` atributo especifica sua própria URL.</span><span class="sxs-lookup"><span data-stu-id="bb3af-455">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="bb3af-456">Se `true`, formulários de referência automática não retornam os resultados corretos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-456">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="bb3af-457">Isso é devido ao cache pelo navegador ou um gateway intermediário.</span><span class="sxs-lookup"><span data-stu-id="bb3af-457">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="bb3af-458">Para corrigir isso, os adaptadores de controle de servidor acrescentar uma cadeia de caracteres de consulta padrão (`__ufps=``uniquefilepathsuffix`) para os valores da URL de ação de formulário de Self se referir a formulários.</span><span class="sxs-lookup"><span data-stu-id="bb3af-458">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-459">O exemplo de código a seguir mostra como determinar se o navegador requer URLs de ação de formulário exclusivas.</span><span class="sxs-lookup"><span data-stu-id="bb3af-459">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-460">Obtém um valor que indica se o navegador valores de atributo <see langword="name" /> exclusivos de vários elementos HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-460">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-461"><see langword="true" /> Se o navegador requer exclusivo <see langword="name" /> valores de vários HTML de atributo <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-461"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-462">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-462">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-463">O exemplo de código a seguir mostra como determinar se o navegador requer exclusivo `NAME` valores de vários HTML de atributo `<input type="checkbox">` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-463">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-464">Obtém um valor que indica se o navegador valores de atributo <see langword="name" /> exclusivos de vários elementos HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-464">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-465"><see langword="true" /> Se o navegador requer exclusivo <see langword="name" /> valores de vários HTML de atributo <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-465"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-466">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-466">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-467">O exemplo de código a seguir mostra como determinar se o navegador requer exclusivo `name` valores de vários HTML de atributo `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-467">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-468">Obtém um valor que indica se os dados de postback enviados pelo navegador serão <see langword="UrlEncoded" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-468">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span></span></summary>
        <value><span data-ttu-id="bb3af-469"><see langword="true" /> Se os dados de postback enviados pelo navegador serão <see langword="UrlEncoded" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-469"><see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-470">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-470">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-471">O exemplo de código a seguir mostra como determinar se o navegador `UrlEncodes` dados de postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-471">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-472">Retorna a intensidade da tela, em bits por pixel.</span><span class="sxs-lookup"><span data-stu-id="bb3af-472">Returns the depth of the display, in bits per pixel.</span></span></summary>
        <value><span data-ttu-id="bb3af-473">A profundidade da tela, em bits por pixel.</span><span class="sxs-lookup"><span data-stu-id="bb3af-473">The depth of the display, in bits per pixel.</span></span> <span data-ttu-id="bb3af-474">O padrão é <see langword="1" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-474">The default is <see langword="1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-475">Retorna a altura aproximada da tela, em linhas de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-475">Returns the approximate height of the display, in character lines.</span></span></summary>
        <value><span data-ttu-id="bb3af-476">A altura aproximada da tela, em linhas de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-476">The approximate height of the display, in character lines.</span></span> <span data-ttu-id="bb3af-477">O padrão é <see langword="6" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-477">The default is <see langword="6" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-478">O valor retornado pode ser derivado do tamanho do caractere assumida e tamanho de pixel de tela real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-478">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="bb3af-479">O algoritmo para determinar a altura usa uma combinação dos tamanhos de fonte padrão (de um arquivo. config), tamanhos específicos de navegador (novamente, a partir de um arquivo. config) e explícitos cabeçalhos enviados pelo navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-479">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="bb3af-480">Alguns navegadores podem depender de valores padrão interno, que só aproximam a altura real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-480">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-481">Retorna a largura aproximada da tela, em caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-481">Returns the approximate width of the display, in characters.</span></span></summary>
        <value><span data-ttu-id="bb3af-482">A largura aproximada da tela, em caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-482">The approximate width of the display, in characters.</span></span> <span data-ttu-id="bb3af-483">O padrão é <see langword="12" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-483">The default is <see langword="12" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-484">O valor retornado pode ser derivado do tamanho do caractere assumida e tamanho de pixel de tela real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-484">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="bb3af-485">O algoritmo para determinar a largura usa uma combinação da tamanhos de fonte padrão (de um arquivo. config), tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config) e explícitos cabeçalhos enviados pelos dispositivos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-485">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="bb3af-486">Esses valores não são necessariamente exatas (especialmente para fontes de largura variável, esses valores são aproximados).</span><span class="sxs-lookup"><span data-stu-id="bb3af-486">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="bb3af-487">Alguns dispositivos podem depender de valores padrão interno, que só aproximam a largura real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-487">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-488">Retorna a altura aproximada da tela, em pixels.</span><span class="sxs-lookup"><span data-stu-id="bb3af-488">Returns the approximate height of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="bb3af-489">A altura aproximada da tela, em pixels.</span><span class="sxs-lookup"><span data-stu-id="bb3af-489">The approximate height of the display, in pixels.</span></span> <span data-ttu-id="bb3af-490">O padrão é <see langword="72" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-490">The default is <see langword="72" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-491">O valor retornado pode ser derivado do tamanho do caractere assumida e altura de caractere.</span><span class="sxs-lookup"><span data-stu-id="bb3af-491">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="bb3af-492">O algoritmo para determinar a altura de pixel usa uma combinação da tamanhos de fonte padrão (de um arquivo. config), tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config) e explícitos cabeçalhos enviados pelos dispositivos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-492">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="bb3af-493">Esses valores não são necessariamente exatas.</span><span class="sxs-lookup"><span data-stu-id="bb3af-493">These values are not necessarily exact.</span></span> <span data-ttu-id="bb3af-494">Alguns dispositivos podem depender de valores padrão interno, que só aproximam a altura real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-494">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-495">Retorna a largura aproximada da tela, em pixels.</span><span class="sxs-lookup"><span data-stu-id="bb3af-495">Returns the approximate width of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="bb3af-496">A largura aproximada da tela, em pixels.</span><span class="sxs-lookup"><span data-stu-id="bb3af-496">The approximate width of the display, in pixels.</span></span> <span data-ttu-id="bb3af-497">O padrão é <see langword="96" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-497">The default is <see langword="96" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-498">O valor retornado pode ser derivado do tamanho do caractere assumida e largura de caractere.</span><span class="sxs-lookup"><span data-stu-id="bb3af-498">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="bb3af-499">O algoritmo para determinar a largura de pixel usa uma combinação da tamanhos de fonte padrão (de um arquivo. config), tamanhos específicos do dispositivo (novamente, a partir de um arquivo. config) e explícitos cabeçalhos enviados pelos dispositivos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-499">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="bb3af-500">Esses valores não são necessariamente exatas (especialmente para fontes de largura variável, esses valores são aproximados).</span><span class="sxs-lookup"><span data-stu-id="bb3af-500">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="bb3af-501">Alguns dispositivos podem depender de valores padrão interno, que só aproximam a largura real.</span><span class="sxs-lookup"><span data-stu-id="bb3af-501">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-502">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="ACCESSKEY" /> dos elementos HTML <see langword="&lt;a&gt;" /> (âncora) e <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-502">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-503"><see langword="true" /> Se o navegador dá suporte a <see langword="accesskey" /> atributo HTML <see langword="&lt;a&gt;" /> (âncora) e <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-503"><see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-504">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-505">O `accesskey` atributo estende o controle de formulários e links em uma página da Web para plataformas móveis e acessíveis, atribuindo uma tecla programável ou outro controlador no dispositivo para interagir com HTML `<a>` (âncora) e `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-505">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-506">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `accesskey` atributo HTML `<a>` (âncora) e `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-506">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-507">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="bgcolor" /> do elemento HTML <see langword="&lt;body&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-507">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="bb3af-508"><see langword="true" /> Se o navegador dá suporte a <see langword="bgcolor" /> atributo do HTML <see langword="&lt;body&gt;" /> elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-508"><see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-509">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-510">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `bgcolor` atributo do HTML `<body>` elemento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-510">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-511">Obtém um valor que indica se o navegador dá suporte aos elementos HTML <see langword="&lt;b&gt;" /> para formatar texto em negrito.</span><span class="sxs-lookup"><span data-stu-id="bb3af-511">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span></span></summary>
        <value><span data-ttu-id="bb3af-512"><see langword="true" /> Se o navegador dá suporte a HTML <see langword="&lt;b&gt;" /> elementos para formatar o texto em negrito; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-512"><see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-513">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-513">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-514">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML `<b>` elementos para formatar o texto em negrito.</span><span class="sxs-lookup"><span data-stu-id="bb3af-514">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-515">Obtém um valor que indica se o navegador dá suporte ao valor <see langword="cache-control" /> do atributo <see langword="http-equiv" /> de elementos HTML <see langword="&lt;meta&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-515">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-516"><see langword="true" /> Se o navegador dá suporte a <see langword="cache-control" /> de valor para o <see langword="http-equiv" /> atributo de HTML <see langword="&lt;meta&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-516"><see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-517">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-517">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-518">O `cache-control` de valor para o `http-equiv` atributo HTML `<meta>` elementos permite o controle sobre o cliente de cache do conteúdo baixado, que inclui páginas da Web.</span><span class="sxs-lookup"><span data-stu-id="bb3af-518">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="bb3af-519">O fragmento HTML a seguir mostra um exemplo:</span><span class="sxs-lookup"><span data-stu-id="bb3af-519">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="bb3af-520">Se `true`, a inclusão da marca no `<head>` elemento de uma página da Web deve forçar o navegador recarregue o conteúdo do servidor.</span><span class="sxs-lookup"><span data-stu-id="bb3af-520">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="bb3af-521">Se `false`, os adaptadores de controle de servidor acrescentar uma cadeia de caracteres de consulta padrão (`__ufps=``uniquefilepathsuffix`) para valores de URL de link que ainda não tiver uma.</span><span class="sxs-lookup"><span data-stu-id="bb3af-521">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="bb3af-522">Isso força o navegador recarregue o conteúdo do servidor.</span><span class="sxs-lookup"><span data-stu-id="bb3af-522">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="bb3af-523">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> propriedade também se aplica para o formulário de cabeçalho HTTP equivalente:</span><span class="sxs-lookup"><span data-stu-id="bb3af-523">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-524">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `cache-control` de valor para o `http-equiv` atributo HTML `<meta>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-524">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-525">Obtém um valor que indica se o navegador dá suporte a scripts de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-525">Gets a value indicating whether the browser supports callback scripts.</span></span></summary>
        <value><span data-ttu-id="bb3af-526"><see langword="true" /> Se o navegador dá suporte a scripts de retorno de chamada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-526"><see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-527">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-527">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-528">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a scripts de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="bb3af-528">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-529">Obtém um valor que indica se o navegador dá suporte a CSS (folhas de estilos em cascata).</span><span class="sxs-lookup"><span data-stu-id="bb3af-529">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span></span></summary>
        <value><span data-ttu-id="bb3af-530"><see langword="true" /> Se o navegador dá suporte a CSS; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-530"><see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-531">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-531">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-532">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a CSS.</span><span class="sxs-lookup"><span data-stu-id="bb3af-532">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-533">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="align" /> de elementos HTML <see langword="&lt;div&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-533">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-534"><see langword="true" /> Se o navegador dá suporte a <see langword="align" /> atributo HTML <see langword="&lt;div&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-534"><see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-535">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-535">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-536">HTML `<div>` elementos são usados para agrupar vários elementos HTML para que os estilos CSS podem ser aplicados a eles como um todo.</span><span class="sxs-lookup"><span data-stu-id="bb3af-536">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="bb3af-537">O `align` atributo define o alinhamento horizontal de um `<div>` grupo em uma página da Web.</span><span class="sxs-lookup"><span data-stu-id="bb3af-537">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-538">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `align` atributo HTML `<div>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-538">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-539">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="nowrap" /> de elementos HTML <see langword="&lt;div&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-539">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-540"><see langword="true" /> Se o navegador dá suporte a <see langword="nowrap" /> atributo HTML <see langword="&lt;div&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-540"><see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-541">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-541">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-542">HTML `<div>` elementos são usados para agrupar vários elementos HTML para que os estilos CSS podem ser aplicados a eles como um todo.</span><span class="sxs-lookup"><span data-stu-id="bb3af-542">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="bb3af-543">O `nowrap` atributo especifica que os elementos contidos no `<div>` grupo deve permanecer adjacente uns aos outros sem quebra de texto para uma nova linha.</span><span class="sxs-lookup"><span data-stu-id="bb3af-543">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-544">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `nowrap` atributo HTML `<div>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-544">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-545">Obtém um valor que indica se o navegador dá suporte a cadeias de caracteres vazias (<see langword="null" />) em valores de cookie.</span><span class="sxs-lookup"><span data-stu-id="bb3af-545">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span></span></summary>
        <value><span data-ttu-id="bb3af-546"><see langword="true" /> Se o navegador dá suporte a vazio (<see langword="null" />) cadeias de caracteres em valores de cookie; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-546"><see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-547">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-547">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-548">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a vazio (`null`) cadeias de caracteres em valores de cookie.</span><span class="sxs-lookup"><span data-stu-id="bb3af-548">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-549">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="color" /> de elementos HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-549">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-550"><see langword="true" /> Se o navegador dá suporte a <see langword="color" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-550"><see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-551">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-551">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-552">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `color` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-552">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-553">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="name" /> de elementos HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-553">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-554"><see langword="true" /> Se o navegador dá suporte a <see langword="name" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-554"><see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-555">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-555">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-556">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `name` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-556">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-557">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="size" /> de elementos HTML <see langword="&lt;font&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-557">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-558"><see langword="true" /> Se o navegador dá suporte a <see langword="size" /> atributo HTML <see langword="&lt;font&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-558"><see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-559">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-559">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-560">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `size` atributo HTML `<font>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-560">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-561">Obtém um valor que indica se o navegador dá suporte ao uso de uma imagem personalizada no lugar de um botão de envio de formulário padrão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-561">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span></span></summary>
        <value><span data-ttu-id="bb3af-562"><see langword="true" /> Se o navegador dá suporte usando uma imagem personalizada no lugar de um botão de envio de formulário padrão; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-562"><see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-563">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-563">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-564">O exemplo de código a seguir mostra como determinar se o navegador dá suporte usando uma imagem personalizada no lugar de um botão de envio de formulário padrão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-564">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-565">Obtém um valor que indica se o navegador dá suporte a símbolos i-mode.</span><span class="sxs-lookup"><span data-stu-id="bb3af-565">Gets a value indicating whether the browser supports i-mode symbols.</span></span></summary>
        <value><span data-ttu-id="bb3af-566"><see langword="true" /> Se o navegador dá suporte a símbolos i-mode; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-566"><see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-567">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-567">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-568">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriedade se aplica somente ao i-modo-dispositivos compatíveis com o.</span><span class="sxs-lookup"><span data-stu-id="bb3af-568">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="bb3af-569">Definir símbolos de imagem específicos de telefone i para navegadores compatíveis com i-modo utilizando o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb3af-569">Set i-Phone-specific picture symbols for i-mode-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-570">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a símbolos i-mode.</span><span class="sxs-lookup"><span data-stu-id="bb3af-570">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-571">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="istyle" /> de elementos HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-571">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-572"><see langword="true" /> Se o navegador dá suporte a <see langword="istyle" /> atributo HTML <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-572"><see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-573">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-573">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-574">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriedade se aplica somente ao i-modo-dispositivos compatíveis com o.</span><span class="sxs-lookup"><span data-stu-id="bb3af-574">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="bb3af-575">O `istyle` atributo é usado para definir o estilo de entrada de um campo de entrada de texto em navegadores compatíveis com modo de i.</span><span class="sxs-lookup"><span data-stu-id="bb3af-575">The `istyle` attribute is used for setting the input style of a text-input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-576">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `istyle` atributo HTML `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-576">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-577">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="mode" /> de elementos HTML <see langword="&lt;input&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-577">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-578"><see langword="true" /> Se o navegador dá suporte a <see langword="mode" /> atributo HTML <see langword="&lt;input&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-578"><see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-579">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-579">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-580">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> propriedade se aplica somente ao i-modo-dispositivos compatíveis com o.</span><span class="sxs-lookup"><span data-stu-id="bb3af-580">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="bb3af-581">O `MODE` atributo é usado para definir o modo de entrada de um campo de entrada de texto em navegadores compatíveis com modo de i.</span><span class="sxs-lookup"><span data-stu-id="bb3af-581">The `MODE` attribute is used for setting the input mode of a text input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-582">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `mode` atributo HTML `<input>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-582">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-583">Obtém um valor que indica se o navegador dá suporte aos elementos HTML <see langword="&lt;i&gt;" /> para formatar texto em itálico.</span><span class="sxs-lookup"><span data-stu-id="bb3af-583">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span></span></summary>
        <value><span data-ttu-id="bb3af-584"><see langword="true" /> Se o navegador dá suporte a HTML <see langword="&lt;i&gt;" /> elementos para formatar texto em itálico; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-584"><see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-585">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-585">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-586">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML `<i>` elementos para formatar texto em itálico.</span><span class="sxs-lookup"><span data-stu-id="bb3af-586">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-587">Obtém um valor que indica se o navegador dá suporte aos atributos multimídia de J-Phone.</span><span class="sxs-lookup"><span data-stu-id="bb3af-587">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span></span></summary>
        <value><span data-ttu-id="bb3af-588"><see langword="true" /> Se o navegador dá suporte a atributos multimídia de J-Phone. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-588"><see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-589">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-590">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> propriedade se aplica somente a dispositivos móveis de J-Phone-compatible.</span><span class="sxs-lookup"><span data-stu-id="bb3af-590">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-591">J-Phone é uma especificação de linguagem de marcação, com base em HTML, para os navegadores compatíveis com J-Phone.</span><span class="sxs-lookup"><span data-stu-id="bb3af-591">J-Phone is a markup language specification, based on HTML, for J-Phone-compatible browsers.</span></span> <span data-ttu-id="bb3af-592">Se `true`, o navegador dá suporte a atributos adicionais para HTML `<a>` (âncora) e `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-592">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="bb3af-593">Os atributos adicionais com suporte são os seguintes:</span><span class="sxs-lookup"><span data-stu-id="bb3af-593">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-594">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a atributos multimídia J-Phone.</span><span class="sxs-lookup"><span data-stu-id="bb3af-594">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-595">Obtém um valor que indica se o navegador dá suporte a símbolos de imagem específicos do J-Phone.</span><span class="sxs-lookup"><span data-stu-id="bb3af-595">Gets a value indicating whether the browser supports J-Phone-specific picture symbols.</span></span></summary>
        <value><span data-ttu-id="bb3af-596"><see langword="true" /> Se o navegador dá suporte a símbolos de imagem específicos de J-Phone; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-596"><see langword="true" /> if the browser supports J-Phone-specific picture symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-597">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-597">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-598">O <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> propriedade se aplica somente a dispositivos móveis de J-Phone-compatible.</span><span class="sxs-lookup"><span data-stu-id="bb3af-598">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="bb3af-599">Definir símbolos de imagem específicos de J-Phone para navegadores de J-Phone-compatible usando o <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb3af-599">Set J-Phone-specific picture symbols for J-Phone-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-600">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a símbolos de imagem específicos de J-Phone.</span><span class="sxs-lookup"><span data-stu-id="bb3af-600">The following code example shows how to determine whether the browser supports J-Phone-specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-601">Obtém um valor que indica se o navegador dá suporte a uma cadeia de caracteres de consulta no valor de atributo <see langword="action" /> de elementos HTML <see langword="&lt;form&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-601">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-602"><see langword="true" /> Se o navegador dá suporte a uma cadeia de caracteres de consulta na <see langword="action" /> valor de HTML do atributo <see langword="&lt;form&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-602"><see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-603">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-603">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-604">Se `false`, parâmetros de cadeia de caracteres de consulta são enviados, nos dados de postback, como HTML `<input>` elementos com o `type` os atributos definidos para `hidden`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-604">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-605">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a uma cadeia de caracteres de consulta no valor para o `action` atributo HTML `<form>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-605">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-606">Obtém um valor que indica se o navegador dá suporte a cookies no redirecionamento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-606">Gets a value indicating whether the browser supports cookies on redirection.</span></span></summary>
        <value><span data-ttu-id="bb3af-607"><see langword="true" /> Se o navegador dá suporte a cookies no redirecionamento. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-607"><see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-608">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-608">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-609">Com o backup. Navegador 4.1 ou superior. Navegador 3.2, o <xref:System.Web.HttpResponse.Redirect%2A> método se comporta como se o valor da <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> propriedade da <xref:System.Web.HttpBrowserCapabilities> objeto é `false`, a menos que o <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> propriedade no <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> seção do Web. config foi explicitamente definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="bb3af-609">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="bb3af-610">No ASP.NET 1.1, as opções para essa configuração foram `true` ou `false`, mas com o ASP.NET 2.0, as opções são expandidas, e <xref:System.Web.HttpCookieMode.AutoDetect> agora é a configuração padrão.</span><span class="sxs-lookup"><span data-stu-id="bb3af-610">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="bb3af-611">Se seu aplicativo Web tiver o `cookieless` atributo o `<sessionState>` seção no arquivo Web. config definido como um valor booliano, <xref:System.Web.HttpResponse.Redirect%2A> deve funcionar conforme o esperado para esses navegadores.</span><span class="sxs-lookup"><span data-stu-id="bb3af-611">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-612">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a cookies no redirecionamento.</span><span class="sxs-lookup"><span data-stu-id="bb3af-612">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-613">Obtém um valor que indica se o navegador dá suporte ao atributo <see langword="multiple" /> de elementos HTML <see langword="&lt;select&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-613">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-614"><see langword="true" /> Se o navegador dá suporte a <see langword="multiple" /> atributo HTML <see langword="&lt;select&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-614"><see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-615">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-615">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-616">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a `multiple` atributo HTML `<select>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-616">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-617">Obtém um valor que indica se a ação de limpar um elemento HTML <see langword="&lt;input type=checkbox&gt;" /> marcado é refletida nos dados de postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-617">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span></span></summary>
        <value><span data-ttu-id="bb3af-618"><see langword="true" /> Se a ação de limpar uma HTML marcada <see langword="&lt;input type=checkbox&gt;" /> elemento é refletida nos dados de postback; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-618"><see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-619">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-619">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-620">Se `false`, o valor da `checked` atributo HTML `<input type=checkbox>` elementos for omitida de dados de postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-620">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-621">O exemplo de código a seguir mostra como determinar se a ação de limpar uma HTML marcada `<input type=checkbox>` elemento é refletido nos dados de postback.</span><span class="sxs-lookup"><span data-stu-id="bb3af-621">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-622">Obtém um valor que indica se o navegador dá suporte a recebimento de XML por HTTP.</span><span class="sxs-lookup"><span data-stu-id="bb3af-622">Gets a value indicating whether the browser supports receiving XML over HTTP.</span></span></summary>
        <value><span data-ttu-id="bb3af-623"><see langword="true" /> Se o navegador dá suporte a recebimento de XML por HTTP; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-623"><see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-624">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-625">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a recebimento de XML por HTTP.</span><span class="sxs-lookup"><span data-stu-id="bb3af-625">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="filter2" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="bb3af-626">O primeiro filtro a comparar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-626">The first filter to compare.</span></span></param>
        <param name="filter2"><span data-ttu-id="bb3af-627">O segundo filtro a comparar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-627">The second filter to compare.</span></span></param>
        <summary><span data-ttu-id="bb3af-628">Usada internamente para comparar filtros.</span><span class="sxs-lookup"><span data-stu-id="bb3af-628">Used internally to compare filters.</span></span></summary>
        <returns><span data-ttu-id="bb3af-629">1 se <paramref name="filter1" /> for um pai de <paramref name="filter2" />, -1 se <paramref name="filter2" /> for um pai de <paramref name="filter1" /> ou então 0 se não houver nenhuma relação pai/filho entre <paramref name="filter1" /> e <paramref name="filter2" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-629">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filterName"><span data-ttu-id="bb3af-630">O filtro a avaliar.</span><span class="sxs-lookup"><span data-stu-id="bb3af-630">The filter to evaluate.</span></span></param>
        <summary><span data-ttu-id="bb3af-631">Usada internamente para avaliar um filtro.</span><span class="sxs-lookup"><span data-stu-id="bb3af-631">Used internally to evaluate a filter.</span></span></summary>
        <returns><span data-ttu-id="bb3af-632"><see langword="true" /> se o filtro foi avaliado com êxito; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-632"><see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-633">Obtém um valor que indica se o navegador dá suporte a elementos HTML <see langword="&lt;table&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-633">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="bb3af-634"><see langword="true" /> Se o navegador dá suporte a HTML <see langword="&lt;table&gt;" /> elementos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-634"><see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-635">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-635">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-636">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a HTML `<table>` elementos.</span><span class="sxs-lookup"><span data-stu-id="bb3af-636">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-637">Usada internamente para obter o tipo do objeto que é usado para gravar marcas para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-637">Used internally to get the type of the object that is used to write tags for the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-638">O <see cref="T:System.Type" /> do objeto que é usado para gravar marcas para o navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-638">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="bb3af-639">Há um erro de análise.</span><span class="sxs-lookup"><span data-stu-id="bb3af-639">There is a parse error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-640">Obtém o nome e o número de versão principal (inteiro) do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-640">Gets the name and major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="bb3af-641">O nome e o número de versão principal do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-641">The name and major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-642">O exemplo de código a seguir mostra como determinar se o navegador é o Internet Explorer versão 6.</span><span class="sxs-lookup"><span data-stu-id="bb3af-642">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-643">Usada internamente para obter um valor que indica se é necessário usar uma chave de cache otimizado.</span><span class="sxs-lookup"><span data-stu-id="bb3af-643">Used internally to get a value indicating whether to use an optimized cache key.</span></span></summary>
        <value><span data-ttu-id="bb3af-644"><see langword="true" /> Para usar uma chave de cache otimizado; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-644"><see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-645">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-645">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-646">Obtém um valor que indica se o navegador dá suporte ao VBScript (Visual Basic Scripting Edition).</span><span class="sxs-lookup"><span data-stu-id="bb3af-646">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span></span></summary>
        <value><span data-ttu-id="bb3af-647"><see langword="true" /> Se o navegador dá suporte a VBScript; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-647"><see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-648">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-648">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-649">O exemplo de código a seguir mostra como determinar se o navegador dá suporte a VBScript.</span><span class="sxs-lookup"><span data-stu-id="bb3af-649">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-650">Obtém o número de versão completo (inteiro e decimal) do navegador como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-650">Gets the full version number (integer and decimal) of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="bb3af-651">O número de versão completa do navegador como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-651">The full version number of the browser as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb3af-652">O <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriedade retorna uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb3af-652">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="bb3af-653">Em alguns cenários, o <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> propriedade pode conter caracteres de letra, como no caso de um navegador ou dispositivo cliente que é uma versão beta, como "7.0b".</span><span class="sxs-lookup"><span data-stu-id="bb3af-653">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="bb3af-654">Para obter a versão corretamente como um tipo de dados que pode ser usado em uma comparação numérica, concatenar a <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> e <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb3af-654">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb3af-655">O exemplo de código a seguir mostra como determinar o <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> do navegador.</span><span class="sxs-lookup"><span data-stu-id="bb3af-655">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="bb3af-656">O <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> propriedade e <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> propriedade são concatenadas e o resultado é usado para determinar se a versão do navegador é maior que 5.01.</span><span class="sxs-lookup"><span data-stu-id="bb3af-656">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-657">Obtém a versão do DOM (Modelo de Objeto do Documento) XML W3C (World Wide Web Consortium) à qual o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-657">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="bb3af-658">O número do número de versão do DOM do W3C XML que o navegador dá suporte.</span><span class="sxs-lookup"><span data-stu-id="bb3af-658">The number of the W3C XML DOM version number that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-659">O exemplo de código a seguir mostra como determinar se a versão XML do W3C DOM do navegador é maior que 1.</span><span class="sxs-lookup"><span data-stu-id="bb3af-659">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-660">Obtém um valor que indica se o cliente é um computador baseado em Win16.</span><span class="sxs-lookup"><span data-stu-id="bb3af-660">Gets a value indicating whether the client is a Win16-based computer.</span></span></summary>
        <value><span data-ttu-id="bb3af-661"><see langword="true" /> Se o navegador estiver em execução em um computador baseado em Win16. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-661"><see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-662">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-663">O exemplo de código a seguir mostra como determinar se o navegador está em execução em um computador baseado em Win16.</span><span class="sxs-lookup"><span data-stu-id="bb3af-663">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb3af-664">Obtém um valor que indica se o cliente é um computador baseado em Win32.</span><span class="sxs-lookup"><span data-stu-id="bb3af-664">Gets a value indicating whether the client is a Win32-based computer.</span></span></summary>
        <value><span data-ttu-id="bb3af-665"><see langword="true" /> Se o cliente é um computador baseado em Win32. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-665"><see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bb3af-666">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bb3af-666">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb3af-667">O exemplo de código a seguir mostra como determinar se o cliente é um computador baseado em Win32.</span><span class="sxs-lookup"><span data-stu-id="bb3af-667">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>