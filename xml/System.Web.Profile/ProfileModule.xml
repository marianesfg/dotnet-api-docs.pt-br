<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a38f73a16fa11c5cfa55887425a9ba220546fb4e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39929725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type ProfileModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Gerencia a criação do perfil do usuário e dos eventos de perfil. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o perfil do usuário está habilitado, o ASP.NET usa o <xref:System.Web.Profile.ProfileModule> para criar o perfil de usuário e armazená-lo em de <xref:System.Web.HttpContext.Profile%2A> propriedade da atual <xref:System.Web.HttpContext>.  
  
 O <xref:System.Web.Profile.ProfileModule> expõe os seguintes eventos que você pode manipular para configurar a autenticação em seu aplicativo:  
  
-   O <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> evento, para migrar configurações de perfil de um perfil anônimo a um perfil de autenticado, quando um usuário anônimo faz logon.  
  
-   O <xref:System.Web.Profile.ProfileModule.Personalize> evento, para personalizar como o perfil do usuário é criado.  
  
-   O <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento para controlar como o perfil do usuário é salvo quando o <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> estiver definida como `true`.  
  
 Para obter informações sobre como habilitar o perfil do usuário, consulte [Element (ASP.NET Settings Schema) de perfil](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).  
  
   
  
## Examples  
 O exemplo a seguir mostra um arquivo Web. config que permite a identificação anônima e as propriedades de perfil que dão suporte a usuários anônimos.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 O seguinte exemplo de código mostra o <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> evento incluído no arquivo global asax para um aplicativo ASP.NET. O <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> eventos copia os valores de propriedade de perfil do perfil anônimo para o perfil do usuário atual.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Profile.ProfileModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor não se destina a ser chamado do código do aplicativo.  
  
 Um <xref:System.Web.HttpApplication> é criado quando um aplicativo ASP.NET é iniciado. O <xref:System.Web.HttpApplication> chamadas a <xref:System.Web.Profile.ProfileModule> construtor para criar o <xref:System.Web.Profile.ProfileModule> para o aplicativo. O <xref:System.Web.Profile.ProfileModule> é especificado na configuração de um aplicativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="profileModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos os recursos usados pelo <see cref="T:System.Web.Profile.ProfileModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 Um <xref:System.Web.HttpApplication> é criado quando um aplicativo ASP.NET é iniciado. O <xref:System.Web.HttpApplication> cria e inicializa o <xref:System.Web.Profile.ProfileModule> para o aplicativo e chama o <xref:System.Web.Profile.ProfileModule.Dispose%2A> método quando o objeto é liberado. O <xref:System.Web.Profile.ProfileModule> é especificado na configuração de um aplicativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="profileModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">O aplicativo atual.</param>
        <summary>Chama o código de inicialização quando um objeto <see cref="T:System.Web.Profile.ProfileModule" /> é criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 Um <xref:System.Web.HttpApplication> é criado quando um aplicativo ASP.NET é iniciado. O <xref:System.Web.HttpApplication> chamadas a <xref:System.Web.Profile.ProfileModule.Init%2A> método quando ele cria o <xref:System.Web.Profile.ProfileModule> para o aplicativo. O <xref:System.Web.Profile.ProfileModule> é especificado na configuração de um aplicativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MigrateAnonymous As ProfileMigrateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileMigrateEventHandler ^ MigrateAnonymous;" />
      <MemberSignature Language="F#" Value="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " Usage="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário anônimo de um perfil faz logon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode acessar o <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> eventos do <xref:System.Web.Profile.ProfileModule> classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_MigrateAnonymous` um evento global, conforme mostrado no exemplo deste tópico.  
  
 Você pode usar o <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> evento para copiar a propriedade de perfil valores de um perfil anônimo a um perfil de autenticado, quando um usuário que tenha sido anonimamente usando seu aplicativo fizer logon.  
  
 Quando um aplicativo que tenha o perfil do usuário habilitado é iniciado, o ASP.NET cria uma nova classe do tipo `ProfileCommon`, que herda o <xref:System.Web.Profile.ProfileBase> classe. Acessadores fortemente tipados são adicionados à `ProfileCommon` classe para cada propriedade definida na seção de configuração. Um `GetProfile` método permite que você recupere um `ProfileCommon` objeto com base em um nome de usuário. Você pode usar o `GetProfile` método do perfil atual e autenticado para recuperar os valores de propriedade do perfil anônimo. Os valores de propriedade anônimas, em seguida, podem ser copiados para o perfil atual para o usuário autenticado.  
  
   
  
## Examples  
 O exemplo a seguir mostra um arquivo Web. config que permite a identificação anônima e as propriedades de perfil que dão suporte a usuários anônimos.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 O seguinte exemplo de código mostra o <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> evento incluído no arquivo global asax para um aplicativo ASP.NET. O <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> eventos copia os valores de propriedade de perfil do perfil anônimo para o perfil do usuário atual.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Personalize As ProfileEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileEventHandler ^ Personalize;" />
      <MemberSignature Language="F#" Value="member this.Personalize : System.Web.Profile.ProfileEventHandler " Usage="member this.Personalize : System.Web.Profile.ProfileEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre antes da criação do perfil do usuário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileModule.Personalize> evento é gerado durante o <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> eventos. Você pode acessar o <xref:System.Web.Profile.ProfileModule.Personalize> eventos do <xref:System.Web.Profile.ProfileModule> classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_Personalize` evento global, conforme mostrado no exemplo deste tópico.  
  
 Você pode usar o <xref:System.Web.Profile.ProfileModule.Personalize> eventos para especificar um perfil de usuário personalizada. Se o <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> valor de propriedade especificado para o <xref:System.Web.Profile.ProfileEventHandler> manipulador de eventos para o <xref:System.Web.Profile.ProfileModule.Personalize> evento é definido como um valor que não é `null` quando o <xref:System.Web.Profile.ProfileModule.Personalize> evento termina, o <xref:System.Web.Profile.ProfileModule> usará o valor especificado do <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> a propriedade como o valor da <xref:System.Web.HttpContext.Profile%2A> propriedade da atual <xref:System.Web.HttpContext>.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra o <xref:System.Web.Profile.ProfileModule.Personalize> evento declarado no arquivo global. asax para um aplicativo. O código de evento carrega um perfil de usuário para um usuário com base na associação de função.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProfileAutoSaving As ProfileAutoSaveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileAutoSaveEventHandler ^ ProfileAutoSaving;" />
      <MemberSignature Language="F#" Value="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " Usage="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre no final da execução da página se o salvamento de perfil automático está habilitado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento é gerado no final da execução da página, se o <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType> é de propriedade `true`. Você pode acessar o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> eventos do <xref:System.Web.Profile.ProfileModule> classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_ProfileAutoSaving` um evento global, conforme mostrado no exemplo deste tópico.  
  
 O <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType> verificações de método de <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> valor da propriedade para cada <xref:System.Configuration.SettingsPropertyValue> no perfil do usuário para determinar se as propriedades que são compostos de tipos primitivos, cadeias de caracteres, ou <xref:System.DateTime> objetos foram alterados. O <xref:System.Configuration.SettingsBase.Save%2A> método explicitamente não pode determinar se uma classe personalizada foi alterado. Você pode usar o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento para determinar se um objeto personalizado foi alterado e, em seguida, para continuar com o automático salvar objetos modificados ou para cancelar o salvamento automático, se nenhum objeto foram modificado.  
  
 Para cancelar o perfil automático a operação de salvamento, defina a <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriedade para `false` no <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento; caso contrário, defina o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriedade `true`.  
  
 Pode haver vários assinantes para o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> eventos. O <xref:System.Web.Profile.ProfileModule> será usado o último valor que o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> estiver definida como. Como resultado, é recomendável que você defina explicitamente o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> propriedade no <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> eventos quer você esteja cancelando ou continuando com o automático termos de salvar, pois talvez seja necessário substituir o valor definido por um assinante anterior.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> evento incluído no arquivo global asax para um aplicativo ASP.NET.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>