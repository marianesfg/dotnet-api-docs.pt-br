<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2202b8b8f36cb4fddc60c7a4681fc5367cd9341c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36598457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages user profile data and settings.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O perfil do ASP.NET é usado para armazenar e recuperar configurações de usuário de uma fonte de dados como um banco de dados. O perfil de usuário é acessado usando o <xref:System.Web.HttpContext.Profile%2A> propriedade <xref:System.Web.HttpContext>. Valores de propriedade e informações de perfil são gerenciados usando um provedor de perfil.  
  
 O <xref:System.Web.Profile.ProfileManager> classe é usada para gerenciar configurações de perfil, procure os perfis de usuário e excluir perfis de usuário que não estão mais em uso. O <xref:System.Web.Profile.ProfileManager> classe fornece métodos estáticos e propriedades que podem ser acessadas referenciando o <xref:System.Web.Profile.ProfileManager> classe no código do aplicativo. Para obter um exemplo, consulte a seção de exemplo neste tópico e outros exemplos nos tópicos para membros de <xref:System.Web.Profile.ProfileManager> classe.  
  
 Por padrão, o perfil de usuário está desabilitado para todos os aplicativos ASP.NET. Para habilitar o perfil de usuário, defina o `enabled` atributo do elemento de configuração como true, conforme mostrado no exemplo a seguir.  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 Para obter mais informações sobre o perfil de usuário, consulte [visão geral de propriedades de perfil ASP.NET](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 Um provedor de perfil é usado para armazenar e recuperar as propriedades no perfil do usuário. O .NET Framework inclui uma <xref:System.Web.Profile.SqlProfileProvider> classe que armazena as propriedades de perfil de usuário em um banco de dados do SQL Server. Um <xref:System.Web.Profile.SqlProfileProvider> instância nomeada `AspNetSqlProvider` é especificado na configuração do computador como o provedor de perfil padrão. O `AspNetSqlProvider` instância se conecta ao banco de dados do SQL Server no servidor Web local. Você pode especificar um <xref:System.Web.Profile.SqlProfileProvider> que conecta-se para outro SQL Server como o provedor de perfil padrão usando o elemento de configuração e o `defaultProvider` atributo do elemento de configuração, conforme mostrado no exemplo a seguir.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página ASP.NET que usa o <xref:System.Web.Profile.ProfileManager> classe para gerenciar perfis inativos.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" />
      </Parameters>
      <Docs>
        <param name="property">The property settings to be added.</param>
        <summary>Adds a profile property programmatically.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é funcionalmente equivalente à adição da propriedade para o `profile` seção do arquivo de configuração. Para chamar esse método para adicionar a propriedade de perfil, você deve fazer a chamada em um método marcado com o <xref:System.Web.PreApplicationStartMethodAttribute> atributo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
        <value>O nome do aplicativo para armazenar e recuperar informações de perfil.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager> usa o <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade para associar informações de perfil de aplicativos diferentes. Isso permite que vários aplicativos usar o mesmo banco de dados para armazenar informações do usuário sem exibir conflitos entre os usuários duplicados. Vários aplicativos ASP.NET podem usar o mesmo banco de dados de usuário, especificando o mesmo valor no <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade. O <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade pode ser definida programaticamente, ou ele pode ser definido declarativamente no arquivo de configuração para o aplicativo Web usando o `applicationName` atributo.  
  
 Se um valor não for especificado para o `applicationName` atributo no arquivo de configuração para o aplicativo Web, em seguida, usam os provedores de perfil incluídos com o .NET Framework a <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> valor de propriedade para aplicativos ASP.NET. Para aplicativos não-ASP.NET, o valor padrão é o <xref:System.Diagnostics.ProcessModule.ModuleName%2A> valor de propriedade, sem a extensão de arquivo.  
  
 O <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade expõe o <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType> propriedade do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles podem ser configurados com um nome de aplicativo diferente. Para acessar o nome do aplicativo de um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e o acesso a <xref:System.Configuration.SettingsProvider.ApplicationName%2A> propriedade do provedor diretamente.  
  
> [!CAUTION]
>  Como uma instância do provedor de perfil padrão único é usada para todas as solicitações atendidas por um <xref:System.Web.HttpApplication> do objeto, você pode ter várias solicitações de execução simultaneamente e a tentativa de definir o <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> o valor da propriedade. O <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade não é thread safe para várias gravações e alterando o <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> o valor da propriedade pode resultar em comportamento inesperado para vários usuários de um aplicativo. É recomendável que você evite escrever código que permite aos usuários definir o <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade, a menos que necessário. Um exemplo de um aplicativo em que a configuração de <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade pode ser necessária é um aplicativo administrativo que gerencia os dados de perfil para vários aplicativos. Esse aplicativo deve ser um aplicativo de usuário único e não é um aplicativo Web.  
  
   
  
## Examples  
 O trecho de arquivo de configuração a seguir mostra o elemento na seção do arquivo Web. config para um aplicativo ASP.NET. Ele define o provedor de perfil padrão do aplicativo um <xref:System.Web.Profile.SqlProfileProvider> instância e conjuntos de <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> para `MyApplication`.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile will be automatically saved at the end of the execution of an ASP.NET page.</summary>
        <value>
          <see langword="true" /> Se o perfil de usuário serão salvas automaticamente no final da execução de uma página ASP.NET. Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> propriedade indica se o salvamento automático do perfil de usuário está habilitado para o aplicativo. Se o salvamento automático estiver habilitado, o <xref:System.Web.Profile.ProfileModule> objeto gera o <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> eventos e chamadas de <xref:System.Web.Profile.ProfileBase.Save%2A> método durante o <xref:System.Web.HttpApplication.EndRequest> evento no final da execução de uma página ASP.NET.  
  
 O <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> propriedade é definida usando o `automaticSaveEnabled` atributo do elemento no arquivo Web. config para um aplicativo ASP.NET.  
  
   
  
## Examples  
 O trecho de arquivo de configuração a seguir mostra o elemento na seção do arquivo Web. config para um aplicativo ASP.NET. Especifica o provedor de perfil padrão do aplicativo para um <xref:System.Web.Profile.SqlProfileProvider> instância e conjuntos de `automaticSaveEnabled` atributo `true`.  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Deletes user profile data for which the last activity date and time occurred before the specified date and time.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> método é usado para remover dados de perfil não usados da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de qualquer perfil com um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro é excluído.  
  
 O <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, as informações de perfil na fonte de dados não serão excluídas. Para excluir perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página ASP.NET que gerencia os perfis inativos. Um botão é fornecido para excluir todos os perfis que foram não utilizados para o número de dias especificado e, portanto, são considerados inativas.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the profile to be deleted.</param>
        <summary>Deletes the profile for the specified user name from the data source.</summary>
        <returns>
          <see langword="true" /> if the user profile was found and deleted; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> método exclui todas as informações de perfil e propriedades para o perfil de usuário especificado `username` da fonte de dados especificado <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.  
  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> método do provedor de perfil padrão para executar a operação de exclusão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página ASP.NET que gerencia os perfis inativos. O <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> método é chamado quando um único perfil estiver selecionado para ser excluído. Se um perfil é considerado inativo é baseado na data especificada para o `userInactiveSinceDate` valor do parâmetro passado para o <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes profile properties and information from the data source for a supplied list of profiles.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names for profiles to be deleted.</param>
        <summary>Deletes profile properties and information for the supplied list of user names.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> método exclui todas as informações de perfil e propriedades para os perfis específicos de fonte de dados para o aplicativo especificado pelo <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade. A lista de perfis a serem excluídos é especificada como uma matriz de cadeia de caracteres de nomes de usuário. Se as propriedades de perfil e as informações existem na fonte de dados para um nome de usuário na `usernames` parâmetro, eles são excluídos.  
  
 O valor de retorno pode ser diferente do que o comprimento da matriz especificada de `usernames`. Isso indica que alguns dos perfis na matriz especificada de `usernames` já foram excluídos do armazenamento de dados.  
  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página ASP.NET que gerencia os perfis inativos. Um <xref:System.Web.UI.WebControls.GridView> controle exibe os perfis inativos retornados. Cada linha do <xref:System.Web.UI.WebControls.GridView> controle inclui um botão que exclui o perfil para que a linha da fonte de dados com uma chamada para o <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.  \- or -  One of the items in <paramref name="usernames" /> is an empty string ("") or contains a comma.  \- or -  Two or more items in <paramref name="usernames" /> have the same value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> is <see langword="null" />.  \- or -  One of the items in <paramref name="usernames" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> that contains profile information for profiles to be deleted.</param>
        <summary>Deletes profile properties and information from the data source for the supplied list of profiles.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> método exclui todas as informações de perfil e propriedades para os perfis específicos de fonte de dados para o aplicativo especificado pelo <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> propriedade. A lista de perfis a serem excluídos é especificada usando um <xref:System.Web.Profile.ProfileInfoCollection> que é passado como o `profiles` parâmetro. Um <xref:System.Web.Profile.ProfileInfoCollection> podem ser retornados do <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, e <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> métodos.  
  
 Observe que o valor de retorno pode diferir de <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> valor fornecido <xref:System.Web.Profile.ProfileInfoCollection>. Isso indica que alguns dos perfis do <xref:System.Web.Profile.ProfileInfoCollection> já foram excluídos do armazenamento de dados.  
  
 O <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, eles não são excluídos. Para excluir propriedades de perfil que são gerenciadas por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário procure perfis usando o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> e <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> métodos. O usuário pode excluir os perfis retornados com uma chamada para o <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string ("") or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> is <see langword="null" />.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user profile is enabled for the application.</summary>
        <value>
          <see langword="true" /> Se o perfil de usuário estiver habilitado; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O perfil de usuário está habilitado para um aplicativo usando o `enabled` atributo do elemento de configuração.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o elemento na seção do arquivo Web. config para um aplicativo ASP.NET em que o perfil do usuário foi habilitado.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the last activity date occurred on or before a specified date and time and the user name for the profile matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves profile information for all profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles in which the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é usado para recuperar as informações de perfil para todos os perfis de usuário não utilizados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Esse método só irá recuperar perfis para o qual o nome de usuário de perfil corresponde fornecido `usernameToMatch` o valor do parâmetro. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de qualquer perfil com um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro será retornado.  
  
 Você pode recuperar essas informações nas páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> método que utiliza adicional `pageIndex` e `pageSize` parâmetros.  
  
> [!NOTE]
>  O provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> método o <xref:System.Web.Profile.SqlProfileProvider> classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.  
  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário fornecer uma `usernameToMatch` valor e um <xref:System.Web.Profile.ProfileAuthenticationOption> valor de enumeração e recupera informações para os perfis de correspondência de perfil. O exemplo permite ao usuário especificar se deve retornar os perfis inativos apenas. Se o usuário especifica apenas perfis inativos, o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é chamado; caso contrário, o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método é chamado.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é usado para recuperar as informações de perfil não usados para perfis de usuário para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Esse método só irá recuperar perfis para o qual o nome de usuário corresponde fornecido `usernameToMatch` o valor do parâmetro. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.  
  
 Os resultados retornados por <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo> objetos para retornar o <xref:System.Web.Profile.ProfileInfoCollection> coleção. O `pageIndex` parâmetro identifica qual página de resultados para retornar; 0 identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no `authenticationOption` e `userInactiveSinceDate` parâmetros. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é 1, com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection> retornado será contêm o sexto até os décimo perfis inativos. O `totalRecords` parâmetro será definido como 13.  
  
 Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> método o <xref:System.Web.Profile.SqlProfileProvider> classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.  
  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis inativos que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário fornecer uma `usernameToMatch` valor e um <xref:System.Web.Profile.ProfileAuthenticationOption> valor e recupera informações de perfil para qualquer perfil correspondente. O exemplo permite ao usuário especificar se deve retornar os perfis inativos exclusivamente. Se o usuário especifica apenas perfis inativos, o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é chamado; caso contrário, o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método é chamado.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves profile information for profiles in which the user name matches a specified name.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <summary>Retrieves all profile information for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método retorna uma lista de todas as informações de perfil para o qual o nome de usuário corresponde fornecido `usernameToMatch` valor do parâmetro configurado <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> valor da propriedade. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.  
  
 Você pode recuperar informações de perfil para perfis de usuário em páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método que utiliza adicional `pageIndex` e `pageSize` parâmetros.  
  
 Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> método o <xref:System.Web.Profile.SqlProfileProvider> classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.  
  
 O <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário fornecer uma `usernameToMatch` valor e um <xref:System.Web.Profile.ProfileAuthenticationOption> valor de enumeração e recupera informações para os perfis de correspondência de perfil. O exemplo permite ao usuário especificar se deve retornar os perfis inativos exclusivamente. Se o usuário especifica apenas perfis inativos, o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é chamado; caso contrário, o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método é chamado.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information in pages of data for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método retorna uma lista de informações de perfil para o qual o nome de usuário de perfil corresponde fornecido `usernameToMatch` valor de parâmetro de configurado <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.  
  
 Observe que o provedor de perfil pode oferecer suporte a caracteres curinga no `usernameToMatch` parâmetro. Por exemplo, o <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> método o <xref:System.Web.Profile.SqlProfileProvider> classe oferece suporte a caracteres curinga no `usernameToMatch` parâmetro.  
  
 Os resultados retornados por <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo> objetos para retornar o <xref:System.Web.Profile.ProfileInfoCollection>. O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` que é definido como o número total de perfis de usuário inativo para o aplicativo especificado pelo parâmetro de `applicationName` atributo no arquivo de configuração, com base em fornecido `authenticationOption`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é 1, com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection> retornado será contêm o perfis sexto até os décimo. O `totalRecords` parâmetro será definido como 13.  
  
 O <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário fornecer uma `usernameToMatch` valor e um <xref:System.Web.Profile.ProfileAuthenticationOption> e recupera informações para os perfis de correspondência de perfil. O exemplo permite ao usuário especificar se deve retornar os perfis inativos exclusivamente. Se o usuário especifica apenas perfis inativos, o <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> método é chamado; caso contrário, o <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> método é chamado.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("").  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in which the last activity date occurred on or before a specified date and time.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Retrieves all user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> método é usado para recuperar informações de perfil da fonte de dados para todos os perfis de usuário não utilizados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.  
  
 Você pode recuperar informações de perfil para perfis de usuário inativo em páginas de dados usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> método que utiliza adicional `pageIndex` e `pageSize` parâmetros.  
  
 O <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis não utilizados que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página ASP.NET que gerencia os perfis inativos. Um botão é fornecido para excluir todos os perfis inativos. Se um perfil é considerado inativo é baseado na data especificada para o `userInactiveSinceDate` parâmetro.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves a page of <see cref="T:System.Web.Profile.ProfileInfo" /> objects for user profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> método é usado para recuperar informações de perfil da fonte de dados não utilizados para perfis de usuário para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Dos perfis de pesquisa, nenhum perfil é retornado, que tem um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre antes do especificado `userInactiveSinceDate` o valor do parâmetro.  
  
 Os resultados retornados por <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo> objetos para retornar o <xref:System.Web.Profile.ProfileInfoCollection>. O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no `authenticationOption` e `userInactiveSinceDate` parâmetros. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é uma com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection> retornado será contêm o sexto até os décimo perfis inativos. O `totalRecords` parâmetro será definido como 13.  
  
 O <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma página da Web do ASP.NET que gerencia os perfis inativos. Um botão é fornecido para excluir todos os perfis inativos. Se um perfil é considerado inativo é baseado na data especificada para o `userInactiveSinceDate` parâmetro.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> método é usado para recuperar informações de perfil da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.  
  
 Você pode recuperar as páginas de <xref:System.Web.Profile.ProfileInfo> objetos para perfis de usuário usando a sobrecarga para o <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> método que utiliza adicional `pageIndex` e `pageSize` parâmetros.  
  
 O <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de perfil para todos os perfis para configurado `applicationName`.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves pages of user profile data.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> método é usado para recuperar informações de perfil da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.  
  
 Os resultados retornados por <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Profile.ProfileInfo> objetos para retornar o <xref:System.Web.Profile.ProfileInfoCollection>. O `pageIndex` parâmetro identifica qual página de resultados para retornar; zero identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de perfis de usuário inativo configurado `applicationName`, com base no fornecido `authenticationOption`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor é uma com um `pageSize` de 5, o <xref:System.Web.Profile.ProfileInfoCollection> retornado será contêm o perfis sexto até os décimo. O `totalRecords` parâmetro será definido como 13.  
  
 O <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> chamadas de método de <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> método do provedor de perfil padrão. O provedor de perfil padrão é especificado usando o `defaultProvider` atributo do elemento de configuração. Se o perfil de usuário contém propriedades que são gerenciadas por um provedor de perfil que não seja o provedor padrão, a fonte de dados para outro provedor de perfil não é pesquisada. Para localizar os perfis que são gerenciados por um provedor de perfil que não seja o provedor padrão, obtenha uma referência para o provedor de perfil usando o <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade e chame o <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> método do provedor diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de perfil para todos os perfis para configurado `applicationName` em páginas de dados.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> object that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Gets the number of profiles in which the last activity date occurred on or before the specified date.</summary>
        <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> método é usado para recuperar a contagem de todos os perfis de usuário não utilizados da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas. Perfis pesquisados, de todos os perfis são contados que têm um <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> que ocorre em ou antes especificado `userInactiveSinceDate` o valor do parâmetro.  
  
   
  
## Examples  
 O exemplo de código a seguir permite que um usuário exibir e excluir informações de perfis de ativos e inativos com base em critérios de pesquisa. Uma contagem de perfis inativos é exibida usando os resultados do <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> enumeration values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <summary>Gets the number of profiles in the data source.</summary>
        <returns>The number of profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A> método é usado para recuperar a contagem de todos os perfis de usuário da fonte de dados para o aplicativo especificado pelo `applicationName` atributo no arquivo de configuração. Use o `authenticationOption` para especificar se deseja somente perfis anônimos, apenas autenticados perfis, ou todos os perfis a serem pesquisadas.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de perfil para todos os perfis para configurado `applicationName` e também retorna o número de perfis.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the default profile provider for the application.</summary>
        <value>O provedor de perfil padrão para o aplicativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.Provider%2A> propriedade permite que você referenciar o provedor de perfil padrão para um aplicativo diretamente. Isso é normalmente usado para acessar membros personalizados do provedor de perfil que não são parte do <xref:System.Web.Profile.ProfileProvider> classe base abstrata.  
  
   
  
## Examples  
 O exemplo de código a seguir lista as propriedades do provedor de perfil padrão.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Provider" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of the profile providers for the ASP.NET application.</summary>
        <value>Um <see cref="T:System.Web.Profile.ProfileProviderCollection" /> dos provedores de perfil configurados para o aplicativo ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Profile.ProfileManager.Providers%2A> propriedade faz referência a todos os provedores de perfil habilitados para um aplicativo, incluindo provedores adicionado na configuração do computador e provedores em todos os arquivos Web. config. Você pode controlar qual perfil provedores estão disponíveis para um aplicativo usando o elemento da seção no arquivo de configuração. Por exemplo, o arquivo Web. config a seguir remove os provedores de perfil especificados nos arquivos de configuração pai e adiciona um <xref:System.Web.Profile.SqlProfileProvider> instância como o provedor de perfil para o aplicativo.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Ao especificar a seção, você deve especificar um provedor padrão definindo o `defaultProvider` atributo. Se você não especificar uma seção no arquivo Web. config, os valores de configuração do computador são usados e o <xref:System.Web.Profile.SqlProfileProvider> instância nomeada AspNetSqlProvider for estabelecida como o provedor padrão.  
  
 Você pode obter uma referência para um provedor de digitada o <xref:System.Web.Profile.ProfileManager.Providers%2A> coleção por indexação o provedor de perfil por nome e convertê-la como o tipo desejado.  
  
   
  
## Examples  
 O exemplo de código a seguir lista os provedores habilitados para um aplicativo e seus respectivos tipos.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to get the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> property value without at least <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</exception>
      </Docs>
    </Member>
  </Members>
</Type>