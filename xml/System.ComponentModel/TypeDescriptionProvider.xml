<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78810a0d3161e71e0b4f17da0881ab026be14b8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="39ca5-101">Fornece metadados suplementares ao <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="39ca5-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-102">O <xref:System.ComponentModel.TypeDescriptionProvider> classe estende dinamicamente as informações do tipo associadas com um tipo ou objeto adicionando, modificando ou ocultando características como atributos, propriedades e eventos.</span><span class="sxs-lookup"><span data-stu-id="39ca5-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="39ca5-103">Pode haver várias classes de provedor de descrição de tipo que oferecem metadados para um único <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="39ca5-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="39ca5-104">Há duas maneiras para associar um <xref:System.ComponentModel.TypeDescriptionProvider> com um <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="39ca5-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="39ca5-105">Em tempo de design, quando a classe de destino pode ser atribuída apropriado <xref:System.ComponentModel.TypeDescriptionProviderAttribute> marca.</span><span class="sxs-lookup"><span data-stu-id="39ca5-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="39ca5-106">Em tempo de execução quando uma do <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> métodos do <xref:System.ComponentModel.TypeDescriptor> classe pode ser chamada.</span><span class="sxs-lookup"><span data-stu-id="39ca5-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="39ca5-107">Esses métodos sobrecarregados exigem o objeto de destino ou seu tipo de classe.</span><span class="sxs-lookup"><span data-stu-id="39ca5-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="39ca5-108">O <xref:System.ComponentModel.TypeDescriptionProvider> classe depende de um objeto pai do mesmo tipo, fornecido durante a construção.</span><span class="sxs-lookup"><span data-stu-id="39ca5-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="39ca5-109">Isso permite que classes que derivam de <xref:System.ComponentModel.CustomTypeDescriptor> para substituir os métodos seletivamente.</span><span class="sxs-lookup"><span data-stu-id="39ca5-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="39ca5-110">Instâncias de <xref:System.ComponentModel.TypeDescriptionProvider> só são criados por demanda, minimizando o impacto das informações de tipo personalizado no desempenho.</span><span class="sxs-lookup"><span data-stu-id="39ca5-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="39ca5-111">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="39ca5-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="39ca5-112">O tipo derivado pode ser marcado como <see langword="internal" /> ou <see langword="private" />, mas uma instância do seu tipo pode ser criada com o <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="39ca5-112">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
        </span>
        <span data-ttu-id="39ca5-113">Não grave o código não seguro, supondo que o chamador é confiável.</span>
        <span class="sxs-lookup">
          <span data-stu-id="39ca5-113">Do not write insecure code by assuming the caller is trusted.</span>
        </span>
        <span data-ttu-id="39ca5-114">Em vez disso, suponha que os chamadores podem criar instâncias de seu tipo em confiança parcial.</span>
        <span class="sxs-lookup">
          <span data-stu-id="39ca5-114">Assume instead that callers might create instances of your type in partial trust.</span>
        </span>
      </para>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="39ca5-115">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39ca5-116">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-116">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-117">Este construtor é equivalente a chamar outros <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> construtor com um valor de parâmetro é `null`.</span><span class="sxs-lookup"><span data-stu-id="39ca5-117">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="39ca5-118">O provedor de descrição de tipo pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-118">The parent type description provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-119">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> usando um provedor de descrição de tipo pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-119">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-120">Se o `parent` parâmetro é `null`, todos os <xref:System.ComponentModel.TypeDescriptionProvider> métodos retornarão valores padrão.</span><span class="sxs-lookup"><span data-stu-id="39ca5-120">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="39ca5-121">Caso contrário, todos os <xref:System.ComponentModel.TypeDescriptionProvider> métodos delegará para os métodos de `parent`.</span><span class="sxs-lookup"><span data-stu-id="39ca5-121">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="39ca5-122">A tabela a seguir mostra os valores de retorno padrão para <xref:System.ComponentModel.TypeDescriptionProvider> métodos.</span><span class="sxs-lookup"><span data-stu-id="39ca5-122">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="39ca5-123">Método</span><span class="sxs-lookup"><span data-stu-id="39ca5-123">Method</span></span>|<span data-ttu-id="39ca5-124">Valor de retorno padrão</span><span class="sxs-lookup"><span data-stu-id="39ca5-124">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="39ca5-125">Um objeto recém-criado por meio de uma chamada para o <xref:System.Activator.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-125">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="39ca5-126">Uma instância padrão de um <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="39ca5-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="39ca5-127">Uma instância padrão de um <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="39ca5-127">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="39ca5-128">O `objectType` primeiro parâmetro.</span><span class="sxs-lookup"><span data-stu-id="39ca5-128">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="39ca5-129">Um provedor de serviços opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-129">An optional service provider.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="39ca5-130">O tipo de objeto a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-130">The type of object to create.</span>
          </span>
          <span data-ttu-id="39ca5-131">Este parâmetro nunca é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-131">This parameter is never <see langword="null" />.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="39ca5-132">Uma matriz opcional de tipos que representam os tipos de parâmetro a serem passados para o construtor do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-132">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="39ca5-133">Esta matriz pode ser <see langword="null" /> ou de comprimento zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-133">This array can be <see langword="null" /> or of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="39ca5-134">Uma matriz opcional de valores de parâmetro a serem passados para o construtor do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-134">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-135">Cria um objeto que pode ser substituído em outro tipo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-135">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-136">O <see cref="T:System.Object" /> substituto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-136">The substitute <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-137">O <xref:System.IServiceProvider> especificado pelo `provider` parâmetro é passado <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> método o <xref:System.ComponentModel.TypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="39ca5-137">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="39ca5-138">Se `provider` não é `null`, o provedor de serviço pode ser usado pelo provedor de descrição de tipo para obter contexto adicional sobre a chamada de criação.</span><span class="sxs-lookup"><span data-stu-id="39ca5-138">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="39ca5-139">O <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método `virtual` e, por padrão, retorna o resultado da <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método se `provider` é `null`.</span><span class="sxs-lookup"><span data-stu-id="39ca5-139">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="39ca5-140">Se `provider` é `null`, este método invocará o <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método do provedor de pai.</span><span class="sxs-lookup"><span data-stu-id="39ca5-140">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39ca5-141">Se a classe derivada não está interessada no fornecimento de uma instância de substituição, ele apenas deve chamar a implementação base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39ca5-141">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="39ca5-142">O objeto para o qual o cache deve ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-142">The object for which to get the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-143">Obtém um cache por objeto, acessado como um <see cref="T:System.Collections.IDictionary" /> de pares chave-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-143">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-144">Um <see cref="T:System.Collections.IDictionary" /> se o objeto fornecido for compatível com armazenamento em cache, caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-144">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-145">Um <xref:System.ComponentModel.TypeDescriptor> pode precisar executar operações complexas em coleções de metadados.</span><span class="sxs-lookup"><span data-stu-id="39ca5-145">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="39ca5-146">Como tipos não são descarregados durante a vida útil de um domínio, o <xref:System.ComponentModel.TypeDescriptor> classe automaticamente armazenará em cache os resultados dessas operações com base no tipo.</span><span class="sxs-lookup"><span data-stu-id="39ca5-146">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="39ca5-147">No entanto, algumas operações usam instâncias de objeto dinâmico.</span><span class="sxs-lookup"><span data-stu-id="39ca5-147">However, some operations use live object instances.</span></span> <span data-ttu-id="39ca5-148">Essas operações não podem ser armazenados em cache dentro de <xref:System.ComponentModel.TypeDescriptor> classe porque eles em cache o objeto impediria de ser coletado como lixo.</span><span class="sxs-lookup"><span data-stu-id="39ca5-148">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="39ca5-149">Em vez disso, o <xref:System.ComponentModel.TypeDescriptor> classe permite que um cache por objeto, acessada como uma <xref:System.Collections.IDictionary> de pares chave/valor, por existir em um objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-149">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="39ca5-150">O <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método retorna uma instância desse cache.</span><span class="sxs-lookup"><span data-stu-id="39ca5-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="39ca5-151">O <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método retornará `null` se não houver nenhum cache com suporte para um objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-151">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="39ca5-152">O padrão <xref:System.ComponentModel.TypeDescriptionProvider> usado pelo <xref:System.ComponentModel.TypeDescriptor> examina o objeto para ver se ele é um componente encontra que implementa o <xref:System.ComponentModel.Design.IDictionaryService> interface.</span><span class="sxs-lookup"><span data-stu-id="39ca5-152">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="39ca5-153">Se o objeto, ele usa o serviço de dicionário para armazenar o cache do objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-153">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="39ca5-154">Caso contrário, o objeto retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="39ca5-154">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="39ca5-155">Outros provedores de descrição de tipo podem fornecer sua própria implementação aqui.</span><span class="sxs-lookup"><span data-stu-id="39ca5-155">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="39ca5-156">Por exemplo, objetos de dependência apenas podem anexar a uma propriedade do tipo <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="39ca5-156">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="39ca5-157">O objeto para o qual o descritor de tipo estendido deve ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-157">The object for which to get the extended type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-158">Obtém um descritor de tipo personalizado estendido para o objeto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-158">Gets an extended custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-159">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados estendidos para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-159">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-160">Um descritor de tipo estendido é um descritor de tipo personalizado que oferece propriedades que outros objetos adicionados a este objeto, mas que não são realmente definidas no objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-160">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="39ca5-161">Por exemplo, o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componente, os objetos que implementam o <xref:System.ComponentModel.IExtenderProvider> interface pode associar propriedades a outros objetos que residem no mesmo contêiner lógico.</span><span class="sxs-lookup"><span data-stu-id="39ca5-161">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="39ca5-162">Sobrecarregados <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> métodos não retornam um descritor de tipo que fornece essas propriedades estendidas extra.</span><span class="sxs-lookup"><span data-stu-id="39ca5-162">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="39ca5-163">O <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método retorna o conjunto dessas propriedades estendidas.</span><span class="sxs-lookup"><span data-stu-id="39ca5-163">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="39ca5-164">O <xref:System.ComponentModel.TypeDescriptor> mesclará automaticamente os resultados dessas coleções de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="39ca5-164">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="39ca5-165">Enquanto o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componente dá suporte apenas propriedades estendidas, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> pode ser usado para os atributos estendidos, bem como eventos, se o provedor de descrição de tipo oferece suporte a ele.</span><span class="sxs-lookup"><span data-stu-id="39ca5-165">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="39ca5-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> é `virtual` e, por padrão, retorna um descritor de tipo personalizado que retorna resultados vazios se nenhum provedor pai foi passado.</span><span class="sxs-lookup"><span data-stu-id="39ca5-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="39ca5-167">Se um provedor pai foi passado, este método invocará o provedor de pai <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-167">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="39ca5-168">O objeto para o qual os provedores de controle do extensor devem ser obtidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-168">The object to get extender providers for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-169">Obtém os provedores de controle do extensor para o objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-169">Gets the extender providers for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-170">Uma matriz de provedores de controle do extensor para <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-170">An array of extender providers for <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-171">
            <paramref name="instance" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-171">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="39ca5-172">O componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-172">The specified component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-173">Obtém o nome do componente especificado ou <see langword="null" /> quando o componente não tem nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-173">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-174">O nome do componente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-174">The name of the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-175">
            <paramref name="component" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-175">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="39ca5-176">Executa a reflexão normal em relação a um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-176">Performs normal reflection against an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="39ca5-177">Uma instância do tipo (não deve ser <see langword="null" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-177">An instance of the type (should not be <see langword="null" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-178">Executa a reflexão normal no objeto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-178">Performs normal reflection against the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-179">O tipo de reflexão para este <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-179">The type of reflection for this <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-180">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-180">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="39ca5-181">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal em relação ao objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-181">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="39ca5-182">Use essa sobrecarga de método se você chamou um membro de descritor de tipo que usa uma instância em vez de um tipo.</span><span class="sxs-lookup"><span data-stu-id="39ca5-182">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-183">
            <paramref name="instance" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-183">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="39ca5-184">O tipo de objeto para o qual o <see cref="T:System.Reflection.IReflect" /> deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-184">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-185">Executa a reflexão normal em relação a um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-185">Performs normal reflection against a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-186">O tipo de reflexão para este <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-186">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-187">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-187">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="39ca5-188">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal em relação ao objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-188">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="39ca5-189">Use essa sobrecarga de método se você chamou um membro de descritor de tipo que usa um tipo em vez de uma instância.</span><span class="sxs-lookup"><span data-stu-id="39ca5-189">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-190">
            <paramref name="objectType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-190">
              <paramref name="objectType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="39ca5-191">O tipo de objeto para o qual o <see cref="T:System.Reflection.IReflect" /> deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-191">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="39ca5-192">Uma instância do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-192">An instance of the type.</span>
          </span>
          <span data-ttu-id="39ca5-193">Pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-193">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-194">Executa a reflexão normal no objeto fornecido com o tipo fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-194">Performs normal reflection against the given object with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-195">O tipo de reflexão para este <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-195">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-196">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-196">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="39ca5-197">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal em relação ao objeto.</span><span class="sxs-lookup"><span data-stu-id="39ca5-197">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39ca5-198">Esse método é como protótipo <see langword="virtual" />e por padrão retorna <paramref name="objectType" /> se nenhum provedor pai foi passado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39ca5-198">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span>
            </span>
            <span data-ttu-id="39ca5-199">Se um provedor pai foi passado, este método invocará o provedor de pai <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39ca5-199">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="39ca5-200">O tipo a ser convertido em seu equivalente de tempo de execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-200">The type to convert to its runtime equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-201">Converte um tipo de reflexão em um tipo de tempo de execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-201">Converts a reflection type into a runtime type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-202">Um <see cref="T:System.Type" /> que representa o equivalente de tempo de execução de <paramref name="reflectionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-202">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-203">O <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método inverte o <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método para converter um tipo de reflexão volta para um tipo de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="39ca5-203">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="39ca5-204">Usando o <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método é preferível usar o <xref:System.Type.UnderlyingSystemType%2A> propriedade, que foi usada em versões anteriores para retornar o tipo de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="39ca5-204">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-205">
            <paramref name="reflectionType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-205">
              <paramref name="reflectionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="39ca5-206">Obtém um descritor de tipo personalizado para o tipo ou o objeto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-206">Gets a custom type descriptor for the given type or object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="39ca5-207">Uma instância do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-207">An instance of the type.</span>
          </span>
          <span data-ttu-id="39ca5-208">Poderá ser <see langword="null" /> se nenhuma instância for passada para o <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-208">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-209">Obtém um descritor de tipo personalizado para o objeto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-209">Gets a custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-210">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-210">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-211">
            <paramref name="instance" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-211">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="39ca5-212">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-212">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-213">Obtém um descritor de tipo personalizado para o tipo fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-213">Gets a custom type descriptor for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-214">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-214">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="39ca5-215">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-215">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="39ca5-216">Uma instância do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-216">An instance of the type.</span>
          </span>
          <span data-ttu-id="39ca5-217">Poderá ser <see langword="null" /> se nenhuma instância for passada para o <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-217">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-218">Obtém um descritor de tipo personalizado para o tipo e o objeto fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-218">Gets a custom type descriptor for the given type and object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-219">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-219">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ca5-220">Esse método é como protótipo `virtual` e, por padrão, retorna um descritor vazio se nenhum provedor pai foi passado.</span><span class="sxs-lookup"><span data-stu-id="39ca5-220">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="39ca5-221">Se um provedor pai foi passado, este método invocará o provedor de pai <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39ca5-221">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="39ca5-222">O <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> método deve retornar um descritor de tipo personalizado para o objeto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39ca5-222">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span>
            </span>
            <span data-ttu-id="39ca5-223">Se o método não fornece informações de tipo para o objeto, ele deverá retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="39ca5-223">If the method does not provide type information for the object, it should return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="39ca5-224">O tipo cuja compatibilidade será testada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-224">The type to test for compatibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39ca5-225">Obtém um valor que indica se o tipo especificado é compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-225">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39ca5-226">
            <see langword="true" /> se <paramref name="type" /> for compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-226">
              <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="39ca5-227">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39ca5-227">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>