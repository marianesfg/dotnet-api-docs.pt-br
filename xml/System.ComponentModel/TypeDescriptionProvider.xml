<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89efbe5222e2a61f9fcf3b7ab14c88aacd2502ee" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39817363" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="892cd-101">Fornece metadados suplementares ao <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-102">O <xref:System.ComponentModel.TypeDescriptionProvider> classe dinamicamente estende as informações de tipo associadas com um tipo ou um objeto adicionando, modificando ou ocultando características como atributos, propriedades e eventos.</span><span class="sxs-lookup"><span data-stu-id="892cd-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="892cd-103">Pode haver várias classes de provedor de descrição de tipo que oferecem os metadados para um único <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="892cd-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="892cd-104">Há duas maneiras para associar uma <xref:System.ComponentModel.TypeDescriptionProvider> com um <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="892cd-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="892cd-105">Em tempo de design, quando a classe de destino pode ser atribuída apropriado <xref:System.ComponentModel.TypeDescriptionProviderAttribute> marca.</span><span class="sxs-lookup"><span data-stu-id="892cd-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="892cd-106">Em tempo de execução quando um da <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> métodos do <xref:System.ComponentModel.TypeDescriptor> classe pode ser chamado.</span><span class="sxs-lookup"><span data-stu-id="892cd-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="892cd-107">Esses métodos sobrecarregados exigem o objeto de destino ou seu tipo de classe.</span><span class="sxs-lookup"><span data-stu-id="892cd-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="892cd-108">O <xref:System.ComponentModel.TypeDescriptionProvider> classe se baseia em um objeto pai do mesmo tipo, fornecido durante a construção.</span><span class="sxs-lookup"><span data-stu-id="892cd-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="892cd-109">Isso permite que classes que derivam de <xref:System.ComponentModel.CustomTypeDescriptor> para substituir seletivamente os métodos.</span><span class="sxs-lookup"><span data-stu-id="892cd-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="892cd-110">Instâncias de <xref:System.ComponentModel.TypeDescriptionProvider> são criados apenas por demanda, minimizando o impacto das informações de tipo personalizado no desempenho.</span><span class="sxs-lookup"><span data-stu-id="892cd-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="892cd-111">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="892cd-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="892cd-112"><para>Seu tipo derivado pode ser marcado como <see langword="internal" /> ou <see langword="private" />, mas uma instância do seu tipo pode ser criada com o <see cref="T:System.ComponentModel.TypeDescriptor" /> classe. Não escreva código inseguro, supondo que o chamador é confiável. Em vez disso, suponha que os chamadores podem criar instâncias de seu tipo em confiança parcial.</para></span><span class="sxs-lookup"><span data-stu-id="892cd-112"><para>Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.</para></span></span></block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="892cd-113">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-113">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="892cd-114">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-114">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-115">Este construtor é equivalente a chamar o outro <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> construtor com um valor de parâmetro que é `null`.</span><span class="sxs-lookup"><span data-stu-id="892cd-115">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="892cd-116">O provedor de descrição de tipo pai.</span><span class="sxs-lookup"><span data-stu-id="892cd-116">The parent type description provider.</span></span></param>
        <summary><span data-ttu-id="892cd-117">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> usando um provedor de descrição de tipo pai.</span><span class="sxs-lookup"><span data-stu-id="892cd-117">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-118">Se o `parent` parâmetro é `null`, todos os <xref:System.ComponentModel.TypeDescriptionProvider> métodos retornarão valores padrão.</span><span class="sxs-lookup"><span data-stu-id="892cd-118">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="892cd-119">Caso contrário, todos os <xref:System.ComponentModel.TypeDescriptionProvider> métodos delegará aos métodos de `parent`.</span><span class="sxs-lookup"><span data-stu-id="892cd-119">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="892cd-120">A tabela a seguir mostra os valores de retorno padrão para <xref:System.ComponentModel.TypeDescriptionProvider> métodos.</span><span class="sxs-lookup"><span data-stu-id="892cd-120">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="892cd-121">Método</span><span class="sxs-lookup"><span data-stu-id="892cd-121">Method</span></span>|<span data-ttu-id="892cd-122">Valor de retorno padrão</span><span class="sxs-lookup"><span data-stu-id="892cd-122">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="892cd-123">Um objeto criado por meio de uma chamada para o <xref:System.Activator.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-123">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="892cd-124">Uma instância padrão de um <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="892cd-124">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="892cd-125">Uma instância padrão de um <xref:System.ComponentModel.CustomTypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="892cd-125">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="892cd-126">O `objectType` primeiro parâmetro.</span><span class="sxs-lookup"><span data-stu-id="892cd-126">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="892cd-127">Um provedor de serviços opcional.</span><span class="sxs-lookup"><span data-stu-id="892cd-127">An optional service provider.</span></span></param>
        <param name="objectType"><span data-ttu-id="892cd-128">O tipo de objeto a ser criado.</span><span class="sxs-lookup"><span data-stu-id="892cd-128">The type of object to create.</span></span> <span data-ttu-id="892cd-129">Este parâmetro nunca é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-129">This parameter is never <see langword="null" />.</span></span></param>
        <param name="argTypes"><span data-ttu-id="892cd-130">Uma matriz opcional de tipos que representam os tipos de parâmetro a serem passados para o construtor do objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-130">An optional array of types that represent the parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="892cd-131">Esta matriz pode ser <see langword="null" /> ou de comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="892cd-131">This array can be <see langword="null" /> or of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="892cd-132">Uma matriz opcional de valores de parâmetro a serem passados para o construtor do objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-132">An optional array of parameter values to pass to the object's constructor.</span></span></param>
        <summary><span data-ttu-id="892cd-133">Cria um objeto que pode ser substituído em outro tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="892cd-133">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="892cd-134">O <see cref="T:System.Object" /> substituto.</span><span class="sxs-lookup"><span data-stu-id="892cd-134">The substitute <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-135">O <xref:System.IServiceProvider> especificado pelo `provider` parâmetro é passado pelo <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> método da <xref:System.ComponentModel.TypeDescriptor> classe.</span><span class="sxs-lookup"><span data-stu-id="892cd-135">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="892cd-136">Se `provider` não é `null`, o provedor de serviços pode ser usado pelo provedor de descrição de tipo para obter contexto adicional sobre a chamada de criação.</span><span class="sxs-lookup"><span data-stu-id="892cd-136">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="892cd-137">O <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método for `virtual` e, por padrão, retorna o resultado da <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método se `provider` é `null`.</span><span class="sxs-lookup"><span data-stu-id="892cd-137">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="892cd-138">Se `provider` está `null`, esse método invocará o <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método do provedor de pai.</span><span class="sxs-lookup"><span data-stu-id="892cd-138">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="892cd-139"><para>Se a classe derivada não está interessada no fornecimento de uma instância de substituto, ele deve apenas chamar a implementação base.</para></span><span class="sxs-lookup"><span data-stu-id="892cd-139"><para>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="892cd-140">O objeto para o qual o cache deve ser obtido.</span><span class="sxs-lookup"><span data-stu-id="892cd-140">The object for which to get the cache.</span></span></param>
        <summary><span data-ttu-id="892cd-141">Obtém um cache por objeto, acessado como um <see cref="T:System.Collections.IDictionary" /> de pares chave-valor.</span><span class="sxs-lookup"><span data-stu-id="892cd-141">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span></span></summary>
        <returns><span data-ttu-id="892cd-142">Um <see cref="T:System.Collections.IDictionary" /> se o objeto fornecido for compatível com armazenamento em cache, caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-142">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-143">Um <xref:System.ComponentModel.TypeDescriptor> talvez seja necessário executar operações complexas em coleções de metadados.</span><span class="sxs-lookup"><span data-stu-id="892cd-143">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="892cd-144">Porque os tipos não são descarregados durante a vida útil de um domínio, o <xref:System.ComponentModel.TypeDescriptor> classe armazenará em cache os resultados dessas operações com base no tipo automaticamente.</span><span class="sxs-lookup"><span data-stu-id="892cd-144">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="892cd-145">No entanto, algumas operações usam instâncias de objeto em tempo real.</span><span class="sxs-lookup"><span data-stu-id="892cd-145">However, some operations use live object instances.</span></span> <span data-ttu-id="892cd-146">Essas operações não podem ser armazenados em cache dentro de <xref:System.ComponentModel.TypeDescriptor> classe porque eles em cache seriam impedem que o objeto que está sendo coletado como lixo.</span><span class="sxs-lookup"><span data-stu-id="892cd-146">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="892cd-147">Em vez disso, o <xref:System.ComponentModel.TypeDescriptor> classe permite que um cache por objeto, acessado como um <xref:System.Collections.IDictionary> de pares chave/valor, existir em um objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-147">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="892cd-148">O <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método retorna uma instância desse cache.</span><span class="sxs-lookup"><span data-stu-id="892cd-148">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="892cd-149">O <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método retornará `null` se não houver nenhum cache com suporte para um objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-149">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="892cd-150">O padrão <xref:System.ComponentModel.TypeDescriptionProvider> usado pelo <xref:System.ComponentModel.TypeDescriptor> examina o objeto para ver se ele é um componente encontra que implementa o <xref:System.ComponentModel.Design.IDictionaryService> interface.</span><span class="sxs-lookup"><span data-stu-id="892cd-150">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="892cd-151">Se o objeto for, ele usa o serviço de dicionário para armazenar o cache do objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-151">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="892cd-152">Caso contrário, o objeto que ele retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="892cd-152">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="892cd-153">Outros provedores de descrição de tipo podem fornecer sua própria implementação aqui.</span><span class="sxs-lookup"><span data-stu-id="892cd-153">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="892cd-154">Por exemplo, objetos de dependência apenas podem anexar uma propriedade do tipo <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="892cd-154">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="892cd-155">O objeto para o qual o descritor de tipo estendido deve ser obtido.</span><span class="sxs-lookup"><span data-stu-id="892cd-155">The object for which to get the extended type descriptor.</span></span></param>
        <summary><span data-ttu-id="892cd-156">Obtém um descritor de tipo personalizado estendido para o objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-156">Gets an extended custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="892cd-157">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados estendidos para o objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-157">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-158">Um descritor de tipo estendido é um descritor de tipo personalizado que oferece propriedades que outros objetos adicionados a esse objeto, mas que não estão realmente definidos no objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-158">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="892cd-159">Por exemplo, nos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componente, os objetos que implementam o <xref:System.ComponentModel.IExtenderProvider> interface pode anexar propriedades a outros objetos que residem no mesmo contêiner lógico.</span><span class="sxs-lookup"><span data-stu-id="892cd-159">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="892cd-160">Sobrecarregado <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> métodos não retornam um descritor de tipo que fornece essas propriedades estendidas extra.</span><span class="sxs-lookup"><span data-stu-id="892cd-160">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="892cd-161">O <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método retorna o conjunto de essas propriedades estendidas.</span><span class="sxs-lookup"><span data-stu-id="892cd-161">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="892cd-162">O <xref:System.ComponentModel.TypeDescriptor> mesclará automaticamente os resultados dessas coleções de propriedade de dois.</span><span class="sxs-lookup"><span data-stu-id="892cd-162">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="892cd-163">Enquanto o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componente oferece suporte somente para propriedades estendidas, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> pode ser usado para os atributos estendidos, bem como eventos, se o provedor de descrição de tipo dá suporte a ele.</span><span class="sxs-lookup"><span data-stu-id="892cd-163">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="892cd-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> é `virtual` e, por padrão, retorna um descritor de tipo personalizado que retorna resultados vazios se nenhum provedor pai foi passado.</span><span class="sxs-lookup"><span data-stu-id="892cd-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="892cd-165">Se um provedor pai foi passado, esse método invocará o provedor de pai <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-165">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="892cd-166">O objeto para o qual os provedores de controle do extensor devem ser obtidos.</span><span class="sxs-lookup"><span data-stu-id="892cd-166">The object to get extender providers for.</span></span></param>
        <summary><span data-ttu-id="892cd-167">Obtém os provedores de controle do extensor para o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="892cd-167">Gets the extender providers for the specified object.</span></span></summary>
        <returns><span data-ttu-id="892cd-168">Uma matriz de provedores de controle do extensor para <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-168">An array of extender providers for <paramref name="instance" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-169"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-169"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="892cd-170">O componente especificado.</span><span class="sxs-lookup"><span data-stu-id="892cd-170">The specified component.</span></span></param>
        <summary><span data-ttu-id="892cd-171">Obtém o nome do componente especificado ou <see langword="null" /> quando o componente não tem nome.</span><span class="sxs-lookup"><span data-stu-id="892cd-171">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span></span></summary>
        <returns><span data-ttu-id="892cd-172">O nome do componente especificado.</span><span class="sxs-lookup"><span data-stu-id="892cd-172">The name of the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-173"><paramref name="component" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-173"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="892cd-174">Executa a reflexão normal em relação a um objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-174">Performs normal reflection against an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="892cd-175">Uma instância do tipo (não deve ser <see langword="null" />).</span><span class="sxs-lookup"><span data-stu-id="892cd-175">An instance of the type (should not be <see langword="null" />).</span></span></param>
        <summary><span data-ttu-id="892cd-176">Executa a reflexão normal no objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-176">Performs normal reflection against the given object.</span></span></summary>
        <returns><span data-ttu-id="892cd-177">O tipo de reflexão para este <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-177">The type of reflection for this <paramref name="instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-178">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-178">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="892cd-179">Se nenhum descritor de tipo personalizado pode ser localizado para um objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal no objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-179">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="892cd-180">Use essa sobrecarga de método se você tiver chamado um membro do descritor de tipo que usa uma instância em vez de um tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-180">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-181"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-181"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="892cd-182">O tipo de objeto para o qual o <see cref="T:System.Reflection.IReflect" /> deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="892cd-182">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <summary><span data-ttu-id="892cd-183">Executa a reflexão normal em relação a um tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-183">Performs normal reflection against a type.</span></span></summary>
        <returns><span data-ttu-id="892cd-184">O tipo de reflexão para este <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-184">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-185">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-185">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="892cd-186">Se nenhum descritor de tipo personalizado pode ser localizado para um objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal no objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-186">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="892cd-187">Use essa sobrecarga de método se você tiver chamado um membro do descritor de tipo que usa um tipo em vez de uma instância.</span><span class="sxs-lookup"><span data-stu-id="892cd-187">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-188"><paramref name="objectType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-188"><paramref name="objectType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="892cd-189">O tipo de objeto para o qual o <see cref="T:System.Reflection.IReflect" /> deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="892cd-189">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <param name="instance"><span data-ttu-id="892cd-190">Uma instância do tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-190">An instance of the type.</span></span> <span data-ttu-id="892cd-191">Pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-191">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="892cd-192">Executa a reflexão normal no objeto fornecido com o tipo fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-192">Performs normal reflection against the given object with the given type.</span></span></summary>
        <returns><span data-ttu-id="892cd-193">O tipo de reflexão para este <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-193">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-194">O <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método é uma versão de nível inferior do <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-194">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="892cd-195">Se nenhum descritor de tipo personalizado pode ser localizado para um objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> é chamado para executar a reflexão normal no objeto.</span><span class="sxs-lookup"><span data-stu-id="892cd-195">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="892cd-196"><para>Esse método é como protótipo <see langword="virtual" />e por padrão retorna <paramref name="objectType" /> se nenhum provedor pai foi passado. Se um provedor pai foi passado, esse método invocará o provedor de pai <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> método.</para></span><span class="sxs-lookup"><span data-stu-id="892cd-196"><para>This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</para></span></span></block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType"><span data-ttu-id="892cd-197">O tipo a ser convertido em seu equivalente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="892cd-197">The type to convert to its runtime equivalent.</span></span></param>
        <summary><span data-ttu-id="892cd-198">Converte um tipo de reflexão em um tipo de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="892cd-198">Converts a reflection type into a runtime type.</span></span></summary>
        <returns><span data-ttu-id="892cd-199">Um <see cref="T:System.Type" /> que representa o equivalente de tempo de execução de <paramref name="reflectionType" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-199">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-200">O <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método inverte o <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método para converter um tipo de reflexão de volta em um tipo de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="892cd-200">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="892cd-201">Usando o <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método é preferível a usar o <xref:System.Type.UnderlyingSystemType%2A> propriedade, que foi usada em versões anteriores para retornar o tipo de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="892cd-201">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-202"><paramref name="reflectionType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-202"><paramref name="reflectionType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="892cd-203">Obtém um descritor de tipo personalizado para o tipo ou o objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-203">Gets a custom type descriptor for the given type or object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="892cd-204">Uma instância do tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-204">An instance of the type.</span></span> <span data-ttu-id="892cd-205">Poderá ser <see langword="null" /> se nenhuma instância for passada para o <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-205">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="892cd-206">Obtém um descritor de tipo personalizado para o objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-206">Gets a custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="892cd-207">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-207">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-208"><paramref name="instance" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-208"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="892cd-209">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="892cd-209">The type of object for which to retrieve the type descriptor.</span></span></param>
        <summary><span data-ttu-id="892cd-210">Obtém um descritor de tipo personalizado para o tipo fornecido.</span><span class="sxs-lookup"><span data-stu-id="892cd-210">Gets a custom type descriptor for the given type.</span></span></summary>
        <returns><span data-ttu-id="892cd-211">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-211">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="892cd-212">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="892cd-212">The type of object for which to retrieve the type descriptor.</span></span></param>
        <param name="instance"><span data-ttu-id="892cd-213">Uma instância do tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-213">An instance of the type.</span></span> <span data-ttu-id="892cd-214">Poderá ser <see langword="null" /> se nenhuma instância for passada para o <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-214">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="892cd-215">Obtém um descritor de tipo personalizado para o tipo e o objeto fornecidos.</span><span class="sxs-lookup"><span data-stu-id="892cd-215">Gets a custom type descriptor for the given type and object.</span></span></summary>
        <returns><span data-ttu-id="892cd-216">Um <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que pode fornecer metadados para o tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-216">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="892cd-217">Esse método é como protótipo `virtual` e, por padrão, retorna um descritor vazio se nenhum provedor pai foi passado.</span><span class="sxs-lookup"><span data-stu-id="892cd-217">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="892cd-218">Se um provedor pai foi passado, esse método invocará o provedor de pai <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="892cd-218">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="892cd-219"><para>O <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> método deverá retornar um descritor de tipo personalizado para o objeto. Se o método não fornece informações de tipo para o objeto, ele deverá retornar <see langword="null" />.</para></span><span class="sxs-lookup"><span data-stu-id="892cd-219"><para>The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object. If the method does not provide type information for the object, it should return <see langword="null" />.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="892cd-220">O tipo cuja compatibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="892cd-220">The type to test for compatibility.</span></span></param>
        <summary><span data-ttu-id="892cd-221">Obtém um valor que indica se o tipo especificado é compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo.</span><span class="sxs-lookup"><span data-stu-id="892cd-221">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span></span></summary>
        <returns><span data-ttu-id="892cd-222"><see langword="true" /> se <paramref name="type" /> for compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-222"><see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="892cd-223"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="892cd-223"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>