<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeDescriptionProvider.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578810a0d3161e71e0b4f17da0881ab026be14b8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78810a0d3161e71e0b4f17da0881ab026be14b8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Provides supplemental metadata to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Fornece metadados suplementares ao <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> classe estende dinamicamente as informações do tipo associadas com um tipo ou objeto adicionando, modificando ou ocultando características como atributos, propriedades e eventos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There can be multiple type description provider classes that offer metadata to a single <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Pode haver várias classes de provedor de descrição de tipo que oferecem metadados para um único <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>There are two ways to associate a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> with a <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</source>
          <target state="translated">Há duas maneiras para associar um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> com um <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At design time, when the target class can be assigned the appropriate <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> tag.</source>
          <target state="translated">Em tempo de design, quando a classe de destino pode ser atribuída apropriado <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProviderAttribute&gt;</ph> marca.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>At run time, when one of the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class can be called.</source>
          <target state="translated">Em tempo de execução quando uma do <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</ph> métodos do <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe pode ser chamada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>These overloaded methods require either the target object or its class type.</source>
          <target state="translated">Esses métodos sobrecarregados exigem o objeto de destino ou seu tipo de classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> class relies on a parent object of the same type, supplied during construction.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> classe depende de um objeto pai do mesmo tipo, fornecido durante a construção.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This allows classes that derive from <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> to selectively override methods.</source>
          <target state="translated">Isso permite que classes que derivam de <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> para substituir os métodos seletivamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Instances of <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> are only built upon demand, minimizing the impact of custom type information on performance.</source>
          <target state="translated">Instâncias de <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> só são criados por demanda, minimizando o impacto das informações de tipo personalizado no desempenho.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Your derived type might be marked as <ph id="ph1">&lt;see langword="internal" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, but an instance of your type can be created with the <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> class.</source>
          <target state="translated">O tipo derivado pode ser marcado como <ph id="ph1">&lt;see langword="internal" /&gt;</ph> ou <ph id="ph2">&lt;see langword="private" /&gt;</ph>, mas uma instância do seu tipo pode ser criada com o <ph id="ph3">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Do not write insecure code by assuming the caller is trusted.</source>
          <target state="translated">Não grave o código não seguro, supondo que o chamador é confiável.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Assume instead that callers might create instances of your type in partial trust.</source>
          <target state="translated">Em vez disso, suponha que os chamadores podem criar instâncias de seu tipo em confiança parcial.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
          <source>This constructor is equivalent to calling the other <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> constructor with a parameter value that is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Este construtor é equivalente a chamar outros <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29&gt;</ph> construtor com um valor de parâmetro é <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The parent type description provider.</source>
          <target state="translated">O provedor de descrição de tipo pai.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> class using a parent type description provider.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> usando um provedor de descrição de tipo pai.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>If the <ph id="ph1">`parent`</ph> parameter is <ph id="ph2">`null`</ph>, all <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will return default values.</source>
          <target state="translated">Se o <ph id="ph1">`parent`</ph> parâmetro é <ph id="ph2">`null`</ph>, todos os <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> métodos retornarão valores padrão.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Otherwise, all <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods will delegate to the methods of <ph id="ph2">`parent`</ph>.</source>
          <target state="translated">Caso contrário, todos os <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> métodos delegará para os métodos de <ph id="ph2">`parent`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The following table shows the default return values for <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> methods.</source>
          <target state="translated">A tabela a seguir mostra os valores de retorno padrão para <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Method</source>
          <target state="translated">Método</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>Default return value</source>
          <target state="translated">Valor de retorno padrão</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A newly created object through a call to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">Um objeto recém-criado por meio de uma chamada para o <ph id="ph1">&lt;xref:System.Activator.CreateInstance%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Uma instância padrão de um <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>A default instance of a <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> class.</source>
          <target state="translated">Uma instância padrão de um <ph id="ph1">&lt;xref:System.ComponentModel.CustomTypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
          <source>The <ph id="ph1">`objectType`</ph> first parameter.</source>
          <target state="translated">O <ph id="ph1">`objectType`</ph> primeiro parâmetro.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional service provider.</source>
          <target state="translated">Um provedor de serviços opcional.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The type of object to create.</source>
          <target state="translated">O tipo de objeto a ser criado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This parameter is never <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parâmetro nunca é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
          <target state="translated">Uma matriz opcional de tipos que representam os tipos de parâmetro a serem passados para o construtor do objeto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>This array can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or of zero length.</source>
          <target state="translated">Esta matriz pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou de comprimento zero.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">Uma matriz opcional de valores de parâmetro a serem passados para o construtor do objeto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">Cria um objeto que pode ser substituído em outro tipo de dados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The substitute <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> substituto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> specified by the <ph id="ph2">`provider`</ph> parameter is passed in by the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> especificado pelo <ph id="ph2">`provider`</ph> parâmetro é passado <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> método o <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is not <ph id="ph2">`null`</ph>, the service provider can be used by the type description provider to obtain additional context about the creation call.</source>
          <target state="translated">Se <ph id="ph1">`provider`</ph> não é <ph id="ph2">`null`</ph>, o provedor de serviço pode ser usado pelo provedor de descrição de tipo para obter contexto adicional sobre a chamada de criação.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method is <ph id="ph2">`virtual`</ph> and, by default, returns the result of the <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> method if <ph id="ph4">`provider`</ph> is <ph id="ph5">`null`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> método <ph id="ph2">`virtual`</ph> e, por padrão, retorna o resultado da <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType&gt;</ph> método se <ph id="ph4">`provider`</ph> é <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, this method will invoke the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> method of the parent provider.</source>
          <target state="translated">Se <ph id="ph1">`provider`</ph> é <ph id="ph2">`null`</ph>, este método invocará o <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A&gt;</ph> método do provedor de pai.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
          <source>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</source>
          <target state="translated">Se a classe derivada não está interessada no fornecimento de uma instância de substituição, ele apenas deve chamar a implementação base.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The object for which to get the cache.</source>
          <target state="translated">O objeto para o qual o cache deve ser obtido.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Gets a per-object cache, accessed as an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of key/value pairs.</source>
          <target state="translated">Obtém um cache por objeto, acessado como um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> de pares chave-valor.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> if the provided object supports caching; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> se o objeto fornecido for compatível com armazenamento em cache, caso contrário, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> may need to perform complex operations on collections of metadata.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> pode precisar executar operações complexas em coleções de metadados.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Because types are not unloaded for the life of a domain, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class will automatically cache the results of these operations based on type.</source>
          <target state="translated">Como tipos não são descarregados durante a vida útil de um domínio, o <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe automaticamente armazenará em cache os resultados dessas operações com base no tipo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>However, some operations use live object instances.</source>
          <target state="translated">No entanto, algumas operações usam instâncias de objeto dinâmico.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>These operations cannot be cached within the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class because caching them would prevent the object from being garbage collected.</source>
          <target state="translated">Essas operações não podem ser armazenados em cache dentro de <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe porque eles em cache o objeto impediria de ser coletado como lixo.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class allows for a per-object cache, accessed as an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> of key/value pairs, to exist on an object.</source>
          <target state="translated">Em vez disso, o <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> classe permite que um cache por objeto, acessada como uma <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> de pares chave/valor, por existir em um objeto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method returns an instance of this cache.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> método retorna uma instância desse cache.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> method will return <ph id="ph2">`null`</ph> if there is no supported cache for an object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A&gt;</ph> método retornará <ph id="ph2">`null`</ph> se não houver nenhum cache com suporte para um objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>The default <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> used by <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examines the object to see if it is a sited component that implements the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</source>
          <target state="translated">O padrão <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;</ph> usado pelo <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> examina o objeto para ver se ele é um componente encontra que implementa o <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>If the object is, it uses the dictionary service to store the object's cache.</source>
          <target state="translated">Se o objeto, ele usa o serviço de dicionário para armazenar o cache do objeto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Otherwise, the object it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Caso contrário, o objeto retornará <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>Other type description providers may provide their own implementation here.</source>
          <target state="translated">Outros provedores de descrição de tipo podem fornecer sua própria implementação aqui.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
          <source>For example, dependency objects can just attach a property of type <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">Por exemplo, objetos de dependência apenas podem anexar a uma propriedade do tipo <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The object for which to get the extended type descriptor.</source>
          <target state="translated">O objeto para o qual o descritor de tipo estendido deve ser obtido.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>Gets an extended custom type descriptor for the given object.</source>
          <target state="translated">Obtém um descritor de tipo personalizado estendido para o objeto fornecido.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide extended metadata for the object.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> que pode fornecer metadados estendidos para o objeto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</source>
          <target state="translated">Um descritor de tipo estendido é um descritor de tipo personalizado que oferece propriedades que outros objetos adicionados a este objeto, mas que não são realmente definidas no objeto.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>For example, in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model, objects that implement the <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface can attach properties to other objects that reside in the same logical container.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> modelo de componente, os objetos que implementam o <ph id="ph2">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph> interface pode associar propriedades a outros objetos que residem no mesmo contêiner lógico.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The overloaded <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> methods do not return a type descriptor that provides these extra extended properties.</source>
          <target state="translated">Sobrecarregados <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> métodos não retornam um descritor de tipo que fornece essas propriedades estendidas extra.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method returns the set of these extended properties.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> método retorna o conjunto dessas propriedades estendidas.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> will automatically merge the results of these two property collections.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> mesclará automaticamente os resultados dessas coleções de duas propriedades.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>While the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> component model supports only extended properties, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> can be used for extended attributes as well as events, if the type description provider supports it.</source>
          <target state="translated">Enquanto o <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> modelo de componente dá suporte apenas propriedades estendidas, <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> pode ser usado para os atributos estendidos, bem como eventos, se o provedor de descrição de tipo oferece suporte a ele.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> is <ph id="ph2">`virtual`</ph> and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> é <ph id="ph2">`virtual`</ph> e, por padrão, retorna um descritor de tipo personalizado que retorna resultados vazios se nenhum provedor pai foi passado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Se um provedor pai foi passado, este método invocará o provedor de pai <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>The object to get extender providers for.</source>
          <target state="translated">O objeto para o qual os provedores de controle do extensor devem ser obtidos.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>Gets the extender providers for the specified object.</source>
          <target state="translated">Obtém os provedores de controle do extensor para o objeto especificado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source>An array of extender providers for <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de provedores de controle do extensor para <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The specified component.</source>
          <target state="translated">O componente especificado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>Gets the name of the specified component, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the component has no name.</source>
          <target state="translated">Obtém o nome do componente especificado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> quando o componente não tem nome.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source>The name of the specified component.</source>
          <target state="translated">O nome do componente especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Performs normal reflection against an object.</source>
          <target state="translated">Executa a reflexão normal em relação a um objeto.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>An instance of the type (should not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</source>
          <target state="translated">Uma instância do tipo (não deve ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Performs normal reflection against the given object.</source>
          <target state="translated">Executa a reflexão normal no objeto fornecido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">O tipo de reflexão para este <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> método é uma versão de nível inferior do <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> é chamado para executar a reflexão normal em relação ao objeto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source>Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</source>
          <target state="translated">Use essa sobrecarga de método se você chamou um membro de descritor de tipo que usa uma instância em vez de um tipo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">O tipo de objeto para o qual o <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Performs normal reflection against a type.</source>
          <target state="translated">Executa a reflexão normal em relação a um tipo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">O tipo de reflexão para este <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> método é uma versão de nível inferior do <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> é chamado para executar a reflexão normal em relação ao objeto.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source>Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</source>
          <target state="translated">Use essa sobrecarga de método se você chamou um membro de descritor de tipo que usa um tipo em vez de uma instância.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of object for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>.</source>
          <target state="translated">O tipo de objeto para o qual o <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Uma instância do tipo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>Performs normal reflection against the given object with the given type.</source>
          <target state="translated">Executa a reflexão normal no objeto fornecido com o tipo fornecido.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The type of reflection for this <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</source>
          <target state="translated">O tipo de reflexão para este <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method is a lower-level version of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> método é uma versão de nível inferior do <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If no custom type descriptor can be located for an object, <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> is called to perform normal reflection against the object.</source>
          <target state="translated">Se nenhum descritor de tipo personalizado pode ser localizada para um objeto <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> é chamado para executar a reflexão normal em relação ao objeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>, and by default returns <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> if no parent provider was passed.</source>
          <target state="translated">Esse método é como protótipo <ph id="ph1">&lt;see langword="virtual" /&gt;</ph>e por padrão retorna <ph id="ph2">&lt;paramref name="objectType" /&gt;</ph> se nenhum provedor pai foi passado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> method.</source>
          <target state="translated">Se um provedor pai foi passado, este método invocará o provedor de pai <ph id="ph1">&lt;see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The type to convert to its runtime equivalent.</source>
          <target state="translated">O tipo a ser convertido em seu equivalente de tempo de execução.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Converts a reflection type into a runtime type.</source>
          <target state="translated">Converte um tipo de reflexão em um tipo de tempo de execução.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the runtime equivalent of <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o equivalente de tempo de execução de <ph id="ph2">&lt;paramref name="reflectionType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method reverses the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> method to convert a reflection type back into a runtime type.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> método inverte o <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A&gt;</ph> método para converter um tipo de reflexão volta para um tipo de tempo de execução.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> method is preferred over using the <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> property, which was used in earlier versions to return the runtime type.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A&gt;</ph> método é preferível usar o <ph id="ph2">&lt;xref:System.Type.UnderlyingSystemType%2A&gt;</ph> propriedade, que foi usada em versões anteriores para retornar o tipo de tempo de execução.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reflectionType" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeDescriptionProvider">
          <source>Gets a custom type descriptor for the given type or object.</source>
          <target state="translated">Obtém um descritor de tipo personalizado para o tipo ou o objeto fornecido.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Uma instância do tipo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Poderá ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhuma instância for passada para o <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>Gets a custom type descriptor for the given object.</source>
          <target state="translated">Obtém um descritor de tipo personalizado para o objeto fornecido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> que pode fornecer metadados para o tipo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>Gets a custom type descriptor for the given type.</source>
          <target state="translated">Obtém um descritor de tipo personalizado para o tipo fornecido.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> que pode fornecer metadados para o tipo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The type of object for which to retrieve the type descriptor.</source>
          <target state="translated">O tipo de objeto para o qual o descritor de tipo deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An instance of the type.</source>
          <target state="translated">Uma instância do tipo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no instance was passed to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</source>
          <target state="translated">Poderá ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhuma instância for passada para o <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>Gets a custom type descriptor for the given type and object.</source>
          <target state="translated">Obtém um descritor de tipo personalizado para o tipo e o objeto fornecidos.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> that can provide metadata for the type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ICustomTypeDescriptor" /&gt;</ph> que pode fornecer metadados para o tipo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>This method is prototyped as <ph id="ph1">`virtual`</ph> and, by default, returns an empty descriptor if no parent provider was passed.</source>
          <target state="translated">Esse método é como protótipo <ph id="ph1">`virtual`</ph> e, por padrão, retorna um descritor vazio se nenhum provedor pai foi passado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If a parent provider was passed, this method will invoke the parent provider's <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> method.</source>
          <target state="translated">Se um provedor pai foi passado, este método invocará o provedor de pai <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> method should return a custom type descriptor for the object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /&gt;</ph> método deve retornar um descritor de tipo personalizado para o objeto.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
          <source>If the method does not provide type information for the object, it should return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se o método não fornece informações de tipo para o objeto, ele deverá retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>The type to test for compatibility.</source>
          <target state="translated">O tipo cuja compatibilidade será testada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source>Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
          <target state="translated">Obtém um valor que indica se o tipo especificado é compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is compatible with the type description and its chain of type description providers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="type" /&gt;</ph> for compatível com a descrição do tipo e sua cadeia de provedores de descrição de tipo, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>