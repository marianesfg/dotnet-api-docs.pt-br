<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpandableObjectConverter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac597ceeea7a8f7eccb41f43740e32b961ad9524043.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97ceeea7a8f7eccb41f43740e32b961ad9524043</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>Provides a type converter to convert expandable objects to and from various other representations.</source>
          <target state="translated">Fornece um conversor de tipo para converter objetos expansíveis de e para diversas outras representações.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>This class adds support for properties on an object to the methods and properties provided by <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">Esta classe adiciona suporte para propriedades em um objeto para os métodos e propriedades fornecidas por <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>To make a type of property expandable in the <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph>, specify this <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for standard implementations of <ph id="ph3">&lt;xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A&gt;</ph>.</source>
          <target state="translated">Para fazer um tipo de propriedade expansível no <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph>, especifique isso <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> para implementações padrão de <ph id="ph3">&lt;xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>Mark child properties with the <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> to ensure correct behavior in a <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph> control.</source>
          <target state="translated">Marcar propriedades filho com o <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> para verificar o comportamento correto em um <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyGrid&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>You should never access a type converter directly.</source>
          <target state="translated">Você nunca deve acessar diretamente um conversor de tipo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>Instead, call the appropriate converter by using <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">Em vez disso, chame o conversor apropriado usando <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">Para obter mais informações, consulte os exemplos de <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe base.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">Para obter mais informações sobre conversores de tipo, consulte o <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> classe base e <bpt id="p1">[</bpt>como: implementar um conversor de tipo<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>The following code example converts a variable of type <ph id="ph1">&lt;xref:System.Drawing.Printing.Margins&gt;</ph> to a string variable.</source>
          <target state="translated">O exemplo de código a seguir converte uma variável do tipo <ph id="ph1">&lt;xref:System.Drawing.Printing.Margins&gt;</ph> a uma variável de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> and the <ph id="ph2">&lt;xref:System.ComponentModel.ExpandableObjectConverter&gt;</ph> class to create an expandable property on a custom control.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> e <ph id="ph2">&lt;xref:System.ComponentModel.ExpandableObjectConverter&gt;</ph> classe para criar uma propriedade expansível em um controle personalizado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.ExpandableObjectConverter">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.ComponentModel.NotifyParentPropertyAttribute&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ExpandableObjectConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.ExpandableObjectConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the type of object to get the properties for.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que especifica o tipo de objeto o qual obter as propriedades.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that will be used as a filter.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que será usada como um filtro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Gets a collection of properties for the type of object specified by the value parameter.</source>
          <target state="translated">Obtém uma coleção de propriedades para o tipo de objeto especificado pelo parâmetro de valor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that are exposed for the component, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are no properties.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> com as propriedades expostas para o componente ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se não houver nenhuma propriedade.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">O <ph id="ph1">`context`</ph> parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Isso pode ser <ph id="ph1">`null`</ph>. Portanto, sempre verifique.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Além disso, as propriedades no objeto de contexto podem retornar <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> array will be used to filter the array.</source>
          <target state="translated">O <ph id="ph1">`attributes`</ph> matriz será usada para filtrar a matriz.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`attributes`</ph> can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">O <ph id="ph1">`attributes`</ph> pode ter uma mistura de <ph id="ph2">&lt;xref:System.Type&gt;</ph> e <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">A filtragem é definida pelas seguintes regras:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object will be treated as a wildcard; it will match any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Type&gt;</ph> objeto será tratado como um caractere curinga; ela corresponderá a qualquer propriedade que tem o <ph id="ph2">&lt;xref:System.Type&gt;</ph> em seu conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Se uma propriedade não tiver <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> da mesma classe, a propriedade não será incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match or it will not be included in the returned array.</source>
          <target state="translated">Se o atributo for uma instância de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, a propriedade deve ser uma correspondência exata ou se ele não será incluído na matriz retornada.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <source>If a <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instância for especificada e é a propriedade padrão, ele será incluído na matriz retornada mesmo se não houver nenhuma instância do <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports properties using the specified context.</source>
          <target state="translated">Obtém um valor que indica se este objeto dá suporte às propriedades usando o contexto especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> should be called to find the properties of this object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, porque <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> deve ser chamado para localizar as propriedades deste objeto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método nunca retorna <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated">O <ph id="ph1">`context`</ph> parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">Isso pode ser <ph id="ph1">`null`</ph>. Portanto, sempre verifique.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Além disso, as propriedades no objeto de contexto podem retornar <ph id="ph1">`null`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>