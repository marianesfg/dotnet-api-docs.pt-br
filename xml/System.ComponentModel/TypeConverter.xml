<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c9ac16caa10950fc51f35f4e2269cf46c0bbc4d" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52740981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b77d5-101">Fornece uma maneira unificada de converter tipos de valores em outros tipos, bem como acessar valores padrão e subpropriedades.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d5-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-102">O tipo mais comum de conversor é aquele converte de e para uma representação de texto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="b77d5-103">O conversor de tipo para uma classe que está associado à classe com um <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="b77d5-104">A menos que esse atributo é substituído, todas as classes que herdam dessa classe usam o mesmo conversor de tipo como a classe base.</span><span class="sxs-lookup"><span data-stu-id="b77d5-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b77d5-105">Para fins de sistema do tipo geral, não acesse um conversor de tipo diretamente.</span><span class="sxs-lookup"><span data-stu-id="b77d5-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="b77d5-106">Em vez disso, acessar o conversor apropriado usando <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="b77d5-107">Para obter mais informações, consulte os exemplos de código fornecidos.</span><span class="sxs-lookup"><span data-stu-id="b77d5-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="b77d5-108">**Observação** para fins XAML, um processador XAML procura o <xref:System.ComponentModel.TypeConverterAttribute> diretamente, em vez de percorrer <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="b77d5-109">Para casos onde você deseja que um <xref:System.ComponentModel.TypeDescriptor> da instância do código, ou em que você cria uma instância compartilhada no WPF recursos, é aceitável para construí-la diretamente, sem referenciar <xref:System.ComponentModel.TypeDescriptor> ou outro sistema de reflexão e o tipo de suporte.</span><span class="sxs-lookup"><span data-stu-id="b77d5-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="b77d5-110">As classes derivadas de <xref:System.ComponentModel.TypeConverter> geralmente são referenciadas como parte de como um processador XAML converte um valor de texto de inicialização ou o atributo de marcação (que é inerentemente uma cadeia de caracteres) e gera um objeto para uma representação de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="b77d5-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="b77d5-111">Os autores de tipo personalizado que pretende dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam uma <xref:System.ComponentModel.TypeConverter> classe que dá suporte a seus próprios exclusivo `ConvertFrom` comportamento de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="b77d5-112">Esse comportamento permite a conversão de tipo de cadeia de caracteres fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia de caracteres, para que o objeto pode ser produzido em um grafo de objeto analisado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="b77d5-113">Tipos personalizados ou membros de tipos personalizados são indicados por meio da aplicação <xref:System.ComponentModel.TypeConverterAttribute> às definições, com o atributo referenciando personalizado <xref:System.ComponentModel.TypeConverter> implementação.</span><span class="sxs-lookup"><span data-stu-id="b77d5-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="b77d5-114">Para obter mais informações, consulte [conversores de tipo para visão geral de XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b77d5-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b77d5-115">O exemplo de código a seguir mostra como criar uma instância de um conversor de tipo e associá-lo a uma classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="b77d5-116">A classe que implementa o conversor `MyClassConverter`, devem herdar a <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b77d5-117">Quando você tem uma propriedade que tem uma enumeração, verifique se um valor de enumeração é válido antes de definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="b77d5-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="b77d5-118">O exemplo de código a seguir requer que uma enumeração chamado `MyPropertyEnum` foi declarado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="b77d5-119">Outro uso comum de conversor de tipo é converter um objeto em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="b77d5-120">O exemplo de código a seguir imprime o nome da <xref:System.Drawing.Color> armazenado na variável `c`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="b77d5-121">Você também pode usar um conversor de tipo para converter um valor de seu nome, conforme mostrado no exemplo de código a seguir.</span><span class="sxs-lookup"><span data-stu-id="b77d5-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="b77d5-122">No exemplo de código a seguir, você pode usar um conversor de tipo para imprimir o conjunto de valores padrão que o objeto dá suporte.</span><span class="sxs-lookup"><span data-stu-id="b77d5-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="b77d5-123">Herdar de <see cref="T:System.ComponentModel.TypeConverter" /> para implementar seus próprios requisitos de conversão.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="b77d5-124">Quando você herda desta classe, você pode substituir os métodos a seguir:</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-124">When you inherit from this class, you can override the following methods:</span>
        </span>
        <span data-ttu-id="b77d5-125">-Para dar suporte a conversão de tipo personalizado, substituir os <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, e <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span>
        </span>
        <span data-ttu-id="b77d5-126">– Para converter tipos que devem recriar o objeto para alterar seu valor, substitua os <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> e <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span>
        </span>
        <span data-ttu-id="b77d5-127">– Para converter tipos que dão suporte a propriedades, substituir os <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> e <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span>
        </span>
        <span data-ttu-id="b77d5-128">Se a classe que você está convertendo não tiver propriedades e você precisa implementar propriedades, você pode usar o <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> classe como uma base para implementar os descritores de propriedade.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span>
        </span>
        <span data-ttu-id="b77d5-129">Quando você herda <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, você deve substituir o <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> e <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span>
        </span>
        <span data-ttu-id="b77d5-130">– Para converter os tipos que oferecem suporte a valores padrão, substituir os <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> e <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="b77d5-131">Seu tipo derivado pode ser marcado como <see langword="internal" /> ou <see langword="private" />, mas uma instância do seu tipo pode ser criada com o <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
            </span>
            <span data-ttu-id="b77d5-132">Não escreva código inseguro, supondo que o chamador é confiável.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-132">Do not write insecure code by assuming the caller is trusted.</span>
            </span>
            <span data-ttu-id="b77d5-133">Em vez disso, suponha que os chamadores podem criar instâncias de seu tipo em confiança parcial.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-133">Assume instead that callers might create instances of your type in partial trust.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="b77d5-134">Para obter mais informações sobre conversores de tipo para fins gerais (sem XAML), consulte [como: implementar um conversor de tipo](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) ou [conversão do tipo generalizada](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        <span class="sxs-lookup">
          <span data-stu-id="b77d5-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
      <span data-ttu-id="b77d5-135">Visão geral de conversores de tipo para XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d5-135">Type Converters for XAML Overview</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">
      <span data-ttu-id="b77d5-136">Atributos CLR relacionados a XAML para tipos personalizados e bibliotecas</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d5-136">XAML-Related CLR Attributes For Custom Types and Libraries</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">
      <span data-ttu-id="b77d5-137">Definindo tipos personalizados para uso com serviços XAML do .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d5-137">Defining Custom Types for Use with .NET Framework XAML Services</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">
      <span data-ttu-id="b77d5-138">Documentação conceitual de serviços XAML do NET</span>
      <span class="sxs-lookup">
        <span data-stu-id="b77d5-138">NET XAML Services Conceptual Documentation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-139">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-140">Retorna se este conversor pode converter um objeto de um tipo no tipo desse conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-140">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="b77d5-141">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-142">Retorna se este conversor pode converter um objeto do tipo indicado para o tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-143">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-143">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-144">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="b77d5-145">Ele nunca retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-146">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="b77d5-147">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-148">Retorna se esse conversor pode converter um objeto do tipo especificado no tipo desse conversor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-149">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-149">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-150">Conforme implementado nesta classe, esse método retornará `false`, a menos que `sourceType` é um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-151">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-151">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b77d5-152">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-153">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-153">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-154">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-154">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-155">Retorna se esse conversor pode converter o objeto para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-155">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="b77d5-156">Um <see cref="T:System.Type" /> que representa o tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-157">Retorna se esse conversor pode converter o objeto para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-157">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-158">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-158">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-159">Se `destinationType` é uma cadeia de caracteres, a implementação padrão de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-160">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b77d5-161">Um <see cref="T:System.Type" /> que representa o tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-162">Retorna se esse conversor pode converter o objeto para o tipo especificado, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-163">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-163">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-164">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-165">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-166">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-167">Se `destinationType` é uma cadeia de caracteres, a implementação padrão de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-168">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-168">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-169">Converte o valor fornecido noo tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-169">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-170">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-170">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-171">Converte o valor fornecido noo tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-171">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-172">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-172">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-173">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-173">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-174">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b77d5-175">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-176">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-176">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-177">Converte o objeto determinado para o tipo deste conversor, usando as informações de contexto e de cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-177">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-178">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-178">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-179">Os autores de tipo personalizado que pretende dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam uma <xref:System.ComponentModel.TypeConverter> classe que dá suporte a <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamento de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="b77d5-180">Esse comportamento permite a conversão de tipo de cadeia de caracteres fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia de caracteres, para que o objeto pode ser produzido em um grafo de objeto analisado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="b77d5-181">Tipos personalizados ou membros de tipos personalizados são indicados por meio da aplicação <xref:System.ComponentModel.TypeConverterAttribute> às definições, com o atributo referenciando personalizado <xref:System.ComponentModel.TypeConverter> implementação.</span><span class="sxs-lookup"><span data-stu-id="b77d5-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="b77d5-182">Para fins XAML, você geralmente não fornecem implementações de ramificação com base em `culture`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="b77d5-183">Isso ocorre porque o XAML é pré-compilado em um contexto de ambiente de desenvolvimento e informações específicas da cultura para tempo de execução XAML não é relevante para conversão de tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="b77d5-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="b77d5-184">Para obter mais informações, consulte [conversores de tipo para visão geral de XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b77d5-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-185">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-185">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-186">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-186">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b77d5-187">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-188">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-188">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-189">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-189">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b77d5-190">Para padrões de implementação para conversores de tipo são usados para dar suporte ao XAML e tipos personalizados, consulte [conversores de tipo para visão geral de XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="b77d5-191">Visão geral de conversores de tipo para XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-191">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-192">Converte o valor em um tipo deste conversor, usando a cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-192">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="b77d5-193">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-194">Converte a cadeia de caracteres fornecida para o tipo deste conversor usando a cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-194">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-195">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-196">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-197">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-197">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-198">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b77d5-199">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-199">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-200">Converte a cadeia de caracteres fornecida para o tipo deste conversor usando a cultura invariável e o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-201">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-201">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-202">Uma exceção é gerada se a cadeia de caracteres não puder ser convertida no objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b77d5-203">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b77d5-204">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-205">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-206">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-207">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-207">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-208">Converte o texto especificado em um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-208">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="b77d5-209">A representação de texto do objeto a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-209">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-210">Converte o texto especificado em um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-210">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-211">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-211">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-212">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b77d5-213">Para obter um exemplo dessa função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-214">A cadeia de caracteres não pode ser convertida em objeto apropriado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-214">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-215">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b77d5-216">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-216">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-217">Converte o texto fornecido em um objeto, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-217">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-218">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-218">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-219">Uma exceção é gerada se a cadeia de caracteres não puder ser convertida no objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b77d5-220">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b77d5-221">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-222">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-223">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-224">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-224">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-225">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b77d5-226">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-226">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b77d5-227">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-227">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="b77d5-228">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-228">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-229">Converte o texto fornecido em um objeto, usando o contexto e a informação de cultura especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-229">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-230">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-230">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-231">Uma exceção é gerada se a cadeia de caracteres não puder ser convertida no objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="b77d5-232">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="b77d5-233">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-234">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-235">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-236">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-236">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-237">Converte o objeto de valor fornecido no tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-237">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-238">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-238">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b77d5-239">O <see cref="T:System.Type" /> para converter o parâmetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-240">Converte o objeto de valor especificado para o tipo especificado, usando os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-240">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-241">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-241">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-242">O tipo mais comum para converter para e de é um objeto de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="b77d5-243">Essa implementação chama <xref:System.Object.ToString%2A> no objeto, se o objeto é válido e se o tipo de destino é uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b77d5-244">O parâmetro <paramref name="destinationType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-245">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-245">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-246">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b77d5-247">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-247">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b77d5-248">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-248">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-249">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-249">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b77d5-250">O <see cref="T:System.Type" /> para converter o parâmetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-251">Converte o objeto de valor determinado para o tipo especificado, usando as informações de contexto e de cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-251">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-252">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-252">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-253">Os tipos mais comuns para converter são de e para um objeto de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="b77d5-254">Essa implementação chama <xref:System.Object.ToString%2A> no objeto se o objeto é válido e se o tipo de destino é uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="b77d5-255">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-256">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-257">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-258">Os autores de tipo personalizado que pretende dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam uma <xref:System.ComponentModel.TypeConverter> classe que dá suporte a <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamento de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b77d5-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="b77d5-259">Também podem implementar essas conversores de tipo <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> oferecer suporte à serialização para XAML.</span><span class="sxs-lookup"><span data-stu-id="b77d5-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="b77d5-260">Alguns cenários de serialização de XAML não é possível adequadamente dissipados com <xref:System.ComponentModel.TypeConverter> sozinho.</span><span class="sxs-lookup"><span data-stu-id="b77d5-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="b77d5-261">Nesses casos, pode ser necessário definir também uma <xref:System.Windows.Markup.ValueSerializer> que manipula os casos de serialização que, caso contrário, seriam administrados pela <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="b77d5-262">Para obter mais informações, consulte <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b77d5-263">O parâmetro <paramref name="destinationType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-264">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-264">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-265">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-265">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="b77d5-266">Para padrões de implementação para conversores de tipo são usados para dar suporte ao XAML e tipos personalizados, consulte [conversores de tipo para visão geral de XAML](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="b77d5-267">Visão geral de conversores de tipo para XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-267">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-268">Converte o valor especificado em uma representação de cadeia de caracteres invariável da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-268">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-269">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-270">Converte o valor especificado em uma representação de cadeia de caracteres invariável da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-270">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-271">Um <see cref="T:System.String" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-271">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-272">O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="b77d5-273">Isso pode ser `null`. Portanto, sempre verifique.</span><span class="sxs-lookup"><span data-stu-id="b77d5-273">This can be `null`, so always check.</span></span> <span data-ttu-id="b77d5-274">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-275">Dependendo da implementação do formatador de valor, ele pode ser possível passar a cadeia de caracteres retornada volta para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-276">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-277">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-278">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-278">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-279">Converte o valor especificado em uma representação de cadeia de caracteres que não varia de acordo com a cultura, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-280">Um <see cref="T:System.String" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-280">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-281">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-282">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-283">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-284">Dependendo da implementação do formatador de valor, ele pode ser possível passar a cadeia de caracteres retornada volta para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-285">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-285">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-286">Converte o valor especificado em uma representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-286">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-287">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-287">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-288">Converte o valor especificado em uma representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-288">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-289">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-289">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-290">Dependendo da implementação do formatador de valor, ele pode ser possível passar a cadeia de caracteres retornada volta para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b77d5-291">Para obter um exemplo sobre esta função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-292">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-292">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-293">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-294">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-294">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-295">Converte o valor especificado em uma representação de cadeia de caracteres, usando o contexto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-295">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-296">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-296">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-297">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-298">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-299">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-300">Dependendo da implementação do formatador de valor, ele pode ser possível passar a cadeia de caracteres retornada volta para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-301">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-301">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-302">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b77d5-303">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-303">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b77d5-304">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-304">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-305">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-305">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-306">Converte o valor especificado em uma representação de cadeia de caracteres, usando as informações de contexto e cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-306">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-307">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-307">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-308">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-309">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-310">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-311">Dependendo da implementação do formatador de valor, ele pode ser possível passar a cadeia de caracteres retornada volta para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-312">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-312">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-313">Recria um <see cref="T:System.Object" /> dado um conjunto de valores de propriedade do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="b77d5-314">Um <see cref="T:System.Collections.IDictionary" /> que representa um dicionário de novos valores de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-315">Recria um <see cref="T:System.Object" /> dado um conjunto de valores de propriedade do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-316">Um <see cref="T:System.Object" /> que representa o <see cref="T:System.Collections.IDictionary" /> fornecido ou <see langword="null" /> se o objeto não puder ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="b77d5-317">Esse método sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-317">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-318">Use esse método para objetos que são imutáveis, mas para o qual você deseja fornecer propriedades mutáveis.</span><span class="sxs-lookup"><span data-stu-id="b77d5-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="b77d5-319">O dicionário fornecido pelo `propertyValues` parâmetro tem uma série de pares nome/valor, um para cada propriedade retornada de <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="b77d5-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-320">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="b77d5-321">Um <see cref="T:System.Collections.IDictionary" /> de novos valores de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-322">Cria uma instância do tipo ao qual esse <see cref="T:System.ComponentModel.TypeConverter" /> está associado, usando o contexto especificado, dado um conjunto de valores de propriedade para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-323">Um <see cref="T:System.Object" /> que representa o <see cref="T:System.Collections.IDictionary" /> fornecido ou <see langword="null" /> se o objeto não puder ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="b77d5-324">Esse método sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-324">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-325">Use esse método para objetos que são imutáveis, mas para o qual você deseja fornecer propriedades mutáveis.</span><span class="sxs-lookup"><span data-stu-id="b77d5-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-326">Substitua este método se o tipo que você deseja converter deve recriar o objeto para alterar seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-326">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="b77d5-327">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-328">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-328">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-329">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-329">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b77d5-330">O dicionário fornecido pelo <paramref name="propertyValues" /> parâmetro tem uma série de pares nome/valor, um para cada propriedade retornada de <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-331">O <see cref="T:System.Object" /> a ser convertido ou <see langword="null" /> se o objeto não estiver disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-332">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-332">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-333">Uma <see cref="T:System.Exception" /> que representa a exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-334">Gerada automaticamente por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-334">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-335">O <see cref="T:System.Object" /> a ser convertido ou <see langword="null" /> se o objeto não estiver disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b77d5-336">Um <see cref="T:System.Type" /> que representa o tipo no qual a conversão estava tentando converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-337">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-337">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-338">Uma <see cref="T:System.Exception" /> que representa a exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b77d5-339">Gerada automaticamente por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-339">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-340">Retorna se a alteração de um valor neste objeto requer uma chamada ao método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-341">Retorna se a alteração de um valor neste objeto requer uma chamada ao método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-342">
            <see langword="true" /> se a alteração de uma propriedade neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-342">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-343">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-344">Retorna se a alteração de um valor neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-345">
            <see langword="true" /> se a alteração de uma propriedade neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-345">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-346">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-347">Substitua este método se o tipo que você deseja converter deve recriar o objeto para alterar seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-347">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="b77d5-348">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-349">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-349">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-350">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-350">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-351">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-351">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-352">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-353">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-353">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-354">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-355">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="b77d5-356">Por padrão, um tipo não retorna as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b77d5-356">By default, a type does not return properties.</span></span> <span data-ttu-id="b77d5-357">Uma simples implementação desse método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-358">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-359">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-360">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-361">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-362">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-363">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-364">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-365">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="b77d5-366">Por padrão, um tipo não retorna as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b77d5-366">By default, a type does not return properties.</span></span> <span data-ttu-id="b77d5-367">Uma simples implementação desse método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="b77d5-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-368">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-369">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="b77d5-370">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-371">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor, usando o contexto e os atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-372">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-373">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-374">Substitua este método se o tipo que você deseja converter dá suporte às propriedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-374">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="b77d5-375">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-376">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-376">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-377">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-377">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="b77d5-378">A matriz de atributos é usada para filtrar a matriz.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-378">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="b77d5-379">Os atributos podem ter uma mistura de <see cref="T:System.Type" /> e <see cref="T:System.Attribute" /> objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="b77d5-380">A filtragem é definida pelas seguintes regras:</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-380">Filtering is defined by the following rules:</span>
            </span>
            <span data-ttu-id="b77d5-381">-A <see cref="T:System.Type" /> é tratado como um curinga; ele corresponde a uma propriedade que tem o <see cref="T:System.Type" /> no seu conjunto de atributos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span>
            </span>
            <span data-ttu-id="b77d5-382">-Se uma propriedade não tem um <see cref="T:System.Attribute" /> da mesma classe, a propriedade não está incluída na matriz retornada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span>
            </span>
            <span data-ttu-id="b77d5-383">-Se o atributo é uma instância de <see cref="T:System.Attribute" />, a propriedade deve ser uma correspondência exata ou se ele não está incluído na matriz retornada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span>
            </span>
            <span data-ttu-id="b77d5-384">-Se um <see cref="T:System.Attribute" /> for especificada uma instância e é a propriedade padrão, ele é incluído na matriz retornada mesmo se não houver nenhuma instância da <see cref="T:System.Attribute" /> na propriedade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-385">Retorna se este objeto dá suporte a propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-385">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-386">Retorna se este objeto dá suporte a propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-386">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-387">
            <see langword="true" /> caso <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> deva ser chamado para localizar as propriedades desse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-387">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-388">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-389">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-390">Retorna se este objeto é compatível com as propriedades, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-390">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-391">
            <see langword="true" /> caso <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> deva ser chamado para localizar as propriedades desse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-391">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-392">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-393">Substitua este método se o tipo que você deseja converter dá suporte às propriedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-393">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="b77d5-394">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-395">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-395">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-396">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-396">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-397">Retorna uma coleção de valores padrão para o tipo de dados ao qual este conversor de tipo foi projetado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-397">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-398">Retorna uma coleção de valores padrão do contexto padrão para o tipo de dados para o qual esse conversor de tipo foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-399">Um <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contém um conjunto padrão de valores válidos ou <see langword="null" /> se o tipo de dados não der suporte a um conjunto padrão de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-400">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-401">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato que pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="b77d5-402">Esse parâmetro ou as propriedades desse parâmetro podem ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-402">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-403">Retorna uma coleção de valores padrão para o tipo de dados para o qual esse conversor de tipo foi criado quando fornecido com um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-404">Um <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contém um conjunto padrão de valores válidos ou <see langword="null" />, se o tipo de dados não der suporte a um conjunto padrão de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-405">Conforme implementado no <xref:System.ComponentModel.TypeConverter>, esse método sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b77d5-406">Para obter um exemplo sobre esta função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-407">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-407">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-408">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-409">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-410">
            <see langword="true" /> se o <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retornado de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> for uma lista completa de valores possíveis, <see langword="false" /> se houver outros valores possíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-410">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-411">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b77d5-412">Se a lista for exclusiva, como em um tipo de dados de enumeração, não há outros valores são válidos.</span><span class="sxs-lookup"><span data-stu-id="b77d5-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="b77d5-413">Se a lista não é exclusiva, em seguida, os outros valores válidos podem existir além da lista de padrão de valores que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> método fornece.</span><span class="sxs-lookup"><span data-stu-id="b77d5-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="b77d5-414">Se os valores são exclusivos, a lista retornada por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> não deve permitir que esses valores a ser editado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-415">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-416">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva de valores possíveis, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-417">
            <see langword="true" /> se o <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retornado de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> for uma lista completa de valores possíveis, <see langword="false" /> se houver outros valores possíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-417">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-418">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b77d5-419">Se a lista for exclusiva, como em um tipo de dados de enumeração, não há outros valores são válidos.</span><span class="sxs-lookup"><span data-stu-id="b77d5-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="b77d5-420">Se a lista não é exclusiva, em seguida, os outros valores válidos podem existir além da lista de padrão de valores que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> método fornece.</span><span class="sxs-lookup"><span data-stu-id="b77d5-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="b77d5-421">Se os valores são exclusivos, a lista retornada por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> não deve permitir que esses valores a ser editado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-422">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-422">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="b77d5-423">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="b77d5-424">Esse parâmetro pode ser <see langword="null" />, sempre verificá-lo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-424">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="b77d5-425">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-425">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-426">Retorna se este objeto dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-426">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-427">Retorna se este objeto dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-427">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-428">
            <see langword="true" /> se <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> deve ser chamado para localizar um conjunto comum de valores aos quais o objeto dá suporte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-428">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-429">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-430">Retorna se este objeto é compatível com um conjunto padrão de valores que podem ser escolhidos em uma lista, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-431">
            <see langword="true" /> se <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> deve ser chamado para localizar um conjunto comum de valores aos quais o objeto dá suporte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-431">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-432">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="b77d5-433">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-434">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-435">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-436">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-436">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b77d5-437">Retorna se o objeto de valor especificado é válido para esse tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-437">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b77d5-438">O objeto a ser testado quanto à validade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-438">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-439">Retorna se o objeto de valor especificado é válido para esse tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-439">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-440">
            <see langword="true" /> se o valor especificado for válido para esse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-440">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-441">A partir [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método captura exceções da <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="b77d5-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="b77d5-442">Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para retornar `false`, ou se faz com que o valor de entrada <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para gerar uma exceção, o <xref:System.ComponentModel.TypeConverter.IsValid%2A> retorno do método `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="b77d5-443">Para habilitar o comportamento herdado, insira as seguintes linhas no arquivo de configuração do aplicativo, por exemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="b77d5-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-444">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão que podem ser validados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-444">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="b77d5-445">O <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> método é usado para validar um valor dentro do tipo em vez de determinar se <paramref name="value" /> pode ser convertido no tipo fornecido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="b77d5-446">Por exemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> pode ser usado para determinar se um valor fornecido é válido para um tipo de enumeração.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="b77d5-447">Para ver um exemplo, consulte <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="b77d5-448">Você pode escrever seus próprios <c>WillConvertSucceed</c> método encapsulando a <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> e <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> métodos em blocos de exceção.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b77d5-449">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b77d5-450">O <see cref="T:System.Object" /> para testar a validade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-450">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-451">Retorna se o objeto de valor fornecido é válido para esse tipo e para o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-451">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-452">
            <see langword="true" /> se o valor especificado for válido para esse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-452">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-453">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual esse conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="b77d5-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="b77d5-454">Esse parâmetro pode ser `null`, sempre verificá-lo.</span><span class="sxs-lookup"><span data-stu-id="b77d5-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="b77d5-455">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="b77d5-456">A partir [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método captura exceções da <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="b77d5-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="b77d5-457">Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para retornar `false`, ou se faz com que o valor de entrada <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para gerar uma exceção, o <xref:System.ComponentModel.TypeConverter.IsValid%2A> retorno do método `false`.</span><span class="sxs-lookup"><span data-stu-id="b77d5-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="b77d5-458">Para habilitar o comportamento herdado, insira as seguintes linhas no arquivo de configuração do aplicativo, por exemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="b77d5-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b77d5-459">Para obter um exemplo dessa função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="b77d5-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b77d5-460">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão que podem ser validados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-460">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="b77d5-461">O <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> método é usado para validar um valor dentro do tipo em vez de determinar se <paramref name="value" /> pode ser convertido no tipo fornecido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="b77d5-462">Por exemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> pode ser usado para determinar se um valor fornecido é válido para um tipo de enumeração.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="b77d5-463">Para ver um exemplo, consulte <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b77d5-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="b77d5-464">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que tem as propriedades a serem classificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="b77d5-465">Uma matriz de nomes na ordem em que você deseja que as propriedades apareçam na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-465">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b77d5-466">Classifica uma coleção de propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-466">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b77d5-467">Uma <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades classificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b77d5-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77d5-468">Todas as propriedades na coleção que ainda não estão na matriz de nomes são adicionadas em ordem alfabética até o final.</span><span class="sxs-lookup"><span data-stu-id="b77d5-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="b77d5-469">Se o `names` parâmetro é uma matriz vazia ou `null`, todas as propriedades na coleção são classificadas em ordem alfabética.</span><span class="sxs-lookup"><span data-stu-id="b77d5-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>