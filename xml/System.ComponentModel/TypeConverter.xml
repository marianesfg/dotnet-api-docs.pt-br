<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29784c7bb8db50596e86f55caea973624c84e3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380650" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a77cd-101">Fornece uma maneira unificada de converter tipos de valores em outros tipos, bem como acessar valores padrão e subpropriedades.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a77cd-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-102">O tipo mais comum de conversor é aquele converte uma representação de texto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="a77cd-103">O conversor de tipo para uma classe está associado à classe com um <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="a77cd-104">A menos que esse atributo for substituído, todas as classes que herdam desta classe usam o mesmo conversor de tipo como a classe base.</span><span class="sxs-lookup"><span data-stu-id="a77cd-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a77cd-105">Para fins de sistema do tipo geral, não acesse um conversor de tipo diretamente.</span><span class="sxs-lookup"><span data-stu-id="a77cd-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="a77cd-106">Em vez disso, acessar o conversor apropriado usando <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="a77cd-107">Para obter mais informações, consulte os exemplos de código fornecidos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="a77cd-108">**Observação** para fins XAML, um processador XAML procura o <xref:System.ComponentModel.TypeConverterAttribute> diretamente, em vez de passar pelo <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="a77cd-109">Para casos onde você deseja uma <xref:System.ComponentModel.TypeDescriptor> instância do código, ou onde você pode criar uma instância compartilhada no WPF recursos, é aceitável para construí-lo diretamente sem referenciar <xref:System.ComponentModel.TypeDescriptor> ou outro sistema de reflexão e tipo de suporte.</span><span class="sxs-lookup"><span data-stu-id="a77cd-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="a77cd-110">Classes derivadas de <xref:System.ComponentModel.TypeConverter> geralmente são referenciadas como parte de como um processador XAML converte um valor de texto de inicialização ou o atributo da marcação (que é inerentemente uma cadeia de caracteres) e gera um objeto para uma representação de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="a77cd-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="a77cd-111">Os autores de tipo personalizado que pretendem dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam um <xref:System.ComponentModel.TypeConverter> classe que dá suporte a seus próprios exclusivo `ConvertFrom` comportamento a partir de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="a77cd-112">Esse comportamento permite a conversão de tipo de cadeia de caracteres fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia de caracteres, para que o objeto pode ser produzido em um gráfico de objeto analisado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="a77cd-113">Tipos personalizados ou membros de tipos personalizados são indicados pela aplicação <xref:System.ComponentModel.TypeConverterAttribute> para as definições, com o atributo referência personalizado <xref:System.ComponentModel.TypeConverter> implementação.</span><span class="sxs-lookup"><span data-stu-id="a77cd-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="a77cd-114">Para obter mais informações, consulte [conversores de tipo para XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a77cd-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a77cd-115">O exemplo de código a seguir mostra como criar uma instância de um conversor de tipo e associá-lo a uma classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="a77cd-116">A classe que implementa o conversor `MyClassConverter`, herde o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a77cd-117">Quando você tem uma propriedade que tem uma enumeração, verifique se um valor de enumeração é válido antes de definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="a77cd-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="a77cd-118">O exemplo de código a seguir exige que uma enumeração chamado `MyPropertyEnum` foi declarado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="a77cd-119">Outro uso comum de conversor de tipo é converter um objeto em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="a77cd-120">O exemplo de código a seguir imprime o nome do <xref:System.Drawing.Color> armazenado na variável `c`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="a77cd-121">Você também pode usar um conversor de tipo para converter um valor de seu nome, conforme mostrado no exemplo de código a seguir.</span><span class="sxs-lookup"><span data-stu-id="a77cd-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="a77cd-122">No exemplo de código a seguir, você pode usar um conversor de tipo para imprimir o conjunto de valores padrão que o objeto oferece suporte.</span><span class="sxs-lookup"><span data-stu-id="a77cd-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="a77cd-123">Herdar de <see cref="T:System.ComponentModel.TypeConverter" /> para implementar seus próprios requisitos de conversão.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a77cd-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="a77cd-124">Quando você herda desta classe, você pode substituir os métodos a seguir:</span>
        <span class="sxs-lookup">
          <span data-stu-id="a77cd-124">When you inherit from this class, you can override the following methods:</span>
        </span>  
  
-   <span data-ttu-id="a77cd-125">Para dar suporte à conversão de tipo personalizado, substitua o <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, e <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="a77cd-126">Para converter tipos que devem recriar o objeto para alterar seu valor, substitua o <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> e <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="a77cd-127">Para converter tipos que oferecem suporte a propriedades, substituir o <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> e <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span><span data-ttu-id="a77cd-128">Se a classe que você está convertendo não tiver propriedades e você precisa implementar propriedades, você pode usar o <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> classe como uma base para implementar os descritores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="a77cd-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span><span data-ttu-id="a77cd-129">Ao herdar de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, você deve substituir o <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> e <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="a77cd-130">Para converter tipos que oferecem suporte a valores padrão, substituir o <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> e <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span><block subset="none" type="note"><para><span data-ttu-id="a77cd-131">O tipo derivado pode ser marcado como <see langword="internal" /> ou <see langword="private" />, mas uma instância do seu tipo pode ser criada com o <see cref="T:System.ComponentModel.TypeDescriptor" /> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span><span data-ttu-id="a77cd-132">Não grave o código não seguro, supondo que o chamador é confiável.</span><span class="sxs-lookup"><span data-stu-id="a77cd-132">Do not write insecure code by assuming the caller is trusted.</span></span><span data-ttu-id="a77cd-133">Em vez disso, suponha que os chamadores podem criar instâncias de seu tipo em confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="a77cd-133">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block><span data-ttu-id="a77cd-134">Para obter mais informações sobre conversores de tipo para fins gerais (não XAML), consulte [como: implementar um conversor de tipo](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) ou [conversão do tipo generalizada](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="a77cd-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-135">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-136">Retorna se este conversor pode converter um objeto de um tipo no tipo desse conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-136">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="a77cd-137">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-138">Retorna se este conversor pode converter um objeto do tipo indicado para o tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-139">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-139">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-140">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="a77cd-141">Nunca retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-142">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="a77cd-143">Um <see cref="T:System.Type" /> que representa o tipo do qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-144">Retorna se esse conversor pode converter um objeto do tipo especificado no tipo desse conversor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-145">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-146">Conforme implementado nesta classe, este método retorna `false`, a menos que `sourceType` é um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-147">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-147">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="a77cd-148">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-149">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-149">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-150">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-150">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-151">Retorna se esse conversor pode converter o objeto para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-151">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="a77cd-152">Um <see cref="T:System.Type" /> que representa o tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-153">Retorna se esse conversor pode converter o objeto para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-153">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-154">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-154">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-155">Se `destinationType` é uma cadeia de caracteres, a implementação padrão de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-156">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a77cd-157">Um <see cref="T:System.Type" /> que representa o tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-158">Retorna se esse conversor pode converter o objeto para o tipo especificado, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-159">
            <see langword="true" /> se esse conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-159">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-160">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-161">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-162">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-163">Se `destinationType` é uma cadeia de caracteres, a implementação padrão de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-164">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-164">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-165">Converte o valor fornecido noo tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-165">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-166">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-166">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-167">Converte o valor fornecido noo tipo deste conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-167">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-168">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-168">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-169">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-169">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-170">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a77cd-171">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado como a cultura atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-172">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-172">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-173">Converte o objeto determinado para o tipo deste conversor, usando as informações de contexto e de cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-173">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-174">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-174">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-175">Os autores de tipo personalizado que pretendem dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam um <xref:System.ComponentModel.TypeConverter> classe que dá suporte a <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamento a partir de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="a77cd-176">Esse comportamento permite a conversão de tipo de cadeia de caracteres fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia de caracteres, para que o objeto pode ser produzido em um gráfico de objeto analisado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="a77cd-177">Tipos personalizados ou membros de tipos personalizados são indicados pela aplicação <xref:System.ComponentModel.TypeConverterAttribute> para as definições, com o atributo referência personalizado <xref:System.ComponentModel.TypeConverter> implementação.</span><span class="sxs-lookup"><span data-stu-id="a77cd-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="a77cd-178">Para fins XAML, você geralmente não fornecem as implementações de ramificação baseadas em `culture`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="a77cd-179">Isso ocorre porque o XAML é pré-compilado em um contexto de ambiente de desenvolvimento e informações específicas de cultura para tempo de execução XAML não é relevante para a conversão de tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="a77cd-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="a77cd-180">Para obter mais informações, consulte [conversores de tipo para XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a77cd-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-181">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-181">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-182">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-182">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="a77cd-183">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-184">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-184">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-185">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-185">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a77cd-186">Para padrões de implementação para conversores de tipo que são usados para oferecer suporte a XAML e tipos personalizados, consulte [conversores de tipo para XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-187">Converte o valor em um tipo deste conversor, usando a cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-187">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="a77cd-188">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-188">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-189">Converte a cadeia de caracteres fornecida para o tipo deste conversor usando a cultura invariável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-189">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-190">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-190">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-191">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-192">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-192">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-193">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="a77cd-194">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-194">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-195">Converte a cadeia de caracteres fornecida para o tipo deste conversor usando a cultura invariável e o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-196">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-196">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-197">Uma exceção é gerada se a cadeia de caracteres não pode ser convertida para o objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="a77cd-198">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="a77cd-199">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-200">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-201">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-202">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-202">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-203">Converte o texto especificado em um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-203">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="a77cd-204">A representação de texto do objeto a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-204">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-205">Converte o texto especificado em um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-205">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-206">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-206">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-207">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a77cd-208">Para obter um exemplo dessa função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-209">A cadeia de caracteres não pode ser convertida em objeto apropriado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-209">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-210">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="a77cd-211">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-211">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-212">Converte o texto fornecido em um objeto, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-212">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-213">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-213">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-214">Uma exceção é gerada se a cadeia de caracteres não pode ser convertida para o objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="a77cd-215">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="a77cd-216">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-217">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-218">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-219">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-219">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-220">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a77cd-221">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-221">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="a77cd-222">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-222">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="a77cd-223">O <see cref="T:System.String" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-223">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-224">Converte o texto fornecido em um objeto, usando o contexto e a informação de cultura especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-224">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-225">Um <see cref="T:System.Object" /> que representa o texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-225">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-226">Uma exceção é gerada se a cadeia de caracteres não pode ser convertida para o objeto apropriado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="a77cd-227">A implementação padrão sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="a77cd-228">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-229">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-230">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-231">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-231">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-232">Converte o objeto de valor fornecido no tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-232">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-233">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-233">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a77cd-234">O <see cref="T:System.Type" /> para o qual o parâmetro <c>value</c> será convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-235">Converte o objeto de valor especificado para o tipo especificado, usando os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-235">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-236">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-236">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-237">O tipo mais comum para converter para e de é um objeto de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="a77cd-238">Essa implementação chama <xref:System.Object.ToString%2A> no objeto, se o objeto é válido e se o tipo de destino é uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a77cd-239">O parâmetro <paramref name="destinationType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-240">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-240">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-241">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a77cd-242">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-242">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="a77cd-243">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-243">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-244">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a77cd-245">O <see cref="T:System.Type" /> para o qual o parâmetro <c>value</c> será convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-246">Converte o objeto de valor determinado para o tipo especificado, usando as informações de contexto e de cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-246">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-247">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-247">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-248">Os tipos mais comuns para converter são de e para um objeto de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="a77cd-249">Essa implementação chama <xref:System.Object.ToString%2A> no objeto se o objeto é válido e se o tipo de destino é uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="a77cd-250">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-251">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-252">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-253">Os autores de tipo personalizado que pretendem dar suporte a um comportamento de conversão de tipo para XAML normalmente implementam um <xref:System.ComponentModel.TypeConverter> classe que dá suporte a <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamento a partir de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a77cd-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="a77cd-254">Esses conversores de tipo também podem implementar <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> para oferecer suporte à serialização para o XAML.</span><span class="sxs-lookup"><span data-stu-id="a77cd-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="a77cd-255">Alguns cenários de serialização de XAML não podem ser atendidos com <xref:System.ComponentModel.TypeConverter> sozinho.</span><span class="sxs-lookup"><span data-stu-id="a77cd-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="a77cd-256">Nesses casos, pode ser necessário definir também uma <xref:System.Windows.Markup.ValueSerializer> que manipula os casos de serialização que poderiam ser tratados por <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="a77cd-257">Para obter mais informações, consulte <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a77cd-258">O parâmetro <paramref name="destinationType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-259">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-259">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-260">Substitua este método para fornecer seus próprios requisitos de conversão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-260">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="a77cd-261">Para padrões de implementação para conversores de tipo que são usados para oferecer suporte a XAML e tipos personalizados, consulte [conversores de tipo para XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-262">Converte o valor especificado em uma representação de cadeia de caracteres invariável da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-262">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-263">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-263">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-264">Converte o valor especificado em uma representação de cadeia de caracteres invariável da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-264">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-265">Um <see cref="T:System.String" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-265">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-266">O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="a77cd-267">Isso pode ser `null`. Portanto, sempre verifique.</span><span class="sxs-lookup"><span data-stu-id="a77cd-267">This can be `null`, so always check.</span></span> <span data-ttu-id="a77cd-268">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-269">Dependendo da implementação do formatador de valor, pode ser possível passar a cadeia de caracteres retornada para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-270">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-270">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-271">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-272">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-272">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-273">Converte o valor especificado em uma representação de cadeia de caracteres que não varia de acordo com a cultura, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-274">Um <see cref="T:System.String" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-274">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-275">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-276">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-277">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-278">Dependendo da implementação do formatador de valor, pode ser possível passar a cadeia de caracteres retornada para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-279">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-279">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-280">Converte o valor especificado em uma representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-280">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-281">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-281">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-282">Converte o valor especificado em uma representação de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-282">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-283">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-283">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-284">Dependendo da implementação do formatador de valor, pode ser possível passar a cadeia de caracteres retornada para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a77cd-285">Para obter um exemplo sobre esta função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-286">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-286">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-287">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-288">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-288">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-289">Converte o valor especificado em uma representação de cadeia de caracteres, usando o contexto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-289">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-290">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-290">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-291">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-292">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-293">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-294">Dependendo da implementação do formatador de valor, pode ser possível passar a cadeia de caracteres retornada para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-295">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-295">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-296">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a77cd-297">Um <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-297">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="a77cd-298">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-298">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-299">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-299">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-300">Converte o valor especificado em uma representação de cadeia de caracteres, usando as informações de contexto e cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-300">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-301">Um <see cref="T:System.Object" /> que representa o valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-301">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-302">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-303">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-304">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-305">Dependendo da implementação do formatador de valor, pode ser possível passar a cadeia de caracteres retornada para o formatador de valor para recriar uma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-306">A conversão não pode ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-306">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-307">Recria um <see cref="T:System.Object" /> dado um conjunto de valores de propriedade do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="a77cd-308">Um <see cref="T:System.Collections.IDictionary" /> que representa um dicionário de novos valores de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-309">Recria um <see cref="T:System.Object" /> dado um conjunto de valores de propriedade do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-310">Um <see cref="T:System.Object" /> que representa o <see cref="T:System.Collections.IDictionary" /> fornecido ou <see langword="null" /> se o objeto não puder ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="a77cd-311">Esse método sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-311">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-312">Use esse método para objetos que são imutáveis, mas para o qual você deseja fornecer propriedades mutáveis.</span><span class="sxs-lookup"><span data-stu-id="a77cd-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="a77cd-313">O dicionário fornecido pelo `propertyValues` parâmetro tem uma série de pares nome/valor, um para cada propriedade retornado de <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="a77cd-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-314">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="a77cd-315">Um <see cref="T:System.Collections.IDictionary" /> de novos valores de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-316">Cria uma instância do tipo ao qual esse <see cref="T:System.ComponentModel.TypeConverter" /> está associado, usando o contexto especificado, dado um conjunto de valores de propriedade para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-317">Um <see cref="T:System.Object" /> que representa o <see cref="T:System.Collections.IDictionary" /> fornecido ou <see langword="null" /> se o objeto não puder ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="a77cd-318">Esse método sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-318">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-319">Use esse método para objetos que são imutáveis, mas para o qual você deseja fornecer propriedades mutáveis.</span><span class="sxs-lookup"><span data-stu-id="a77cd-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-320">Substitua este método se o tipo que você deseja converter deve recriar o objeto para alterar seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-320">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="a77cd-321">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-322">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-322">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-323">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-323">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a77cd-324">O dicionário fornecido pelo <paramref name="propertyValues" /> parâmetro tem uma série de pares nome/valor, um para cada propriedade retornado de <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-325">O <see cref="T:System.Object" /> a ser convertido ou <see langword="null" /> se o objeto não estiver disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-326">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-326">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-327">Uma <see cref="T:System.Exception" /> que representa a exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-328">Gerada automaticamente por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-328">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-329">O <see cref="T:System.Object" /> a ser convertido ou <see langword="null" /> se o objeto não estiver disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a77cd-330">Um <see cref="T:System.Type" /> que representa o tipo no qual a conversão estava tentando converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-331">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-331">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-332">Uma <see cref="T:System.Exception" /> que representa a exceção a ser gerada quando uma conversão não puder ser executada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a77cd-333">Gerada automaticamente por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-333">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-334">Retorna se a alteração de um valor neste objeto requer uma chamada ao método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-335">Retorna se a alteração de um valor neste objeto requer uma chamada ao método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-336">
            <see langword="true" /> se a alteração de uma propriedade neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-336">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-337">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-338">Retorna se a alteração de um valor neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-339">
            <see langword="true" /> se a alteração de uma propriedade neste objeto requer uma chamada para <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para criar um novo valor, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-339">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-340">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-341">Substitua este método se o tipo que você deseja converter deve recriar o objeto para alterar seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-341">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="a77cd-342">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-343">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-343">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-344">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-344">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-345">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-345">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-346">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-347">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-347">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-348">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-349">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="a77cd-350">Por padrão, um tipo de retorno não propriedades.</span><span class="sxs-lookup"><span data-stu-id="a77cd-350">By default, a type does not return properties.</span></span> <span data-ttu-id="a77cd-351">Uma simples implementação desse método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-352">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-353">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-354">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-355">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-356">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-357">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-358">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-359">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="a77cd-360">Por padrão, um tipo de retorno não propriedades.</span><span class="sxs-lookup"><span data-stu-id="a77cd-360">By default, a type does not return properties.</span></span> <span data-ttu-id="a77cd-361">Uma simples implementação desse método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="a77cd-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-362">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-363">Um <see cref="T:System.Object" /> que especifica o tipo de matriz para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="a77cd-364">Uma matriz do tipo <see cref="T:System.Attribute" /> que é usada como um filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-365">Retorna uma coleção de propriedades para o tipo de matriz especificado pelo parâmetro de valor, usando o contexto e os atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-366">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que são expostas para esse tipo de dados ou <see langword="null" />, se não há nenhuma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-367">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-368">Substitua este método se o tipo que você deseja converter oferece suporte às propriedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-368">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="a77cd-369">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-370">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-370">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-371">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-371">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a77cd-372">A matriz de atributos é usada para filtrar a matriz.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-372">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="a77cd-373">Os atributos podem ter uma mistura de <see cref="T:System.Type" /> e <see cref="T:System.Attribute" /> objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="a77cd-374">A filtragem é definida pelas seguintes regras:</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-374">Filtering is defined by the following rules:</span>
            </span>  
  
-   <span data-ttu-id="a77cd-375">Um <see cref="T:System.Type" /> é tratado como um curinga; ele corresponde a uma propriedade que tem o <see cref="T:System.Type" /> em seu conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="a77cd-376">Se uma propriedade não tem um <see cref="T:System.Attribute" /> da mesma classe, a propriedade não está incluída na matriz retornada.</span><span class="sxs-lookup"><span data-stu-id="a77cd-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a77cd-377">Se o atributo for uma instância de <see cref="T:System.Attribute" />, a propriedade deve ser uma correspondência exata ou se ele não está incluído na matriz retornada.</span><span class="sxs-lookup"><span data-stu-id="a77cd-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a77cd-378">Se um <see cref="T:System.Attribute" /> instância for especificada e é a propriedade padrão, ele está incluído na matriz retornada mesmo se não houver nenhuma instância do <see cref="T:System.Attribute" /> na propriedade.</span><span class="sxs-lookup"><span data-stu-id="a77cd-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-379">Retorna se este objeto dá suporte a propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-379">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-380">Retorna se este objeto dá suporte a propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-380">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-381">
            <see langword="true" /> caso <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> deva ser chamado para localizar as propriedades desse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-381">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-382">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-383">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-384">Retorna se este objeto é compatível com as propriedades, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-384">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-385">
            <see langword="true" /> caso <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> deva ser chamado para localizar as propriedades desse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-385">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-386">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-387">Substitua este método se o tipo que você deseja converter oferece suporte às propriedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-387">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="a77cd-388">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-389">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-389">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-390">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-390">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-391">Retorna uma coleção de valores padrão para o tipo de dados ao qual este conversor de tipo foi projetado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-391">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-392">Retorna uma coleção de valores padrão do contexto padrão para o tipo de dados para o qual esse conversor de tipo foi criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-393">Um <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contém um conjunto padrão de valores válidos ou <see langword="null" /> se o tipo de dados não der suporte a um conjunto padrão de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-394">Conforme implementado nesta classe, este método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-395">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato que pode ser usado para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="a77cd-396">Esse parâmetro ou as propriedades desse parâmetro podem ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-396">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-397">Retorna uma coleção de valores padrão para o tipo de dados para o qual esse conversor de tipo foi criado quando fornecido com um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-398">Um <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contém um conjunto padrão de valores válidos ou <see langword="null" />, se o tipo de dados não der suporte a um conjunto padrão de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-399">Conforme implementado no <xref:System.ComponentModel.TypeConverter>, esse método sempre retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a77cd-400">Para obter um exemplo sobre esta função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-401">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-401">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-402">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-403">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-404">
            <see langword="true" /> se o <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retornado de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> for uma lista completa de valores possíveis, <see langword="false" /> se houver outros valores possíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-404">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-405">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="a77cd-406">Se a lista for exclusiva, como em um tipo de dados de enumeração, não há outros valores são válidos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="a77cd-407">Se a lista não é exclusiva, então, podem existir outros valores válidos além da lista de padrão de valores que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> método fornece.</span><span class="sxs-lookup"><span data-stu-id="a77cd-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="a77cd-408">Se os valores são exclusivos, a lista retornada por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> não deve permitir que esses valores a ser editado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-409">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-410">Retorna se a coleção de valores padrão retornada de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> é uma lista exclusiva de valores possíveis, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-411">
            <see langword="true" /> se o <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> retornado de <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> for uma lista completa de valores possíveis, <see langword="false" /> se houver outros valores possíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-411">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-412">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="a77cd-413">Se a lista for exclusiva, como em um tipo de dados de enumeração, não há outros valores são válidos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="a77cd-414">Se a lista não é exclusiva, então, podem existir outros valores válidos além da lista de padrão de valores que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> método fornece.</span><span class="sxs-lookup"><span data-stu-id="a77cd-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="a77cd-415">Se os valores são exclusivos, a lista retornada por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> não deve permitir que esses valores a ser editado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-416">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-416">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="a77cd-417">Use o <paramref name="context" /> parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="a77cd-418">Esse parâmetro pode ser <see langword="null" />, sempre verifique isso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-418">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="a77cd-419">Além disso, as propriedades no objeto de contexto podem retornar <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-419">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-420">Retorna se este objeto dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-420">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-421">Retorna se este objeto dá suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-421">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-422">
            <see langword="true" /> se <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> deve ser chamado para localizar um conjunto comum de valores aos quais o objeto dá suporte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-422">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-423">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-424">Retorna se este objeto é compatível com um conjunto padrão de valores que podem ser escolhidos em uma lista, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-425">
            <see langword="true" /> se <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> deve ser chamado para localizar um conjunto comum de valores aos quais o objeto dá suporte; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-425">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-426">Conforme implementado nesta classe, este método sempre retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="a77cd-427">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-428">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-429">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-430">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-430">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a77cd-431">Retorna se o objeto de valor especificado é válido para esse tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-431">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a77cd-432">O objeto a ser testado quanto à validade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-432">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-433">Retorna se o objeto de valor especificado é válido para esse tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-433">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-434">
            <see langword="true" /> se o valor especificado for válido para esse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-434">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-435">A partir do [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método captura exceções a <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="a77cd-436">Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para retornar `false`, ou se o valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para gerar uma exceção, o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="a77cd-437">Para habilitar o comportamento herdado, insira as seguintes linhas no arquivo de configuração do aplicativo, por exemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="a77cd-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-438">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão que podem ser validados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-438">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="a77cd-439">O <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> método é usado para validar um valor dentro do tipo em vez de determinar se <paramref name="value" /> pode ser convertido para o tipo fornecido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="a77cd-440">Por exemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> pode ser usado para determinar se um valor fornecido é válido para um tipo de enumeração.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="a77cd-441">Para ver um exemplo, consulte <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="a77cd-442">Você pode escrever seus próprios <c>WillConvertSucceed</c> método encapsulando a <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> e <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> métodos em blocos de exceção.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a77cd-443">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a77cd-444">O <see cref="T:System.Object" /> para testar a validade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-444">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-445">Retorna se o objeto de valor fornecido é válido para esse tipo e para o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-445">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-446">
            <see langword="true" /> se o valor especificado for válido para esse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-446">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-447">Use o `context` parâmetro para extrair informações adicionais sobre o ambiente do qual este conversor é invocado.</span><span class="sxs-lookup"><span data-stu-id="a77cd-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="a77cd-448">Esse parâmetro pode ser `null`, sempre verifique isso.</span><span class="sxs-lookup"><span data-stu-id="a77cd-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="a77cd-449">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="a77cd-450">A partir do [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método captura exceções a <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="a77cd-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="a77cd-451">Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para retornar `false`, ou se o valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para gerar uma exceção, o <xref:System.ComponentModel.TypeConverter.IsValid%2A> método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="a77cd-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="a77cd-452">Para habilitar o comportamento herdado, insira as seguintes linhas no arquivo de configuração do aplicativo, por exemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="a77cd-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="a77cd-453">Para obter um exemplo dessa função, consulte o <xref:System.ComponentModel.TypeConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="a77cd-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a77cd-454">Substitua este método se o tipo que você deseja converter dá suporte a valores padrão que podem ser validados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-454">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="a77cd-455">O <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> método é usado para validar um valor dentro do tipo em vez de determinar se <paramref name="value" /> pode ser convertido para o tipo fornecido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="a77cd-456">Por exemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> pode ser usado para determinar se um valor fornecido é válido para um tipo de enumeração.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="a77cd-457">Para ver um exemplo, consulte <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a77cd-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="a77cd-458">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que tem as propriedades a serem classificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="a77cd-459">Uma matriz de nomes na ordem em que você deseja que as propriedades apareçam na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-459">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a77cd-460">Classifica uma coleção de propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-460">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a77cd-461">Uma <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as propriedades classificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a77cd-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a77cd-462">Todas as propriedades na coleção que não ainda estão na matriz de nomes são adicionadas em ordem alfabética no final.</span><span class="sxs-lookup"><span data-stu-id="a77cd-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="a77cd-463">Se o `names` parâmetro é uma matriz vazia ou `null`, todas as propriedades na coleção são classificadas em ordem alfabética.</span><span class="sxs-lookup"><span data-stu-id="a77cd-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>