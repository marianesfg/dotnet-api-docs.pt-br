<Type Name="AsyncCompletedEventArgs" FullName="System.ComponentModel.AsyncCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9536ea1bbd455f045b8bf42ca811c20c2823cc54" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369750" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="05236-101">Fornece dados para o evento *MethodName*<see langword="Completed" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05236-101">Provides data for the *MethodName*<see langword="Completed" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05236-102">Se você estiver usando uma classe que implementa o [baseado em evento visão geral do padrão assíncrono](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), a classe fornecerá uma *MethodName* `Completed` eventos.</span><span class="sxs-lookup"><span data-stu-id="05236-102">If you are using a class that implements the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), the class will provide a *MethodName*`Completed` event.</span></span> <span data-ttu-id="05236-103">Se você adicionar uma instância do <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=nameWithType> delegar para o evento, você receberá informações sobre o resultado de operações assíncronas no <xref:System.ComponentModel.AsyncCompletedEventArgs> parâmetro do método do manipulador de eventos correspondente.</span><span class="sxs-lookup"><span data-stu-id="05236-103">If you add an instance of the <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=nameWithType> delegate to the event, you will receive information about the outcome of asynchronous operations in the <xref:System.ComponentModel.AsyncCompletedEventArgs> parameter of the corresponding event-handler method.</span></span>  
  
 <span data-ttu-id="05236-104">Delegado de manipulador de eventos do aplicativo cliente pode verificar o <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propriedade para determinar se a tarefa assíncrona foi cancelada.</span><span class="sxs-lookup"><span data-stu-id="05236-104">The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property to determine if the asynchronous task was cancelled.</span></span>  
  
 <span data-ttu-id="05236-105">Delegado de manipulador de eventos do aplicativo cliente pode verificar o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriedade para determinar se ocorreu uma exceção durante a execução da tarefa assíncrona.</span><span class="sxs-lookup"><span data-stu-id="05236-105">The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property to determine if an exception occurred during execution of the asynchronous task.</span></span>  
  
 <span data-ttu-id="05236-106">Se a classe oferece suporte a vários métodos assíncronos ou várias chamadas para o mesmo método assíncrono, você pode determinar qual tarefa gerado o *MethodName* `Completed` evento marcando o valor da <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="05236-106">If the class supports multiple asynchronous methods, or multiple calls to the same asynchronous method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="05236-107">Seu código precisa controlar esses tokens, conhecidos como IDs de tarefas, como suas tarefas assíncronas correspondentes iniciam e concluam.</span><span class="sxs-lookup"><span data-stu-id="05236-107">Your code will need to track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05236-108">O exemplo de código a seguir demonstra como usar um <xref:System.ComponentModel.AsyncOperation> para rastrear o tempo de vida de operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="05236-108">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="05236-109">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="05236-109">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="05236-110">As classes que seguem o padrão assíncrono baseado em evento podem gerar eventos para clientes de alerta sobre o status de operações assíncronas pendentes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05236-110">Classes that follow the Event-based Asynchronous Pattern can raise events to alert clients about the status of pending asynchronous operations.</span>
        </span>
        <span data-ttu-id="05236-111">Se a classe fornece um *MethodName* <see langword="Completed" /> eventos, você pode usar o <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> para informar os clientes sobre o resultado de operações assíncronas.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05236-111">If the class provides a *MethodName*<see langword="Completed" /> event, you can use the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> to tell clients about the outcome of asynchronous operations.</span>
        </span>
        <span data-ttu-id="05236-112">Talvez você queira se comunicar com clientes para obter mais informações sobre o resultado de uma operação assíncrona que um <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> acomoda.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05236-112">You may want to communicate to clients more information about the outcome of an asynchronous operation than an <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> accommodates.</span>
        </span>
        <span data-ttu-id="05236-113">Nesse caso, você pode derivar sua própria classe a partir de <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> classe e fornecer variáveis de instância privada adicionais e propriedades públicas correspondentes de somente leitura.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05236-113">In this case, you can derive your own class from the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class and provide additional private instance variables and corresponding read-only public properties.</span>
        </span>
        <span data-ttu-id="05236-114">Chamar o <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método antes de retornar o valor da propriedade, caso a operação foi cancelada ou ocorreu um erro.</span>
        <span class="sxs-lookup">
          <span data-stu-id="05236-114">Call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method before returning the property value, in case the operation was canceled or an error occurred.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05236-115">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05236-116">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs (Exception error, bool cancelled, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception error, bool cancelled, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (error As Exception, cancelled As Boolean, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs(Exception ^ error, bool cancelled, System::Object ^ userState);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="cancelled" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="05236-117">Qualquer erro que tenha ocorrido durante a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-117">Any error that occurred during the asynchronous operation.</span>
          </span>
        </param>
        <param name="cancelled">
          <span data-ttu-id="05236-118">Um valor que indica se a operação assíncrona foi cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-118">A value indicating whether the asynchronous operation was canceled.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="05236-119">O objeto de estado fornecido pelo usuário opcional passado para o método <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-119">The optional user-supplied state object passed to the <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05236-120">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-120">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancelled">
      <MemberSignature Language="C#" Value="public bool Cancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancelled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancelled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05236-121">Obtém um valor que indica se uma operação assíncrona foi cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-121">Gets a value indicating whether an asynchronous operation has been canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05236-122">
            <see langword="true" /> se a operação em segundo plano tiver sido cancelada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-122">
              <see langword="true" /> if the background operation has been canceled; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="05236-123">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05236-124">Quando o <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> é de propriedade `true`, a operação assíncrona foi interrompida.</span><span class="sxs-lookup"><span data-stu-id="05236-124">When the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property is `true`, the asynchronous operation was interrupted.</span></span>  
  
 <span data-ttu-id="05236-125">Delegado de manipulador de eventos do aplicativo cliente deve verificar o <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propriedade antes de acessar as propriedades em uma classe derivada de <xref:System.ComponentModel.AsyncCompletedEventArgs>; caso contrário, a propriedade irá gerar um <xref:System.InvalidOperationException> se a operação assíncrona foi interrompida.</span><span class="sxs-lookup"><span data-stu-id="05236-125">The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise an <xref:System.InvalidOperationException> if the asynchronous operation was interrupted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05236-126">O exemplo de código a seguir demonstra o uso de um <xref:System.ComponentModel.AsyncOperation> para rastrear o tempo de vida de operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="05236-126">The following code example demonstrates the using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="05236-127">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="05236-127">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05236-128">Se você fornecer propriedades somente leitura em uma classe derivada, certifique-se de chamar o <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-128">If you provide read-only properties in a derived class, be sure to call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method.</span>
            </span>
            <span data-ttu-id="05236-129">Isso impede que os clientes acessando propriedades potencialmente não são válidas devido a uma falha na operação assíncrona.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-129">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05236-130">Obtém um valor que indica qual erro ocorreu durante uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-130">Gets a value indicating which error occurred during an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05236-131">Uma instância de <see cref="T:System.Exception" />, se ocorreu um erro durante uma operação assíncrona, caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-131">An <see cref="T:System.Exception" /> instance, if an error occurred during an asynchronous operation; otherwise <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05236-132">Se uma exceção é gerada durante uma operação assíncrona, a classe atribuirá a exceção para o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="05236-132">If an exception is raised during an asynchronous operation, the class will assign the exception to the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property.</span></span> <span data-ttu-id="05236-133">Delegado de manipulador de eventos do aplicativo cliente deve verificar o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriedade antes de acessar as propriedades em uma classe derivada de <xref:System.ComponentModel.AsyncCompletedEventArgs>; caso contrário, a propriedade gerará uma <xref:System.Reflection.TargetInvocationException> com seus <xref:System.Exception.InnerException%2A> propriedade contém uma referência a <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="05236-133">The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise a <xref:System.Reflection.TargetInvocationException> with its <xref:System.Exception.InnerException%2A> property holding a reference to <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.</span></span>  
  
 <span data-ttu-id="05236-134">O valor de <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> é de propriedade `null` se a operação foi cancelada.</span><span class="sxs-lookup"><span data-stu-id="05236-134">The value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is `null` if the operation was canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05236-135">O exemplo de código a seguir demonstra como usar um <xref:System.ComponentModel.AsyncOperation> para rastrear o tempo de vida de operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="05236-135">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="05236-136">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="05236-136">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05236-137">Se você fornecer propriedades somente leitura em uma classe derivada, certifique-se de chamar o <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método em sua implementação de propriedade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-137">If you provide read-only properties in a derived class, be sure to call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method in your property implementation.</span>
            </span>
            <span data-ttu-id="05236-138">Isso impede que os clientes acessando propriedades potencialmente não são válidas devido a uma falha na operação assíncrona.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-138">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="RaiseExceptionIfNecessary">
      <MemberSignature Language="C#" Value="protected void RaiseExceptionIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseExceptionIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseExceptionIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseExceptionIfNecessary();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05236-139">Gera uma exceção fornecida pelo usuário se uma operação assíncrona falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-139">Raises a user-supplied exception if an asynchronous operation failed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05236-140">O exemplo de código a seguir demonstra o uso de <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> em derivadas propriedades de classe.</span><span class="sxs-lookup"><span data-stu-id="05236-140">The following code example demonstrates using <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> in derived class properties.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#6)]
[!code-vb[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="05236-141">A propriedade <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-141">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> property is <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="05236-142">A propriedade <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> foi definida pela operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-142">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property has been set by the asynchronous operation.</span>
          </span>
          <span data-ttu-id="05236-143">A propriedade <see cref="P:System.Exception.InnerException" /> contém uma referência a <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-143">The <see cref="P:System.Exception.InnerException" /> property holds a reference to <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05236-144">Se derivada sua própria classe a partir de <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> classe, as propriedades somente leitura devem chamar o <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método antes de retornar o valor da propriedade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-144">If you have derived your own class from the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class, your read-only properties should call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method before returning the property value.</span>
            </span>
            <span data-ttu-id="05236-145">Se o componente do assíncrono código trabalho atribui uma exceção para o <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> propriedade ou define o <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> propriedade <see langword="true" />, a propriedade gerará uma exceção se um cliente tenta ler seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-145">If the component's asynchronous worker code assigns an exception to the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property or sets the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> property to <see langword="true" />, the property will raise an exception if a client tries to read its value.</span>
            </span>
            <span data-ttu-id="05236-146">Isso impede que os clientes acessando propriedades potencialmente não são válidas devido a uma falha na operação assíncrona.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05236-146">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="UserState">
      <MemberSignature Language="C#" Value="public object UserState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05236-147">Obtém o identificador exclusivo para a tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-147">Gets the unique identifier for the asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05236-148">Uma referência de objeto que identifica exclusivamente a tarefa assíncrona, caso contrário, <see langword="null" /> se nenhum valor tiver sido definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05236-148">An object reference that uniquely identifies the asynchronous task; otherwise, <see langword="null" /> if no value has been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05236-149">Se uma classe oferece suporte a vários métodos assíncronos ou várias invocações de um único método, você pode determinar qual tarefa gerado o *MethodName* `Completed` evento marcando o valor da <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="05236-149">If a class supports multiple asynchronous methods, or multiple invocations of a single method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="05236-150">Seu código precisa controlar esses tokens, conhecidos como IDs de tarefas, como suas tarefas assíncronas correspondentes iniciam e concluam.</span><span class="sxs-lookup"><span data-stu-id="05236-150">Your code will need track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete.</span></span>  
  
 <span data-ttu-id="05236-151">O valor dessa propriedade é definido durante a chamada original para o método assíncrono que a tarefa foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="05236-151">The value of this property is set during the original call to the asynchronous method that started the task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05236-152">O exemplo de código a seguir demonstra como usar um <xref:System.ComponentModel.AsyncOperation> para rastrear o tempo de vida de operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="05236-152">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="05236-153">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="05236-153">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
      </Docs>
    </Member>
  </Members>
</Type>