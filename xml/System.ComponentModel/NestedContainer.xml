<Type Name="NestedContainer" FullName="System.ComponentModel.NestedContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a124ee078be65668efae6c08b17c83ac01930fb7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NestedContainer extends System.ComponentModel.Container implements class System.ComponentModel.IContainer, class System.ComponentModel.INestedContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.NestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements IDisposable, INestedContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, IDisposable, System::ComponentModel::INestedContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INestedContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="93881-101">Fornece a implementação de base para a interface <see cref="T:System.ComponentModel.INestedContainer" />, que permite que os contêineres tenham um componente de propriedade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93881-101">Provides the base implementation for the <see cref="T:System.ComponentModel.INestedContainer" /> interface, which enables containers to have an owning component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-102">O <xref:System.ComponentModel.NestedContainer> classe é uma implementação simples do <xref:System.ComponentModel.INestedContainer> interface, que define um componente que contém zero ou mais componentes logicamente e pertence a um componente pai.</span><span class="sxs-lookup"><span data-stu-id="93881-102">The <xref:System.ComponentModel.NestedContainer> class is a simple implementation of the <xref:System.ComponentModel.INestedContainer> interface, which defines a component that logically contains zero or more other components and is owned by a parent component.</span></span> <span data-ttu-id="93881-103">O comportamento de contêineres aninhados difere de um padrão <xref:System.ComponentModel.Container> de várias maneiras, incluindo o seguinte:</span><span class="sxs-lookup"><span data-stu-id="93881-103">The behavior of nested containers differs from a standard <xref:System.ComponentModel.Container> in a number of ways, including the following:</span></span>  
  
-   <span data-ttu-id="93881-104">Características do site, como <xref:System.ComponentModel.Component.DesignMode%2A> e <xref:System.ComponentModel.Component.GetService%2A> são roteadas por meio do site do componente proprietário.</span><span class="sxs-lookup"><span data-stu-id="93881-104">Site characteristics such as <xref:System.ComponentModel.Component.DesignMode%2A> and <xref:System.ComponentModel.Component.GetService%2A> are routed through the owning component’s site.</span></span>  
  
-   <span data-ttu-id="93881-105">O site <xref:System.ComponentModel.ISite.Name%2A> propriedade é um nome qualificado que inclui o nome do componente proprietário seguido por um ponto (.) e o nome do componente filho.</span><span class="sxs-lookup"><span data-stu-id="93881-105">The site’s <xref:System.ComponentModel.ISite.Name%2A> property is a qualified name that includes the owning component’s name followed by a period (.) and the child component’s name.</span></span>  
  
-   <span data-ttu-id="93881-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> fornece suporte para o <xref:System.ComponentModel.INestedContainer> como um serviço.</span><span class="sxs-lookup"><span data-stu-id="93881-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> provides support for the <xref:System.ComponentModel.INestedContainer> as a service.</span></span>  
  
-   <span data-ttu-id="93881-107">Quando o componente proprietário for descartado, o contêiner é descartado também.</span><span class="sxs-lookup"><span data-stu-id="93881-107">When the owning component is disposed, the container is disposed as well.</span></span>  
  
 <span data-ttu-id="93881-108">Além disso, designers de tratam contêineres aninhados de forma diferente.</span><span class="sxs-lookup"><span data-stu-id="93881-108">In addition, designers treat nested containers differently.</span></span> <span data-ttu-id="93881-109">Um host designer só está interessado em um contêiner — associado com o host.</span><span class="sxs-lookup"><span data-stu-id="93881-109">A designer host is only interested in one container—the one associated with the host.</span></span> <span data-ttu-id="93881-110">Portanto, o componente de adicionar e remover eventos não são disparados quando um componente é adicionado ou removido de um contêiner aninhado.</span><span class="sxs-lookup"><span data-stu-id="93881-110">Therefore, component add and remove events are not raised when a component is added to or removed from a nested container.</span></span> <span data-ttu-id="93881-111">No entanto, como serviços fluem para o contêiner aninhado, eventos de alteração de componente são gerados quando um componente em um contêiner aninhado é alterado.</span><span class="sxs-lookup"><span data-stu-id="93881-111">However, because services flow through to the nested container, component change events are raised when a component in a nested container is changed.</span></span>  
  
 <span data-ttu-id="93881-112">Essa diferença no acompanhamento de evento também afeta a funcionalidade de desfazer, que está diretamente ligada à serialização.</span><span class="sxs-lookup"><span data-stu-id="93881-112">This disparity in event tracking also impacts undo functionality, which is closely tied to serialization.</span></span> <span data-ttu-id="93881-113">O mecanismo de desfazer padrão usa <xref:System.ComponentModel.Design.IReferenceService> para rastrear as alterações feitas nos componentes.</span><span class="sxs-lookup"><span data-stu-id="93881-113">The standard undo engine uses <xref:System.ComponentModel.Design.IReferenceService> to track changes made to components.</span></span> <span data-ttu-id="93881-114">Se o mecanismo de desfazer não pode identificar o nome de um componente por meio do serviço de referência, o mecanismo irá ignorar as alterações para esse componente.</span><span class="sxs-lookup"><span data-stu-id="93881-114">If the undo engine cannot identify a name for a component through the reference service, the engine will ignore any changes for that component.</span></span> <span data-ttu-id="93881-115">Este serviço reconhece automaticamente alterações nos componentes independentes somente se eles são expostos como propriedades públicas de somente leitura do mesmo nome nos seus proprietários.</span><span class="sxs-lookup"><span data-stu-id="93881-115">This service automatically recognizes changes to contained components only if they are exposed as public read-only properties of the same name in their owners.</span></span> <span data-ttu-id="93881-116">Caso contrário, o desenvolvedor deve passar em eventos de alteração até o proprietário de componente.</span><span class="sxs-lookup"><span data-stu-id="93881-116">Otherwise, the developer must pass component change events up to the owner.</span></span> <span data-ttu-id="93881-117">Por exemplo, se um componente aninhado `Text` propriedade é resurfaced em seu componente de propriedade como um `Address` propriedade, quando o `Text` propriedade é alterada, uma alteração de propriedade deve ser feita programaticamente para o correspondente `Address` propriedade ou então que as alterações não serão controladas por Desfazer.</span><span class="sxs-lookup"><span data-stu-id="93881-117">For example, if a nested component’s `Text` property is resurfaced on its owning component as an `Address` property, when the `Text` property is changed, a property change must be programmatically made for the corresponding `Address` property or else that change will not be tracked by undo.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.INestedContainer" />
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <altmember cref="T:System.ComponentModel.Design.IReferenceService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NestedContainer (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NestedContainer(System::ComponentModel::IComponent ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="93881-118">O <see cref="T:System.ComponentModel.IComponent" /> que detém esse contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-118">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93881-119">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.NestedContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-119">Initializes a new instance of the <see cref="T:System.ComponentModel.NestedContainer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-120">Este construtor inscreve no seu proprietário <xref:System.ComponentModel.IComponent.Disposed> evento para que o contêiner aninhado <xref:System.ComponentModel.NestedContainer.Dispose%2A> método será chamado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="93881-120">This constructor enlists in its owner's <xref:System.ComponentModel.IComponent.Disposed> event so that the nested container's <xref:System.ComponentModel.NestedContainer.Dispose%2A> method will automatically be called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93881-121">
            <paramref name="owner" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-121">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.NestedContainer.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="93881-122">O <see cref="T:System.ComponentModel.IComponent" /> para o qual criar um site.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-122">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="93881-123">O nome a ser atribuído ao <c>componente</c> ou <see langword="null" /> para ignorar a atribuição de nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-123">The name to assign to <c>component</c>, or <see langword="null" /> to skip the name assignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93881-124">Cria um site para o componente dentro do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-124">Creates a site for the component within the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93881-125">O <see cref="T:System.ComponentModel.ISite" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-125">The newly created <see cref="T:System.ComponentModel.ISite" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-126">Se o `name` parâmetro é `null`, o <xref:System.ComponentModel.IComponent> é adicionado ao contêiner aninhado sem um nome de identificação.</span><span class="sxs-lookup"><span data-stu-id="93881-126">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the nested container without an identifying name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93881-127">
            <paramref name="component" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-127">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="93881-128">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93881-129">Libera os recursos usados pelo contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-129">Releases the resources used by the nested container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-130">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="93881-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="93881-131">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="93881-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="93881-132"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="93881-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="93881-133">Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ComponentModel.NestedContainer> referências.</span><span class="sxs-lookup"><span data-stu-id="93881-133">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.NestedContainer> references.</span></span> <span data-ttu-id="93881-134">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="93881-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="93881-135">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93881-135">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="93881-136">Ao substituir <see langword="Dispose(Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="93881-136">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="93881-137">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93881-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="93881-138">Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="93881-138">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="93881-139">O <see cref="T:System.Type" /> do serviço a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-139">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93881-140">Obtém o objeto de serviço do tipo especificado, se estiver disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-140">Gets the service object of the specified type, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93881-141">Um <see cref="T:System.Object" /> que implementa o serviço solicitado ou <see langword="null" />, se o serviço não puder ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-141">An <see cref="T:System.Object" /> that implements the requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-142">Esse método substitui o <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="93881-142">This method overrides the <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="93881-143">Essa implementação apenas resolve solicitações para o <xref:System.ComponentModel.INestedContainer> e <xref:System.ComponentModel.IContainer> serviços.</span><span class="sxs-lookup"><span data-stu-id="93881-143">This implementation only resolves requests for the <xref:System.ComponentModel.INestedContainer> and <xref:System.ComponentModel.IContainer> services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.GetService(System.Type)" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.INestedContainer.Owner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93881-144">Obtém o componente proprietário para esse contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-144">Gets the owning component for this nested container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93881-145">O <see cref="T:System.ComponentModel.IComponent" /> que detém esse contêiner aninhado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-145">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-146">O componente proprietário é a característica que diferencia contêineres aninhados de contêineres comuns.</span><span class="sxs-lookup"><span data-stu-id="93881-146">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.INestedContainer.Owner" />
      </Docs>
    </Member>
    <Member MemberName="OwnerName">
      <MemberSignature Language="C#" Value="protected virtual string OwnerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwnerName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.OwnerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OwnerName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ OwnerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93881-147">Obtém o nome do componente proprietário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-147">Gets the name of the owning component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93881-148">O nome do componente de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93881-148">The name of the owning component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93881-149">Essa propriedade pode ser substituída para fornecer um nome de proprietário personalizado.</span><span class="sxs-lookup"><span data-stu-id="93881-149">This property may be overridden to provide a custom owner name.</span></span> <span data-ttu-id="93881-150">A implementação padrão de pesquisa de site do proprietário para <xref:System.ComponentModel.INestedSite> e chamadas <xref:System.ComponentModel.INestedSite.FullName%2A>, ou <xref:System.ComponentModel.ISite.Name%2A> se não houver nenhum site aninhada.</span><span class="sxs-lookup"><span data-stu-id="93881-150">The default implementation searches the owner's site for <xref:System.ComponentModel.INestedSite> and calls <xref:System.ComponentModel.INestedSite.FullName%2A>, or <xref:System.ComponentModel.ISite.Name%2A> if there is no nested site.</span></span> <span data-ttu-id="93881-151">Se não estiver disponível, essa propriedade retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="93881-151">If neither is available, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>