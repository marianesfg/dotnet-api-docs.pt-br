<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyDescriptor.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e059b64b5fedee627a7dad23bafc67c4252df0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e059b64b5fedee627a7dad23bafc67c4252df0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">Fornece uma abstração de uma propriedade em uma classe.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">Uma descrição de uma propriedade consiste em um nome, seus atributos, a classe do componente que a propriedade está associada e o tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> provides the following properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> Fornece as propriedades e métodos a seguir:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contains the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contém o <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> para essa propriedade.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indicates whether this property should be localized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> Indica se esta propriedade deve ser localizada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> returns an editor of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> Retorna um editor do tipo especificado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> also provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> também fornece o seguinte <ph id="ph2">`abstract`</ph> propriedades e métodos:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contains the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contém o tipo de componente, que essa propriedade está vinculada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indicates whether this property is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> Indica se esta propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> gets the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> Obtém o tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indicates whether resetting the component changes the value of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> Indica se a redefinição do componente altera o valor do componente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> returns the current value of the property on a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> Retorna o valor atual da propriedade em um componente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> resets the value for this property of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> Redefine o valor para essa propriedade do componente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> sets the value of the component to a different value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> Define o valor do componente para um valor diferente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indicates whether the value of this property needs to be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> Indica se o valor dessa propriedade deve ser persistente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`abstract`</ph> membros são implementados por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre reflexão, consulte os tópicos <bpt id="p1">[</bpt>reflexão<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir se baseia o exemplo de <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It prints the information (category, description, display name) of the text of a button in a text box.</source>
          <target state="translated">Imprime as informações (categoria, descrição, nome de exibição) do texto de um botão em uma caixa de texto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">Ele pressupõe que <ph id="ph1">`button1`</ph> e <ph id="ph2">`textbox1`</ph> tenham sido criadas em um formulário.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</source>
          <target state="translated">O exemplo de código a seguir mostra como implementar um descritor de propriedade personalizada que fornece um wrapper somente leitura em torno de uma propriedade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> is used in a custom designer to provide a read-only property descriptor for the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> é usado em um designer personalizado para fornecer um descritor de propriedade somente leitura para o controle <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code examples show how to use the <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> in a custom designer.</source>
          <target state="translated">Os exemplos de código a seguir mostram como usar o <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> em um designer personalizado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the property and its attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que contém o nome da propriedade e seus atributos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> com o nome e os atributos no <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> containing the name of the member and its attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que contém o nome do membro e seus atributos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array containing the attributes you want to associate with the property.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que contém os atributos que você deseja associar à propriedade.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> com o nome no <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado e os atributos tanto no <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> quanto na matriz <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">Este construtor acrescenta os atributos no <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> matriz aos atributos a <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">O nome da propriedade.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the property attributes.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que contém os atributos da propriedade.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the specified name and attributes.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> com o nome e os atributos especificados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">O componente ao qual adicionar o manipulador.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">O delegado a ser adicionado como um ouvinte.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Permite que outros objetos sejam notificados quando essa propriedade muda.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">O componente a ser testado quanto à capacidade de redefinição.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">Quando substituído em uma classe derivada, retorna se a redefinição de um objeto altera ou não seu valor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a redefinição do componente altera seu valor; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, esse método procura um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds one, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">Se ele encontrar um, ele compara o valor do atributo com o valor da propriedade atual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>It returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> when the default value does not match the property's current value.</source>
          <target state="translated">Ele retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> quando o valor padrão não coincide com o valor da propriedade atual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</source>
          <target state="translated">Se esse método não é possível encontrar um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, ele procura por um método "ShouldPersistMyProperty" que você precisa implementar por conta própria.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns what "ShouldPersistMyProperty" returns.</source>
          <target state="translated">Se isso for encontrado, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> retorna o que retorna "ShouldPersistMyProperty".</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</source>
          <target state="translated">Caso contrário, ele procura por um método "ResetMyProperty" que você precisa implementar por conta própria.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se isso for encontrado, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> retorna <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se não conseguir encontrar uma <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, um método "ShouldPersistMyProperty", ou um método "ResetMyProperty", em seguida, ele retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o tipo de componente ao qual essa propriedade está associada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo de componente, essa propriedade está vinculada.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> métodos são chamados, o objeto especificado pode ser uma instância desse tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propriedade é implementada por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">Obtém o conversor de tipo dessa propriedade.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que é usado para converter o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> dessa propriedade.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to create.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo a ser criado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">Cria uma instância do tipo especificado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A new instance of the type.</source>
          <target state="translated">Uma nova instância do tipo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> looks for a constructor that takes the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> procura um construtor que usa o tipo especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">Se ele encontrar um construtor, o tipo da propriedade é passado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">Conversores e editores de usam esse método para criar versões de um componente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">Esse método permite que um único componente ser reutilizado por mais de um tipo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>for access to private class members and metadata.</source>
          <target state="translated">para acessar membros de classe privada e metadados.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>The object to compare to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">O objeto a comparar a este <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">Compara este a outro objeto para ver se eles são equivalentes.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os valores forem equivalentes; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that lists the attributes in the parent class.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que lista os atributos na classe pai.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Initially, this is empty.</source>
          <target state="translated">Inicialmente, está vazio.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Adds the attributes of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to the specified list of attributes in the parent class.</source>
          <target state="translated">Adiciona os atributos do <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> à lista especificada de atributos na classe pai.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">Para atributos duplicados, o último deles adicionados à lista será mantido.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Returns the default <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> padrão.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A collection of property descriptor.</source>
          <target state="translated">Uma coleção do descritor de propriedades.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">Esse método passa <ph id="ph1">`null`</ph> para ambos os <ph id="ph2">`instance`</ph> parâmetro e o <ph id="ph3">`filter`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">As propriedades para o <ph id="ph1">`instance`</ph> parâmetro pode ser diferentes das propriedades de uma classe, pois o contêiner pode adicionar ou remover propriedades, se o <ph id="ph2">`instance`</ph> parâmetro é localizado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">O parâmetro <ph id="ph1">`filter`</ph> pode combinar objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph> e <ph id="ph3">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">A filtragem é definida pelas seguintes regras:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Type&gt;</ph> é tratado como uma curinga; ele corresponde a qualquer propriedade que tenha o <ph id="ph2">&lt;xref:System.Type&gt;</ph> em seu conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Se uma propriedade não tiver <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> da mesma classe, a propriedade não será incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Caso o atributo seja uma instância de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, a propriedade deve ser uma correspondência exata para ser incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and it is the default property, it will be included in the returned array, even if there is no instance of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Se você especificar um <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> e é a propriedade padrão, ele será incluído na matriz retornada, mesmo se não houver nenhuma instância de <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> a ser usada como um filtro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> using a specified array of attributes as a filter.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> usando uma matriz especificada de atributos como filtro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> com as propriedades que correspondem aos atributos especificados.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">Esse método passa <ph id="ph1">`null`</ph> para o <ph id="ph2">`instance`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">As propriedades para o <ph id="ph1">`instance`</ph> parâmetro pode ser diferentes das propriedades de uma classe, porque o site pode adicionar ou remover propriedades, se o <ph id="ph2">`instance`</ph> parâmetro é localizado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">O parâmetro <ph id="ph1">`filter`</ph> pode combinar objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph> e <ph id="ph3">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">A filtragem é definida pelas seguintes regras:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Type&gt;</ph> é tratado como uma curinga; ele corresponde a qualquer propriedade que tenha o <ph id="ph2">&lt;xref:System.Type&gt;</ph> em seu conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Se uma propriedade não tiver <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> da mesma classe, a propriedade não será incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Caso o atributo seja uma instância de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, a propriedade deve ser uma correspondência exata para ser incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Se você especificar um <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instância e é a propriedade padrão, ele será incluído na matriz retornada mesmo se não houver nenhuma instância do <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">Um componente cujas propriedades serão obtidas.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> para um determinado objeto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> com as propriedades do componente especificado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">Esse método passa <ph id="ph1">`null`</ph> para o <ph id="ph2">`filter`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">As propriedades para o <ph id="ph1">`instance`</ph> parâmetro pode ser diferentes das propriedades de uma classe, porque o site pode adicionar ou remover propriedades, se o <ph id="ph2">`instance`</ph> parâmetro é localizado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">O parâmetro <ph id="ph1">`filter`</ph> pode combinar objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph> e <ph id="ph3">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">A filtragem é definida pelas seguintes regras:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Type&gt;</ph> é tratado como uma curinga; ele corresponde a qualquer propriedade que tenha o <ph id="ph2">&lt;xref:System.Type&gt;</ph> em seu conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Se uma propriedade não tiver <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> da mesma classe, a propriedade não será incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Caso o atributo seja uma instância de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, a propriedade deve ser uma correspondência exata para ser incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Se você especificar um <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instância e é a propriedade padrão, ele será incluído na matriz retornada mesmo se não houver nenhuma instância do <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Um componente cujas propriedades serão obtidas.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> a ser usada como um filtro.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> para um determinado objeto usando uma matriz especificada de atributos como filtro.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> com as propriedades que correspondem aos atributos especificados para o componente especificado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">As propriedades para o <ph id="ph1">`instance`</ph> parâmetro pode ser diferentes das propriedades de uma classe, porque o site pode adicionar ou remover propriedades, se o <ph id="ph2">`instance`</ph> parâmetro é localizado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated">O parâmetro <ph id="ph1">`filter`</ph> pode combinar objetos <ph id="ph2">&lt;xref:System.Type&gt;</ph> e <ph id="ph3">&lt;xref:System.Attribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">A filtragem é definida pelas seguintes regras:</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;xref:System.Type&gt;</ph> é tratado como uma curinga; ele corresponde a qualquer propriedade que tenha o <ph id="ph2">&lt;xref:System.Type&gt;</ph> em seu conjunto de atributos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">Se uma propriedade não tiver <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> da mesma classe, a propriedade não será incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">Caso o atributo seja uma instância de <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, a propriedade deve ser uma correspondência exata para ser incluída na matriz retornada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">Se você especificar um <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instância e é a propriedade padrão, ele será incluído na matriz retornada mesmo se não houver nenhuma instância do <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Generally, child properties should be returned by implementing the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returned from this property.</source>
          <target state="translated">Em geral, as propriedades filho devem ser retornadas Implementando o <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> membro do <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> retornado dessa propriedade.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">O tipo base do editor, que é usado para diferenciar entre os vários editores que dão suporte a uma propriedade.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">Obtém um editor do tipo especificado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">Uma instância do tipo de editor solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se um editor não puder ser encontrado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Retorna o código hash para esse objeto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>The hash code for this object.</source>
          <target state="translated">O código hash desse objeto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the invocation target.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do destino da invocação.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The potential invocation target.</source>
          <target state="translated">O destino da invocação potencial.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">Esse método retorna o objeto que deve ser usado durante a invocação de membros.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that should be used during invocation of members.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que deve ser usado durante a invocação de membros.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">Normalmente, o valor de retorno será o mesmo que o <ph id="ph1">`instance`</ph> passado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> method may return a different value.</source>
          <target state="translated">Se alguém associado a outro objeto com esta instância, ou se a instância é um descritor de tipo personalizado, o <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> método pode retornar um valor diferente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">O nome qualificado pelo assembly do tipo a ser recuperado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>Returns a type using its name.</source>
          <target state="translated">Retorna um tipo usando seu nome.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that matches the given type name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a match cannot be found.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que corresponde ao nome de tipo em questão ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não for encontrada uma correspondência.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>To find the appropriate type, this method first checks the assembly of the type that this <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> references.</source>
          <target state="translated">Para localizar o tipo apropriado, esse método verifica primeiro o assembly do tipo que este <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>If it does not find the type in the assembly, it calls <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se ele não encontrar o tipo no assembly, ele chama <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">O componente com a propriedade cujo valor deve ser recuperado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o valor atual da propriedade em um componente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The value of a property for a given component.</source>
          <target state="translated">O valor de uma propriedade para um determinado componente.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>This method automatically calls the pre-change method, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, and post-change method, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</source>
          <target state="translated">Este método chama automaticamente o método de pré-alteração de <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>e após alterar o método, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, do <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</source>
          <target state="translated">Quando você substituir esse método, ele obtém o valor atual da propriedade invocando um método "GetMyProperty" que você precisa implementar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>An exception in that method should pass through.</source>
          <target state="translated">Uma exceção no método deve passar.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">O componente para o qual recuperar manipuladores de eventos.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>Retrieves the current set of <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event handlers for a specific component</source>
          <target state="translated">Recupera o conjunto atual de manipuladores de eventos <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> para um componente específico</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>A combined multicast event handler, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no event handlers are currently assigned to <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</source>
          <target state="translated">Um manipulador de eventos multicast combinado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum manipulador de eventos estiver atribuído ao <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se esta propriedade deve ser localizada, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o membro está marcado com o <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> definida como <ph id="ph3">&lt;see langword="true" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>When a property is marked with the <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id="ph2">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">Quando uma propriedade é marcada com o <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> definido como <ph id="ph2">`true`</ph> e usado em um designer visual, seus valores são salvos em um arquivo de recurso.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">Se você marca uma propriedade com o atributo e, em seguida, defina a propriedade no código, os arquivos de recursos não são usados.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém um valor que indica se a propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a propriedade é somente leitura; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>The object that raises the event.</source>
          <target state="translated">O objeto que gera o evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>Raises the <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event that you implemented.</source>
          <target state="translated">Gera o evento <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> que foi implementado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">Esse método deve ser chamado pela sua implementação do descritor de propriedade quando o valor da propriedade é alterada.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the property.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo da propriedade.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propriedade é implementada por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to remove the handler for.</source>
          <target state="translated">O componente do qual remover o manipulador.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">O delegado a ser removido como ouvinte.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Permite que outros objetos sejam notificados quando essa propriedade muda.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">O componente com o valor da propriedade que deve ser redefinido para o valor padrão.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">Quando substituído em uma classe derivada, redefine o valor dessa propriedade do componente para o valor padrão.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method determines the value to reset the property to in the following order of precedence:</source>
          <target state="translated">Este método determina o valor para redefinir a propriedade como na seguinte ordem de precedência:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">Há uma propriedade sombreada para essa propriedade.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> for this property.</source>
          <target state="translated">Há um <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> para essa propriedade.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">Há um método "ResetMyProperty" que você implementou, onde "MyProperty" é o nome da propriedade que você passa para ele.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">Esse método cria um <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automaticamente na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> método para criar um novo <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> para representar as alterações.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> método para indicar que a transação foi iniciada e as alterações estão prestes a ocorrer.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">O método redefine a propriedade para o valor determinado pela ordem de verificação desse método.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> método para indicar que as alterações ocorreram.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is completed.</source>
          <target state="translated">As chamadas de método <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> para indicar que a transação é concluída.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">A finalidade da transação é oferecer suporte a <ph id="ph1">`Undo`</ph> e <ph id="ph2">`Redo`</ph> funcionalidade.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, esse método procura um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds one, it sets the value of the property to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> it found.</source>
          <target state="translated">Se ele encontrar um, ele define o valor da propriedade para o <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> -encontrado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ResetMyProperty" method that you need to implement.</source>
          <target state="translated">Se esse método não é possível encontrar um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, ele procura por um método "ResetMyProperty" que você precisa implementar.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this is found, the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> method invokes it.</source>
          <target state="translated">Se isso for encontrado, o <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> método invoca a ele.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> cannot find a <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> não é possível encontrar um <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> ou um método "ResetMyProperty" que você implementou, ele não executa uma operação.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se esta propriedade deve ser serializada, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">Uma da <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> valores de enumeração que especifica se essa propriedade deve ser serializada.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">O componente com o valor da propriedade que deve ser definida.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">O novo valor.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">Quando substituído em uma classe derivada, define o valor do componente para um valor diferente.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">Esse método cria um <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automaticamente na seguinte ordem:</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> método para criar um novo <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> para representar as alterações.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> método para indicar que a transação foi iniciada e as alterações estão prestes a ocorrer.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">O método redefine a propriedade para o valor determinado pela ordem de verificação desse método.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">O método chama o <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> método para indicar que as alterações ocorreram.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is complete.</source>
          <target state="translated">As chamadas de método <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> para indicar que a transação seja concluída.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">A finalidade da transação é oferecer suporte a <ph id="ph1">`Undo`</ph> e <ph id="ph2">`Redo`</ph> funcionalidade.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</source>
          <target state="translated">Quando você substituir esse método, ele deve definir o valor da propriedade invocando o método "SetMyProperty" apropriado que você precisa implementar.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>If the value specified is not valid, the component should throw an exception, which is passed up.</source>
          <target state="translated">Se o valor especificado não é válido, o componente deve lançar uma exceção, que é passada.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</source>
          <target state="translated">Você deve criar a propriedade para que um método de "GetMyProperty" (que você implementou) de um método "SetMyProperty" a seguir retorna o valor passado durante o método "SetMyProperty" não gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">O componente com a propriedade a ser examinada quanto à persistência.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">Quando substituído em uma classe derivada, determina um valor que indica se o valor dessa propriedade deve ser persistente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a propriedade deve ser persistida, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, this method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current value of the property is different from its default value.</source>
          <target state="translated">Quando substituído em uma classe derivada, esse método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor atual da propriedade é diferente do valor padrão.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>It looks for a default value by first looking for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">Ele procura por um valor padrão, procurando primeiro um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If the method finds this attribute, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">Se o método encontra esse atributo, ele compara o valor do atributo com o valor da propriedade atual.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</source>
          <target state="translated">Se esse método não é possível encontrar um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, ele procura por um método "ShouldSerializeMyProperty" que você precisa implementar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If it is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> invokes it.</source>
          <target state="translated">Se for encontrado, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> invoca.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se esse método não é possível encontrar um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> ou um método "ShouldSerializeMyProperty", ele não pode criar otimizações e retornará <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> class implements special serialization logic for inherited components.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> classe implementa a lógica de serialização especiais para os componentes herdados.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">Obtém um valor que indica se as notificações de alteração de valor para essa propriedade podem ser obtidas de fora do descritor da propriedade.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if value change notifications may originate from outside the property descriptor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se as notificações de alteração de valor podem ser obtidos fora o descritor de propriedade; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> propriedade indica se as notificações de alteração de valor para essa propriedade podem originam fora o descritor de propriedade, como do componente em si, ou se as notificações só serão proveniente de chamadas diretas feitas a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>For example, the component may implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph2">`name.Changed`</ph> event for this property.</source>
          <target state="translated">Por exemplo, o componente pode implementar o <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, ou pode ter uma explícita <ph id="ph2">`name.Changed`</ph> eventos para essa propriedade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>