<Type Name="MaskedTextProvider" FullName="System.ComponentModel.MaskedTextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="08e04e06dcec92c59b9060542e5a7a8b7c355107" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37691549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextProvider extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.MaskedTextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextProvider&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextProvider : ICloneable" />
  <TypeSignature Language="F#" Value="type MaskedTextProvider = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="41e2d-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41e2d-101">Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-102">O <xref:System.Windows.Forms.MaskedTextBox> controle contém uma máscara, composto de caracteres literais e a formatação de elementos, o que ele testa todas as entradas de usuário contra.</span><span class="sxs-lookup"><span data-stu-id="41e2d-102">The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</span></span> <span data-ttu-id="41e2d-103">Em vez de associar permanentemente um mecanismo de análise da máscara específico com <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms fornece-o como um serviço separado, representado pelo <xref:System.ComponentModel.MaskedTextProvider> classe, que define a sintaxe da linguagem de mascaramento discutida na documentação do o <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-103">Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="41e2d-104">Muitos dos membros a <xref:System.Windows.Forms.MaskedTextBox> classe se referem a suas implementações aos membros nomeados da mesma forma de associado <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-104">Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>.</span></span> <span data-ttu-id="41e2d-105">Por exemplo, o <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> propriedade do <xref:System.Windows.Forms.MaskedTextBox> classe refere-se todo o acesso ao <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> da <xref:System.ComponentModel.MaskedTextProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="41e2d-105">For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 <span data-ttu-id="41e2d-106">O mecanismo de análise da máscara usado pelo <xref:System.ComponentModel.MaskedTextProvider> é modelada após o controle de edição mascarado incluído no Microsoft Visual Basic version 6.</span><span class="sxs-lookup"><span data-stu-id="41e2d-106">The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</span></span> <span data-ttu-id="41e2d-107">Sua linguagem de mascaramento é descrita na documentação para o <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-107">Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span>  
  
 <span data-ttu-id="41e2d-108">As cadeias de caracteres distintas três seguintes estão envolvidas com o <xref:System.ComponentModel.MaskedTextProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="41e2d-108">The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
|<span data-ttu-id="41e2d-109">Nome de cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="41e2d-109">String name</span></span>|<span data-ttu-id="41e2d-110">Descrição</span><span class="sxs-lookup"><span data-stu-id="41e2d-110">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="41e2d-111">Cadeia de caracteres ou caractere de entrada</span><span class="sxs-lookup"><span data-stu-id="41e2d-111">Input character or string</span></span>|<span data-ttu-id="41e2d-112">Representa os caracteres usados como entrada a máscara é aplicada em relação às.</span><span class="sxs-lookup"><span data-stu-id="41e2d-112">Represents the characters used as input that the mask is applied against.</span></span> <span data-ttu-id="41e2d-113">Na realidade, a cadeia de caracteres de entrada pode ser composta de várias operações de entrada, incluindo <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, e <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-113">In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</span></span> <span data-ttu-id="41e2d-114">Portanto, a cadeia de caracteres de entrada não pode ser acessada diretamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-114">Therefore, the input string cannot be accessed directly.</span></span> <span data-ttu-id="41e2d-115">No entanto, aspectos da manipulação de cadeia de caracteres de entrada estão disponíveis no entanto o <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> e <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, e <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-115">However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.</span></span>|  
|<span data-ttu-id="41e2d-116">Máscara</span><span class="sxs-lookup"><span data-stu-id="41e2d-116">Mask</span></span>|<span data-ttu-id="41e2d-117">Representa a formatação usada para transformar a cadeia de caracteres de entrada em cadeia de caracteres formatada de máscara de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-117">Represents the input formatting mask used to transform the input string into the formatted string.</span></span> <span data-ttu-id="41e2d-118">Essa cadeia de caracteres é definida na <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> e acessados principalmente no entanto o <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-118">This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.</span></span> <span data-ttu-id="41e2d-119">Características da máscara também estão disponíveis por meio de outros membros, como o <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, e <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-119">Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.</span></span>|  
|<span data-ttu-id="41e2d-120">Cadeia de caracteres formatada</span><span class="sxs-lookup"><span data-stu-id="41e2d-120">Formatted string</span></span>|<span data-ttu-id="41e2d-121">Representa a cadeia de caracteres que resulta quando a máscara completa é aplicada à cadeia de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-121">Represents the string that results when the full mask is applied to the input string.</span></span> <span data-ttu-id="41e2d-122">A cadeia de caracteres formatada pode ser consultada com muitos membros da classe, incluindo <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="41e2d-122">The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on.</span></span> <span data-ttu-id="41e2d-123">O valor total da cadeia de caracteres formatada é proveniente de <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="41e2d-123">The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="41e2d-124">A cadeia de caracteres de entrada pode representar a entrada do usuário direta, como no caso do <xref:System.Windows.Forms.MaskedTextBox>, ou podem ser geradas por outros processos não diretamente associados a operações de entrada/saída do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-124">The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
    <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-125">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-126">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-126">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-127">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-128">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-128">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-129">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-129">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="41e2d-130">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-130">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-131">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-132">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-132">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, true, '_', '\0', restrictToASCII)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-133">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-133">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="41e2d-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-134">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-135">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask and culture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-136">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-136">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-137">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-137">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="41e2d-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-138">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="41e2d-139">
            <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-139">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-140">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-141">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-141">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-142">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-142">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="41e2d-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-143">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="41e2d-144">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-144">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-145">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-146">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-146">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, true, '_', '\0', restrictToAscii)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, passwordChar As Char, allowPromptAsInput As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, char passwordChar, bool allowPromptAsInput);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, passwordChar, allowPromptAsInput)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-147">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-147">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="41e2d-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-148">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="41e2d-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-149">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="41e2d-150">
            <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-150">
              <see langword="true" /> to allow the prompt character as input; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-151">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, password character, and prompt usage value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-152">O uso desse construtor é exatamente equivalente à seguinte chamada para o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> construtor:</span><span class="sxs-lookup"><span data-stu-id="41e2d-152">Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=nameWithType> constructor:</span></span>  
  
 `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask, class System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String, culture As CultureInfo, allowPromptAsInput As Boolean, promptChar As Char, passwordChar As Char, restrictToAscii As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextProvider(System::String ^ mask, System::Globalization::CultureInfo ^ culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.MaskedTextProvider : string * System.Globalization.CultureInfo * bool * char * char * bool -&gt; System.ComponentModel.MaskedTextProvider" Usage="new System.ComponentModel.MaskedTextProvider (mask, culture, allowPromptAsInput, promptChar, passwordChar, restrictToAscii)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="allowPromptAsInput" Type="System.Boolean" />
        <Parameter Name="promptChar" Type="System.Char" />
        <Parameter Name="passwordChar" Type="System.Char" />
        <Parameter Name="restrictToAscii" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">
          <span data-ttu-id="41e2d-153">A <see cref="T:System.String" /> that represents the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-153">A <see cref="T:System.String" /> that represents the input mask.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="41e2d-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-154">A <see cref="T:System.Globalization.CultureInfo" /> that is used to set region-sensitive separator characters.</span>
          </span>
        </param>
        <param name="allowPromptAsInput">
          <span data-ttu-id="41e2d-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-155">A <see cref="T:System.Boolean" /> value that specifies whether the prompt character should be allowed as a valid input character.</span>
          </span>
        </param>
        <param name="promptChar">
          <span data-ttu-id="41e2d-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-156">A <see cref="T:System.Char" /> that will be displayed as a placeholder for user input.</span>
          </span>
        </param>
        <param name="passwordChar">
          <span data-ttu-id="41e2d-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-157">A <see cref="T:System.Char" /> that will be displayed for characters entered into a password string.</span>
          </span>
        </param>
        <param name="restrictToAscii">
          <span data-ttu-id="41e2d-158">
            <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-158">
              <see langword="true" /> to restrict input to ASCII-compatible characters; otherwise <see langword="false" /> to allow the entire Unicode set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-159">Initializes a new instance of the <see cref="T:System.ComponentModel.MaskedTextProvider" /> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-160">Este construtor representa a forma mais geral de sobrecarregado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-160">This constructor represents the most general overloaded form.</span></span> <span data-ttu-id="41e2d-161">O `mask` parâmetro deve estar de acordo com a linguagem de mascaramento definida pela <xref:System.ComponentModel.MaskedTextProvider> classe, que é descrito em detalhes o <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> propriedade do <xref:System.Windows.Forms.MaskedTextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="41e2d-161">The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class.</span></span>  
  
 <span data-ttu-id="41e2d-162">Porque as culturas neutras não podem ser consultadas para obter informações específicas da cultura, o <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor usará o <xref:System.Globalization.CultureInfo.GetCultures%2A> método para pesquisar a cultura neutra não primeiro usar para determinar os caracteres separadores adequado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-162">Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41e2d-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-163">The mask parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="41e2d-164">-or-  The mask contains one or more non-printable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-164">-or-  The mask contains one or more non-printable characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-165">Adds an input character or input string to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-165">Adds an input character or input string to the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input);" />
      <MemberSignature Language="F#" Value="member this.Add : char -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-166">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-166">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-167">Adds the specified input character to the end of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-167">Adds the specified input character to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-168">
            <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-168">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-169">O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> método adiciona o `input` valor para a primeira posição disponível na cadeia de caracteres formatada de caracteres após a posição em que foi atribuída pela última vez, que é representada pelo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-169">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="41e2d-170">Esse método irá falhar para qualquer um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="41e2d-170">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="41e2d-171">O valor de entrada, `input`, não é imprimível, ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-171">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-172">Há zero posições de edição disponíveis na cadeia de caracteres formatada, ou não há nenhum posições de edição disponíveis após a última posição de atribuída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-172">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; bool" Usage="maskedTextProvider.Add input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-173">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-173">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-174">Adds the characters in the specified input string to the end of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-174">Adds the characters in the specified input string to the end of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-175">
            <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-175">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-176">O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> método adiciona os caracteres da `input` cadeia de caracteres na cadeia de caracteres formatada, começando com a primeira posição disponível após <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-176">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="41e2d-177">Esse método irá falhar para qualquer um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="41e2d-177">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="41e2d-178">Nenhum dos caracteres no valor de entrada, `input`, são não imprimível ou o valor de entrada não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-178">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-179">Não há suficiente posições de edição disponíveis na cadeia de caracteres formatada após a última posição de atribuída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-179">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="41e2d-180">Se esse método falhar, não há adições são feitas e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-180">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-181">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-181">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(char input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As Char, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(char input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : char *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-182">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-182">A <see cref="T:System.Char" /> value to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-183">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-183">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="41e2d-184">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-184">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-185">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-186">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-186">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-187">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-187">Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-188">
            <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-188">
              <see langword="true" /> if the input character was added successfully; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-189">O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método tenta adicionar o `input` valor para a primeira posição disponível na cadeia de caracteres formatada de caracteres após a posição em que foi atribuída pela última vez, que é representada pelo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-189">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property.</span></span> <span data-ttu-id="41e2d-190">Esse método irá falhar se todas as posições disponíveis são antes da última posição atribuída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-190">This method will fail if all available positions are before the last assigned position.</span></span> <span data-ttu-id="41e2d-191">Esse método irá falhar para qualquer um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="41e2d-191">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="41e2d-192">O valor de entrada, `input`, não é imprimível, ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-192">The input value, `input`, is not printable, or it does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-193">Há zero posições de edição disponíveis na cadeia de caracteres formatada, ou não há nenhum posições de edição disponíveis após a última posição de atribuída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-193">There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</span></span>  
  
 <span data-ttu-id="41e2d-194">Esse método funciona como a versão substituída, levando a uma única <xref:System.Char> parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, exceto que ele produz informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-194">This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Add(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Add(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Add : string *  *  -&gt; bool" Usage="maskedTextProvider.Add (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-195">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-195">A <see cref="T:System.String" /> containing character values to be appended to the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-196">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-196">The zero-based position in the formatted string where the attempt was made to add the character.</span>
          </span>
          <span data-ttu-id="41e2d-197">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-197">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-198">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-199">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-199">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-200">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-200">Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-201">
            <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-201">
              <see langword="true" /> if all the characters from the input string were added successfully; otherwise <see langword="false" /> to indicate that no characters were added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-202">O <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método adiciona os caracteres da `input` cadeia de caracteres na cadeia de caracteres formatada, começando com a primeira posição disponível após <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-202">The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</span></span> <span data-ttu-id="41e2d-203">Esse método irá falhar para qualquer um dos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="41e2d-203">This method will fail for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="41e2d-204">Nenhum dos caracteres no valor de entrada, `input`, são não imprimível ou o valor de entrada não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-204">Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-205">Não há suficiente posições de edição disponíveis na cadeia de caracteres formatada após a última posição de atribuída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-205">There are not enough available edit positions in the formatted string after the last assigned position.</span></span>  
  
 <span data-ttu-id="41e2d-206">Se esse método falhar, não há adições são feitas e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-206">If this method fails, no additions are made and the method returns `false`.</span></span>  
  
 <span data-ttu-id="41e2d-207">Esse método funciona como a versão substituída, levando a uma única <xref:System.String> parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, exceto que ele produz informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-207">This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool" Usage="System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-208">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-208">Gets a value indicating whether the prompt character should be treated as a valid input character or not.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-209">
            <see langword="true" /> Se o usuário pode digitar <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> no controle; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-209">
              <see langword="true" /> if the user can enter <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> into the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41e2d-210">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-210">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-211">O <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> valor da propriedade é definido <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-211">The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="41e2d-212">Mesmo quando <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> é `true`, o caractere de prompt deve ser válido para o local atual na máscara para ser aceito.</span><span class="sxs-lookup"><span data-stu-id="41e2d-212">Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool" Usage="System.ComponentModel.MaskedTextProvider.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-213">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-213">Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-214">
            <see langword="true" /> Se apenas ASCII for aceito; <see langword="false" /> se <see cref="T:System.ComponentModel.MaskedTextProvider" /> pode aceitar qualquer caractere Unicode arbitrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-214">
              <see langword="true" /> if only ASCII is accepted; <see langword="false" /> if <see cref="T:System.ComponentModel.MaskedTextProvider" /> can accept any arbitrary Unicode character.</span>
          </span>
          <span data-ttu-id="41e2d-215">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-215">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-216">O <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> valor da propriedade é definido <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-216">The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="41e2d-217">Se `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restringe a entrada do usuário para o conjunto de caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="41e2d-217">If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="AssignedEditPositionCount">
      <MemberSignature Language="C#" Value="public int AssignedEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssignedEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssignedEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-218">Gets the number of editable character positions that have already been successfully assigned an input value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-218">Gets the number of editable character positions that have already been successfully assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-219">Um <see cref="T:System.Int32" /> contendo o número de posições de caractere editável da máscara de entrada que já tenham sido atribuídas a um valor de caractere na cadeia de caracteres formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-219">An <see cref="T:System.Int32" /> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-220">O número total de posições de caractere editável, representado pela <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade, deve ser igual a soma do <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e o <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-220">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AvailableEditPositionCount">
      <MemberSignature Language="C#" Value="public int AvailableEditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AvailableEditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableEditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AvailableEditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableEditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-221">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-221">Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-222">Um <see cref="T:System.Int32" /> contendo o número de caractere editável posiciona que ainda não foi atribuído um valor de caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-222">An <see cref="T:System.Int32" /> containing the number of editable character positions that not yet been assigned a character value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-223">O número total de posições de caractere editável, representado pela <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade, deve ser igual a soma do <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e o <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-223">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Clear">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-224">Clears all the input characters from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-224">Clears all the input characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="maskedTextProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-225">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-225">Clears all the editable input characters from the formatted string, replacing them with prompt characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-226">O <xref:System.ComponentModel.MaskedTextProvider.Clear> método reinicializa a cadeia de caracteres formatada, inserindo o caractere de prompt em todas as posições editáveis.</span><span class="sxs-lookup"><span data-stu-id="41e2d-226">The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear([out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (ByRef resultHint As MaskedTextResultHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear([Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Clear :  -&gt; unit" Usage="maskedTextProvider.Clear resultHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resultHint">
          <span data-ttu-id="41e2d-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-227">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-228">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-228">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-229">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-229">Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-230">O <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> método reinicializa a cadeia de caracteres formatada, inserindo o caractere de prompt em todas as posições editáveis.</span><span class="sxs-lookup"><span data-stu-id="41e2d-230">The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions.</span></span> <span data-ttu-id="41e2d-231">Ele funciona de forma equivalente para a versão substituída que não usa nenhum parâmetro, <xref:System.ComponentModel.MaskedTextProvider.Clear>, exceto que ele produz informações adicionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-231">It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="maskedTextProvider.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-232">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-232">Creates a copy of the current <see cref="T:System.ComponentModel.MaskedTextProvider" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-233">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-233">The <see cref="T:System.ComponentModel.MaskedTextProvider" /> object this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-234">O <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> método retorna uma nova cópia do atual <xref:System.ComponentModel.MaskedTextProvider>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-234">The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="T:System.ICloneable" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.ComponentModel.MaskedTextProvider.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-235">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-235">Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-236">Um <see cref="T:System.Globalization.CultureInfo" /> que contém as informações de cultura associadas com a máscara de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-236">A <see cref="T:System.Globalization.CultureInfo" /> containing the culture information associated with the input mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-237">O <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> propriedade é definida no <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-237">The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPasswordChar">
      <MemberSignature Language="C#" Value="public static char DefaultPasswordChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property char DefaultPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultPasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property char DefaultPasswordChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPasswordChar : char" Usage="System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-238">Gets the default password character used obscure user input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-238">Gets the default password character used obscure user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-239">Um <see cref="T:System.Char" /> que representa o caractere de senha padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-239">A <see cref="T:System.Char" /> that represents the default password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-240">O <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> propriedade está definida no <xref:System.ComponentModel.MaskedTextProvider> classe para ser o caractere de asterisco (\*).</span><span class="sxs-lookup"><span data-stu-id="41e2d-240">The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (\*).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      </Docs>
    </Member>
    <Member MemberName="EditPositionCount">
      <MemberSignature Language="C#" Value="public int EditPositionCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditPositionCount" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositionCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditPositionCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositionCount : int" Usage="System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-241">Gets the number of editable positions in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-241">Gets the number of editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-242">Um <see cref="T:System.Int32" /> contendo o número de posições editáveis na cadeia de caracteres formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-242">An <see cref="T:System.Int32" /> containing the number of editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-243">O número total de posições de caractere editável, representado pela <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> propriedade, deve ser igual a soma do <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> e o <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-243">The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.</span></span> <span data-ttu-id="41e2d-244">Esse valor inclui o necessário e os caracteres editáveis opcionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-244">This value includes both the required and the optional editable characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditPositions">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator EditPositions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator EditPositions" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditPositions As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ EditPositions { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditPositions : System.Collections.IEnumerator" Usage="System.ComponentModel.MaskedTextProvider.EditPositions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-245">Gets a newly created enumerator for the editable positions in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-245">Gets a newly created enumerator for the editable positions in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-246">Um <see cref="T:System.Collections.IEnumerator" /> que dá suporte a enumeração sobre as posições editáveis na cadeia de caracteres formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-246">An <see cref="T:System.Collections.IEnumerator" /> that supports enumeration over the editable positions in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-247">Em cada acesso do <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> propriedade, um conjunto temporário de posições editáveis é criado que recuperada <xref:System.Collections.IEnumerator> opera.</span><span class="sxs-lookup"><span data-stu-id="41e2d-247">On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.</span></span>  
  
 <span data-ttu-id="41e2d-248">Esta coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41e2d-248">This collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-249">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-249">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-250">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-250">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-251">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-251">Returns the position of the first assigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-252">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-252">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-253">A cadeia de caracteres formatada é composta de caracteres editáveis e copiados de literais da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-253">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="41e2d-254">As posições de caractere editável ou serão ser ocupadas pelo caractere de prompt copiado da máscara de se não foram atribuídas, ou com um caractere de entrada válido, se eles tiverem recebido uma entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-254">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="41e2d-255">O <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> método é usado para pesquisar o primeiro caractere atribuído após uma direção de pesquisa e de posição especificada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-255">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction.</span></span> <span data-ttu-id="41e2d-256">O resultado, posteriormente, pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-256">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="41e2d-257">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> métodos são complementos desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-257">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindAssignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindAssignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAssignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindAssignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindAssignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-258">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-258">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-259">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-259">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-260">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-260">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-261">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-261">Returns the position of the first assigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-262">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-262">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first assigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-263">A cadeia de caracteres formatada é composta de caracteres editáveis e copiados de literais da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-263">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="41e2d-264">As posições de caractere editável ou serão ser ocupadas pelo caractere de prompt copiado da máscara de se não foram atribuídas, ou com um caractere de entrada válido, se eles tiverem recebido uma entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-264">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="41e2d-265">O <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere atribuído entre duas posições especificadas, inclusivas, usando a direção de pesquisa especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-265">The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="41e2d-266">O resultado, posteriormente, pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-266">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="41e2d-267">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> métodos são complementos desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-267">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-268">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-268">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-269">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-269">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-270">Returns the position of the first editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-270">Returns the position of the first editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-271">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-271">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-272">O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método é usado para pesquisar o próximo atribuído ou não atribuídos a posição editável na cadeia de caracteres formatada após a posição especificada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-272">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</span></span>  
  
 <span data-ttu-id="41e2d-273">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método é o complemento desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-273">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-274">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-274">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-275">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-275">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-276">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-276">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-277">Returns the position of the first editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-277">Returns the position of the first editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-278">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-278">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-279">O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere editável entre duas posições especificadas, inclusivas, usando a direção de pesquisa especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-279">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="41e2d-280">O resultado, posteriormente, pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor atribuído nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-280">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.</span></span>  
  
 <span data-ttu-id="41e2d-281">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método é o complemento desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-281">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-282">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-282">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-283">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-283">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-284">Returns the position of the first non-editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-284">Returns the position of the first non-editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-285">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-285">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-286">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> método é usado para pesquisar o próximo caractere literal na cadeia de caracteres formatada após a posição especificada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-286">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position.</span></span> <span data-ttu-id="41e2d-287">O resultado, posteriormente, pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor literal nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-287">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="41e2d-288">O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> método é o complemento desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-288">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindNonEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindNonEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNonEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindNonEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindNonEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-289">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-289">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-290">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-290">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-291">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-291">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-292">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-292">Returns the position of the first non-editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-293">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-293">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first literal position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-294">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere literal entre duas posições especificadas, inclusivas, usando a direção de pesquisa especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-294">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="41e2d-295">O resultado, posteriormente, pode ser passado como um parâmetro para o <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexador para obter o valor literal nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-295">The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.</span></span>  
  
 <span data-ttu-id="41e2d-296">O <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> método é o complemento desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-296">The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionFrom">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionFrom (int position, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionFrom(int32 position, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionFrom (position As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionFrom(int position, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionFrom : int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionFrom (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-297">The zero-based position in the formatted string to start the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-297">The zero-based position in the formatted string to start the search.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-298">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-298">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-299">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-299">Returns the position of the first unassigned editable position after the specified position using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-300">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-300">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-301">A cadeia de caracteres formatada é composta de caracteres editáveis e copiados de literais da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-301">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="41e2d-302">As posições de caractere editável ou serão ser ocupadas pelo caractere de prompt copiado da máscara de se não foram atribuídas, ou com um caractere de entrada válido, se eles tiverem recebido uma entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-302">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="41e2d-303">O <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> método é usado para pesquisar o primeiro caractere não atribuído após uma direção de pesquisa e de posição especificada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-303">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction.</span></span> <span data-ttu-id="41e2d-304">O caractere de prompt deve ocupar nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-304">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="41e2d-305">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> métodos são complementos desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-305">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FindUnassignedEditPositionInRange">
      <MemberSignature Language="C#" Value="public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindUnassignedEditPositionInRange(int32 startPosition, int32 endPosition, bool direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUnassignedEditPositionInRange (startPosition As Integer, endPosition As Integer, direction As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction);" />
      <MemberSignature Language="F#" Value="member this.FindUnassignedEditPositionInRange : int * int * bool -&gt; int" Usage="maskedTextProvider.FindUnassignedEditPositionInRange (startPosition, endPosition, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-306">The zero-based position in the formatted string where the search starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-306">The zero-based position in the formatted string where the search starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-307">The zero-based position in the formatted string where the search ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-307">The zero-based position in the formatted string where the search ends.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="41e2d-308">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-308">A <see cref="T:System.Boolean" /> indicating the search direction; either <see langword="true" /> to search forward or <see langword="false" /> to search backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-309">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-309">Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-310">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-310">If successful, an <see cref="T:System.Int32" /> representing the zero-based position of the first unassigned editable position encountered; otherwise <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-311">A cadeia de caracteres formatada é composta de caracteres editáveis e copiados de literais da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-311">The formatted string is composed of editable characters and literals copied from the mask.</span></span> <span data-ttu-id="41e2d-312">As posições de caractere editável ou serão ser ocupadas pelo caractere de prompt copiado da máscara de se não foram atribuídas, ou com um caractere de entrada válido, se eles tiverem recebido uma entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-312">The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</span></span>  
  
 <span data-ttu-id="41e2d-313">O <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> método é usado para pesquisar o primeiro caractere não atribuído entre duas posições especificadas, inclusivas, usando a direção de pesquisa especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-313">The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</span></span> <span data-ttu-id="41e2d-314">O caractere de prompt deve ocupar nessa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-314">The prompt character should occupy this position.</span></span>  
  
 <span data-ttu-id="41e2d-315">O <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> métodos são complementos desse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-315">The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultFromHint">
      <MemberSignature Language="C#" Value="public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetOperationResultFromHint(valuetype System.ComponentModel.MaskedTextResultHint hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperationResultFromHint (hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetOperationResultFromHint(System::ComponentModel::MaskedTextResultHint hint);" />
      <MemberSignature Language="F#" Value="static member GetOperationResultFromHint : System.ComponentModel.MaskedTextResultHint -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint" />
      </Parameters>
      <Docs>
        <param name="hint">
          <span data-ttu-id="41e2d-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-316">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value typically obtained as an output parameter from a previous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-317">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-317">Determines whether the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> denotes success or failure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-318">
            <see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-318">
              <see langword="true" /> if the specified <see cref="T:System.ComponentModel.MaskedTextResultHint" /> value represents a success; otherwise, <see langword="false" /> if it represents failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-319">Os seguintes métodos das <xref:System.ComponentModel.MaskedTextProvider> classe contém um parâmetro do tipo <xref:System.ComponentModel.MaskedTextResultHint> que é usado para obter informações sobre a operação do método de saída: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> , <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, e <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-319">The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</span></span> <span data-ttu-id="41e2d-320">O <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> método interpreta esse valor e retorna um valor booliano que indica se o <xref:System.ComponentModel.MaskedTextResultHint> sinalize que a operação foi um sucesso ou falha.</span><span class="sxs-lookup"><span data-stu-id="41e2d-320">The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextResultHint" />
      </Docs>
    </Member>
    <Member MemberName="IncludeLiterals">
      <MemberSignature Language="C#" Value="public bool IncludeLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-321">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-321">Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-322">
            <see langword="true" /> Se os literais são incluídas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-322">
              <see langword="true" /> if literals are included; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41e2d-323">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-323">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-324">O <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades determinará se o prompt e literais de caracteres são exibidos ao chamar o <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-324">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="41e2d-325">Ao definir ambas as propriedades para `false`, cadeia de caracteres analisada representará somente os caracteres inseridos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-325">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IncludePrompt">
      <MemberSignature Language="C#" Value="public bool IncludePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludePrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IncludePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-326">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-326">Gets or sets a value indicating whether <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> is used to represent the absence of user input when displaying the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-327">
            <see langword="true" /> Se o caractere de prompt é usado para representar as posições em que não foi fornecida nenhuma entrada do usuário; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-327">
              <see langword="true" /> if the prompt character is used to represent the positions where no user input was provided; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41e2d-328">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-328">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-329">O <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades determinará se o prompt e literais de caracteres são exibidos ao chamar o <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-329">The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method.</span></span> <span data-ttu-id="41e2d-330">Ao definir ambas as propriedades para `false`, cadeia de caracteres analisada representará somente os caracteres inseridos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-330">By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-331">Inserts a character or string at a specific position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-331">Inserts a character or string at a specific position within the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-332">The <see cref="T:System.Char" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-332">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-333">The zero-based position in the formatted string to insert the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-333">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-334">Inserts the specified character at the specified position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-334">Inserts the specified character at the specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-335">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-335">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-336">O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere um caractere para a primeira posição de edição no ou além daquelas especificadas pela `pos` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-336">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="41e2d-337">Esse método mudará todos os caracteres existentes depois que o ponto de inserção a tecla TAB uma posição para liberar espaço para inserida `input` caractere.</span><span class="sxs-lookup"><span data-stu-id="41e2d-337">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="41e2d-338">Se um dos seguintes erros ocorre, a inserção não será executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-338">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-339">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-339">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-340">Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-340">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="41e2d-341">O caractere de inserção, `input`, não é um caractere de entrada válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-341">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-342">Não há nenhum posições disponíveis à direita do ponto de inserção, para que os caracteres existentes não podem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="41e2d-342">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="41e2d-343">Deslocar os caracteres existentes produziria uma violação da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-343">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="41e2d-344">Vazio `input` cadeia de caracteres não fará com que nenhuma alteração no formatada de cadeia de caracteres, mas retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-344">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-345">The <see cref="T:System.String" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-345">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-346">The zero-based position in the formatted string to insert the input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-346">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-347">Inserts the specified string at a specified position within the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-347">Inserts the specified string at a specified position within the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-348">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-348">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-349">O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere cada caractere a partir de `input` cadeia de caracteres para as posições de edição localizado na posição `pos` e muito mais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-349">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="41e2d-350">Esse método mudará todos os caracteres existentes depois que o ponto de inserção a tecla TAB uma posição para cada caractere de inserido.</span><span class="sxs-lookup"><span data-stu-id="41e2d-350">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="41e2d-351">Se um dos seguintes erros ocorre, nenhuma inserção é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-351">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-352">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-352">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-353">Não é suficiente editáveis caracteres existem na cadeia de caracteres formatada em ou após a posição especificada, `pos`, para inserir todos os caracteres da `input` cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="41e2d-353">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="41e2d-354">Um ou mais caracteres de inserção não são um caractere de entrada válido porque eles não são imprimíveis ou não coincidem com seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-354">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-355">Não há suficiente disponíveis posições à direita do ponto de inserção, para que os caracteres existentes não podem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="41e2d-355">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="41e2d-356">Deslocar os caracteres existentes produziria uma violação da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-356">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="41e2d-357">Observe que essa mudança ocorre durante a inserção de cada caractere individual.</span><span class="sxs-lookup"><span data-stu-id="41e2d-357">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="41e2d-358">Vazio `input` cadeia de caracteres não fará com que nenhuma alteração no formatada de cadeia de caracteres, mas retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-358">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-359">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-359">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : char * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-360">The <see cref="T:System.Char" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-360">The <see cref="T:System.Char" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-361">The zero-based position in the formatted string to insert the character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-361">The zero-based position in the formatted string to insert the character.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-362">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-362">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="41e2d-363">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-363">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-364">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="41e2d-365">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-365">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-366">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-366">Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-367">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-367">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-368">O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere um caractere para a primeira posição de edição no ou além daquelas especificadas pela `pos` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-368">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter.</span></span> <span data-ttu-id="41e2d-369">Esse método mudará todos os caracteres existentes depois que o ponto de inserção a tecla TAB uma posição para liberar espaço para inserida `input` caractere.</span><span class="sxs-lookup"><span data-stu-id="41e2d-369">This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character.</span></span> <span data-ttu-id="41e2d-370">Se um dos seguintes erros ocorre, a inserção não será executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-370">If one of the following errors occurs, the insertion is not performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-371">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-371">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-372">Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-372">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="41e2d-373">O caractere de inserção, `input`, não é um caractere de entrada válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-373">The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-374">Não há nenhum posições disponíveis à direita do ponto de inserção, para que os caracteres existentes não podem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="41e2d-374">There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="41e2d-375">Deslocar os caracteres existentes produziria uma violação da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-375">Shifting the existing characters would produce a violation of the mask.</span></span>  
  
 <span data-ttu-id="41e2d-376">Vazio `input` cadeia de caracteres não fará com que nenhuma alteração no formatada de cadeia de caracteres, mas retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-376">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InsertAt(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAt (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InsertAt(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : string * int *  *  -&gt; bool" Usage="maskedTextProvider.InsertAt (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-377">The <see cref="T:System.String" /> to be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-377">The <see cref="T:System.String" /> to be inserted.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-378">The zero-based position in the formatted string to insert the input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-378">The zero-based position in the formatted string to insert the input string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-379">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-379">If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</span>
          </span>
          <span data-ttu-id="41e2d-380">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-380">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-381">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the insertion operation.</span>
          </span>
          <span data-ttu-id="41e2d-382">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-382">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-383">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-383">Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-384">
            <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-384">
              <see langword="true" /> if the insertion was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-385">O <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> método insere cada caractere a partir de `input` cadeia de caracteres para as posições de edição localizado na posição `pos` e muito mais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-385">The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond.</span></span> <span data-ttu-id="41e2d-386">Esse método mudará todos os caracteres existentes depois que o ponto de inserção a tecla TAB uma posição para cada caractere de inserido.</span><span class="sxs-lookup"><span data-stu-id="41e2d-386">This method will shift all existing characters after the insertion point over by one position for each inserted character.</span></span> <span data-ttu-id="41e2d-387">Se um dos seguintes erros ocorre, nenhuma inserção é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-387">If one of the following errors occurs, no insertion is performed, and the method returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-388">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-388">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-389">Não é suficiente editáveis caracteres existem na cadeia de caracteres formatada em ou após a posição especificada, `pos`, para inserir todos os caracteres da `input` cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="41e2d-389">Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.</span></span>  
  
-   <span data-ttu-id="41e2d-390">Um ou mais caracteres de inserção não são um caractere de entrada válido porque eles não são imprimíveis ou não coincidem com seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-390">One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</span></span>  
  
-   <span data-ttu-id="41e2d-391">Não há suficiente disponíveis posições à direita do ponto de inserção, para que os caracteres existentes não podem ser deslocados.</span><span class="sxs-lookup"><span data-stu-id="41e2d-391">There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</span></span>  
  
-   <span data-ttu-id="41e2d-392">Deslocar os caracteres existentes produziria uma violação da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-392">Shifting the existing characters would produce a violation of the mask.</span></span> <span data-ttu-id="41e2d-393">Observe que essa mudança ocorre durante a inserção de cada caractere individual.</span><span class="sxs-lookup"><span data-stu-id="41e2d-393">Note that this shifting occurs during the insertion of each individual character.</span></span>  
  
 <span data-ttu-id="41e2d-394">Vazio `input` cadeia de caracteres não fará com que nenhuma alteração no formatada de cadeia de caracteres, mas retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-394">An empty `input` string will cause no change in the formatted string, but will return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-395">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-395">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="InvalidIndex">
      <MemberSignature Language="C#" Value="public static int InvalidIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 InvalidIndex" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int InvalidIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InvalidIndex : int" Usage="System.ComponentModel.MaskedTextProvider.InvalidIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-396">Gets the upper bound of the range of invalid indexes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-396">Gets the upper bound of the range of invalid indexes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-397">Um valor que representa o maior índice inválido, conforme determinado pela implementação do provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-397">A value representing the largest invalid index, as determined by the provider implementation.</span>
          </span>
          <span data-ttu-id="41e2d-398">Por exemplo, se o índice mais baixo válido é 0, essa propriedade retornará -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-398">For example, if the lowest valid index is 0, this property will return -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-399">O <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> propriedade é usada para representar um resultado que não é válido para operações de indexação, como o <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-399">The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.</span></span>  
  
 <span data-ttu-id="41e2d-400">Quando você usa o provedor ou implementa sua própria, você deve usar essa propriedade para decidir se um índice é inválido, em vez de embutir conhecimento dos valores inválidos.</span><span class="sxs-lookup"><span data-stu-id="41e2d-400">When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailablePosition">
      <MemberSignature Language="C#" Value="public bool IsAvailablePosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAvailablePosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAvailablePosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAvailablePosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsAvailablePosition : int -&gt; bool" Usage="maskedTextProvider.IsAvailablePosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-401">The zero-based position in the mask to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-401">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-402">Determines whether the specified position is available for assignment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-402">Determines whether the specified position is available for assignment.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-403">
            <see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-403">
              <see langword="true" /> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-404">O <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> retorno do método `true` somente se todas as seguintes condições forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="41e2d-404">The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="41e2d-405">O `pos` parâmetro está dentro dos limites da cadeia de caracteres formatada; ou seja, seu valor é maior que ou igual a zero e menor que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-405">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-406">A posição especificada é um caractere editável.</span><span class="sxs-lookup"><span data-stu-id="41e2d-406">The specified position is an editable character.</span></span>  
  
-   <span data-ttu-id="41e2d-407">Um caractere já não foi atribuído a essa posição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-407">A character has not already been assigned to this position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsEditPosition">
      <MemberSignature Language="C#" Value="public bool IsEditPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEditPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEditPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEditPosition(int position);" />
      <MemberSignature Language="F#" Value="member this.IsEditPosition : int -&gt; bool" Usage="maskedTextProvider.IsEditPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-408">The zero-based position in the mask to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-408">The zero-based position in the mask to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-409">Determines whether the specified position is editable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-409">Determines whether the specified position is editable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-410">
            <see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-410">
              <see langword="true" /> if the specified position in the formatted string is editable; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-411">O <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> retorno do método `true` somente se ambas as seguintes condições forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="41e2d-411">The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="41e2d-412">O `pos` parâmetro está dentro dos limites da cadeia de caracteres formatada; ou seja, seu valor é maior que ou igual a zero e menor que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-412">The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-413">A posição especificada é um caractere editável.</span><span class="sxs-lookup"><span data-stu-id="41e2d-413">The specified position is an editable character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-414">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-414">Gets or sets a value that determines whether password protection should be applied to the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-415">
            <see langword="true" /> Se a cadeia de caracteres de entrada deve ser tratada como uma cadeia de caracteres de senha; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-415">
              <see langword="true" /> if the input string is to be treated as a password string; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="41e2d-416">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-416">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-417">Proteção por senha pode ser iniciada usando uma destas duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="41e2d-417">Password protection can be initiated using one of the following two ways:</span></span>  
  
-   <span data-ttu-id="41e2d-418">Definindo o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade para um não -`null` valor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-418">Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.</span></span>  
  
-   <span data-ttu-id="41e2d-419">Definindo o <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> propriedade para `true`., que também define o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade para o <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-419">Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.</span></span>  
  
 <span data-ttu-id="41e2d-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> é usado pelas <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para determinar se deve revelar os caracteres de entrada reais ou obscurecê-los com <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-420"><xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInputChar">
      <MemberSignature Language="C#" Value="public static bool IsValidInputChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidInputChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidInputChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidInputChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidInputChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidInputChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="41e2d-421">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-421">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-422">Determines whether the specified character is a valid input character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-422">Determines whether the specified character is a valid input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-423">
            <see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-423">
              <see langword="true" /> if the specified character contains a valid input value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-424">Caracteres de entrada válidos incluem todos os caracteres imprimíveis, incluindo letras, dígitos, pontuação, símbolos e o caractere de espaço.</span><span class="sxs-lookup"><span data-stu-id="41e2d-424">Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AsciiOnly" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidMaskChar">
      <MemberSignature Language="C#" Value="public static bool IsValidMaskChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidMaskChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidMaskChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidMaskChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidMaskChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidMaskChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="41e2d-425">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-425">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-426">Determines whether the specified character is a valid mask character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-426">Determines whether the specified character is a valid mask character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-427">
            <see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-427">
              <see langword="true" /> if the specified character contains a valid mask value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-428">Caracteres de máscara válido incluem todos os caracteres imprimíveis, incluindo letras, dígitos, pontuação, símbolos e o caractere de espaço.</span><span class="sxs-lookup"><span data-stu-id="41e2d-428">Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
      </Docs>
    </Member>
    <Member MemberName="IsValidPasswordChar">
      <MemberSignature Language="C#" Value="public static bool IsValidPasswordChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidPasswordChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidPasswordChar (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidPasswordChar(char c);" />
      <MemberSignature Language="F#" Value="static member IsValidPasswordChar : char -&gt; bool" Usage="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="41e2d-429">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-429">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-430">Determines whether the specified character is a valid password character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-430">Determines whether the specified character is a valid password character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-431">
            <see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-431">
              <see langword="true" /> if the specified character contains a valid password value; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-432">Caracteres de senha válida incluem todos os caracteres imprimíveis e o caractere nulo, que é usado para desabilitar a funcionalidade de senha.</span><span class="sxs-lookup"><span data-stu-id="41e2d-432">Valid password characters include all printable characters and the null character, which is used to disable password functionality.</span></span> <span data-ttu-id="41e2d-433">Caracteres imprimíveis incluem letras, dígitos, pontuação, símbolos e o caractere de espaço.</span><span class="sxs-lookup"><span data-stu-id="41e2d-433">Printable characters include letters, digits, punctuation, symbols and the space character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="System.ComponentModel.MaskedTextProvider.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="41e2d-434">A zero-based index of the element to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-434">A zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-435">Gets the element at the specified position in the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-435">Gets the element at the specified position in the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-436">O <see cref="T:System.Char" /> na posição especificada na cadeia de caracteres formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-436">The <see cref="T:System.Char" /> at the specified position in the formatted string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-437">O <xref:System.ComponentModel.MaskedTextProvider.Item%2A> propriedade é o indexador padrão para o <xref:System.ComponentModel.MaskedTextProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="41e2d-437">The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="41e2d-438">
            <paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-438">
              <paramref name="index" /> is less than zero or greater than or equal to the <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> of the mask.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositions" />
      </Docs>
    </Member>
    <Member MemberName="LastAssignedPosition">
      <MemberSignature Language="C#" Value="public int LastAssignedPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastAssignedPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastAssignedPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastAssignedPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastAssignedPosition : int" Usage="System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-439">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-439">Gets the index in the mask of the rightmost input character that has been assigned to the mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-440">Se pelo menos um caractere de entrada tiver sido atribuído à máscara de um <see cref="T:System.Int32" /> que contém o índice da extrema direita atribuído posição; caso contrário, não se tiver sido atribuída a nenhuma posição, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-440">If at least one input character has been assigned to the mask, an <see cref="T:System.Int32" /> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-441">O <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> propriedade representa a posição mais distante de edição na máscara, relativo à origem, que foi atribuída a um caractere de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-441">The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</span></span> <span data-ttu-id="41e2d-442">Para idiomas de leitura à esquerda para a direita (LTR), como o inglês, isso é mais à direita atribuído posição; para idiomas lidos da direita para esquerda (RTL), isso seria a posição mais à esquerda.</span><span class="sxs-lookup"><span data-stu-id="41e2d-442">For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ComponentModel.MaskedTextProvider.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-443">Gets the length of the mask, absent any mask modifier characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-443">Gets the length of the mask, absent any mask modifier characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-444">Um <see cref="T:System.Int32" /> que contém o número de posições na máscara, excluindo os caracteres que modificar a máscara de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-444">An <see cref="T:System.Int32" /> containing the number of positions in the mask, excluding characters that modify mask input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-445">O <xref:System.ComponentModel.MaskedTextProvider.Length%2A> propriedade representa o número total de caracteres na máscara, incluindo os caracteres literais e editáveis.</span><span class="sxs-lookup"><span data-stu-id="41e2d-445">The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters.</span></span> <span data-ttu-id="41e2d-446">O número de caracteres literais que pode ser determinado subtraindo o valor da <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> do <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-446">The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.</span></span>  
  
 <span data-ttu-id="41e2d-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> também descreve o comprimento da cadeia de caracteres formatada, incluindo caracteres de entrada, literais e caracteres de prompt.</span><span class="sxs-lookup"><span data-stu-id="41e2d-447"><xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string" Usage="System.ComponentModel.MaskedTextProvider.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-448">Gets the input mask.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-448">Gets the input mask.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-449">Um <see cref="T:System.String" /> que contém a máscara completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-449">A <see cref="T:System.String" /> containing the full mask.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-450">O <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade é definida no <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="41e2d-450">The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="41e2d-451">Essa máscara deve conter apenas caracteres válidos conforme definido pela linguagem de mascaramento.</span><span class="sxs-lookup"><span data-stu-id="41e2d-451">This mask must contain only valid characters as defined by the masking language.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.#ctor" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clone" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-452">Gets a value indicating whether all required inputs have been entered into the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-452">Gets a value indicating whether all required inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-453">
            <see langword="true" /> se todas as entradas necessárias foram inseridas na máscara; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-453">
              <see langword="true" /> if all required input has been entered into the mask; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-454">O <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propriedade verifica apenas elementos de entrada necessários.</span><span class="sxs-lookup"><span data-stu-id="41e2d-454">The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements.</span></span> <span data-ttu-id="41e2d-455">Para determinar se todos os elementos de entrada obrigatórios e opcionais foram inseridos, use o <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> propriedade do <xref:System.Windows.Forms.MaskedTextBox> classe em vez disso.</span><span class="sxs-lookup"><span data-stu-id="41e2d-455">To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.</span></span>  
  
 <span data-ttu-id="41e2d-456">O valor atual do <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade determina quais elementos de formatação são considerados necessários e opcionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-456">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.ComponentModel.MaskedTextProvider.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-457">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-457">Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-458">
            <see langword="true" /> se todas as entradas obrigatórias e opcionais tiverem sido inseridas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-458">
              <see langword="true" /> if all required and optional inputs have been entered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-459">Para verificar se apenas o necessário de elementos de entrada tenham sido inseridos, use o <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="41e2d-459">To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead.</span></span> <span data-ttu-id="41e2d-460">O valor atual do <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> propriedade determina quais elementos de formatação são considerados necessários e opcionais.</span><span class="sxs-lookup"><span data-stu-id="41e2d-460">The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.MaskCompleted" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.EditPositionCount" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-461">Gets or sets the character to be substituted for the actual input characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-461">Gets or sets the character to be substituted for the actual input characters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-462">O valor <see cref="T:System.Char" /> usado como o caractere de senha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-462">The <see cref="T:System.Char" /> value used as the password character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-463">Para a entrada de usuário confidenciais, é prática comum para ocultar as informações reais inseridas pelo usuário durante as operações de saída.</span><span class="sxs-lookup"><span data-stu-id="41e2d-463">For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</span></span> <span data-ttu-id="41e2d-464">Se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> estiver definida como um não -`null` de caractere, como os métodos de saída <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> serão obscurecidas os caracteres de entrada com o caractere de senha especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-464">If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character.</span></span> <span data-ttu-id="41e2d-465">Definir essa propriedade como `null` desabilitará a funcionalidade de proteção de senha.</span><span class="sxs-lookup"><span data-stu-id="41e2d-465">Setting this property to `null` will disable password protection functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41e2d-466">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-466">The password character specified when setting this property is the same as the current prompt character, <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />.</span>
          </span>
          <span data-ttu-id="41e2d-467">The two are required to be different.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-467">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41e2d-468">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-468">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IsPassword" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.ComponentModel.MaskedTextProvider.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-469">Gets or sets the character used to represent the absence of user input for all available edit positions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-469">Gets or sets the character used to represent the absence of user input for all available edit positions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-470">O caractere usado para solicitar a entrada do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-470">The character used to prompt the user for input.</span>
          </span>
          <span data-ttu-id="41e2d-471">O padrão é um caractere de sublinhado (_).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-471">The default is an underscore (_).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-472">O <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedade representa o caractere de prompt é usado pelas <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> métodos para representar o estado atual da cadeia de caracteres de entrada formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-472">The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string.</span></span> <span data-ttu-id="41e2d-473">Um caractere de prompt é colocado em posições editáveis têm ainda não foi atribuídas um valor de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-473">A prompt character is placed in editable positions that have not yet been assigned an input value.</span></span> <span data-ttu-id="41e2d-474">Algumas versões dos <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método também depende do valor da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-474">Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="41e2d-475">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-475">The prompt character specified when setting this property is the same as the current password character, <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />.</span>
          </span>
          <span data-ttu-id="41e2d-476">The two are required to be different.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-476">The two are required to be different.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41e2d-477">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-477">The character specified when setting this property is not a valid password character, as determined by the <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-478">Removes the last assigned character from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-478">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; bool" Usage="maskedTextProvider.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-479">Removes the last assigned character from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-479">Removes the last assigned character from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-480">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-480">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-481">O <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método se não houver nenhum caractere atribuído à máscara ainda não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="41e2d-481">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="41e2d-482">Quando o último caractere atribuído for removido da cadeia de caracteres formatada, o caractere de máscara editável é redefinido nessa posição, permitindo que a entrada subsequente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-482">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove([out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove([Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Remove :  *  -&gt; bool" Usage="maskedTextProvider.Remove (testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="testPosition">
          <span data-ttu-id="41e2d-483">The zero-based position in the formatted string where the character was actually removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-483">The zero-based position in the formatted string where the character was actually removed.</span>
          </span>
          <span data-ttu-id="41e2d-484">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-484">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-485">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-486">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-486">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-487">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-487">Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-488">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-488">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-489">O <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> método se não houver nenhum caractere atribuído à máscara ainda não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="41e2d-489">The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.</span></span>  
  
 <span data-ttu-id="41e2d-490">Quando o último caractere atribuído for removido da cadeia de caracteres formatada, o caractere de máscara editável é redefinido nessa posição, permitindo que a entrada subsequente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-490">When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAt">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-491">Removes one or more assigned characters from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-491">Removes one or more assigned characters from the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int position);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; bool" Usage="maskedTextProvider.RemoveAt position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="41e2d-492">The zero-based position of the assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-492">The zero-based position of the assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-493">Removes the assigned character at the specified position from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-493">Removes the assigned character at the specified position from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-494">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-494">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-495">O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído na posição de remoção especificada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-495">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified.</span></span> <span data-ttu-id="41e2d-496">Caracteres literais não são afetados por esse método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-496">Literal characters are not affected by this method.</span></span>  
  
 <span data-ttu-id="41e2d-497">Quando um caractere é removido, os caracteres restantes superior posicionado na máscara mudará para a esquerda para preencher a lacuna criada pela remoção.</span><span class="sxs-lookup"><span data-stu-id="41e2d-497">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="41e2d-498">Posições vagas são redefinidas para entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-498">Vacated positions are reset for input.</span></span> <span data-ttu-id="41e2d-499">Se a movimentação dos caracteres é impedida pela definição de máscara, nenhuma remoção ocorre, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-499">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="41e2d-500">Esta chamada de método é exatamente equivalente à chamada seguinte para sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> versão:</span><span class="sxs-lookup"><span data-stu-id="41e2d-500">This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:</span></span>  
  
 `RemoveAt(pos, pos);`  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-501">The zero-based index of the first assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-501">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-502">The zero-based index of the last assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-502">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-503">Removes the assigned characters between the specified positions from the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-503">Removes the assigned characters between the specified positions from the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-504">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-504">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-505">O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído nas posições de remoção especificadas.</span><span class="sxs-lookup"><span data-stu-id="41e2d-505">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="41e2d-506">Quando um caractere é removido, os caracteres restantes superior posicionado na máscara mudará para a esquerda para preencher a lacuna criada pela remoção.</span><span class="sxs-lookup"><span data-stu-id="41e2d-506">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="41e2d-507">Posições vagas são redefinidas para entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-507">Vacated positions are reset for input.</span></span> <span data-ttu-id="41e2d-508">Se a movimentação dos caracteres é impedida pela definição de máscara, nenhuma remoção ocorre, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-508">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAt(int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAt(int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int * int *  *  -&gt; bool" Usage="maskedTextProvider.RemoveAt (startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-509">The zero-based index of the first assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-509">The zero-based index of the first assigned character to remove.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-510">The zero-based index of the last assigned character to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-510">The zero-based index of the last assigned character to remove.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-511">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-511">If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-512">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-512">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-513">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-514">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-514">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-515">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-515">Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-516">
            <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-516">
              <see langword="true" /> if the character was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-517">O <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> método não tem nenhum efeito se não houver nenhum caractere atribuído nas posições de remoção especificadas.</span><span class="sxs-lookup"><span data-stu-id="41e2d-517">The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.</span></span>  
  
 <span data-ttu-id="41e2d-518">Quando um caractere é removido, os caracteres restantes superior posicionado na máscara mudará para a esquerda para preencher a lacuna criada pela remoção.</span><span class="sxs-lookup"><span data-stu-id="41e2d-518">When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</span></span> <span data-ttu-id="41e2d-519">Posições vagas são redefinidas para entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-519">Vacated positions are reset for input.</span></span> <span data-ttu-id="41e2d-520">Se a movimentação dos caracteres é impedida pela definição de máscara, nenhuma remoção ocorre, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-520">If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="41e2d-521">Esta versão do <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> fornece dois parâmetros de saída adicional para transmitir para obter mais informações sobre a operação do método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-521">This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-522">Replaces one or more editable characters in the formatted string with the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-522">Replaces one or more editable characters in the formatted string with the specified characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-523">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-523">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-524">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-524">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-525">Replaces a single character at or beyond the specified position with the specified character value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-525">Replaces a single character at or beyond the specified position with the specified character value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-526">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-526">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-527">O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> método procura a primeira posição editável na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-527">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="41e2d-528">Se um for encontrado, o valor da posição editável é alterado para o caractere especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-528">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="41e2d-529">Qualquer uma das condições a seguir resultará em um erro que faz com que nenhuma substituição a serem executadas e um valor de `false` a ser retornado:</span><span class="sxs-lookup"><span data-stu-id="41e2d-529">Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="41e2d-530">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-530">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-531">Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-531">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="41e2d-532">O caractere de substituição, `input`, não é um caractere de entrada válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-532">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int -&gt; bool" Usage="maskedTextProvider.Replace (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-533">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-533">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-534">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-534">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-535">Replaces a range of editable characters starting at the specified position with the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-535">Replaces a range of editable characters starting at the specified position with the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-536">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-536">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-537">O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> método procura a primeira posição editável em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-537">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="41e2d-538">Operando sob a suposição de que há suficiente posições editáveis depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-538">Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="41e2d-539">As condições a seguir são consideradas erros.</span><span class="sxs-lookup"><span data-stu-id="41e2d-539">The following conditions are considered errors.</span></span> <span data-ttu-id="41e2d-540">Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-540">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-541">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-541">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-542">Não há suficiente posições editáveis na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-542">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="41e2d-543">Um dos valores de caractere de substituição não é válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-543">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-544">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-544">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-545">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-545">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-546">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-546">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-547">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-547">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-548">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-548">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-549">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="41e2d-550">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-550">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-551">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-551">Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-552">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-552">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-553">O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a primeira posição editável na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-553">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="41e2d-554">Se um for encontrado, o valor da posição editável é alterado para o caractere especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-554">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="41e2d-555">Qualquer uma das condições a seguir resultará em uma condição de erro que faz com que nenhuma substituição a serem executadas e um valor de `false` a ser retornado:</span><span class="sxs-lookup"><span data-stu-id="41e2d-555">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="41e2d-556">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-556">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-557">Um caractere editável não foi encontrado na cadeia de caracteres formatada em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-557">An editable character was not found in the formatted string at or beyond the specified position, `pos`.</span></span>  
  
-   <span data-ttu-id="41e2d-558">O caractere de substituição, `input`, não é um caractere de entrada válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-558">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="41e2d-559">Além do valor retornado, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-559">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 position, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, position As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int position, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, position, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-560">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-560">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-561">The zero-based position to search for the first editable character to replace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-561">The zero-based position to search for the first editable character to replace.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-562">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-562">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-563">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-563">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-564">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="41e2d-565">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-565">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-566">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-566">Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-567">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-567">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-568">O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a primeira posição editável em ou após a posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-568">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`.</span></span> <span data-ttu-id="41e2d-569">Operando na suposição de que há suficiente posições editáveis depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-569">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="41e2d-570">As condições a seguir são consideradas erros.</span><span class="sxs-lookup"><span data-stu-id="41e2d-570">The following conditions are considered errors.</span></span> <span data-ttu-id="41e2d-571">Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-571">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-572">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-572">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.</span></span>  
  
-   <span data-ttu-id="41e2d-573">Não há suficiente posições editáveis na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-573">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="41e2d-574">Um dos valores de caractere de substituição não é válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-574">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="41e2d-575">Além do valor retornado, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-575">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(char input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As Char, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(char input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-576">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-576">The <see cref="T:System.Char" /> value that replaces the existing value.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="41e2d-577">The zero-based position in the formatted string where the replacement starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-577">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-578">The zero-based position in the formatted string where the replacement ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-578">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-579">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-579">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-580">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-580">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-581">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="41e2d-582">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-582">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-583">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-583">Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-584">
            <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-584">
              <see langword="true" /> if the character was successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-585">O <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> método procura a primeira posição editável na cadeia de caracteres formatada entre o inicial e final especificados posições.</span><span class="sxs-lookup"><span data-stu-id="41e2d-585">The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="41e2d-586">Se um for encontrado, o valor da posição editável é alterado para o caractere especificado, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-586">If one is found, the value of the editable position is changed to the specified character, `input`.</span></span> <span data-ttu-id="41e2d-587">Qualquer uma das condições a seguir resultará em uma condição de erro que faz com que nenhuma substituição a serem executadas e um valor de `false` a ser retornado:</span><span class="sxs-lookup"><span data-stu-id="41e2d-587">Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:</span></span>  
  
-   <span data-ttu-id="41e2d-588">O `startPos` ou `endPos` parâmetros ponto antes do início da cadeia de caracteres formatada ou após seu término.</span><span class="sxs-lookup"><span data-stu-id="41e2d-588">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="41e2d-589">Um caractere editável não foi encontrado no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-589">An editable character was not found in the specified interval.</span></span>  
  
-   <span data-ttu-id="41e2d-590">O caractere de substituição, `input`, não é um caractere de entrada válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-590">The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="41e2d-591">Além do valor retornado, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-591">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Replace(string input, int32 startPosition, int32 endPosition, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (input As String, startPosition As Integer, endPosition As Integer, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Replace(System::String ^ input, int startPosition, int endPosition, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * int * int *  *  -&gt; bool" Usage="maskedTextProvider.Replace (input, startPosition, endPosition, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="endPosition" Type="System.Int32" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-592">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-592">The <see cref="T:System.String" /> value used to replace the existing editable characters.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="41e2d-593">The zero-based position in the formatted string where the replacement starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-593">The zero-based position in the formatted string where the replacement starts.</span>
          </span>
        </param>
        <param name="endPosition">
          <span data-ttu-id="41e2d-594">The zero-based position in the formatted string where the replacement ends.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-594">The zero-based position in the formatted string where the replacement ends.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-595">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-595">If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-596">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-596">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-597">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the replacement operation.</span>
          </span>
          <span data-ttu-id="41e2d-598">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-598">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-599">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-599">Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-600">
            <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-600">
              <see langword="true" /> if all the characters were successfully replaced; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-601">O <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> método procura a primeira posição editável na cadeia de caracteres formatada entre o inicial e final especificados posições.</span><span class="sxs-lookup"><span data-stu-id="41e2d-601">The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions.</span></span> <span data-ttu-id="41e2d-602">Operando na suposição de que há suficiente posições editáveis depois deste ponto, os valores de caractere existentes são substituídos um um com o conteúdo do parâmetro de cadeia de caracteres de substituição, `input`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-602">Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.</span></span>  
  
 <span data-ttu-id="41e2d-603">As condições a seguir são consideradas erros.</span><span class="sxs-lookup"><span data-stu-id="41e2d-603">The following conditions are considered errors.</span></span> <span data-ttu-id="41e2d-604">Quando ocorre um erro, nenhuma substituição ocorre e <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-604">When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-605">O `startPos` ou `endPos` parâmetros ponto antes do início da cadeia de caracteres formatada ou após seu término.</span><span class="sxs-lookup"><span data-stu-id="41e2d-605">The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.</span></span>  
  
-   <span data-ttu-id="41e2d-606">Não há suficiente posições editáveis na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-606">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="41e2d-607">Um dos valores de caractere de substituição não é válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-607">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="41e2d-608">Além do valor retornado, esse método tem dois parâmetros de saída para fornecer informações adicionais sobre a operação de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-608">In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-609">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-609">Gets or sets a value that determines how an input character that matches the prompt character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-610">
            <see langword="true" /> se o caractere de prompt inserido como entrada fizer com que a posição editável atual na máscara seja redefinida, caso contrário, <see langword="false" /> para indicar que ele deverá ser processado como um caractere de entrada normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-610">
              <see langword="true" /> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that the prompt character is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="41e2d-611">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-611">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-612"><xref:System.ComponentModel.MaskedTextProvider> pode tratar duas categorias de caracteres, à prova e caracteres de prompt, de maneira especial.</span><span class="sxs-lookup"><span data-stu-id="41e2d-612"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner.</span></span> <span data-ttu-id="41e2d-613">Normalmente, cada caractere de entrada será testado em relação a máscara e o aceito ou rejeitado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-613">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="41e2d-614">Operando na suposição de que o <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> propriedade é definida como um valor diferente de `null`, definindo o <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> propriedade para `true` resultará em processamento especial para o caractere de prompt.</span><span class="sxs-lookup"><span data-stu-id="41e2d-614">Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character.</span></span> <span data-ttu-id="41e2d-615">Quando um caractere de prompt é adicionado, ele faz com que a posição atual do caractere de máscara a ser limpa e a posição atual para ser adiantada até o próximo caractere editável.</span><span class="sxs-lookup"><span data-stu-id="41e2d-615">When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="41e2d-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> tem precedência sobre o <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> propriedade conforme descrito na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="41e2d-616"><xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.</span></span>  
  
|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|<span data-ttu-id="41e2d-617">Comportamento resultante</span><span class="sxs-lookup"><span data-stu-id="41e2d-617">Resulting behavior</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  
|`true`|`true`|<span data-ttu-id="41e2d-618">O caractere de prompt pode ser adicionado e faz com que a posição atual de máscara a ser redefinido.</span><span class="sxs-lookup"><span data-stu-id="41e2d-618">The prompt character can be added and it causes the current mask position to be reset.</span></span> <span data-ttu-id="41e2d-619">O padrão.</span><span class="sxs-lookup"><span data-stu-id="41e2d-619">The default.</span></span>|  
|`true`|`false`|<span data-ttu-id="41e2d-620">O caractere de prompt pode ser adicionado e faz com que a posição atual de máscara a ser redefinido.</span><span class="sxs-lookup"><span data-stu-id="41e2d-620">The prompt character can be added and it causes the current mask position to be reset.</span></span>|  
|`false`|`true`|<span data-ttu-id="41e2d-621">O caractere de prompt é processado como um caractere de entrada normal.</span><span class="sxs-lookup"><span data-stu-id="41e2d-621">The prompt character is processed as a normal input character.</span></span>|  
|`false`|`false`|<span data-ttu-id="41e2d-622">O caractere de prompt não é válido e a tentativa de adicionar o caractere de métodos falhará.</span><span class="sxs-lookup"><span data-stu-id="41e2d-622">The prompt character is not valid and methods attempting to add the character will fail.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-623">Gets or sets a value that determines how a space input character should be handled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-623">Gets or sets a value that determines how a space input character should be handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-624">
            <see langword="true" /> se o caractere de entrada de espaço fizer com que a posição editável atual na máscara seja redefinida; caso contrário, <see langword="false" /> para indicar que ele deve ser processado como um caractere de entrada normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-624">
              <see langword="true" /> if the space input character causes the current editable position in the mask to be reset; otherwise, <see langword="false" /> to indicate that it is to be processed as a normal input character.</span>
          </span>
          <span data-ttu-id="41e2d-625">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-625">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-626"><xref:System.ComponentModel.MaskedTextProvider> pode tratar duas categorias de caracteres, espaços e caracteres de prompt, de maneira especial.</span><span class="sxs-lookup"><span data-stu-id="41e2d-626"><xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner.</span></span> <span data-ttu-id="41e2d-627">Normalmente, cada caractere de entrada será testado em relação a máscara e o aceito ou rejeitado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-627">Normally, each input character will be tested against the mask and either accepted or rejected.</span></span> <span data-ttu-id="41e2d-628">Definindo o <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> propriedade para `true` resultará na atual posição do caractere de máscara que está sendo limpo e a posição atual está sendo avançado para o próximo caractere editável.</span><span class="sxs-lookup"><span data-stu-id="41e2d-628">Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.</span></span>  
  
 <span data-ttu-id="41e2d-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> é útil quando atribuindo texto que foi salvo, excluindo o prompt, em que o prompt é substituído por um espaço.</span><span class="sxs-lookup"><span data-stu-id="41e2d-629"><xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</span></span> <span data-ttu-id="41e2d-630">Antes de restaurar uma cadeia de caracteres, definindo <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> para `true` redefinirá os caracteres de prompt nas posições ocupadas por espaços na cadeia de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-630">Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-631">Sets the formatted string to the specified input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-631">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Set : string -&gt; bool" Usage="maskedTextProvider.Set input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-632">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-632">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-633">Sets the formatted string to the specified input string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-633">Sets the formatted string to the specified input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-634">
            <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-634">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-635">O <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método limpa o conteúdo existente de cadeia de caracteres formatada e, em seguida, aplica-se a máscara contra o `input` cadeia de caracteres para atualizar o conteúdo de cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-635">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="41e2d-636">As condições a seguir são consideradas erros.</span><span class="sxs-lookup"><span data-stu-id="41e2d-636">The following conditions are considered errors.</span></span> <span data-ttu-id="41e2d-637">Quando ocorre um erro, a cadeia de caracteres formatada permanece inalterada e <xref:System.ComponentModel.MaskedTextProvider.Set%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-637">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-638">Não há suficiente posições editáveis na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-638">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="41e2d-639">Um dos valores de caractere de substituição não é válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-639">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-640">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-640">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Set (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.Set : string *  *  -&gt; bool" Usage="maskedTextProvider.Set (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-641">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-641">The <see cref="T:System.String" /> value used to set the formatted string.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-642">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-642">If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</span>
          </span>
          <span data-ttu-id="41e2d-643">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-643">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-644">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the set operation.</span>
          </span>
          <span data-ttu-id="41e2d-645">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-645">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-646">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-646">Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-647">
            <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-647">
              <see langword="true" /> if all the characters were successfully set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-648">O <xref:System.ComponentModel.MaskedTextProvider.Set%2A> método limpa o conteúdo existente de cadeia de caracteres formatada e, em seguida, aplica-se a máscara contra o `input` cadeia de caracteres para atualizar o conteúdo de cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-648">The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.</span></span>  
  
 <span data-ttu-id="41e2d-649">As condições a seguir são consideradas erros.</span><span class="sxs-lookup"><span data-stu-id="41e2d-649">The following conditions are considered errors.</span></span> <span data-ttu-id="41e2d-650">Quando ocorre um erro, a cadeia de caracteres formatada permanece inalterada e <xref:System.ComponentModel.MaskedTextProvider.Set%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-650">When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.</span></span>  
  
-   <span data-ttu-id="41e2d-651">Não há suficiente posições editáveis na cadeia de caracteres formatada para armazenar o conteúdo da cadeia de caracteres de substituição.</span><span class="sxs-lookup"><span data-stu-id="41e2d-651">There are not enough editable positions in the formatted string to hold the contents of the replacement string.</span></span>  
  
-   <span data-ttu-id="41e2d-652">Um dos valores de caractere de substituição não é válido porque ela não imprimível ou não corresponde ao seu elemento correspondente da máscara.</span><span class="sxs-lookup"><span data-stu-id="41e2d-652">One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</span></span>  
  
 <span data-ttu-id="41e2d-653">Esta versão do <xref:System.ComponentModel.MaskedTextProvider.Set%2A> fornece dois parâmetros de saída adicional para transmitir para obter mais informações sobre a operação do método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-653">This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41e2d-654">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-654">The <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Add" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Clear" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.InsertAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Remove" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Replace" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.ComponentModel.MaskedTextProvider.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-655">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-655">Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="41e2d-656">
            <see langword="true" /> para permitir a literais para ser adicionado novamente; Caso contrário, <see langword="false" /> não permitir que o usuário substituir caracteres literais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-656">
              <see langword="true" /> to allow literals to be added back; otherwise, <see langword="false" /> to not allow the user to overwrite literal characters.</span>
          </span>
          <span data-ttu-id="41e2d-657">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-657">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-658">Máscaras de entrada podem conter caracteres literal e editável.</span><span class="sxs-lookup"><span data-stu-id="41e2d-658">Input masks can contain literal and editable characters.</span></span> <span data-ttu-id="41e2d-659">Se for feita uma tentativa de adicionar um caractere de entrada para a posição em uma máscara ocupada por um literal, o valor da <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> propriedade determina o resultado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-659">If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.</span></span>  
  
-   <span data-ttu-id="41e2d-660">Se essa propriedade for `true`, ele é válido para substituir uma literal com o mesmo valor ao adicionar caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-660">If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters.</span></span> <span data-ttu-id="41e2d-661">Por exemplo, um valor de caractere de barra invertida, `'/'`, pode ser adicionado à terceira posição da máscara `"00/00/000"`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-661">For example, a forward slash character value, `'/'`, could be added to the third position of the mask `"00/00/000"`.</span></span>  
  
-   <span data-ttu-id="41e2d-662">Se essa propriedade for `false`, não é válido atribuir qualquer valor para uma posição de máscara ocupada por um caractere literal.</span><span class="sxs-lookup"><span data-stu-id="41e2d-662">If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ToDisplayString">
      <MemberSignature Language="C#" Value="public string ToDisplayString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToDisplayString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToDisplayString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToDisplayString();" />
      <MemberSignature Language="F#" Value="member this.ToDisplayString : unit -&gt; string" Usage="maskedTextProvider.ToDisplayString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-663">Returns the formatted string in a displayable form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-663">Returns the formatted string in a displayable form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-664">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-664">The formatted <see cref="T:System.String" /> that includes prompts and mask literals.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-665">O <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> método sempre incluirá o prompt e literais de caracteres no valor de retorno, independentemente do valor de <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> ou <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-665">The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="41e2d-666">Esse método sempre exibirá os caracteres de senha se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor de caractere diferente de `null`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-666">This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.</span></span>  
  
 <span data-ttu-id="41e2d-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> normalmente é usado para obter a cadeia de caracteres a exibir em elementos de interface do usuário associado, como <xref:System.Windows.Forms.MaskedTextBox>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-667"><xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.ToString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-668">Returns the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-668">Returns the formatted string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-669">Returns the formatted string that includes all the assigned character values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-669">Returns the formatted string that includes all the assigned character values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-670">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-670">The formatted <see cref="T:System.String" /> that includes all the assigned character values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-671">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores atuais da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-671">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="41e2d-672">Sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-672">It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-673">Como esse método revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-673">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="maskedTextProvider.ToString ignorePasswordChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="41e2d-674">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-674">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-675">Returns the formatted string, optionally including password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-675">Returns the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-676">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-676">The formatted <see cref="T:System.String" /> that includes literals, prompts, and optionally password characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-677">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores atuais da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-677">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="41e2d-678">Se o `ignorePasswordChar` parâmetro é `true`, ele retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-678">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="41e2d-679">Se esse parâmetro for `false`, ele usará o caractere de senha para obscurecer a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-679">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-680">Como esse método potencialmente revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-680">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="41e2d-681">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-681">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="41e2d-682">
            <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-682">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-683">Returns the formatted string, optionally including prompt and literal characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-683">Returns the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-684">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-684">The formatted <see cref="T:System.String" /> that includes all the assigned character values and optionally includes literals and prompts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-685">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método inclui prompts e literais de acordo com os valores da `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-685">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="41e2d-686">Observe que esses parâmetros substituem os valores de <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-686">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="41e2d-687">Esse método sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-687">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-688">Como esse método revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-688">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="maskedTextProvider.ToString (startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startPosition">
          <span data-ttu-id="41e2d-689">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-689">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41e2d-690">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-690">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-691">Returns a substring of the formatted string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-691">Returns a substring of the formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-692">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-692">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-693">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificados pelo `length` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-693">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="41e2d-694">A cadeia de caracteres retornada inclui prompts e literais de acordo com os valores atuais da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-694">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="41e2d-695">A cadeia de caracteres de retornada contém os caracteres de entrada originais; o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é sempre ignorada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-695">The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-696">Como esse método revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-696">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="41e2d-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Quando há discrepâncias nos parâmetros de entrada, executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="41e2d-697"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="41e2d-698">Se `startPos` é menor que zero, a posição inicial é definida como zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-698">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="41e2d-699">Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de cadeia de caracteres formatada, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-699">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="41e2d-700">Se `length` for maior do que o número restante de caracteres últimos caracteres da posição inicial, somente os restantes é retornado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-700">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="41e2d-701">Se `length` é menor que ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-701">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="41e2d-702">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-702">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="41e2d-703">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-703">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41e2d-704">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-704">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-705">Returns a substring of the formatted string, optionally including password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-705">Returns a substring of the formatted string, optionally including password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-706">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-706">If successful, a substring of the formatted <see cref="T:System.String" />, which includes literals, prompts, and optionally password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-707">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificados pelo `length` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-707">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="41e2d-708">A cadeia de caracteres retornada inclui prompts e literais de acordo com os valores atuais da <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-708">The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively.</span></span> <span data-ttu-id="41e2d-709">Se o `ignorePasswordChar` parâmetro é `true`, ele retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-709">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="41e2d-710">Se esse parâmetro for `false`, ele usará o caractere de senha para obscurecer a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-710">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-711">Como esse método potencialmente revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-711">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="41e2d-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Quando há discrepâncias nos parâmetros de entrada, executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="41e2d-712"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="41e2d-713">Se `startPos` é menor que zero, a posição inicial é definida como zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-713">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="41e2d-714">Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de cadeia de caracteres formatada, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-714">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="41e2d-715">Se `length` for maior do que o número restante de caracteres últimos caracteres da posição inicial, somente os restantes é retornado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-715">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="41e2d-716">Se `length` é menor que ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-716">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="includePrompt">
          <span data-ttu-id="41e2d-717">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-717">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="41e2d-718">
            <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-718">
              <see langword="true" /> to include literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="41e2d-719">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-719">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41e2d-720">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-720">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-721">Returns a substring of the formatted string, optionally including prompt and literal characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-721">Returns a substring of the formatted string, optionally including prompt and literal characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-722">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-722">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-723">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificados pelo `length` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-723">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="41e2d-724">A cadeia de caracteres de retornada inclui prompts e literais de acordo com os valores da `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-724">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="41e2d-725">Observe que esses parâmetros substituem os valores de <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-725">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="41e2d-726">Esse método sempre retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-726">This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-727">Como esse método revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-727">Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="41e2d-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Quando há discrepâncias nos parâmetros de entrada, executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="41e2d-728"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="41e2d-729">Se `startPos` é menor que zero, a posição inicial é definida como zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-729">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="41e2d-730">Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de cadeia de caracteres formatada, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-730">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="41e2d-731">Se `length` for maior do que o número restante de caracteres últimos caracteres da posição inicial, somente os restantes é retornado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-731">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="41e2d-732">Se `length` é menor que ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-732">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int32 startPosition, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (ignorePasswordChar As Boolean, includePrompt As Boolean, includeLiterals As Boolean, startPosition As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool * bool * bool * int * int -&gt; string" Usage="maskedTextProvider.ToString (ignorePasswordChar, includePrompt, includeLiterals, startPosition, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignorePasswordChar" Type="System.Boolean" />
        <Parameter Name="includePrompt" Type="System.Boolean" />
        <Parameter Name="includeLiterals" Type="System.Boolean" />
        <Parameter Name="startPosition" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ignorePasswordChar">
          <span data-ttu-id="41e2d-733">
            <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-733">
              <see langword="true" /> to return the actual editable characters; otherwise, <see langword="false" /> to indicate that the <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" /> property is to be honored.</span>
          </span>
        </param>
        <param name="includePrompt">
          <span data-ttu-id="41e2d-734">
            <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-734">
              <see langword="true" /> to include prompt characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="includeLiterals">
          <span data-ttu-id="41e2d-735">
            <see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-735">
              <see langword="true" /> to return literal characters in the return string; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="startPosition">
          <span data-ttu-id="41e2d-736">The zero-based position in the formatted string where the output begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-736">The zero-based position in the formatted string where the output begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="41e2d-737">The number of characters to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-737">The number of characters to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-738">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-738">Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-739">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-739">If successful, a substring of the formatted <see cref="T:System.String" />, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-740">Esta versão do sobrecarregado <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> método retorna uma subcadeia da cadeia de caracteres formatada, começando na posição `startPos` e incluindo o número subsequente de caracteres especificados pelo `length` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="41e2d-740">This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter.</span></span> <span data-ttu-id="41e2d-741">A cadeia de caracteres de retornada inclui prompts e literais de acordo com os valores da `IncludePrompt` e `IncludeLiterals` parâmetros, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="41e2d-741">The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively.</span></span> <span data-ttu-id="41e2d-742">Observe que esses parâmetros substituem os valores de <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-742">Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties.</span></span> <span data-ttu-id="41e2d-743">Se o `ignorePasswordChar` parâmetro é `true`, ele retornará os caracteres de entrada originais, ignorando o valor da <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="41e2d-743">If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.</span></span> <span data-ttu-id="41e2d-744">Se esse parâmetro for `false`, ele usará o caractere de senha para obscurecer a entrada do usuário editável se o <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> propriedade é definida como um valor diferente de `null`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-744">If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="41e2d-745">Como esse método potencialmente revela as informações que normalmente são protegidas na interface do usuário por caracteres de senha, ele deve ser usado com muito cuidado para evitar revelar acidentalmente dados confidenciais do usuário.</span><span class="sxs-lookup"><span data-stu-id="41e2d-745">Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</span></span>  
  
 <span data-ttu-id="41e2d-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Quando há discrepâncias nos parâmetros de entrada, executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="41e2d-746"><xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:</span></span>  
  
-   <span data-ttu-id="41e2d-747">Se `startPos` é menor que zero, a posição inicial é definida como zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-747">If `startPos` is less than zero, the starting position is set to zero.</span></span>  
  
-   <span data-ttu-id="41e2d-748">Se `startPos` é maior que ou igual a real <xref:System.ComponentModel.MaskedTextProvider.Length%2A> de cadeia de caracteres formatada, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-748">If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.</span></span>  
  
-   <span data-ttu-id="41e2d-749">Se `length` for maior do que o número restante de caracteres últimos caracteres da posição inicial, somente os restantes é retornado.</span><span class="sxs-lookup"><span data-stu-id="41e2d-749">If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</span></span>  
  
-   <span data-ttu-id="41e2d-750">Se `length` é menor que ou igual a zero, o <xref:System.String.Empty> cadeia de caracteres é retornada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-750">If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.ToDisplayString" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludePrompt" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="VerifyChar">
      <MemberSignature Language="C#" Value="public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyChar(char input, int32 position, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyChar (input As Char, position As Integer, ByRef hint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyChar(char input, int position, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % hint);" />
      <MemberSignature Language="F#" Value="member this.VerifyChar : char * int *  -&gt; bool" Usage="maskedTextProvider.VerifyChar (input, position, hint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="hint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-751">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-751">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-752">The position in the mask to test the input character against.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-752">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <param name="hint">
          <span data-ttu-id="41e2d-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-753">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the operation.</span>
          </span>
          <span data-ttu-id="41e2d-754">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-754">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-755">Tests whether the specified character could be set successfully at the specified position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-755">Tests whether the specified character could be set successfully at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-756">
            <see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-756">
              <see langword="true" /> if the specified character is valid for the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-757">O <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> método testa se um valor de caractere único representa uma entrada válida na posição especificada na cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-757">The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string.</span></span> <span data-ttu-id="41e2d-758">Esse método retornará `false` pelos seguintes motivos:</span><span class="sxs-lookup"><span data-stu-id="41e2d-758">This method will return `false` for the following reasons:</span></span>  
  
-   <span data-ttu-id="41e2d-759">O `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> da <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-759">The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
-   <span data-ttu-id="41e2d-760">O caractere `input` não é um caractere de entrada válido, conforme determinado pelo <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-760">The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.</span></span>  
  
-   <span data-ttu-id="41e2d-761">O `input` não é compatível com o elemento de máscara na posição especificada, `pos`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-761">The `input` is not compatible with the mask element at the specified position, `pos`.</span></span>  
  
 <span data-ttu-id="41e2d-762">A última condição pode depender do valor atual de <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> e <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="41e2d-762">The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.</span></span>  
  
 <span data-ttu-id="41e2d-763">Para testar uma cadeia de caracteres de entrada inteira contra a máscara, use um do <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> métodos em vez disso.</span><span class="sxs-lookup"><span data-stu-id="41e2d-763">To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
      </Docs>
    </Member>
    <Member MemberName="VerifyEscapeChar">
      <MemberSignature Language="C#" Value="public bool VerifyEscapeChar (char input, int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyEscapeChar(char input, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyEscapeChar (input As Char, position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyEscapeChar(char input, int position);" />
      <MemberSignature Language="F#" Value="member this.VerifyEscapeChar : char * int -&gt; bool" Usage="maskedTextProvider.VerifyEscapeChar (input, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Char" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-764">The <see cref="T:System.Char" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-764">The <see cref="T:System.Char" /> value to test.</span>
          </span>
        </param>
        <param name="position">
          <span data-ttu-id="41e2d-765">The position in the mask to test the input character against.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-765">The position in the mask to test the input character against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-766">Tests whether the specified character would be escaped at the specified position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-766">Tests whether the specified character would be escaped at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-767">
            <see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-767">
              <see langword="true" /> if the specified character would be escaped at the specified position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-768">Um caractere é considerado *escape* se ele é uma entrada válida, mas não está atribuído a posição na cadeia de caracteres formatada.</span><span class="sxs-lookup"><span data-stu-id="41e2d-768">A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string.</span></span> <span data-ttu-id="41e2d-769">Outono de caracteres de escape em três categorias a seguir:</span><span class="sxs-lookup"><span data-stu-id="41e2d-769">Escaped characters fall into the following three categories:</span></span>  
  
-   <span data-ttu-id="41e2d-770">Caracteres de prompt são ignoradas se o <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-770">Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="41e2d-771">Caracteres de entrada são ignoradas se eles tiverem o mesmo valor literal na máscara e se o <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-771">Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="41e2d-772">Caractere de espaço será ignorado se o <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="41e2d-772">Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="41e2d-773">O <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> método também retornará `false` se o `pos` parâmetro é menor que zero ou maior que o <xref:System.ComponentModel.MaskedTextProvider.Length%2A> do <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span><span class="sxs-lookup"><span data-stu-id="41e2d-773">The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.VerifyString" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.SkipLiterals" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41e2d-774">Tests whether the specified string could be set successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-774">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string -&gt; bool" Usage="maskedTextProvider.VerifyString input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-775">The <see cref="T:System.String" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-775">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-776">Tests whether the specified string could be set successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-776">Tests whether the specified string could be set successfully.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-777">
            <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-777">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-778">O <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> aplica-se a `input` cadeia de caracteres com a máscara, sem, na verdade, alterar a cadeia de caracteres formatada, para testar se `input` seria válido em uma correspondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="41e2d-778">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="41e2d-779">Esse método também retornará `true` se a entrada é `null` ou tem comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-779">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
    <Member MemberName="VerifyString">
      <MemberSignature Language="C#" Value="public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyString(string input, [out] int32&amp; testPosition, [out] valuetype System.ComponentModel.MaskedTextResultHint&amp; resultHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyString (input As String, ByRef testPosition As Integer, ByRef resultHint As MaskedTextResultHint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyString(System::String ^ input, [Runtime::InteropServices::Out] int % testPosition, [Runtime::InteropServices::Out] System::ComponentModel::MaskedTextResultHint % resultHint);" />
      <MemberSignature Language="F#" Value="member this.VerifyString : string *  *  -&gt; bool" Usage="maskedTextProvider.VerifyString (input, testPosition, resultHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="testPosition" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="resultHint" Type="System.ComponentModel.MaskedTextResultHint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="41e2d-780">The <see cref="T:System.String" /> value to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-780">The <see cref="T:System.String" /> value to test.</span>
          </span>
        </param>
        <param name="testPosition">
          <span data-ttu-id="41e2d-781">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-781">If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</span>
          </span>
          <span data-ttu-id="41e2d-782">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-782">An output parameter.</span>
          </span>
        </param>
        <param name="resultHint">
          <span data-ttu-id="41e2d-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-783">A <see cref="T:System.ComponentModel.MaskedTextResultHint" /> that succinctly describes the result of the test operation.</span>
          </span>
          <span data-ttu-id="41e2d-784">An output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-784">An output parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41e2d-785">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-785">Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41e2d-786">
            <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41e2d-786">
              <see langword="true" /> if the specified string represents valid input; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41e2d-787">O <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> aplica-se a `input` cadeia de caracteres com a máscara, sem, na verdade, alterar a cadeia de caracteres formatada, para testar se `input` seria válido em uma correspondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="41e2d-787">The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation.</span></span> <span data-ttu-id="41e2d-788">Esse método também retornará `true` se a entrada é `null` ou tem comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="41e2d-788">This method also returns `true` if input is `null` or has zero length.</span></span>  
  
 <span data-ttu-id="41e2d-789">Esta versão do <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> fornece dois parâmetros de saída adicional para transmitir para obter mais informações sobre a operação do método.</span><span class="sxs-lookup"><span data-stu-id="41e2d-789">This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.MaskedTextProvider.Set" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Mask" />
        <altmember cref="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)" />
        <altmember cref="P:System.ComponentModel.MaskedTextProvider.Length" />
      </Docs>
    </Member>
  </Members>
</Type>