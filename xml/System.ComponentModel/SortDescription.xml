<Type Name="SortDescription" FullName="System.ComponentModel.SortDescription">
  <TypeSignature Language="C#" Value="public struct SortDescription" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SortDescription extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.SortDescription" />
  <TypeSignature Language="VB.NET" Value="Public Structure SortDescription" />
  <TypeSignature Language="C++ CLI" Value="public value class SortDescription" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e25b-101">Define a direção e o nome da propriedade a ser usada como critério para classificar uma coleção.</span><span class="sxs-lookup"><span data-stu-id="4e25b-101">Defines the direction and the property name to be used as the criteria for sorting a collection.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortDescription (string propertyName, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, direction As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortDescription(System::String ^ propertyName, System::ComponentModel::ListSortDirection direction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="4e25b-102">O nome da propriedade pela qual a lista será classificada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-102">The name of the property to sort the list by.</span></span></param>
        <param name="direction"><span data-ttu-id="4e25b-103">A ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="4e25b-103">The sort order.</span></span></param>
        <summary><span data-ttu-id="4e25b-104">Inicializa uma nova instância da estrutura <see cref="T:System.ComponentModel.SortDescription" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-104">Initializes a new instance of the <see cref="T:System.ComponentModel.SortDescription" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e25b-105">O parâmetro <paramref name="propertyName" /> não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="4e25b-105">The <paramref name="propertyName" /> parameter cannot be null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e25b-106">O parâmetro <paramref name="propertyName" /> não pode estar vazio</span><span class="sxs-lookup"><span data-stu-id="4e25b-106">The <paramref name="propertyName" /> parameter cannot be empty</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="4e25b-107">O parâmetro <paramref name="direction" /> não especifica um valor válido.</span><span class="sxs-lookup"><span data-stu-id="4e25b-107">The <paramref name="direction" /> parameter does not specify a valid value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ListSortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.SortDescription.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ListSortDirection Direction { System::ComponentModel::ListSortDirection get(); void set(System::ComponentModel::ListSortDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e25b-108">Obtém ou define um valor que indica se deve classificar em ordem crescente ou decrescente.</span><span class="sxs-lookup"><span data-stu-id="4e25b-108">Gets or sets a value that indicates whether to sort in ascending or descending order.</span></span></summary>
        <value><span data-ttu-id="4e25b-109">Um <see cref="T:System.ComponentModel.ListSortDirection" /> valor para indicar se deseja classificar em ordem crescente ou decrescente.</span><span class="sxs-lookup"><span data-stu-id="4e25b-109">A <see cref="T:System.ComponentModel.ListSortDirection" /> value to indicate whether to sort in ascending or descending order.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SortDescription.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4e25b-110">A instância de <see cref="T:System.ComponentModel.SortDescription" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-110">The <see cref="T:System.ComponentModel.SortDescription" /> instance to compare.</span></span></param>
        <summary><span data-ttu-id="4e25b-111">Compara a instância especificada e a instância atual de <see cref="T:System.ComponentModel.SortDescription" /> quanto à igualdade de valores.</span><span class="sxs-lookup"><span data-stu-id="4e25b-111">Compares the specified instance and the current instance of <see cref="T:System.ComponentModel.SortDescription" /> for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="4e25b-112"><see langword="true" /> se <paramref name="obj" /> e essa instância de <see cref="T:System.ComponentModel.SortDescription" /> têm os mesmos valores.</span><span class="sxs-lookup"><span data-stu-id="4e25b-112"><see langword="true" /> if <paramref name="obj" /> and this instance of <see cref="T:System.ComponentModel.SortDescription" /> have the same values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SortDescription.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e25b-113">Retorna o código hash para essa instância de <see cref="T:System.ComponentModel.SortDescription" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-113">Returns the hash code for this instance of <see cref="T:System.ComponentModel.SortDescription" />.</span></span></summary>
        <returns><span data-ttu-id="4e25b-114">O código hash para essa instância de <see cref="T:System.ComponentModel.SortDescription" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-114">The hash code for this instance of <see cref="T:System.ComponentModel.SortDescription" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.SortDescription.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e25b-115">Obtém um valor que indica se este objeto está em um estado imutável.</span><span class="sxs-lookup"><span data-stu-id="4e25b-115">Gets a value that indicates whether this object is in an immutable state.</span></span></summary>
        <value>
          <span data-ttu-id="4e25b-116"><see langword="true" /> Se esse objeto está em uso; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-116"><see langword="true" /> if this object is in use; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ComponentModel.SortDescription sd1, System.ComponentModel.SortDescription sd2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ComponentModel.SortDescription sd1, valuetype System.ComponentModel.SortDescription sd2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (sd1 As SortDescription, sd2 As SortDescription) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ComponentModel::SortDescription sd1, System::ComponentModel::SortDescription sd2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sd1" Type="System.ComponentModel.SortDescription" />
        <Parameter Name="sd2" Type="System.ComponentModel.SortDescription" />
      </Parameters>
      <Docs>
        <param name="sd1"><span data-ttu-id="4e25b-117">A primeira instância a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-117">The first instance to compare.</span></span></param>
        <param name="sd2"><span data-ttu-id="4e25b-118">A segunda instância a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-118">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="4e25b-119">Compara dois objetos <see cref="T:System.ComponentModel.SortDescription" /> quanto à igualdade de valor.</span><span class="sxs-lookup"><span data-stu-id="4e25b-119">Compares two <see cref="T:System.ComponentModel.SortDescription" /> objects for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="4e25b-120"><see langword="true" /> se os dois objetos forem iguais; do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-120"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="4e25b-121">O método equivalente para esse operador é <xref:System.ComponentModel.SortDescription.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e25b-121">The equivalent method for this operator is <xref:System.ComponentModel.SortDescription.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ComponentModel.SortDescription sd1, System.ComponentModel.SortDescription sd2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ComponentModel.SortDescription sd1, valuetype System.ComponentModel.SortDescription sd2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (sd1 As SortDescription, sd2 As SortDescription) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ComponentModel::SortDescription sd1, System::ComponentModel::SortDescription sd2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sd1" Type="System.ComponentModel.SortDescription" />
        <Parameter Name="sd2" Type="System.ComponentModel.SortDescription" />
      </Parameters>
      <Docs>
        <param name="sd1"><span data-ttu-id="4e25b-122">A primeira instância a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-122">The first instance to compare.</span></span></param>
        <param name="sd2"><span data-ttu-id="4e25b-123">A segunda instância a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="4e25b-123">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="4e25b-124">Compara dois objetos <see cref="T:System.ComponentModel.SortDescription" /> quanto à desigualdade de valor.</span><span class="sxs-lookup"><span data-stu-id="4e25b-124">Compares two <see cref="T:System.ComponentModel.SortDescription" /> objects for value inequality.</span></span></summary>
        <returns>
          <span data-ttu-id="4e25b-125"><see langword="true" /> se os valores não forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4e25b-125"><see langword="true" /> if the values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="4e25b-126">O método equivalente para esse operador é <xref:System.ComponentModel.SortDescription.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4e25b-126">The equivalent method for this operator is <xref:System.ComponentModel.SortDescription.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.SortDescription.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e25b-127">Obtém ou define o nome da propriedade usado como critério de classificação.</span><span class="sxs-lookup"><span data-stu-id="4e25b-127">Gets or sets the property name being used as the sorting criteria.</span></span></summary>
        <value><span data-ttu-id="4e25b-128">O valor padrão é null.</span><span class="sxs-lookup"><span data-stu-id="4e25b-128">The default value is null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e25b-129">Essa propriedade deve ser uma propriedade pública de itens na coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="4e25b-129">This property should be a public property of the items in the underlying collection.</span></span>  
  
 <span data-ttu-id="4e25b-130">A cadeia de caracteres é interpretada pelo particular <xref:System.ComponentModel.ICollectionView> objeto envolvido na classificação.</span><span class="sxs-lookup"><span data-stu-id="4e25b-130">The string is interpreted by the particular <xref:System.ComponentModel.ICollectionView> object involved in the sorting.</span></span> <span data-ttu-id="4e25b-131"><xref:System.Windows.Data.BindingListCollectionView> só oferece suporte a nomes de coluna simples.</span><span class="sxs-lookup"><span data-stu-id="4e25b-131"><xref:System.Windows.Data.BindingListCollectionView> only supports simple column names.</span></span> <span data-ttu-id="4e25b-132"><xref:System.Windows.Data.ListCollectionView> dá suporte a caminhos de propriedade geral e `XPath` para [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] dados.</span><span class="sxs-lookup"><span data-stu-id="4e25b-132"><xref:System.Windows.Data.ListCollectionView> supports general property paths and `XPath` for [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data.</span></span> <span data-ttu-id="4e25b-133">Portanto, quando o modo de exibição é um <xref:System.Windows.Data.ListCollectionView> do objeto, você pode classificar [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] nós em um <xref:System.Windows.Data.XmlDataProvider> com base em um atributo de nós.</span><span class="sxs-lookup"><span data-stu-id="4e25b-133">Therefore, when the view is a <xref:System.Windows.Data.ListCollectionView> object, you can sort [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] nodes in an <xref:System.Windows.Data.XmlDataProvider> based on an attribute of those nodes.</span></span> <span data-ttu-id="4e25b-134">Por exemplo, se o nome do atributo é `Cost`, você deve especificar "@Cost" para o <xref:System.ComponentModel.SortDescription.PropertyName%2A> no <xref:System.ComponentModel.SortDescription>.</span><span class="sxs-lookup"><span data-stu-id="4e25b-134">For example, if the attribute name is `Cost`, you would specify "@Cost" for the <xref:System.ComponentModel.SortDescription.PropertyName%2A> in the <xref:System.ComponentModel.SortDescription>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>