<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventDescriptor.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5acbaf46d052c6dbc8411c31a1de5fb1e51d98436.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acbaf46d052c6dbc8411c31a1de5fb1e51d98436</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Provides information about an event.</source>
          <target state="translated">Fornece informações sobre um evento.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> consiste em um nome, seus atributos, o evento associada ao componente, o delegado de evento, o tipo de delegado, e se o representante é multicast.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> fornece o seguinte <ph id="ph2">`abstract`</ph> propriedades e métodos:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contains the type of the component this event is declared on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contém o tipo do componente que esse evento é declarado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contains the type of delegate for the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contém o tipo de delegado do evento.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contains a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contém um valor que indica se o delegado do evento é um delegado multicast.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> binds the event to a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> associa o evento para um componente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> unbinds the delegate from the component so that the delegate no longer receives events from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> desvincula o delegado do componente de forma que o delegado não receberá mais eventos do componente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre eventos, consulte <bpt id="p1">[</bpt>tratamento e gerando eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre reflexão, consulte os tópicos <bpt id="p1">[</bpt>reflexão<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir se baseia o exemplo de <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It prints the information (category, description, and display name) of each event on a button in a text box.</source>
          <target state="translated">Imprime as informações (categoria, descrição e nome de exibição) de cada evento em um botão em uma caixa de texto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It requires that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">Isso requer que <ph id="ph1">`button1`</ph> e <ph id="ph2">`textbox1`</ph> tenham sido criadas em um formulário.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the event and its attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que contém o nome do evento e seus atributos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> com o nome e os atributos no <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that has the name of the member and its attributes.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> que tem o nome do membro e seus atributos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array with the attributes you want to add to this event description.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> com os atributos que você deseja adicionar a esta descrição do evento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> com o nome no <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> especificado e os atributos tanto no <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> quanto na matriz <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">Este construtor acrescenta os atributos no <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> matriz aos atributos a <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">O nome do evento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the event attributes.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> que contém os atributos de evento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the specified name and attribute array.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> com o nome e a matriz de atributo especificados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A component that provides events to the delegate.</source>
          <target state="translated">Um componente que fornece eventos para o delegado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A delegate that represents the method that handles the event.</source>
          <target state="translated">Um delegado que representa o método que manipula o evento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, binds the event to the component.</source>
          <target state="translated">Quando substituído em uma classe derivada, associa o evento ao componente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre reflexão, consulte os tópicos <bpt id="p1">[</bpt>reflexão<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">Para obter mais informações sobre delegados, consulte <bpt id="p1">[</bpt>NIB: eventos e delegados<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should add the delegate to the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">Quando você substituir esse método, deve adicionar o representante para a lista de eventos do componente invocando apropriada <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of component this event is bound to.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o tipo de componente ao qual esse evento está associado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component the event is bound to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo de componente, o evento é vinculado ao.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propriedade é implementada por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>When overridden in a derived class, gets the type of delegate for the event.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o tipo de delegado do evento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of delegate for the event.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo de delegado do evento.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propriedade é implementada por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém um valor que indica se o delegado do evento é um delegado multicast.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event delegate is multicast; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o delegado do evento é multicast; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">Normalmente, esta propriedade é implementada por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</source>
          <target state="translated">Um delegado multicast é diferente de um delegado regular, ele pode conter referências a mais de um método.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</source>
          <target state="translated">Métodos em um delegado multicast são executados de forma síncrona quando o delegado é invocado, na ordem em que aparecem.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</source>
          <target state="translated">Se um dos métodos chamados gera uma exceção, em seguida, deixa o delegado e a exceção é propagada para o chamador de delegado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The component that the delegate is bound to.</source>
          <target state="translated">O componente ao qual o delegado está associado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate to unbind from the component.</source>
          <target state="translated">O delegado a ser desassociado da lista.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</source>
          <target state="translated">Quando substituído em uma classe derivada, desassocia o delegado do componente de forma que o delegado não receberá mais eventos do componente.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">Normalmente, esse método é implementado por meio de reflexão.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte os tópicos <bpt id="p1">[</bpt>reflexão<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">Para obter mais informações sobre delegados, consulte <bpt id="p1">[</bpt>NIB: eventos e delegados<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">Quando você substituir esse método, ele deve remover o representante da lista de eventos do componente invocando apropriada <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> método.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>