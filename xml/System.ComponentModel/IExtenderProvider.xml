<Type Name="IExtenderProvider" FullName="System.ComponentModel.IExtenderProvider">
  <TypeSignature Language="C#" Value="public interface IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7a279-101">Define a interface para estender propriedades para outros componentes em um contêiner.</span><span class="sxs-lookup"><span data-stu-id="7a279-101">Defines the interface for extending properties to other components in a container.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a279-102">Um provedor do extensor é um componente que fornece propriedades para outros componentes.</span><span class="sxs-lookup"><span data-stu-id="7a279-102">An extender provider is a component that provides properties to other components.</span></span> <span data-ttu-id="7a279-103">Por exemplo, o <xref:System.Windows.Forms.ToolTip> controle é um provedor do extensor.</span><span class="sxs-lookup"><span data-stu-id="7a279-103">For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider.</span></span> <span data-ttu-id="7a279-104">Quando você adiciona um <xref:System.Windows.Forms.ToolTip> o controle para um <xref:System.Windows.Forms.Form>, todos os outros controles no formulário tem um <xref:System.Windows.Forms.ToolTip> propriedade adicionada à sua lista de propriedades.</span><span class="sxs-lookup"><span data-stu-id="7a279-104">When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.</span></span>  
  
 <span data-ttu-id="7a279-105">Qualquer componente que fornece propriedades estendidas deve implementar <xref:System.ComponentModel.IExtenderProvider>.</span><span class="sxs-lookup"><span data-stu-id="7a279-105">Any component that provides extender properties must implement <xref:System.ComponentModel.IExtenderProvider>.</span></span> <span data-ttu-id="7a279-106">Um designer visual pode chamar <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> para determinar quais objetos em um contêiner devem receber as propriedades estendidas.</span><span class="sxs-lookup"><span data-stu-id="7a279-106">A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.</span></span>  
  
 <span data-ttu-id="7a279-107">Para obter mais informações sobre os provedores de extensão, consulte [como: implementar um provedor de extensor](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).</span><span class="sxs-lookup"><span data-stu-id="7a279-107">For more information about extender providers, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a279-108">O exemplo de código a seguir demonstra como implementar o <xref:System.ComponentModel.IExtenderProvider> interface.</span><span class="sxs-lookup"><span data-stu-id="7a279-108">The following code example demonstrates how to implement the <xref:System.ComponentModel.IExtenderProvider> interface.</span></span> <span data-ttu-id="7a279-109">Este exemplo é parte de um exemplo maior discutido [como: implementar um provedor de extensor HelpLabel](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).</span><span class="sxs-lookup"><span data-stu-id="7a279-109">This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).</span></span>  
  
 [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]
 [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExtend(System::Object ^ extendee);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee"><span data-ttu-id="7a279-110">O <see cref="T:System.Object" /> para receber as propriedades de extensão.</span><span class="sxs-lookup"><span data-stu-id="7a279-110">The <see cref="T:System.Object" /> to receive the extender properties.</span></span></param>
        <summary><span data-ttu-id="7a279-111">Especifica se este objeto pode fornecer suas propriedades estendidas ao objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="7a279-111">Specifies whether this object can provide its extender properties to the specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="7a279-112"><see langword="true" /> se este objeto puder fornecer propriedades de extensão ao objeto especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a279-112"><see langword="true" /> if this object can provide extender properties to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a279-113">Para obter mais informações sobre propriedades estendidas, consulte [como: implementar um provedor de extensor](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).</span><span class="sxs-lookup"><span data-stu-id="7a279-113">For more information on extender properties, see [How to: Implement an Extender Provider](http://msdn.microsoft.com/library/d824f40e-b20b-464c-ac22-97974d5ab4fe).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a279-114">O exemplo de código a seguir demonstra como implementar o <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="7a279-114">The following code example demonstrates how to implement the <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> property.</span></span> <span data-ttu-id="7a279-115">Este exemplo é parte de um exemplo maior discutido [como: implementar um provedor de extensor HelpLabel](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).</span><span class="sxs-lookup"><span data-stu-id="7a279-115">This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](http://msdn.microsoft.com/library/21e34929-ff78-4f3f-aee8-a16a4ef5ac9d).</span></span>  
  
 [!code-csharp[System.Windows.Forms.HelpLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/CS/HelpLabel.cs#1)]
 [!code-vb[System.Windows.Forms.HelpLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpLabel/VB/HelpLabel.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>