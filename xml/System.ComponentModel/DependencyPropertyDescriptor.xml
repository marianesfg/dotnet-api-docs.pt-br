<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyPropertyDescriptor.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b92ae7ae04745f0947cc4f73be429fa86e1532f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b92ae7ae04745f0947cc4f73be429fa86e1532f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Provides an extension of <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that accounts for the additional property characteristics of a dependency property.</source>
          <target state="translated">Fornece uma extensão do <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> que representa as características das propriedades adicionais de uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>This class is primarily used by designer applications.</source>
          <target state="translated">Essa classe é usada principalmente por aplicativos de criação.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</source>
          <target state="translated">Esses aplicativos talvez precise relatam as características de propriedade de dependência por meio do windows de propriedade ou outras ferramentas usadas para a edição de valores de propriedade.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>In order to check a specific property to determine whether it has <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> available to serve as a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, call either <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para verificar uma propriedade específica para determinar se ele possui <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> disponível para servir como um <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>, chame o <ph id="ph3">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph4">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If either method returns <ph id="ph1">`null`</ph>, then the property is not a dependency property.</source>
          <target state="translated">Se o método retornar <ph id="ph1">`null`</ph>, em seguida, a propriedade não é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>If the method returns a valid <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , then the property is a dependency property.</source>
          <target state="translated">Se o método retornar um válido <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> , em seguida, a propriedade é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">O componente ao qual adicionar o manipulador.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">O delegado a ser adicionado como um ouvinte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Permite que outros objetos sejam notificados quando essa propriedade muda.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>Gets the collection of attributes for this member.</source>
          <target state="translated">Obtém a coleção de atributos para este membro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> collection of attributes.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.AttributeCollection" /&gt;</ph> coleção de atributos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">O componente a ser testado quanto à capacidade de redefinição.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>Returns whether resetting an object changes its value.</source>
          <target state="translated">Retorna se a redefinição de um objeto altera ou não o valor dele.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a redefinição do componente altera seu valor; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>Gets the name of the category that the member belongs to, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém o nome da categoria à qual o membro pertence, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>The name of the category to which the member belongs.</source>
          <target state="translated">O nome da categoria à qual o membro pertence.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, the category name is set to the default category, <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</source>
          <target state="translated">Se não houver nenhum <ph id="ph1">&lt;see cref="T:System.ComponentModel.CategoryAttribute" /&gt;</ph>, o nome da categoria é definido como a categoria padrão, <ph id="ph2">&lt;see langword="Misc" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>Gets the type of the component this property is bound to.</source>
          <target state="translated">Obtém o tipo do componente ao qual essa propriedade está vinculada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa o tipo de componente, essa propriedade está vinculada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>When <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">Quando <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> são chamado, o objeto especificado pode ser uma instância desse tipo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">Obtém o conversor de tipo dessa propriedade.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> que é usado para converter o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> dessa propriedade.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
          <source>This property may be <ph id="ph1">`null`</ph> in cases where the attributed <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> is not a public class.</source>
          <target state="translated">Essa propriedade pode ser <ph id="ph1">`null`</ph> em casos em que o atributo <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> não é uma classe pública.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>Returns the dependency property identifier.</source>
          <target state="translated">Retorna o identificador de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>The dependency property identifier.</source>
          <target state="translated">O identificador de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
          <source>This property may be <ph id="ph1">`null`</ph> if a <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> instance was created for a property that is not a dependency property.</source>
          <target state="translated">Essa propriedade pode ser <ph id="ph1">`null`</ph> se um <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> instância foi criada para uma propriedade que não é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>Gets the description of the member, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém a descrição do membro, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>The description of the member.</source>
          <target state="translated">A descrição do membro.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, the property value is set to the default, which is an empty string ("").</source>
          <target state="translated">Se não houver nenhum <ph id="ph1">&lt;see cref="T:System.ComponentModel.DescriptionAttribute" /&gt;</ph>, o valor da propriedade é definido como o padrão, que é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Obtém ou define um retorno de chamada que designers usam para modificar o valor efetivo de uma propriedade de dependência, antes do valor da propriedade de dependência ser armazenado no mecanismo de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
          <source>A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</source>
          <target state="translated">Um retorno de chamada que designers usam para modificar o valor efetivo de uma propriedade de dependência, antes do valor da propriedade de dependência é armazenado no mecanismo de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>Gets whether this member should be set only at design time, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém a informação de se este membro deve ser definido apenas em tempo de design, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this member should be set only at design time; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the member can be set during run time.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se esse membro deve ser definido somente em tempo de design; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se o membro pode ser definido durante o tempo de execução.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>If there is no <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, the return value is the default, which is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se não houver nenhum <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignOnlyAttribute" /&gt;</ph>, o valor de retorno é o padrão, que é <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>Gets the name that can be displayed in a window, such as a Properties window.</source>
          <target state="translated">Obtém o nome que pode ser exibido em uma janela, tal como uma janela Propriedades.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>The name to display for the property.</source>
          <target state="translated">O nome para exibição para a propriedade.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> to compare with the current instance.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> de comparação com a instância atual.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> instances for equality.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os valores forem equivalentes; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para um nome de propriedade fornecido.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto proprietário da definição de propriedade.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto para o qual você deseja definir a propriedade.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para um nome de propriedade fornecido.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> solicitado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated">O <ph id="ph1">`name`</ph> podem se referir a uma propriedade de dependência ou uma propriedade anexada e é o <ph id="ph2">`name`</ph> parâmetro como passados para o <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> chamada que definiu a propriedade em questão.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> é o tipo de objeto que possui a propriedade novamente como passado para <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> é o tipo de objeto que você deseja definir a propriedade.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Para propriedades de dependência, <ph id="ph1">`ownerType`</ph> e <ph id="ph2">`targetType`</ph> são do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Para propriedades anexadas geralmente diferem.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The registered name of a dependency property or an attached property.</source>
          <target state="translated">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that owns the property definition.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto proprietário da definição de propriedade.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object you want to set the property for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do objeto para o qual você deseja definir a propriedade.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Specifies to ignore the property type.</source>
          <target state="translated">Especifica para ignorar o tipo de propriedade.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided property name.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para um nome de propriedade fornecido.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> solicitado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>The <ph id="ph1">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id="ph2">`name`</ph> parameter as passed to the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> call that defined the property in question.</source>
          <target state="translated">O <ph id="ph1">`name`</ph> podem se referir a uma propriedade de dependência ou uma propriedade anexada e é o <ph id="ph2">`name`</ph> parâmetro como passados para o <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> chamada que definiu a propriedade em questão.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`ownerType`</ph> is the type of object that owns the property, again as passed to <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ownerType`</ph> é o tipo de objeto que possui a propriedade novamente como passado para <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> é o tipo de objeto que você deseja definir a propriedade.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For dependency properties, <ph id="ph1">`ownerType`</ph> and <ph id="ph2">`targetType`</ph> are the same type.</source>
          <target state="translated">Para propriedades de dependência, <ph id="ph1">`ownerType`</ph> e <ph id="ph2">`targetType`</ph> são do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
          <source>For attached properties they usually differ.</source>
          <target state="translated">Para propriedades anexadas geralmente diferem.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DependencyPropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> based either on a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> or a provided type, depending on the signature used.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> baseado em um <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> fornecido ou em um tipo fornecido, dependendo da assinatura usada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to check.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> a ser verificado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para um <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> fornecido.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>If the property described by <ph id="ph1">&lt;paramref name="property" /&gt;</ph> is a dependency property, returns a valid <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Se a propriedade descrita por <ph id="ph1">&lt;paramref name="property" /&gt;</ph> é uma propriedade de dependência, retorna um <ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>Otherwise, returns a <ph id="ph1">&lt;see langword="null" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, retorna um <ph id="ph1">&lt;see langword="null" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
          <source>This method is the primary method used by designer applications to obtain a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> on basis of checking all properties for a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método é o principal usado por aplicativos de criação para obter um <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> na Base de verificação de todas as propriedades para um <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The identifier for a dependency property.</source>
          <target state="translated">O identificador de uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The type of the object where the property is set.</source>
          <target state="translated">O tipo do objeto em que a propriedade está definida.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for a provided dependency property and target type.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para uma propriedade de dependência e tipo de destino fornecidos.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> for the provided dependency property.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph> para a propriedade de dependência fornecida.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>The <ph id="ph1">`dependencyProperty`</ph> may refer to a dependency property or an attached property.</source>
          <target state="translated">O <ph id="ph1">`dependencyProperty`</ph> podem se referir a uma propriedade de dependência ou uma propriedade anexada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source><ph id="ph1">`targetType`</ph> is the type of object you want to set the property for.</source>
          <target state="translated"><ph id="ph1">`targetType`</ph> é o tipo de objeto que você deseja definir a propriedade.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For dependency properties, that type is equivalent to the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> for the <ph id="ph2">`dependencyProperty`</ph>.</source>
          <target state="translated">Para propriedades de dependência, que o tipo é equivalente a <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt;</ph> para o <ph id="ph2">`dependencyProperty`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
          <source>For attached properties the <ph id="ph1">`targetType`</ph> is typically some other <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> type.</source>
          <target state="translated">Para propriedades anexadas a <ph id="ph1">`targetType`</ph> é normalmente alguns outros <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">Um componente cujas propriedades serão obtidas.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> a ser usada como um filtro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> com as propriedades que correspondem aos atributos especificados para o componente especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">O tipo base do editor, que é usado para diferenciar entre os vários editores que dão suporte a uma propriedade.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">Obtém um editor do tipo especificado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">Uma instância do tipo de editor solicitado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se um editor não puder ser encontrado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">Retorna o código hash para este <ph id="ph1">&lt;see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>The hash code for <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> is based both on the identifier for a dependency property and on the type on which it is set.</source>
          <target state="translated">O código hash para <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> baseia-se o identificador para uma propriedade de dependência e o tipo no qual ele está definido.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
          <source>This implementation assures that a <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</source>
          <target state="translated">Essa implementação garante que um <ph id="ph1">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> não retornar o mesmo código hash para propriedades que são herdadas por classes derivadas muitos possíveis ou propriedades novamente caso contrário, são atribuídas pelo sistema de propriedade incorretamente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The component instance.</source>
          <target state="translated">A instância do componente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>Resturns the current value of the property on a component.</source>
          <target state="translated">Retorna o valor atual da propriedade em um componente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>The requested value.</source>
          <target state="translated">O valor solicitado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source>Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</source>
          <target state="translated">Obtém um valor que indica se a propriedade está registrada como uma propriedade anexada e está sendo usada por meio de um uso anexado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is an attached property; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a propriedade é uma propriedade anexada; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>Gets a value that indicates the value of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> on the property.</source>
          <target state="translated">Obtém um valor que indica o valor de <ph id="ph1">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> na propriedade.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> was specified on the property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.ComponentModel.BrowsableAttribute" /&gt;</ph> foi especificado na propriedade; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se esta propriedade deve ser localizada, conforme especificado no <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> constructor of the value true; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o membro está marcado com o <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> construtor do valor true; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Gets a value indicating whether this property is read-only.</source>
          <target state="translated">Obtém um valor que indica essa propriedade é somente leitura.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a propriedade é somente leitura; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Dependency properties are registered as read-only using particular method calls, and by convention the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</source>
          <target state="translated">Propriedades de dependência são registradas como somente leitura usando chamadas de método específico e por convenção o <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> wrapper de propriedades que é as propriedades exibidas por reflexão e os descritores também deve ser somente leitura.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</source>
          <target state="translated">No entanto, como essa é uma convenção e não um requisito para compilar, você talvez queira Verifique o estado de somente leitura de identificador do propriedade dependência.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>To do this, get the identifier (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) value for this <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> and then check the value of <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</source>
          <target state="translated">Para fazer isso, obtenha o identificador (<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>) valor <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt;</ph> e, em seguida, verifique o valor de <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> is on the identifier itself, not metadata.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> é o identificador em si, não os metadados.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Gets the metadata associated with the dependency property.</source>
          <target state="translated">Obtém os metadados associados à propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The dependency property metadata.</source>
          <target state="translated">Os metadados de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>The value can be <ph id="ph1">`null`</ph> if there is  no metadata or if the property is not a dependency property.</source>
          <target state="translated">O valor pode ser <ph id="ph1">`null`</ph> se não houver nenhum metadados ou se a propriedade não é uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
          <source>Metadata that has matching concepts in <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> attributes is re-exposed as attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> collection.</source>
          <target state="translated">Metadados que tenha correspondência conceitos em <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> atributos é exposto novamente como atributos de <ph id="ph2">&lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>Gets the represented <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representado da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the dependency property.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> that the dependency property was registered with.</source>
          <target state="translated">Essa propriedade retorna o <ph id="ph1">&lt;xref:System.Type&gt;</ph> registrado com a propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">O componente ao qual adicionar o manipulador.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">O delegado a ser adicionado como um ouvinte.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">Permite que outros objetos sejam notificados quando essa propriedade muda.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">O componente com o valor da propriedade que deve ser redefinido para o valor padrão.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>Resets the value for this property of the component to the default value.</source>
          <target state="translated">Redefine o valor dessa propriedade do componente para o valor padrão.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">O componente com o valor da propriedade que deve ser definida.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">O novo valor.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Sets the value of the component to a different value.</source>
          <target state="translated">Define o valor do componente para um valor diferente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esse método depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">O componente com a propriedade a ser examinada quanto à persistência.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Indicates whether the value of this property needs to be persisted by serialization processes.</source>
          <target state="translated">Indica se o valor dessa propriedade deve ser persistido por processos de serialização.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a propriedade deve ser persistida, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Indica se as notificações de alteração de valor para essa propriedade podem se originar fora do descritor de propriedade, tal como do componente em si ou se as notificações só serão provenientes de chamadas diretas feitas <ph id="ph1">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se as notificações para essa propriedade podem ser obtidos fora o descritor de propriedade, como do próprio componente.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if notifications will only originate from direct calls made to <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> Se as notificações só serão proveniente de chamadas diretas feitas <ph id="ph2">&lt;see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>For example, for the <ph id="ph1">`true`</ph> case, the component may implement the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph3">`propertyName.Changed`</ph> event for this property.</source>
          <target state="translated">Por exemplo, para o <ph id="ph1">`true`</ph> caso, o componente pode implementar o <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, ou pode ter uma explícita <ph id="ph3">`propertyName.Changed`</ph> eventos para essa propriedade.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
          <source>This property relies on the underlying <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Esta propriedade depende subjacente <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
          <source>Returns the <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph> value.</source>
          <target state="translated">Retorna o valor de <ph id="ph1">&lt;see cref="P:System.ComponentModel.MemberDescriptor.Name" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>