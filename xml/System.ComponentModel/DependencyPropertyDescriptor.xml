<Type Name="DependencyPropertyDescriptor" FullName="System.ComponentModel.DependencyPropertyDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8b403a9ce1b67118d73ad60fa8c074e3641be21" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57938793" /></Metadata><TypeSignature Language="C#" Value="public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DependencyPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyDescriptor sealed : System::ComponentModel::PropertyDescriptor" />
  <TypeSignature Language="F#" Value="type DependencyPropertyDescriptor = class&#xA;    inherit PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d048-101">Fornece uma extensão do <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa as características das propriedades adicionais de uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-101">Provides an extension of <see cref="T:System.ComponentModel.PropertyDescriptor" /> that accounts for the additional property characteristics of a dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-102">Essa classe é usada principalmente por aplicativos de criação.</span><span class="sxs-lookup"><span data-stu-id="2d048-102">This class is primarily used by designer applications.</span></span> <span data-ttu-id="2d048-103">Esses aplicativos talvez seja necessário relatar as características das propriedades de dependência por meio de janelas de propriedade ou outras ferramentas usadas para a edição de valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-103">These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</span></span>  
  
 <span data-ttu-id="2d048-104">Para verificar uma propriedade específica para determinar se ele tem <xref:System.ComponentModel.DependencyPropertyDescriptor> disponíveis para servir como uma <xref:System.ComponentModel.PropertyDescriptor>, chame <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, ou <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2d048-104">In order to check a specific property to determine whether it has <xref:System.ComponentModel.DependencyPropertyDescriptor> available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2d048-105">Se qualquer um dos métodos retornar `null`, em seguida, a propriedade não é uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-105">If either method returns `null`, then the property is not a dependency property.</span></span> <span data-ttu-id="2d048-106">Se o método retornar um válido <xref:System.ComponentModel.DependencyPropertyDescriptor> , em seguida, a propriedade é uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-106">If the method returns a valid <xref:System.ComponentModel.DependencyPropertyDescriptor> , then the property is a dependency property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public override void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="dependencyPropertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-107">O componente ao qual adicionar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="2d048-107">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="2d048-108">O delegado a ser adicionado como um ouvinte.</span><span class="sxs-lookup"><span data-stu-id="2d048-108">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="2d048-109">Permite que outros objetos sejam notificados quando essa propriedade muda.</span><span class="sxs-lookup"><span data-stu-id="2d048-109">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-110">Obtém a coleção de atributos para este membro.</span><span class="sxs-lookup"><span data-stu-id="2d048-110">Gets the collection of attributes for this member.</span></span></summary>
        <value><span data-ttu-id="2d048-111">O <see cref="T:System.ComponentModel.AttributeCollection" /> coleção de atributos.</span><span class="sxs-lookup"><span data-stu-id="2d048-111">The <see cref="T:System.ComponentModel.AttributeCollection" /> collection of attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.CanResetValue : obj -&gt; bool" Usage="dependencyPropertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-112">O componente a ser testado quanto à capacidade de redefinição.</span><span class="sxs-lookup"><span data-stu-id="2d048-112">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="2d048-113">Retorna se a redefinição de um objeto altera ou não o valor dele.</span><span class="sxs-lookup"><span data-stu-id="2d048-113">Returns whether resetting an object changes its value.</span></span></summary>
        <returns><span data-ttu-id="2d048-114"><see langword="true" /> se a redefinição do componente altera seu valor; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-114"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-115">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-115">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public override string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-116">Obtém o nome da categoria à qual o membro pertence, conforme especificado no <see cref="T:System.ComponentModel.CategoryAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-116">Gets the name of the category that the member belongs to, as specified in the <see cref="T:System.ComponentModel.CategoryAttribute" />.</span></span></summary>
        <value><span data-ttu-id="2d048-117">O nome da categoria à qual o membro pertence.</span><span class="sxs-lookup"><span data-stu-id="2d048-117">The name of the category to which the member belongs.</span></span> <span data-ttu-id="2d048-118">Se não houver nenhuma <see cref="T:System.ComponentModel.CategoryAttribute" />, o nome da categoria é definido como a categoria padrão, <see langword="Misc" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-118">If there is no <see cref="T:System.ComponentModel.CategoryAttribute" />, the category name is set to the default category, <see langword="Misc" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-119">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-119">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-120">Obtém o tipo do componente ao qual essa propriedade está vinculada.</span><span class="sxs-lookup"><span data-stu-id="2d048-120">Gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="2d048-121">Um <see cref="T:System.Type" /> que representa o tipo de componente ao qual essa propriedade está associada.</span><span class="sxs-lookup"><span data-stu-id="2d048-121">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="2d048-122">Quando <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> ou <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> são invocados, o objeto especificado pode ser uma instância desse tipo.</span><span class="sxs-lookup"><span data-stu-id="2d048-122">When <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-123">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-123">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-124">Obtém o conversor de tipo dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-124">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="2d048-125">Um <see cref="T:System.ComponentModel.TypeConverter" /> que é usado para converter o <see cref="T:System.Type" /> dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-125">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-126">Essa propriedade pode ser `null` em casos em que o atributo <xref:System.ComponentModel.TypeConverter> não é uma classe pública.</span><span class="sxs-lookup"><span data-stu-id="2d048-126">This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyProperty : System.Windows.DependencyProperty" Usage="System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-127">Retorna o identificador de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-127">Returns the dependency property identifier.</span></span></summary>
        <value><span data-ttu-id="2d048-128">O identificador de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-128">The dependency property identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-129">Essa propriedade pode ser `null` se um <xref:System.ComponentModel.DependencyPropertyDescriptor> instância foi criada para uma propriedade que não é uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-129">This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-130">Obtém a descrição do membro, conforme especificado no <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-130">Gets the description of the member, as specified in the <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span></span></summary>
        <value><span data-ttu-id="2d048-131">A descrição do membro.</span><span class="sxs-lookup"><span data-stu-id="2d048-131">The description of the member.</span></span> <span data-ttu-id="2d048-132">Se não houver nenhum <see cref="T:System.ComponentModel.DescriptionAttribute" />, o valor da propriedade é definido como o padrão, o que é uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="2d048-132">If there is no <see cref="T:System.ComponentModel.DescriptionAttribute" />, the property value is set to the default, which is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-133">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-133">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerCoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback DesignerCoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignerCoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ DesignerCoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DesignerCoerceValueCallback : System.Windows.CoerceValueCallback with get, set" Usage="System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-134">Obtém ou define um retorno de chamada que designers usam para modificar o valor efetivo de uma propriedade de dependência, antes do valor da propriedade de dependência ser armazenado no mecanismo de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-134">Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></summary>
        <value><span data-ttu-id="2d048-135">Um retorno de chamada que designers usam para modificar o valor efetivo da propriedade de dependência, antes do valor da propriedade de dependência é armazenado no mecanismo de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-135">A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeOnly">
      <MemberSignature Language="C#" Value="public override bool DesignTimeOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DesignTimeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeOnly : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-136">Obtém a informação de se este membro deve ser definido apenas em tempo de design, conforme especificado no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-136">Gets whether this member should be set only at design time, as specified in the <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span></span></summary>
        <value><span data-ttu-id="2d048-137"><see langword="true" /> Se esse membro deve ser definido apenas em tempo de design; <see langword="false" /> se o membro pode ser definido durante o tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="2d048-137"><see langword="true" /> if this member should be set only at design time; <see langword="false" /> if the member can be set during run time.</span></span> <span data-ttu-id="2d048-138">Se não houver nenhuma <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, o valor retornado é o padrão, o que é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-138">If there is no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, the return value is the default, which is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-139">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-139">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public override string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-140">Obtém o nome que pode ser exibido em uma janela, tal como uma janela Propriedades.</span><span class="sxs-lookup"><span data-stu-id="2d048-140">Gets the name that can be displayed in a window, such as a Properties window.</span></span></summary>
        <value><span data-ttu-id="2d048-141">O nome para exibição para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-141">The name to display for the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-142">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-142">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DependencyProperty.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyPropertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2d048-143">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> de comparação com a instância atual.</span><span class="sxs-lookup"><span data-stu-id="2d048-143">The <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="2d048-144">Compara duas instâncias de <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="2d048-144">Compares two <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> instances for equality.</span></span></summary>
        <returns><span data-ttu-id="2d048-145"><see langword="true" /> se os valores forem equivalentes; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-145"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d048-146">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um nome de propriedade fornecido.</span><span class="sxs-lookup"><span data-stu-id="2d048-146">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="static member FromName : string * Type * Type -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromName (name, ownerType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d048-147">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</span><span class="sxs-lookup"><span data-stu-id="2d048-147">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="2d048-148">O <see cref="T:System.Type" /> do objeto proprietário da definição de propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-148">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="2d048-149">O <see cref="T:System.Type" /> do objeto para o qual você deseja definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-149">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <summary><span data-ttu-id="2d048-150">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um nome de propriedade fornecido.</span><span class="sxs-lookup"><span data-stu-id="2d048-150">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="2d048-151">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</span><span class="sxs-lookup"><span data-stu-id="2d048-151">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-152">O `name` podem se referir a uma propriedade de dependência ou uma propriedade anexada e é o `name` parâmetro passado para o <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A> chamada que definiu a propriedade em questão.</span><span class="sxs-lookup"><span data-stu-id="2d048-152">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="2d048-153">`ownerType` o tipo de objeto que possui a propriedade novamente como que é passado para <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d048-153">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="2d048-154">`targetType` é o tipo de objeto que você deseja definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-154">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="2d048-155">Para propriedades de dependência `ownerType` e `targetType` são do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="2d048-155">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="2d048-156">Para propriedades anexadas normalmente diferem.</span><span class="sxs-lookup"><span data-stu-id="2d048-156">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType, bool ignorePropertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type, ignorePropertyType As Boolean) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType, bool ignorePropertyType);" />
      <MemberSignature Language="F#" Value="static member FromName : string * Type * Type * bool -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromName (name, ownerType, targetType, ignorePropertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="ownerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="ignorePropertyType" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d048-157">O nome registrado de uma propriedade de dependência ou uma propriedade anexada.</span><span class="sxs-lookup"><span data-stu-id="2d048-157">The registered name of a dependency property or an attached property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="2d048-158">O <see cref="T:System.Type" /> do objeto proprietário da definição de propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-158">The <see cref="T:System.Type" /> of the object that owns the property definition.</span></span></param>
        <param name="targetType"><span data-ttu-id="2d048-159">O <see cref="T:System.Type" /> do objeto para o qual você deseja definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-159">The <see cref="T:System.Type" /> of the object you want to set the property for.</span></span></param>
        <param name="ignorePropertyType"><span data-ttu-id="2d048-160">Especifica para ignorar o tipo de propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-160">Specifies to ignore the property type.</span></span></param>
        <summary><span data-ttu-id="2d048-161">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um nome de propriedade fornecido.</span><span class="sxs-lookup"><span data-stu-id="2d048-161">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span></span></summary>
        <returns><span data-ttu-id="2d048-162">O <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</span><span class="sxs-lookup"><span data-stu-id="2d048-162">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-163">O `name` podem se referir a uma propriedade de dependência ou uma propriedade anexada e é o `name` parâmetro passado para o <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A> chamada que definiu a propriedade em questão.</span><span class="sxs-lookup"><span data-stu-id="2d048-163">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="2d048-164">`ownerType` o tipo de objeto que possui a propriedade novamente como que é passado para <xref:System.Windows.DependencyProperty.Register%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d048-164">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="2d048-165">`targetType` é o tipo de objeto que você deseja definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-165">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="2d048-166">Para propriedades de dependência `ownerType` e `targetType` são do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="2d048-166">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="2d048-167">Para propriedades anexadas normalmente diferem.</span><span class="sxs-lookup"><span data-stu-id="2d048-167">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromProperty">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d048-168">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> baseado em um <see cref="T:System.ComponentModel.PropertyDescriptor" /> fornecido ou em um tipo fornecido, dependendo da assinatura usada.</span><span class="sxs-lookup"><span data-stu-id="2d048-168">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> based either on a provided <see cref="T:System.ComponentModel.PropertyDescriptor" /> or a provided type, depending on the signature used.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProperty (property As PropertyDescriptor) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="static member FromProperty : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="2d048-169">O <see cref="T:System.ComponentModel.PropertyDescriptor" /> a ser verificado.</span><span class="sxs-lookup"><span data-stu-id="2d048-169">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to check.</span></span></param>
        <summary><span data-ttu-id="2d048-170">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para um <see cref="T:System.ComponentModel.PropertyDescriptor" /> fornecido.</span><span class="sxs-lookup"><span data-stu-id="2d048-170">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="2d048-171">Se a propriedade descrita por <paramref name="property" /> é uma propriedade de dependência, retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> válido.</span><span class="sxs-lookup"><span data-stu-id="2d048-171">If the property described by <paramref name="property" /> is a dependency property, returns a valid <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span> <span data-ttu-id="2d048-172">Caso contrário, retorna um <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-172">Otherwise, returns a <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-173">Esse método é o principal método usado por aplicativos de criação para obter um <xref:System.ComponentModel.DependencyPropertyDescriptor> na base da verificação de todas as propriedades para um <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-173">This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.Windows.DependencyProperty dependencyProperty, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::Windows::DependencyProperty ^ dependencyProperty, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="static member FromProperty : System.Windows.DependencyProperty * Type -&gt; System.ComponentModel.DependencyPropertyDescriptor" Usage="System.ComponentModel.DependencyPropertyDescriptor.FromProperty (dependencyProperty, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><span data-ttu-id="2d048-174">O identificador de uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-174">The identifier for a dependency property.</span></span></param>
        <param name="targetType"><span data-ttu-id="2d048-175">O tipo do objeto em que a propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="2d048-175">The type of the object where the property is set.</span></span></param>
        <summary><span data-ttu-id="2d048-176">Retorna um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para uma propriedade de dependência e tipo de destino fornecidos.</span><span class="sxs-lookup"><span data-stu-id="2d048-176">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided dependency property and target type.</span></span></summary>
        <returns><span data-ttu-id="2d048-177">Um <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para a propriedade de dependência fornecida.</span><span class="sxs-lookup"><span data-stu-id="2d048-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for the provided dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-178">O `dependencyProperty` podem se referir a uma propriedade de dependência ou uma propriedade anexada.</span><span class="sxs-lookup"><span data-stu-id="2d048-178">The `dependencyProperty` may refer to a dependency property or an attached property.</span></span> <span data-ttu-id="2d048-179">`targetType` é o tipo de objeto que você deseja definir a propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-179">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="2d048-180">Para propriedades de dependência que o tipo é equivalente a <xref:System.Windows.DependencyProperty.OwnerType%2A> para o `dependencyProperty`.</span><span class="sxs-lookup"><span data-stu-id="2d048-180">For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`.</span></span> <span data-ttu-id="2d048-181">Para propriedades anexadas a `targetType` normalmente é algum outro <xref:System.Windows.DependencyObject> tipo.</span><span class="sxs-lookup"><span data-stu-id="2d048-181">For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="dependencyPropertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2d048-182">Um componente cujas propriedades serão obtidas.</span><span class="sxs-lookup"><span data-stu-id="2d048-182">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="2d048-183">Uma matriz do tipo <see cref="T:System.Attribute" /> a ser usada como um filtro.</span><span class="sxs-lookup"><span data-stu-id="2d048-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="2d048-184">Retorna um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="2d048-185">Um <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> com as propriedades que correspondem aos atributos especificados para o componente especificado.</span><span class="sxs-lookup"><span data-stu-id="2d048-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-186">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-186">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public override object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="override this.GetEditor : Type -&gt; obj" Usage="dependencyPropertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="2d048-187">O tipo base do editor, que é usado para diferenciar entre os vários editores que dão suporte a uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-187">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="2d048-188">Obtém um editor do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="2d048-188">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="2d048-189">Uma instância do tipo de editor solicitado ou <see langword="null" /> se um editor não puder ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="2d048-189">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-190">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-190">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyPropertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d048-191">Retorna o código hash para este <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-191">Returns the hash code for this <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="2d048-192">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="2d048-192">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-193">O código hash para <xref:System.ComponentModel.DependencyPropertyDescriptor> se baseia no identificador para uma propriedade de dependência e o tipo no qual ele está definido.</span><span class="sxs-lookup"><span data-stu-id="2d048-193">The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set.</span></span> <span data-ttu-id="2d048-194">Essa implementação garante que um <xref:System.ComponentModel.DependencyPropertyDescriptor> incorretamente não retornar o mesmo código hash para as propriedades que são herdadas por classes derivadas muitos possíveis ou para propriedades que novamente caso contrário, são atribuídas por meio do sistema de propriedades.</span><span class="sxs-lookup"><span data-stu-id="2d048-194">This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj -&gt; obj" Usage="dependencyPropertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-195">A instância do componente.</span><span class="sxs-lookup"><span data-stu-id="2d048-195">The component instance.</span></span></param>
        <summary><span data-ttu-id="2d048-196">Retorna o valor atual da propriedade em um componente.</span><span class="sxs-lookup"><span data-stu-id="2d048-196">Resturns the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="2d048-197">O valor solicitado.</span><span class="sxs-lookup"><span data-stu-id="2d048-197">The requested value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-198">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-198">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttached : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-199">Obtém um valor que indica se a propriedade está registrada como uma propriedade anexada e está sendo usada por meio de um uso anexado.</span><span class="sxs-lookup"><span data-stu-id="2d048-199">Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</span></span></summary>
        <value><span data-ttu-id="2d048-200"><see langword="true" /> Se a propriedade é uma propriedade anexada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-200"><see langword="true" /> if the property is an attached property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsable">
      <MemberSignature Language="C#" Value="public override bool IsBrowsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBrowsable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowsable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowsable : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-201">Obtém um valor que indica o valor de <see cref="T:System.ComponentModel.BrowsableAttribute" /> na propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-201">Gets a value that indicates the value of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> on the property.</span></span></summary>
        <value><span data-ttu-id="2d048-202"><see langword="true" /> Se o <see cref="T:System.ComponentModel.BrowsableAttribute" /> tiver sido especificada na propriedade; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-202"><see langword="true" /> if the <see cref="T:System.ComponentModel.BrowsableAttribute" /> was specified on the property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-203">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-203">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public override bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-204">Obtém um valor que indica se esta propriedade deve ser localizada, conforme especificado no <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-204">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value><span data-ttu-id="2d048-205"><see langword="true" /> Se o membro é marcado com o <see cref="T:System.ComponentModel.LocalizableAttribute" /> construtor do valor true; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-205"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> constructor of the value true; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-206">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-206">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-207">Obtém um valor que indica essa propriedade é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2d048-207">Gets a value indicating whether this property is read-only.</span></span></summary>
        <value><span data-ttu-id="2d048-208"><see langword="true" /> Se a propriedade é somente leitura; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-208"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-209">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-209">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="2d048-210">Propriedades de dependência são registradas como somente leitura usando chamadas de método específico e por convenção, o [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] propriedades wrapper que são as propriedades exibidas por reflexão e os descritores também devem ser somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2d048-210">Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</span></span> <span data-ttu-id="2d048-211">No entanto, como essa é uma convenção e não um requisito para compilar, você talvez queira Verifique o estado de somente leitura de identificador do propriedade dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-211">However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</span></span> <span data-ttu-id="2d048-212">Para fazer isso, obtenha o identificador (<xref:System.Windows.DependencyProperty>) o valor para este <xref:System.ComponentModel.DependencyPropertyDescriptor> e, em seguida, verifique o valor de <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d048-212">To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span></span> <span data-ttu-id="2d048-213">Observe que o <xref:System.Windows.DependencyProperty.ReadOnly%2A> é no identificador em si, não os metadados.</span><span class="sxs-lookup"><span data-stu-id="2d048-213">Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As PropertyMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyMetadata ^ Metadata { System::Windows::PropertyMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.PropertyMetadata" Usage="System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-214">Obtém os metadados associados à propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-214">Gets the metadata associated with the dependency property.</span></span></summary>
        <value><span data-ttu-id="2d048-215">Os metadados de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-215">The dependency property metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-216">O valor pode ser `null` se não houver nenhum metadado ou se a propriedade não é uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-216">The value can be `null` if there is  no metadata or if the property is not a dependency property.</span></span>  
  
 <span data-ttu-id="2d048-217">Metadados que têm correspondência conceitos [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] atributos é novamente expostas como atributos no <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="2d048-217">Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-218">Obtém o <see cref="T:System.Type" /> representado da propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-218">Gets the represented <see cref="T:System.Type" /> of the dependency property.</span></span></summary>
        <value><span data-ttu-id="2d048-219">O <see cref="T:System.Type" /> da propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="2d048-219">The <see cref="T:System.Type" /> of the dependency property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-220">Essa propriedade retorna o <xref:System.Type> que a propriedade de dependência foi registrada com.</span><span class="sxs-lookup"><span data-stu-id="2d048-220">This property returns the <xref:System.Type> that the dependency property was registered with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public override void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="dependencyPropertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-221">O componente ao qual adicionar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="2d048-221">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="2d048-222">O delegado a ser adicionado como um ouvinte.</span><span class="sxs-lookup"><span data-stu-id="2d048-222">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="2d048-223">Permite que outros objetos sejam notificados quando essa propriedade muda.</span><span class="sxs-lookup"><span data-stu-id="2d048-223">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-224">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-224">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.ResetValue : obj -&gt; unit" Usage="dependencyPropertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-225">O componente com o valor da propriedade que deve ser redefinido para o valor padrão.</span><span class="sxs-lookup"><span data-stu-id="2d048-225">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="2d048-226">Redefine o valor dessa propriedade do componente para o valor padrão.</span><span class="sxs-lookup"><span data-stu-id="2d048-226">Resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-227">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-227">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj -&gt; unit" Usage="dependencyPropertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-228">O componente com o valor da propriedade que deve ser definida.</span><span class="sxs-lookup"><span data-stu-id="2d048-228">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="2d048-229">O novo valor.</span><span class="sxs-lookup"><span data-stu-id="2d048-229">The new value.</span></span></param>
        <summary><span data-ttu-id="2d048-230">Define o valor do componente para um valor diferente.</span><span class="sxs-lookup"><span data-stu-id="2d048-230">Sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-231">Esse método se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-231">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="override this.ShouldSerializeValue : obj -&gt; bool" Usage="dependencyPropertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="2d048-232">O componente com a propriedade a ser examinada quanto à persistência.</span><span class="sxs-lookup"><span data-stu-id="2d048-232">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="2d048-233">Indica se o valor dessa propriedade deve ser persistido por processos de serialização.</span><span class="sxs-lookup"><span data-stu-id="2d048-233">Indicates whether the value of this property needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="2d048-234"><see langword="true" /> se a propriedade deve ser persistida, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-234"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public override bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d048-235">Indica se as notificações de alteração de valor para essa propriedade podem se originar fora do descritor de propriedade, tal como do componente em si ou se as notificações só serão provenientes de chamadas diretas feitas <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-235">Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></summary>
        <value><span data-ttu-id="2d048-236"><see langword="true" /> Se as notificações para essa propriedade podem se originar fora do descritor de propriedade, como do próprio componente.</span><span class="sxs-lookup"><span data-stu-id="2d048-236"><see langword="true" /> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</span></span> <span data-ttu-id="2d048-237"><see langword="false" /> Se as notificações só serão provenientes de chamadas diretas feitas <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-237"><see langword="false" /> if notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d048-238">Por exemplo, para o `true` caso, o componente pode implementar o <xref:System.ComponentModel.INotifyPropertyChanged> interface, ou pode ter uma explícita `propertyName.Changed` eventos para essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="2d048-238">For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName.Changed` event for this property.</span></span>  
  
 <span data-ttu-id="2d048-239">Essa propriedade se baseia em subjacente <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="2d048-239">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dependencyPropertyDescriptor.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d048-240">Converte o valor dessa instância na representação da cadeia de caracteres equivalente.</span><span class="sxs-lookup"><span data-stu-id="2d048-240">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="2d048-241">Retorna o valor de <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</span><span class="sxs-lookup"><span data-stu-id="2d048-241">Returns the <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>