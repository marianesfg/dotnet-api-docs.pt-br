<Type Name="CustomTypeDescriptor" FullName="System.ComponentModel.CustomTypeDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c514d6c383deb98d2abb8918cf22d7a4df40782f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39842144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomTypeDescriptor : System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomTypeDescriptor extends System.Object implements class System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.CustomTypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomTypeDescriptor&#xA;Implements ICustomTypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomTypeDescriptor abstract : System::ComponentModel::ICustomTypeDescriptor" />
  <TypeSignature Language="F#" Value="type CustomTypeDescriptor = class&#xA;    interface ICustomTypeDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ICustomTypeDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2effd-101">Fornece uma implementação padrão simples da interface <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2effd-101">Provides a simple default implementation of the <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-102">Como o <xref:System.ComponentModel.TypeDescriptionProvider>, o <xref:System.ComponentModel.CustomTypeDescriptor> classe se baseia em um objeto pai do tipo <xref:System.ComponentModel.ICustomTypeDescriptor> fornecido durante a construção.</span><span class="sxs-lookup"><span data-stu-id="2effd-102">Like <xref:System.ComponentModel.TypeDescriptionProvider>, the <xref:System.ComponentModel.CustomTypeDescriptor> class relies on a parent object of type <xref:System.ComponentModel.ICustomTypeDescriptor> supplied during construction.</span></span> <span data-ttu-id="2effd-103">Isso permite que classes que derivam de <xref:System.ComponentModel.CustomTypeDescriptor> para substituir seletivamente os métodos.</span><span class="sxs-lookup"><span data-stu-id="2effd-103">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2effd-104">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CustomTypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-104">Initializes a new instance of the <see cref="T:System.ComponentModel.CustomTypeDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomTypeDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomTypeDescriptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-105">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CustomTypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-105">Initializes a new instance of the <see cref="T:System.ComponentModel.CustomTypeDescriptor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-106">Este construtor é equivalente a chamar o outro <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A?displayProperty=nameWithType> construtor com um parâmetro que é `null`.</span><span class="sxs-lookup"><span data-stu-id="2effd-106">This constructor is equivalent to calling the other <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A?displayProperty=nameWithType> constructor with a parameter that is `null`.</span></span>  
  
 <span data-ttu-id="2effd-107">Todos os métodos de um <xref:System.ComponentModel.CustomTypeDescriptor> criado com esse construtor retornará os valores padrão.</span><span class="sxs-lookup"><span data-stu-id="2effd-107">All methods of a <xref:System.ComponentModel.CustomTypeDescriptor> created with this constructor will return default values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomTypeDescriptor (System.ComponentModel.ICustomTypeDescriptor parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.ICustomTypeDescriptor parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As ICustomTypeDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomTypeDescriptor(System::ComponentModel::ICustomTypeDescriptor ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.CustomTypeDescriptor : System.ComponentModel.ICustomTypeDescriptor -&gt; System.ComponentModel.CustomTypeDescriptor" Usage="new System.ComponentModel.CustomTypeDescriptor parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.ICustomTypeDescriptor" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="2effd-108">O descritor de tipo personalizado pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-108">The parent custom type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2effd-109">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.CustomTypeDescriptor" /> usando um descritor de tipo pai personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-109">Initializes a new instance of the <see cref="T:System.ComponentModel.CustomTypeDescriptor" /> class using a parent custom type descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-110">Se o `parent` parâmetro é `null`, todos os <xref:System.ComponentModel.CustomTypeDescriptor> métodos retornarão valores padrão.</span><span class="sxs-lookup"><span data-stu-id="2effd-110">If the `parent` parameter is `null`, all <xref:System.ComponentModel.CustomTypeDescriptor> methods will return default values.</span></span> <span data-ttu-id="2effd-111">Caso contrário, todos os <xref:System.ComponentModel.CustomTypeDescriptor> métodos delegará aos métodos de `parent`.</span><span class="sxs-lookup"><span data-stu-id="2effd-111">Otherwise, all <xref:System.ComponentModel.CustomTypeDescriptor> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="2effd-112">A maioria dos <xref:System.ComponentModel.CustomTypeDescriptor> métodos retornam `null` por padrão.</span><span class="sxs-lookup"><span data-stu-id="2effd-112">Most <xref:System.ComponentModel.CustomTypeDescriptor> methods return `null` by default.</span></span> <span data-ttu-id="2effd-113">A tabela a seguir mostra os valores de retorno para os métodos que não retornam `null` por padrão.</span><span class="sxs-lookup"><span data-stu-id="2effd-113">The following table shows the return values for the methods that do not return `null` by default.</span></span>  
  
|<span data-ttu-id="2effd-114">Método</span><span class="sxs-lookup"><span data-stu-id="2effd-114">Method</span></span>|<span data-ttu-id="2effd-115">Valor de retorno padrão</span><span class="sxs-lookup"><span data-stu-id="2effd-115">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A>|<span data-ttu-id="2effd-116">Uma coleção de atributos vazio (<xref:System.ComponentModel.AttributeCollection.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="2effd-116">An empty attribute collection (<xref:System.ComponentModel.AttributeCollection.Empty?displayProperty=nameWithType>).</span></span>|  
|<xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A>|<span data-ttu-id="2effd-117">O padrão <xref:System.ComponentModel.TypeConverter> instância.</span><span class="sxs-lookup"><span data-stu-id="2effd-117">The default <xref:System.ComponentModel.TypeConverter> instance.</span></span>|  
|<xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A>|<span data-ttu-id="2effd-118">Uma coleção de eventos vazio (<xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="2effd-118">An empty events collection (<xref:System.ComponentModel.EventDescriptorCollection.Empty?displayProperty=nameWithType>).</span></span>|  
|<xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A>|<span data-ttu-id="2effd-119">Uma coleção de propriedades vazio (<xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="2effd-119">An empty property collection (<xref:System.ComponentModel.PropertyDescriptorCollection.Empty?displayProperty=nameWithType>).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.AttributeCollection GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributes () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::AttributeCollection ^ GetAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetAttributes : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.GetAttributes : unit -&gt; System.ComponentModel.AttributeCollection" Usage="customTypeDescriptor.GetAttributes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-120">Retorna uma coleção de atributos personalizados para o tipo representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-120">Returns a collection of custom attributes for the type represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-121">Uma <see cref="T:System.ComponentModel.AttributeCollection" /> que contém os atributos do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-121">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the type.</span>
          </span>
          <span data-ttu-id="2effd-122">O padrão é <see cref="F:System.ComponentModel.AttributeCollection.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-122">The default is <see cref="F:System.ComponentModel.AttributeCollection.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-123">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-123">If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetAttributes%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public virtual string GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetClassName();" />
      <MemberSignature Language="F#" Value="abstract member GetClassName : unit -&gt; string&#xA;override this.GetClassName : unit -&gt; string" Usage="customTypeDescriptor.GetClassName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetClassName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-124">Retorna o nome totalmente qualificado da classe representada por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-124">Returns the fully qualified name of the class represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-125">Uma <see cref="T:System.String" /> que contém o nome de classe totalmente qualificado do tipo descrito por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-125">A <see cref="T:System.String" /> containing the fully qualified class name of the type this type descriptor is describing.</span>
          </span>
          <span data-ttu-id="2effd-126">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-126">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2effd-127"><xref:System.ComponentModel.CustomTypeDescriptor.GetClassName%2A> não é um método estático e, portanto, não é garantido para ser thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2effd-127"><xref:System.ComponentModel.CustomTypeDescriptor.GetClassName%2A> is not a static method and thus, is not guaranteed to be thread-safe.</span></span>  
  
 <span data-ttu-id="2effd-128">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetClassName%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-128">If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetClassName%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetComponentName();" />
      <MemberSignature Language="F#" Value="abstract member GetComponentName : unit -&gt; string&#xA;override this.GetComponentName : unit -&gt; string" Usage="customTypeDescriptor.GetComponentName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-129">Retorna o nome da classe representada por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-129">Returns the name of the class represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-130">Uma <see cref="T:System.String" /> que contém o nome da instância do componente descrita por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-130">A <see cref="T:System.String" /> containing the name of the component instance this type descriptor is describing.</span>
          </span>
          <span data-ttu-id="2effd-131">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-131">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-132">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetComponentName%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-132">If a parent custom type descriptor was passed to the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetComponentName%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConverter () As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter();" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : unit -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : unit -&gt; System.ComponentModel.TypeConverter" Usage="customTypeDescriptor.GetConverter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetConverter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-133">Retorna um conversor de tipo para o tipo representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-133">Returns a type converter for the type represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-134">Um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-134">A <see cref="T:System.ComponentModel.TypeConverter" /> for the type represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-135">O padrão é um <see cref="T:System.ComponentModel.TypeConverter" /> recém-criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-135">The default is a newly created <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-136">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-136">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetConverter%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.EventDescriptor GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultEvent () As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::EventDescriptor ^ GetDefaultEvent();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultEvent : unit -&gt; System.ComponentModel.EventDescriptor&#xA;override this.GetDefaultEvent : unit -&gt; System.ComponentModel.EventDescriptor" Usage="customTypeDescriptor.GetDefaultEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-137">Retorna o descritor de evento para o evento padrão do objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-137">Returns the event descriptor for the default event of the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-138">O <see cref="T:System.ComponentModel.EventDescriptor" /> para o evento padrão no objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-138">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the default event on the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-139">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-139">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-140">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-140">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultProperty () As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultProperty : unit -&gt; System.ComponentModel.PropertyDescriptor&#xA;override this.GetDefaultProperty : unit -&gt; System.ComponentModel.PropertyDescriptor" Usage="customTypeDescriptor.GetDefaultProperty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-141">Retorna o descritor de propriedade para a propriedade padrão do objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-141">Returns the property descriptor for the default property of the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-142">Um <see cref="T:System.ComponentModel.PropertyDescriptor" /> para a propriedade padrão no objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-142">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the default property on the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-143">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-143">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-144">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-144">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="customTypeDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="2effd-145">O tipo base do editor a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-145">The base type of the editor to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2effd-146">Retorna um editor do tipo especificado que deve ser associado à classe representada por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-146">Returns an editor of the specified type that is to be associated with the class represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-147">Um editor do tipo especificado que deve ser associado à classe representada por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-147">An editor of the given type that is to be associated with the class represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-148">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-148">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-149">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetEditor%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-149">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetEditor%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2effd-150">Retorna uma coleção de descritores de evento para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-150">Returns a collection of event descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-151">O <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> método retorna uma coleção de descritores de evento para o objeto que está representando esse descritor de tipo.</span><span class="sxs-lookup"><span data-stu-id="2effd-151">The <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> method returns a collection of event descriptors for the object this type descriptor is representing.</span></span> <span data-ttu-id="2effd-152">Uma matriz de atributo opcional pode ser fornecida para filtrar a coleção que é retornada.</span><span class="sxs-lookup"><span data-stu-id="2effd-152">An optional attribute array may be provided to filter the collection that is returned.</span></span> <span data-ttu-id="2effd-153">Se nenhum pai for fornecido, o método retornará <xref:System.ComponentModel.EventDescriptorCollection.Empty>.</span><span class="sxs-lookup"><span data-stu-id="2effd-153">If no parent is provided, the method will return <xref:System.ComponentModel.EventDescriptorCollection.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.EventDescriptorCollection GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEvents () As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::EventDescriptorCollection ^ GetEvents();" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : unit -&gt; System.ComponentModel.EventDescriptorCollection&#xA;override this.GetEvents : unit -&gt; System.ComponentModel.EventDescriptorCollection" Usage="customTypeDescriptor.GetEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-154">Retorna uma coleção de descritores de evento para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-154">Returns a collection of event descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-155">Uma <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que contém os descritores de evento para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-155">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> containing the event descriptors for the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-156">O padrão é <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-156">The default is <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-157">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-157">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEvents (attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::EventDescriptorCollection ^ GetEvents(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection&#xA;override this.GetEvents : Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="customTypeDescriptor.GetEvents attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="2effd-158">Uma matriz de atributos a ser usada como um filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-158">An array of attributes to use as a filter.</span>
          </span>
          <span data-ttu-id="2effd-159">Ele pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-159">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2effd-160">Retorna uma coleção filtrada de descritores de evento para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-160">Returns a filtered collection of event descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-161">Uma <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que contém as descrições de evento para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-161">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> containing the event descriptions for the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-162">O padrão é <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-162">The default is <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-163">Você pode usar o `attributes` parâmetro para filtrar a coleção que é retornada.</span><span class="sxs-lookup"><span data-stu-id="2effd-163">You can use the `attributes` parameter to filter the collection that is returned.</span></span>  
  
 <span data-ttu-id="2effd-164">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-164">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetEvents%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2effd-165">Retorna uma coleção de descritores de propriedade para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-165">Returns a collection of property descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-166">O <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> método retorna uma coleção de descritores de propriedade para o objeto que está representando esse descritor de tipo.</span><span class="sxs-lookup"><span data-stu-id="2effd-166">The <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> method returns a collection of property descriptors for the object this type descriptor is representing.</span></span> <span data-ttu-id="2effd-167">Uma matriz de atributo opcional pode ser fornecida para filtrar a coleção que é retornada.</span><span class="sxs-lookup"><span data-stu-id="2effd-167">An optional attribute array may be provided to filter the collection that is returned.</span></span> <span data-ttu-id="2effd-168">Se nenhum pai for fornecido, o método retornará <xref:System.ComponentModel.PropertyDescriptorCollection.Empty>.</span><span class="sxs-lookup"><span data-stu-id="2effd-168">If no parent is provided, the method will return <xref:System.ComponentModel.PropertyDescriptorCollection.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties();" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="customTypeDescriptor.GetProperties " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2effd-169">Retorna uma coleção de descritores de propriedade para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-169">Returns a collection of property descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-170">Uma <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as descrições de propriedade para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-170">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the property descriptions for the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-171">O padrão é <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-171">The default is <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-172">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-172">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="customTypeDescriptor.GetProperties attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="2effd-173">Uma matriz de atributos a ser usada como um filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-173">An array of attributes to use as a filter.</span>
          </span>
          <span data-ttu-id="2effd-174">Ele pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-174">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2effd-175">Retorna uma coleção filtrada de descritores de propriedade para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-175">Returns a filtered collection of property descriptors for the object represented by this type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-176">Uma <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contém as descrições de propriedade para o objeto representado por esse descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-176">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the property descriptions for the object represented by this type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-177">O padrão é <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-177">The default is <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-178">Você pode usar o `attributes` parâmetro para filtrar a coleção que é retornada.</span><span class="sxs-lookup"><span data-stu-id="2effd-178">You can use the `attributes` parameter to filter the collection that is returned.</span></span> <span data-ttu-id="2effd-179">Para regras de filtragem, consulte <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="2effd-179">For filtering rules, see <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</span></span>  
  
 <span data-ttu-id="2effd-180">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-180">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetProperties%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyOwner">
      <MemberSignature Language="C#" Value="public virtual object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertyOwner (pd As PropertyDescriptor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetPropertyOwner(System::ComponentModel::PropertyDescriptor ^ pd);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyOwner : System.ComponentModel.PropertyDescriptor -&gt; obj&#xA;override this.GetPropertyOwner : System.ComponentModel.PropertyDescriptor -&gt; obj" Usage="customTypeDescriptor.GetPropertyOwner pd" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd">
          <span data-ttu-id="2effd-181">O descritor de propriedade para o qual recuperar o objeto proprietário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-181">The property descriptor for which to retrieve the owning object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2effd-182">Retorna um objeto que contém a propriedade descrita pelo descritor de propriedade especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-182">Returns an object that contains the property described by the specified property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2effd-183">Um <see cref="T:System.Object" /> que possui a propriedade fornecida especificada pelo descritor de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-183">An <see cref="T:System.Object" /> that owns the given property specified by the type descriptor.</span>
          </span>
          <span data-ttu-id="2effd-184">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2effd-184">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2effd-185">Se um descritor de tipo personalizado pai foi passado para o <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> construtor, o <xref:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner%2A> método chamará o método correspondente do pai.</span><span class="sxs-lookup"><span data-stu-id="2effd-185">If a parent custom type descriptor was passed into the <xref:System.ComponentModel.CustomTypeDescriptor.%23ctor%2A> constructor, the <xref:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner%2A> method will call the parent's corresponding method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
      </Docs>
    </Member>
  </Members>
</Type>