<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d11887074c54a7af85492421fa8f02341774506" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37692875" /></Metadata><TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f0f1-101">Define os métodos e as propriedades que uma <see cref="T:System.Windows.Data.CollectionView" /> implementa para fornecer recursos de edição a uma coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-101">Defines methods and properties that a <see cref="T:System.Windows.Data.CollectionView" /> implements to provide editing capabilities to a collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-102">Quando uma exibição de coleção implementa a <xref:System.ComponentModel.IEditableCollectionView> interface, você pode alterar diretamente na coleção subjacente, se ele permite que alterações sejam feitas usando os métodos e propriedades que <xref:System.ComponentModel.IEditableCollectionView> expõe, independentemente do tipo da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-102">When a collection view implements the <xref:System.ComponentModel.IEditableCollectionView> interface, you can directly change the underlying collection, if it allows changes to be made, by using the methods and properties that <xref:System.ComponentModel.IEditableCollectionView> exposes, regardless of the collection's type.</span></span>  
  
 <span data-ttu-id="2f0f1-103">Os tipos <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, e <xref:System.Windows.Data.ListCollectionView> são os tipos que acompanham [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] que herdam de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-103">The types <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, and <xref:System.Windows.Data.ListCollectionView> are the types that ship with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] that inherit from <xref:System.Windows.Data.CollectionView>.</span></span>  <span data-ttu-id="2f0f1-104">Esses tipos também implementam a <xref:System.ComponentModel.IEditableCollectionView>, portanto, você pode editar uma coleção que usa um desses tipos.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-104">These types also implement the <xref:System.ComponentModel.IEditableCollectionView>, so you can edit a collection that uses one of those types.</span></span>  <span data-ttu-id="2f0f1-105"><xref:System.Windows.Controls.ItemCollection>, em particular, muitas vezes é usado porque o <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> propriedade é um <xref:System.Windows.Controls.ItemCollection>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-105"><xref:System.Windows.Controls.ItemCollection>, in particular, is often used because the <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> property is an <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-106">O exemplo a seguir mostra como adicionar um item a uma coleção usando métodos que são definidos por <xref:System.ComponentModel.IEditableCollectionView>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-106">The following example shows how to add an item to a collection by using methods that are defined by <xref:System.ComponentModel.IEditableCollectionView>.</span></span>  <span data-ttu-id="2f0f1-107">Esse aplicativo exibe uma lista de itens para venda e dá ao usuário a opção de adicionar, editar ou remoção de um item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-107">This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.</span></span>  <span data-ttu-id="2f0f1-108">Quando o usuário adiciona ou edita um item, um formulário solicita que o usuário insira um novo item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-108">When the user adds or edits an item, a form prompts the user to enter a new item.</span></span>  <span data-ttu-id="2f0f1-109">Se o usuário envia o formulário, o item é confirmado à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-109">If the user submits the form, the item is committed to the collection.</span></span>  <span data-ttu-id="2f0f1-110">Se o usuário cancelar o formulário, o item será descartado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-110">If the user cancels the form, the item is discarded.</span></span> <span data-ttu-id="2f0f1-111">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-111">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0f1-112">Adiciona um novo item à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-112">Adds a new item to the collection.</span></span></summary>
        <returns><span data-ttu-id="2f0f1-113">O novo item que é adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-113">The new item that is added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-114">Chamar <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> começa uma transação de adição.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-114">Calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> begins an add transaction.</span></span>  <span data-ttu-id="2f0f1-115">Você deve chamar <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para encerrar a transação de adição.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-115">You should call <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="2f0f1-116">Um novo item sempre aparece na exibição de coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-116">A new item always appears in the collection view.</span></span> <span data-ttu-id="2f0f1-117">Qualquer filtragem, classificação ou agrupamento que é aplicado para a exibição é aplicada para o novo item quando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-117">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-118">O exemplo a seguir cria um <xref:System.Windows.Window> que solicita ao usuário para adicionar um novo item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-118">The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.</span></span>  <span data-ttu-id="2f0f1-119">Em seguida, ele chama <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> para criar um novo objeto e define o <xref:System.Windows.FrameworkElement.DataContext%2A> da <xref:System.Windows.Window> a esse objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-119">Then it calls <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object.</span></span> <span data-ttu-id="2f0f1-120">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-120">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-121">Obtém um valor que indica se um novo item pode ser adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-121">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value><span data-ttu-id="2f0f1-122"><see langword="true" /> Se um novo item pode ser adicionado à coleção; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-122"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-123">Um <xref:System.ComponentModel.IEditableCollectionView> pode adicionar um novo item, se as seguintes condições forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="2f0f1-123">An <xref:System.ComponentModel.IEditableCollectionView> can add a new item if the following are true:</span></span>  
  
-   <span data-ttu-id="2f0f1-124">Um item pode ser adicionado à coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-124">An item can be added to the underlying collection.</span></span>  <span data-ttu-id="2f0f1-125">Por exemplo, se a coleção é somente leitura <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-125">For example, if the collection is read-only, <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="2f0f1-126">O <xref:System.ComponentModel.IEditableCollectionView> pode criar um objeto do tipo que está na coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-126">The <xref:System.ComponentModel.IEditableCollectionView> can create an object of the type that is in the collection.</span></span>  <span data-ttu-id="2f0f1-127">Por exemplo, se a coleção é do tipo <xref:System.Collections.ObjectModel.ObservableCollection%601>, o <xref:System.ComponentModel.IEditableCollectionView> deve ser capaz de criar um objeto do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-127">For example, if the collection is of type <xref:System.Collections.ObjectModel.ObservableCollection%601>, the <xref:System.ComponentModel.IEditableCollectionView> must be able to create an object of type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-128">O exemplo a seguir verifica se um item pode ser adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-128">The following example checks whether an item can be added to the collection.</span></span>  <span data-ttu-id="2f0f1-129">Se <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> é `false`, o exemplo informa ao usuário que um item não pode ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-129">If <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> is `false`, the example tells the user that an item cannot be added.</span></span>  <span data-ttu-id="2f0f1-130">Caso contrário, ele mostra um formulário que solicita ao usuário para adicionar um novo item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-130">Otherwise, it shows a form that prompts the user to add a new item.</span></span> <span data-ttu-id="2f0f1-131">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="2f0f1-131">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-132">Obtém um valor que indica se a exibição de coleção pode descartar as alterações pendentes e restaurar os valores originais de um objeto editado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-132">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value><span data-ttu-id="2f0f1-133"><see langword="true" /> Se a exibição de coleção pode descartar as alterações pendentes e restaurar os valores originais de um objeto editado. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-133"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> é `true` se a exibição dá suporte a noção de "alterações pendentes" no item editado no momento.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-134"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true` if the view supports the notion of "pending changes" on the currently edited item.</span></span>   <span data-ttu-id="2f0f1-135">Por exemplo, uma exibição de coleção pode retornar `true` se o item editado implementa <xref:System.ComponentModel.IEditableObject>, ou se a exibição tem informações sobre o estado do item que pode ser usado para reverter as alterações de volta.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-135">For example, a collection view might return `true` if the edited item implements <xref:System.ComponentModel.IEditableObject>, or if the view has information about the item's state that it can use to roll back changes.</span></span> <span data-ttu-id="2f0f1-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> é `false` se o modo de exibição não é possível reverter as alterações em um objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-136"><xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `false` if the view cannot revert changes on an object.</span></span>  <span data-ttu-id="2f0f1-137">Nesse caso, chamar <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> para fazer com que o modo de exibição sair do estado de edição e fornecer a lógica para reverter as alterações no objeto que foi editado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-137">In that case, call <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-138">O exemplo a seguir obtém <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> para verificar se os valores originais do item editado podem ser restaurados antes de chamar <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-138">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="2f0f1-139">Se os valores não forem restaurados, você deve fornecer a lógica adicional para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-139">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="2f0f1-140">Se eles podem ser, os valores serão restaurados quando o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-140">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>   <span data-ttu-id="2f0f1-141">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-141">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0f1-142">Termina a transação de edição e, se possível, restaura o valor original para o item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-142">Ends the edit transaction and, if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> define <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> para `null` e faz com que a exibição de coleção sair do estado de edição.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-143"><xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> sets <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span>  <span data-ttu-id="2f0f1-144">Se <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> está `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> também restaura os valores originais do objeto editado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-144">If <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> is `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-145">O exemplo a seguir obtém <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> para verificar se os valores originais do item editado podem ser restaurados antes de chamar <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-145">The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  <span data-ttu-id="2f0f1-146">Se os valores não forem restaurados, você deve fornecer a lógica adicional para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-146">If the values cannot be restored, you must supply additional logic to do so.</span></span>  <span data-ttu-id="2f0f1-147">Se eles podem ser, os valores serão restaurados quando o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-147">If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span> <span data-ttu-id="2f0f1-148">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-148">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0f1-149">Termina a transação de adição e descarta o novo item pendente.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-149">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0f1-150">O exemplo a seguir exibe um formulário que solicita ao usuário para adicionar um novo item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-150">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="2f0f1-151">Se o usuário envia o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> para adicionar o item à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-151">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="2f0f1-152">Se o usuário cancelar o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para descartar o item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-152">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="2f0f1-153">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-153">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-154">Obtém um valor que indica se um item pode ser removido da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-154">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value><span data-ttu-id="2f0f1-155"><see langword="true" /> Se um item pode ser removido da coleção; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-155"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> é `false` se a coleção subjacente é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-156"><xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> is `false` if the underlying collection is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-157">A exemplo a seguir chama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> para verificar se um item pode ser removido da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-157">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="2f0f1-158">Se um item pode ser removido, o exemplo solicita que o usuário confirme a ação e chama <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> se o usuário clicar **Sim**.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-158">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="2f0f1-159">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-159">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0f1-160">Termina a transação de edição e salva as alterações pendentes.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-160">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0f1-161">O exemplo a seguir cria um formulário que solicita ao usuário para editar um item existente.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-161">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="2f0f1-162">Se o usuário envia o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> para salvar as alterações à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-162">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> to save the changes to the collection.</span></span>  <span data-ttu-id="2f0f1-163">Se o usuário cancelar o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> para descartar as alterações.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-163">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes.</span></span> <span data-ttu-id="2f0f1-164">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-164">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0f1-165">Termina a transação de adição e salva o novo item pendente.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-165">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-166">Qualquer filtragem, classificação ou agrupamento que é aplicada para o <xref:System.Windows.Data.CollectionView> é aplicado ao novo item quando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-166">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.CollectionView> is applied to the new item when <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-167">O exemplo a seguir exibe um formulário que solicita ao usuário para adicionar um novo item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-167">The following example displays a form that prompts the user to add a new item.</span></span>  <span data-ttu-id="2f0f1-168">Se o usuário envia o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> para adicionar o item à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-168">If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.</span></span>  <span data-ttu-id="2f0f1-169">Se o usuário cancelar o formulário, o exemplo chama <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> para descartar o item.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-169">If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item.</span></span> <span data-ttu-id="2f0f1-170">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-170">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-171">Obtém o item que está sendo adicionado durante a transação de adição atual.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-171">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="2f0f1-172">O item que está sendo adicionado se <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> está <see langword="true" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-172">The item that is being added if <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-173">Obtém o item na coleção que está sendo editado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-173">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="2f0f1-174">O item na coleção que está sendo editado se <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> está <see langword="true" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-174">The item in the collection that is being edited if <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f0f1-175">O item a ser editado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-175">The item to edit.</span></span></param>
        <summary><span data-ttu-id="2f0f1-176">Inicia uma transação de edição do item especificado.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-176">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0f1-177">O exemplo a seguir cria um formulário que solicita ao usuário para editar um item existente.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-177">The following example creates a form that prompts the user to edit an existing item.</span></span>  <span data-ttu-id="2f0f1-178">Se o usuário envia o formulário, as alterações serão confirmadas à coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-178">If the user submits the form, the changes are committed to the collection.</span></span>  <span data-ttu-id="2f0f1-179">Se o usuário cancelar o formulário, as alterações serão descartadas.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-179">If the user cancels the form, the changes are discarded.</span></span> <span data-ttu-id="2f0f1-180">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span><span class="sxs-lookup"><span data-stu-id="2f0f1-180">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) .</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-181">Obtém um valor que indica se uma transação de adição está em andamento.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-181">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="2f0f1-182"><see langword="true" /> Se uma transação de adição está em andamento. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-182"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-183">Iniciar uma transação de adição, chamando <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> e encerrar a transação de adição chamando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-183">You begin an add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> and end the add transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-184">Obtém um valor que indica se uma transação de edição está em andamento.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-184">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value><span data-ttu-id="2f0f1-185"><see langword="true" /> Se uma transação de edição está em andamento. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-185"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-186">Iniciar uma transação de edição chamando <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> e encerrar a transação chamando <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> ou <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-186">You begin an edit transaction by calling <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> and end the transaction by calling <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> or <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0f1-187">Obtém ou define a posição do novo espaço reservado de item na exibição da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-187">Gets or sets the position of the new item placeholder in the collection view.</span></span></summary>
        <value><span data-ttu-id="2f0f1-188">Um dos valores de enumeração que especifica a posição do espaço reservado novo item na exibição de coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-188">One of the enumeration values that specifies the position of the new item placeholder in the collection view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f0f1-189">O item a ser removido.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-189">The item to remove.</span></span></param>
        <summary><span data-ttu-id="2f0f1-190">Remove o item especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-190">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-191">Se `item` não está na coleção, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> não faz nada.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-191">If `item` is not in the collection, <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0f1-192">A exemplo a seguir chama <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> para verificar se um item pode ser removido da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-192">The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.</span></span>  <span data-ttu-id="2f0f1-193">Se um item pode ser removido, o exemplo solicita que o usuário confirme a ação e chama <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> se o usuário clicar **Sim**.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-193">If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**.</span></span> <span data-ttu-id="2f0f1-194">Para o exemplo completo, consulte [alteração de uma coleção usando o exemplo de IEditableCollectionView](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span><span class="sxs-lookup"><span data-stu-id="2f0f1-194">For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections).</span></span>  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f0f1-195">A posição do item a ser removido.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-195">The position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="2f0f1-196">Remove o item na posição especificada da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-196">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0f1-197">`index` é em relação à exibição de coleção, não da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-197">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="2f0f1-198">Por exemplo, se a coleção tiver 10 itens e o modo de exibição tem um <xref:System.ComponentModel.ICollectionView.Filter%2A> para que sejam exibidos 7 itens, os valores válidos de `index` são de 0 a 6.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-198">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f0f1-199"><paramref name="index" /> é menor que 0 ou maior que o número de itens na exibição de coleção.</span><span class="sxs-lookup"><span data-stu-id="2f0f1-199"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>