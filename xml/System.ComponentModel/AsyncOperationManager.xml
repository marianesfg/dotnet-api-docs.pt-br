<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="438270d4ca0a0cdd761d6e47ccd0da077ac5cb3c" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52232364" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="34da5-101">Fornece gerenciamento de simultaneidade para classes que oferecem suporte a chamadas de método assíncrono.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34da5-101">Provides concurrency management for classes that support asynchronous method calls.</span>
      </span>
      <span data-ttu-id="34da5-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34da5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34da5-103">Se sua classe precisa fornecer comportamento assíncrono de acordo com o [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), você encontrará uma série de problemas de gerenciamento de simultaneidade.</span><span class="sxs-lookup"><span data-stu-id="34da5-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="34da5-104">Entre eles é o requisito para garantir que os manipuladores de eventos são chamados em um thread ou contexto apropriado para o modelo de aplicativo (por exemplo, aplicativos de Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] aplicativos, aplicativos de console e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="34da5-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="34da5-105">O <xref:System.ComponentModel.AsyncOperationManager> fornece uma maneira conveniente de criar uma classe que seja executado adequadamente em todos os modelos de aplicativo com suporte a [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="34da5-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="34da5-106">O <xref:System.ComponentModel.AsyncOperationManager> classe tem um método, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, que retorna um <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que pode ser usado para acompanhar a duração de uma tarefa assíncrona específica.</span><span class="sxs-lookup"><span data-stu-id="34da5-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="34da5-107">O <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> para uma tarefa pode ser usado para os clientes de alerta quando uma tarefa é concluída.</span><span class="sxs-lookup"><span data-stu-id="34da5-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="34da5-108">Ele também pode ser usado para lançar atualizações de progresso e resultados incrementais sem encerrar a operação.</span><span class="sxs-lookup"><span data-stu-id="34da5-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="34da5-109">Para obter mais informações sobre como implementar classes assíncronas, consulte [Implementando o padrão assíncrono baseado em evento](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="34da5-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34da5-110">O exemplo de código a seguir demonstra como usar o <xref:System.ComponentModel.AsyncOperationManager> classe para criar uma classe que dá suporte a operações assíncronas para qualquer modelo de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="34da5-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="34da5-111">Ele mostra como implementar uma classe que testa um número para determinar se ele é primo.</span><span class="sxs-lookup"><span data-stu-id="34da5-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="34da5-112">Esse cálculo pode ser demorado, portanto, isso é feito em um thread separado.</span><span class="sxs-lookup"><span data-stu-id="34da5-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="34da5-113">Relatórios de andamento, resultados incrementais e notificações de conclusão são manipuladas pelo <xref:System.ComponentModel.AsyncOperation> classe, que garante que os manipuladores de eventos do cliente sejam chamados no contexto ou thread adequado.</span><span class="sxs-lookup"><span data-stu-id="34da5-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="34da5-114">Para obter uma listagem de código completo, consulte [como: implementar um componente compatível com o padrão assíncrono baseado em evento](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="34da5-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="34da5-115">Para obter uma listagem de código completo de um formulário cliente, consulte [como: implementar um cliente do padrão assíncrono baseado em evento](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="34da5-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa">
      <span data-ttu-id="34da5-116">Implementando o padrão assíncrono baseado em evento</span>
      <span class="sxs-lookup">
        <span data-stu-id="34da5-116">Implementing the Event-based Asynchronous Pattern</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
      <span data-ttu-id="34da5-117">Práticas recomendadas de threading gerenciado</span>
      <span class="sxs-lookup">
        <span data-stu-id="34da5-117">Managed Threading Best Practices</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState">
          <span data-ttu-id="34da5-118">Um objeto usado para associar uma parte do estado do cliente, como uma ID de tarefa, com uma operação assíncrona específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-118">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34da5-119">Retorna um <see cref="T:System.ComponentModel.AsyncOperation" /> para acompanhar a duração de uma operação assíncrona específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-119">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34da5-120">Um <see cref="T:System.ComponentModel.AsyncOperation" /> que pode ser usado para acompanhar a duração de uma invocação de método assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-120">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34da5-121">O <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> método retorna um <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que você pode usar para acompanhar a duração de uma operação assíncrona específica e para alertar o modelo de aplicativo quando a operação for concluída.</span><span class="sxs-lookup"><span data-stu-id="34da5-121">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="34da5-122">Você também pode usá-lo para lançar atualizações de progresso e resultados incrementais sem encerrar a operação.</span><span class="sxs-lookup"><span data-stu-id="34da5-122">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="34da5-123">O <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> corretamente realizará marshaling essas chamadas para o contexto para o modelo de aplicativo ou thread apropriado.</span><span class="sxs-lookup"><span data-stu-id="34da5-123">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="34da5-124">Se você implementar uma classe que suporta o padrão assíncrono baseado em evento, sua classe deve chamar <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> sempre que seu *MethodName* `Async` método é chamado.</span><span class="sxs-lookup"><span data-stu-id="34da5-124">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="34da5-125">O aplicativo cliente que faz chamadas para o método pode usar o `userSuppliedState` parâmetro para identificar exclusivamente cada invocação, de modo a distinguir os eventos gerados durante a execução da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="34da5-125">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="34da5-126">Código do cliente deve fornecer um valor exclusivo para o `userSuppliedState` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="34da5-126">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="34da5-127">IDs de tarefa não exclusivos pode causar sua implementação relatar o andamento e outros eventos incorretamente.</span><span class="sxs-lookup"><span data-stu-id="34da5-127">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="34da5-128">Seu código deve verificar se há uma ID de tarefa não exclusivos e lançar um <xref:System.ArgumentException?displayProperty=nameWithType> caso uma seja detectada.</span><span class="sxs-lookup"><span data-stu-id="34da5-128">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="34da5-129">Seu código deve controlar cada <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> retornado por <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> e usar o objeto na operação assíncrona correspondente subjacente para postar atualizações e encerrar a operação.</span><span class="sxs-lookup"><span data-stu-id="34da5-129">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="34da5-130">Esse controle pode ser tão simple quanto passar o <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> como um parâmetro entre delegados.</span><span class="sxs-lookup"><span data-stu-id="34da5-130">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="34da5-131">Em designs mais sofisticados, sua classe pode manter uma coleção de <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objetos, adicionando objetos quando as tarefas são iniciadas e removê-los quando as tarefas são concluídas ou canceladas.</span><span class="sxs-lookup"><span data-stu-id="34da5-131">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="34da5-132">Essa abordagem permite que você procure exclusivo `userSuppliedState` parâmetro valores e é o método que você deve usar ao trabalhar com classes que oferecem suporte a várias invocações simultâneas.</span><span class="sxs-lookup"><span data-stu-id="34da5-132">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="34da5-133">Para obter mais informações sobre como implementar classes assíncronas, consulte [Implementando o padrão assíncrono baseado em evento](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="34da5-133">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34da5-134">O exemplo de código a seguir demonstra como usar o <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> método para criar um <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> para acompanhar a duração de operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="34da5-134">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="34da5-135">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.ComponentModel.AsyncOperationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="34da5-135">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa">
          <span data-ttu-id="34da5-136">Implementando o padrão assíncrono baseado em evento</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-136">Implementing the Event-based Asynchronous Pattern</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557">
          <span data-ttu-id="34da5-137">Práticas recomendadas de threading gerenciado</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-137">Managed Threading Best Practices</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34da5-138">Obtém ou define o contexto de sincronização para a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-138">Gets or sets the synchronization context for the asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34da5-139">O contexto de sincronização para a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-139">The synchronization context for the asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34da5-140">A implementação padrão é a implementação de thread livre.</span><span class="sxs-lookup"><span data-stu-id="34da5-140">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="34da5-141">Um thread deve definir a <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> propriedade para `null` para liberar a fábrica de thread livre quando estiver pronto, caso contrário, sua fábrica nunca será descartada.</span><span class="sxs-lookup"><span data-stu-id="34da5-141">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="34da5-142">Para definir o contexto de sincronização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-142">for setting the synchronization context.</span>
          </span>
          <span data-ttu-id="34da5-143">Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="34da5-144">Estado associado:</span>
          <span class="sxs-lookup">
            <span data-stu-id="34da5-144">Associated state:</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>