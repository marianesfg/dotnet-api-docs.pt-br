<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a88fe9321bd14a09edfac94c7a3c7e606eb7d19" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58725473" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="1a56b-101">A fonte do evento.</span><span class="sxs-lookup"><span data-stu-id="1a56b-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="1a56b-102">Um <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="1a56b-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="1a56b-103">Representa o método que manipulará o evento *MethodName*<see langword="Completed" /> de uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="1a56b-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a56b-104">Quando você cria um <xref:System.ComponentModel.AsyncCompletedEventHandler> delegado, você identificar o método que manipulará o evento.</span><span class="sxs-lookup"><span data-stu-id="1a56b-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1a56b-105">Para associar o evento com o manipulador de eventos, adicione uma instância do delegado ao evento.</span><span class="sxs-lookup"><span data-stu-id="1a56b-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1a56b-106">O método de manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o delegado.</span><span class="sxs-lookup"><span data-stu-id="1a56b-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1a56b-107">Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1a56b-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1a56b-108">Para um método assíncrono chamado *MethodName*, no seu componente, você terá um correspondente *MethodName* `Completed` eventos e um opcional *MethodName* `CompletedEventArgs` classe.</span><span class="sxs-lookup"><span data-stu-id="1a56b-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="1a56b-109">Para um componente que dá suporte a várias invocações simultâneas de seus métodos assíncronos, o cliente pode fornecer um token exclusivo ou ID da tarefa, para distinguir qual tarefa assíncrona está gerando eventos específicos.</span><span class="sxs-lookup"><span data-stu-id="1a56b-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="1a56b-110">O cliente <xref:System.ComponentModel.AsyncCompletedEventHandler> pode ler o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> propriedade para determinar qual tarefa relatar a conclusão.</span><span class="sxs-lookup"><span data-stu-id="1a56b-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="1a56b-111">Sua implementação deve usar o <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> para criar um <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que associa a tarefa do cliente com IDs de tarefas assíncronas pendentes.</span><span class="sxs-lookup"><span data-stu-id="1a56b-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a56b-112">Para obter um exemplo de código a <xref:System.ComponentModel.AsyncCompletedEventHandler> delegado, consulte o exemplo a <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="1a56b-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="1a56b-113">Padrão assíncrono para componentes</span><span class="sxs-lookup"><span data-stu-id="1a56b-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>