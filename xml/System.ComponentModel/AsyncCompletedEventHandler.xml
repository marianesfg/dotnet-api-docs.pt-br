<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="ca437-101">A fonte do evento.</span><span class="sxs-lookup"><span data-stu-id="ca437-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="ca437-102">Um <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="ca437-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="ca437-103">Representa o método que manipulará o evento *MethodName*<see langword="Completed" /> de uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="ca437-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca437-104">Quando você cria um <xref:System.ComponentModel.AsyncCompletedEventHandler> delegado, você identificar o método que manipulará o evento.</span><span class="sxs-lookup"><span data-stu-id="ca437-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="ca437-105">Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento.</span><span class="sxs-lookup"><span data-stu-id="ca437-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="ca437-106">O método de manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o delegado.</span><span class="sxs-lookup"><span data-stu-id="ca437-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="ca437-107">Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ca437-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ca437-108">Para um método assíncrono, chamado *MethodName*, no seu componente, você terá um correspondente *MethodName* `Completed` evento e um opcional *MethodName* `CompletedEventArgs` classe.</span><span class="sxs-lookup"><span data-stu-id="ca437-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="ca437-109">Para um componente que oferece suporte a várias chamadas simultâneas de seus métodos assíncronos, o cliente pode fornecer um token exclusivo ou ID da tarefa, para distinguir qual tarefa assíncrona está gerando eventos específicos.</span><span class="sxs-lookup"><span data-stu-id="ca437-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="ca437-110">O cliente <xref:System.ComponentModel.AsyncCompletedEventHandler> pode ler o <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> propriedade para determinar qual tarefa está relatando a conclusão.</span><span class="sxs-lookup"><span data-stu-id="ca437-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="ca437-111">Sua implementação deve usar o <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> para criar um <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que associa a tarefa do cliente com IDs de tarefas assíncronas pendentes.</span><span class="sxs-lookup"><span data-stu-id="ca437-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca437-112">Para obter um exemplo de código a <xref:System.ComponentModel.AsyncCompletedEventHandler> delegar, consulte o exemplo de <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="ca437-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>