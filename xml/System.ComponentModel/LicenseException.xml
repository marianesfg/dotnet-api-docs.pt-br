<Type Name="LicenseException" FullName="System.ComponentModel.LicenseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e17db79ab1a3f82c5c245927abf11f77f5494cda" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377980" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicenseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LicenseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseException" />
  <TypeSignature Language="VB.NET" Value="Public Class LicenseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicenseException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e87c-101">Representa a exceção lançada quando um componente não pode receber uma licença.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e87c-101">Represents the exception thrown when a component cannot be granted a license.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e87c-102">O <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType> método lança <xref:System.ComponentModel.LicenseException> quando um componente não é possível obter uma licença válida.</span><span class="sxs-lookup"><span data-stu-id="7e87c-102">The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=nameWithType> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license.</span></span> <span data-ttu-id="7e87c-103">Isso ocorre quando um componente ou não está licenciado, ou é licenciado, mas não é possível conceder uma licença válida.</span><span class="sxs-lookup"><span data-stu-id="7e87c-103">This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.</span></span>  
  
 <span data-ttu-id="7e87c-104">Para obter mais informações sobre licenciamento, consulte [como: controles e componentes de licença](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span><span class="sxs-lookup"><span data-stu-id="7e87c-104">For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e87c-105">O exemplo de código a seguir mostra como capturar uma <xref:System.ComponentModel.LicenseException> e interpretar seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="7e87c-105">The following code example shows how to catch a <xref:System.ComponentModel.LicenseException> and interpret its content.</span></span> <span data-ttu-id="7e87c-106">No exemplo, o aplicativo chama o <xref:System.ComponentModel.LicenseManager.Validate%2A> método para um <xref:System.Windows.Forms.Form?displayProperty=nameWithType> que não está licenciado.</span><span class="sxs-lookup"><span data-stu-id="7e87c-106">In the sample, the application calls the <xref:System.ComponentModel.LicenseManager.Validate%2A> method for a <xref:System.Windows.Forms.Form?displayProperty=nameWithType> that is not licensed.</span></span> <span data-ttu-id="7e87c-107">Após a captura a exceção, o exemplo de busca a mensagem de erro respectivos, o tipo de componente que não recebeu uma licença, o rastreamento de pilha e a origem da exceção.</span><span class="sxs-lookup"><span data-stu-id="7e87c-107">Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.</span></span>  
  
 <span data-ttu-id="7e87c-108">Este exemplo requer que você especificou o <xref:System.ComponentModel.LicenseProvider> marcando o <xref:System.Windows.Forms.Form?displayProperty=nameWithType> com um <xref:System.ComponentModel.LicenseProviderAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="7e87c-108">This example requires that you have specified the <xref:System.ComponentModel.LicenseProvider> by marking the <xref:System.Windows.Forms.Form?displayProperty=nameWithType> with a <xref:System.ComponentModel.LicenseProviderAttribute> attribute.</span></span> <span data-ttu-id="7e87c-109">Para obter mais informações sobre como fazer isso, consulte o <xref:System.ComponentModel.LicenseManager> classe.</span><span class="sxs-lookup"><span data-stu-id="7e87c-109">For more information on how to do this, see the <xref:System.ComponentModel.LicenseManager> class.</span></span>  
  
 [!code-cpp[LicenseException#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LicenseException/CPP/licenseex.cpp#1)]
 [!code-csharp[LicenseException#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LicenseException/CS/licenseex.cs#1)]
 [!code-vb[LicenseException#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LicenseException/VB/licenseex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e87c-110">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-110">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e87c-111">Um <see cref="T:System.Type" /> que representa o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-111">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-112">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" /> para o tipo de componente ao qual foi negada uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-112">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type of component that was denied a license.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LicenseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="7e87c-113">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado para desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="7e87c-114">O destino a ser usado para desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-114">The destination to be used for deserialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-115">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" /> com o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e o <see cref="T:System.Runtime.Serialization.StreamingContext" /> fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-115">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class with the given <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e87c-116">Um <see cref="T:System.Type" /> que representa o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-116">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="7e87c-117">A instância do componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-117">The instance of the component that was not granted a license.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-118">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" /> para o tipo e a instância do componente que teve uma licença negada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-118">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e87c-119">Um <see cref="T:System.Type" /> que representa o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-119">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="7e87c-120">A instância do componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-120">The instance of the component that was not granted a license.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="7e87c-121">A mensagem de exceção a ser exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-121">The exception message to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-122">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" /> para o tipo e a instância do componente que teve uma licença negada, juntamente com uma mensagem a ser exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-122">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license, along with a message to display.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseException (Type type, object instance, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, object instance, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicenseException(Type ^ type, System::Object ^ instance, System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e87c-123">Um <see cref="T:System.Type" /> que representa o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-123">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="7e87c-124">A instância do componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-124">The instance of the component that was not granted a license.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="7e87c-125">A mensagem de exceção a ser exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-125">The exception message to display.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="7e87c-126">Um <see cref="T:System.Exception" /> que representa a exceção original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-126">An <see cref="T:System.Exception" /> that represents the original exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-127">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.LicenseException" /> para o tipo e a instância do componente que teve uma licença negada, juntamente com uma mensagem a ser exibida e a exceção original gerada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-127">Initializes a new instance of the <see cref="T:System.ComponentModel.LicenseException" /> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="7e87c-128">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado para desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-128">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="7e87c-129">O destino a ser usado para desserialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-129">The destination to be used for deserialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e87c-130">Define o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com informações sobre a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-130">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e87c-131">
            <paramref name="info" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-131">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LicensedType">
      <MemberSignature Language="C#" Value="public Type LicensedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LicensedType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseException.LicensedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LicensedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ LicensedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e87c-132">Obtém o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-132">Gets the type of the component that was not granted a license.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e87c-133">Um <see cref="T:System.Type" /> que representa o tipo de componente que não recebeu uma licença.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e87c-133">A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>