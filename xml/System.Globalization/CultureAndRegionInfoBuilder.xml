<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b83703024424be0b7fdda926527cec730b7ee108" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39731800" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <TypeSignature Language="F#" Value="type CultureAndRegionInfoBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define uma cultura personalizada nova ou baseada em outra cultura e país/região. A cultura personalizada pode ser instalada em um computador e, em seguida, usada por qualquer aplicativo que esteja em execução nesse computador. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureInfo> classe contém informações específicas de cultura, como o idioma associado subidioma, país/região, calendário e convenções culturais. Essa classe também fornece instâncias específicas da cultura do <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, e <xref:System.Globalization.TextInfo> classes, que são necessárias para operações específicas de cultura, como capitalização, formatação e análise de datas e números, e Comparando cadeias de caracteres.  
  
 Por padrão, o .NET Framework suporta <xref:System.Globalization.CultureInfo> objetos que representam um conjunto predefinido de culturas. Para obter uma lista dessas culturas, consulte o [suporte ao idioma nacional (NLS) API de referência](http://go.microsoft.com/fwlink/?LinkId=200048) no Go Global Developer Center. O <xref:System.Globalization.CultureAndRegionInfoBuilder> classe permite que você crie uma cultura personalizada que é completamente novo ou que substitui uma cultura predefinidos.  Quando uma cultura personalizada está instalada e registrada em um determinado computador, ele se torna difíceis de diferenciar de predefinidos <xref:System.Globalization.CultureInfo> objetos e pode ser instanciado e usado apenas como esses objetos.  
  
> [!IMPORTANT]
>  Observe que o <xref:System.Globalization.CultureAndRegionInfoBuilder> classe é encontrada em um assembly chamado sysglobl.dll. Compilar com êxito o código que usa esse tipo requer que você adicione uma referência ao sysglobl.dll.  
  
 Uma cultura personalizada pode ser registrada em um computador apenas por um usuário que tenha direitos administrativos no computador em questão. Consequentemente, aplicativos normalmente não criar e instalar culturas personalizadas. Em vez disso, você pode usar o <xref:System.Globalization.CultureAndRegionInfoBuilder> classe para criar uma ferramenta de finalidade especial que um administrador pode usar para criar, instalar e registrar uma cultura personalizada. Depois que a cultura personalizada é registrada em um computador, você pode usar o <xref:System.Globalization.CultureInfo> classe em seu aplicativo para criar instâncias da cultura personalizada, assim como faria para uma cultura predefinida.  
  
 Se você analisar cadeias de caracteres de data e hora geradas para uma cultura personalizada, você deve usar o <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> ou <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> método em vez da <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> ou <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> método para melhorar a probabilidade de que a operação de análise seja bem-sucedida. Uma cadeia de caracteres de data e hora para uma cultura personalizada pode ser complicado e difícil, portanto analisar. O <xref:System.DateTime.Parse%2A> e <xref:System.DateTime.TryParse%2A> métodos tentam analisar uma cadeia de caracteres com vários padrões de análise implícita, que poderá falhar. O <xref:System.DateTime.TryParseExact%2A> método, por outro lado, requer que o aplicativo para designar explicitamente um ou mais padrões de análise exata que provavelmente tenha êxito.  
  
## <a name="defining-and-creating-a-custom-culture"></a>Definindo e criando uma cultura personalizada  
 Você usa o <xref:System.Globalization.CultureAndRegionInfoBuilder> classe para definir e nomear uma cultura personalizada. A cultura personalizada pode ser uma cultura totalmente nova, uma nova cultura com base em uma cultura existente (ou seja, uma cultura suplementar) ou uma cultura que substitui uma cultura existente do .NET Framework. Em cada caso, as etapas básicas são os mesmos:  
  
1.  Criar uma instância de um <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto chamando seu <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> construtor. Para substituir uma cultura existente, passe o nome da cultura e o <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> valor de enumeração para o construtor. Para criar uma nova cultura ou uma cultura complementar, passar um nome de cultura exclusivo e qualquer um de <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> ou <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> valor de enumeração.  
  
    > [!NOTE]
    >  Se você usar o <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> valor de enumeração para criar uma instância de um <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto, o <xref:System.Globalization.CultureAndRegionInfoBuilder> propriedades do objeto são preenchidas automaticamente com os valores do <xref:System.Globalization.CultureInfo> objeto a ser substituído.  
  
2.  Se você estiver criando uma cultura de nova ou complementar:  
  
    -   Popular o <xref:System.Globalization.CultureAndRegionInfoBuilder> propriedades do objeto chamando o <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> método e passar um <xref:System.Globalization.CultureInfo> objeto cujos valores de propriedade são semelhantes ao seu novo objeto.  
  
    -   Popular o <xref:System.Globalization.CultureAndRegionInfoBuilder> regionais as propriedades de objeto chamando o <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> método e passar um <xref:System.Globalization.RegionInfo> objeto que representa a região de sua cultura personalizada.  
  
3.  Modificar as propriedades do <xref:System.Globalization.CultureAndRegionInfoBuilder> do objeto conforme necessário.  
  
4.  Se você estiver planejando registrar a cultura personalizada em uma rotina separada, chame o <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> método. Isso gera um arquivo XML que você pode carregar e registrar em uma rotina de instalação separado cultura personalizada.  
  
## <a name="registering-a-custom-culture"></a>Registrando uma cultura personalizada  
 Se você estiver desenvolvendo um aplicativo de registro para uma cultura personalizada que é separado do aplicativo que cria a cultura, se você chamar o <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> método para carregar o arquivo XML que contém a definição da cultura personalizada e criar uma instância do <xref:System.Globalization.CultureAndRegionInfoBuilder>objeto. Para lidar com o registro, chame o <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> método. Para que o registro seja bem-sucedida, o aplicativo que registra a cultura personalizada deve estar em execução com privilégios administrativos no sistema de destino; Caso contrário, a chamada para <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> lança um <xref:System.UnauthorizedAccessException> exceção.  
  
> [!WARNING]
>  Dados de cultura podem ser diferente entre sistemas. Se você estiver usando o <xref:System.Globalization.CultureAndRegionInfoBuilder> classe para criar uma cultura personalizada que é uniforme em vários sistemas e você esteja criando sua cultura personalizada por meio de carregamento de dados do existente <xref:System.Globalization.CultureInfo> e <xref:System.Globalization.RegionInfo> objetos e personalizá-la, você deve desenvolver dois utilitários diferentes. O primeiro cria a cultura personalizada e salva-o em um arquivo XML. O segundo usa a <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> método para carregar a cultura personalizada de um arquivo XML e registrá-lo no computador de destino.  
  
 O processo de registro executa as seguintes tarefas:  
  
-   Cria um arquivo de .nlp que contém as informações que são definidas no <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto.  
  
-   Armazena o arquivo de .nlp no diretório do sistema %windir%\Globalization no computador de destino. Isso permite que as configurações da cultura personalizada persistem entre sessões. (O <xref:System.Globalization.CultureAndRegionInfoBuilder> método requer privilégios administrativos, porque o arquivo .nlp é armazenado em um diretório do sistema.)  
  
-   Prepara o .NET Framework para pesquisar o diretório do sistema %windir%\Globalization em vez de um cache interno na próxima vez que há uma solicitação para criar sua nova cultura personalizada.  
  
 Quando uma cultura personalizada for registrada com êxito, ele é indistinguível das culturas que são predefinidas pelo .NET Framework. A cultura personalizada está disponível até que uma chamada para o <xref:System.Globalization.CultureAndRegionInfoBuilder> método Remove o arquivo .nlp do computador local.  
  
## <a name="instantiating-a-custom-culture"></a>Criando uma instância de uma cultura personalizada  
 Você pode criar uma instância da cultura personalizada em uma das seguintes maneiras:  
  
-   Invocando o <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> construtor com o nome da cultura.  
  
-   Chamando o <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> método com o nome da cultura.  
  
-   Chamando o <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> método com o nome da cultura.  
  
 Além disso, a matriz de <xref:System.Globalization.CultureInfo> objetos que é retornado pelo <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> método inclui a cultura personalizada.  
  
   
  
## Examples  
 O exemplo a seguir define uma cultura personalizada ru-US que representa o idioma russo nos Estados Unidos. O exemplo define a cultura personalizada ao carregar as configurações do russo (Rússia) <xref:System.Globalization.CultureInfo> objeto e Estados Unidos <xref:System.Globalization.RegionInfo> do objeto e, em seguida, define um número de <xref:System.Globalization.CultureAndRegionInfoBuilder> propriedades. O exemplo registra a cultura personalizada e, em seguida, instancia e torna a cultura do thread atual.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureAndRegionInfoBuilder : string * System.Globalization.CultureAndRegionModifiers -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="new System.Globalization.CultureAndRegionInfoBuilder (cultureName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">O nome de uma cultura.</param>
        <param name="flags">Um dos valores <see cref="T:System.Globalization.CultureAndRegionModifiers" /> que especifica se o novo objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> é uma cultura neutra, substitui uma cultura e país/região existentes ou é uma nova cultura.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `cultureName` parâmetro especifica o nome do novo <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto.  
  
 O `flags` parâmetro é usado para uma <xref:System.Globalization.CultureAndRegionModifiers> valor que especifica se o novo <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto é uma nova cultura personalizada ou substitui uma cultura neutra existente, a cultura específica ou a localidade do Windows.  
  
 Se o `cultureName` parâmetro especifica uma cultura existente do .NET Framework, personalizado registrado cultura ou cultura gerado a partir de uma localidade do Windows, o <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> construtor preenche automaticamente o novo <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto com a cultura e informações de país/região.  
  
 Popular o novo <xref:System.Globalization.CultureAndRegionInfoBuilder> do objeto com informações de cultura e país/região, invocando o <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> e <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> métodos.  
  
## <a name="custom-culture-names"></a>Nomes de cultura personalizados  
 O formato preferencial dos `cultureName` parâmetro para uma cultura novo e personalizado é "[`prefix`-]`language`[-`region`] [-`suffix`[`…`]]", em que o `language` componente é exigido e o `prefix`, `region`, e `suffix` componentes são opcionais. O comprimento máximo de cada componente é 8 caracteres e o comprimento máximo de toda a `cultureName` parâmetro é 84 caracteres.  
  
 O `prefix` componente é a identificação da Internet Assigned Numbers Authority (IANA). Especifique "i-" ou "eu-" para nomes de cultura registrados com o IANA, ou "x" ou "X-" para nomes de cultura reservados para uso particular. Caso contrário, o prefixo não é necessário. Para obter mais informações, consulte RFC 4646, "Marcas para identificação de idiomas".  
  
 O `language` componente de `cultureName` parâmetro especifica um código de duas letras minúsculas derivado da ISO 639-1, e `region` Especifica um código de duas letras maiusculas derivado da ISO 3166. Por exemplo, en-US representa inglês falado nos Estados Unidos. A ausência do `region` componente significa uma cultura neutra.  
  
 Um `cultureName` que é o mesmo como o nome de uma cultura incluído com o .NET Framework significa uma cultura substituta (substituição). Os valores que podem ser atribuídos às propriedades de uma cultura substituta são limitados. Para obter mais informações sobre essas limitações, consulte as exceções para cada propriedade.  
  
 O aplicativo usa o `suffix` componente para distinguir as culturas semelhantes. Por exemplo, duas empresas, ABC e XYZ, criar e compartilham um novo serviço Web do ASP.NET para promover seus produtos em diferentes mercados em todo o mundo. As páginas da Web para o serviço exibem informações como o logotipo regional e o número de telefone local de cada empresa dependendo da cultura do usuário. O conteúdo específico da cultura para cada página da Web está em arquivos de recurso separados identificado pelo nome da cultura e qualificado pelo nome da empresa.  Por exemplo, arquivos de recursos para as culturas en-US e ja-JP são nomeados en-US-ABC, en-US-XYZ, ja-JP-ABC e ja-JP-XYZ. Os sufixos de "ABC" e "XYZ" habilitam o serviço Web para usar a mesma lógica de aplicativo para exibir informações de diferentes mercados específicos.  
  
 O `suffix` componente pode consistir de subcomponentes, onde cada subcomponente é delimitada por um hífen e o comprimento máximo de cada subcomponente é 8 caracteres. Por exemplo, se "en-US-honda-carros" é o `cultureName` parâmetro, "carros - honda-" é o `suffix` componente.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma cultura personalizada com um prefixo de uso particular e, em seguida, lista um conjunto de suas propriedades. A primeira propriedade lista o nome da cultura.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> é a cadeia de caracteres vazia ("").  
  
- ou - 
 <paramref name="cultureName" /> contém caracteres diferentes de "0" a "9", "a" a "z", "A" a "Z", hífen (-) ou sublinhado (_).  
  
- ou - 
 <paramref name="cultureName" /> contém hifens (-) para delimitar os componentes, mas um ou mais dos componentes <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" /> ou <paramref name="suffix" /> está ausente. Ou seja, dois ou mais hifens são adjacentes.  
  
- ou - 
 <paramref name="cultureName" /> tem mais de 84 caracteres.  
  
- ou - 
 <paramref name="cultureName" /> contém hifens para delimitar os componentes, mas um ou mais dos componentes têm mais de oito caracteres.  
  
- ou - 
 <paramref name="cultureName" /> contém um hífen (-) à direita ou à esquerda ou sublinhado (_).  
  
- ou - 
 <paramref name="cultureName" /> especifica uma cultura de substituição de classificação alternativa em vez de uma cultura do .NET Framework. Por exemplo, <paramref name="culturenName" /> é "de-de_phoneb", uma cultura que classifica as cadeias de caracteres como elas aparecem em uma lista telefônica alemã, em vez de "de-DE", a cultura alemã (Alemanha).  
  
- ou - 
 <paramref name="flags" /> contém uma combinação inválida de valores <see cref="T:System.Globalization.CultureAndRegionModifiers" />.  
  
- ou - 
 <paramref name="flags" /> contém <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> ou <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> e <paramref name="cultureName" /> especifica uma cultura que não foi encontrada.  
  
- ou - 
 <paramref name="flags" /> contém <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> e <paramref name="cultureName" /> especifica uma cultura personalizada criada pelo usuário que não substitui uma cultura fornecida com o .NET Framework.  
  
- ou - 
 <paramref name="flags" /> contém <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> e <paramref name="cultureName" /> especifica uma cultura que não é uma cultura neutra.  
  
- ou - 
 <paramref name="flags" /> contém <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" /> e <paramref name="cultureName" /> especifica uma cultura personalizada criada pelo usuário que substitui uma cultura fornecida com o .NET Framework.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AvailableCalendars : System.Globalization.Calendar[] with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de calendários com suporte por este objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</summary>
        <value>Uma matriz de calendários.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, a matriz atribuída é <see langword="null" /> ou um elemento da matriz atribuída é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Não há suporte para essa propriedade para culturas neutras.  
  
- ou - 
Em uma operação de conjuntos, a matriz atribuída contém <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> ou <see cref="T:System.Globalization.JulianCalendar" />.  
  
- ou - 
Em uma operação de conjuntos, a matriz atribuída contém um calendário personalizado.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Globalization.CompareInfo" /> que define como comparar a cultura de cadeias de caracteres.</summary>
        <value>O <see cref="T:System.Globalization.CompareInfo" /> objeto que define como comparar cadeias de caracteres para a cultura.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> propriedade corresponde à <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> propriedade.  
  
 O <xref:System.Globalization.TextInfo> e <xref:System.Globalization.CompareInfo> objetos que são atribuídos para o <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> e <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> ambas as propriedades dão suporte a comparação de cadeia de caracteres sensíveis à cultura e maiusculas de minúsculas. O <xref:System.Globalization.CompareInfo> objeto também tem métodos que incluem um <xref:System.Globalization.CompareOptions> parâmetro que dá suporte à comparação sensível à cultura, diferencia maiusculas de minúsculas. Essas duas propriedades devem ser atribuídas <xref:System.Globalization.TextInfo> e <xref:System.Globalization.CompareInfo> objetos que representam a mesma localidade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, o valor atribuído é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Essa cultura personalizada é uma substituição de uma cultura incorporada.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsoleFallbackUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cultura de interface do usuário alternativa adequada para aplicativos de console quando a cultura padrão da interface gráfica do usuário é inapropriada.</summary>
        <value>Uma cultura alternativa usada para ler e exibir texto no console.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em uma operação get, o <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> método. Especificar `null` em uma operação definida para indicar que a cultura é definida pela atual <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto é a cultura da interface de usuário alternativas. Se você tentar definir a propriedade a uma cultura que tem uma cultura de interface do usuário de Fallback de Console diferentes, em seguida, ele será atribuído aquela cultura final "folha".  
  
 Idiomas como árabe, hebraico, persa, Urdu e siríaco são baseados em texto bidirecional. Aplicativos do Windows, que empregam uma interface gráfica do usuário, suportam a idiomas bidirecionais. No entanto, aplicativos de console, que empregam a interface do usuário do texto do console do sistema operacional, não fornecem suporte bidirecional. Consequentemente, se um aplicativo de console é localizado para árabe ou hebraico, ele exibe texto ilegível na tela do console.  
  
 A cultura de interface do usuário Especifica os recursos que um aplicativo precisa para dar suporte à entrada do usuário e a saída e, por padrão é o mesmo que a cultura do sistema operacional. Por exemplo, o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propriedade retorna uma cultura árabe para um sistema operacional árabe. O aplicativo deve usar o <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> propriedade para recuperar uma cultura neutra adequada para uma interface de usuário do aplicativo de console.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos em que a cultura especificada não é <see langword="null" />, a propriedade <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> da cultura especificada não é igual à cultura especificada.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromLdml : string -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml xmlFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName">Um nome de arquivo que contém a representação XML de um objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" />.</param>
        <summary>Reconstitui um objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> de um arquivo XML especificado que contém uma representação do objeto.</summary>
        <returns>Um objeto novo equivalente às informações armazenadas no parâmetro <paramref name="xmlFileName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `xmlFileName` parâmetro especifica um nome de arquivo que contém a representação XML de um <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto. O formato do arquivo XML é chamado de localidade dados Markup Language (LDML) versão 1.1. Uma nova <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto é criado e inicializado com os dados no `xmlFileName`. O <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> método executa a operação inversa do <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> método.  
  
 No arquivo LDML, as propriedades de uma cultura são especificadas como elementos filho a `<special>` elemento no `<identity>` seção. Um valor da propriedade normalmente é especificado pelo elemento de `type` atributo. Por exemplo, o seguinte trecho de um arquivo LDML define o pai de uma cultura que a cultura neutra em inglês.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!—content removed -->  
      <msLocale:parentName type="en" />  
      <!—content removed -->  
   </special>  
</identity>  
```  
  
 Para obter mais informações sobre o padrão LDML, consulte [Unicode Technical Standard #35, "localidade dados Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) no site da Unicode Consortium.  
  
   
  
## Examples  
 O exemplo a seguir demonstra a <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> e <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> métodos.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlFileName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="xmlFileName" /> é uma cadeia de caracteres vazia ("") ou o nome de arquivo ou de caminho é inválido.</exception>
        <exception cref="T:System.Xml.XmlException">Os dados em <paramref name="xmlFileName" /> não estão no formato XML válido.  
  
- ou - 
Ocorreu um erro de E/S ao acessar <paramref name="xmlFileName" />.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Os dados em <paramref name="xmlFileName" /> não estão no formato LDML válido.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da cultura em inglês.</summary>
        <value>O nome da cultura em inglês.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.EnglishName%2A> propriedade.  
  
 Por exemplo, o valor de retorno de <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> é de propriedade para a cultura específica inglês falado nos Estados Unidos "Inglês (Estados Unidos)".  
  
 O valor dessa propriedade é o mesmo, independentemente da versão do idioma do .NET Framework.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma cultura personalizada com um prefixo de uso particular e, em seguida, lista um conjunto de suas propriedades. A primeira propriedade lista o nome da cultura.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 0 a 79 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da cultura sendo criada.</summary>
        <value>O nome da cultura atual <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de retorno é o nome da cultura especificada no <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> construtor. Se o nome da cultura especificado é o mesmo que uma cultura existente, exceto para os casos, o valor de retorno é o nome da cultura existente, não o nome da cultura especificada.  
  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.Name%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma cultura personalizada com um prefixo de uso particular e, em seguida, lista um conjunto de suas propriedades. A primeira propriedade lista o nome da cultura.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de cultura no formato e idioma que a cultura está configurada para exibir.</summary>
        <value>O nome da cultura no formato e idioma que a cultura está configurada para exibir.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.NativeName%2A> propriedade.  
  
 O valor dessa propriedade é o mesmo, independentemente da versão do idioma do .NET Framework.  
  
 Nome completo da cultura pode não ser exibidos corretamente se o sistema não está definido para exibir o idioma da cultura corretamente. Por exemplo, se o <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> propriedade é "ja-JP" para japonês (Japão), o <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriedade não é exibida corretamente em um sistema que está definido para inglês apenas. No entanto, multilíngues sistemas operacionais, como o Windows 2000, exibir o <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> propriedade corretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma cultura personalizada com um prefixo de uso particular e, em seguida, lista um conjunto de suas propriedades. A primeira propriedade lista o nome da cultura.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 0 a 79 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor <see cref="T:System.Globalization.CultureTypes" /> que descreve a cultura representada pelo objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>Um dos valores de <see cref="T:System.Globalization.CultureTypes" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome, em inglês, da moeda usada no país/região representado pelo objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>O nome, em inglês, da moeda usada na região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A> propriedade é equivalente de <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos é a cadeia de caracteres vazia ("").</exception>
        <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual é uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome nativo da moeda usada no país/região representado pelo objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>O nome da moeda usada no país/região representado pelo atual <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> object, formatada no idioma associado com o código de país/região ISO 3166 da região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A> propriedade é equivalente de <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos é a cadeia de caracteres vazia ("").</exception>
        <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual é uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um número de identificação exclusivo para uma região geográfica, país, cidade ou local.</summary>
        <value>Um número assinado de 32 bits que identifica exclusivamente uma localização geográfica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.GeoId%2A> propriedade.  
  
 O aplicativo deve usar o <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriedade para fornecer serviços específicos de cultura aos clientes. Por exemplo, o <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> propriedade pode ser usada como uma chave para acessar um registro de banco de dados que contém informações específicas sobre uma região.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual define uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GregorianDateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> que define o formato de datas e horas de acordo com o calendário gregoriano.</summary>
        <value>Um objeto <see cref="T:System.Globalization.DateTimeFormatInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada cultura, incluindo a cultura definida pela atual <xref:System.Globalization.CultureAndRegionInfoBuilder> do objeto, contém um calendário gregoriano localizado que está associado com um <xref:System.Globalization.DateTimeFormatInfo> objeto. O <xref:System.Globalization.DateTimeFormatInfo> objeto define como o seu aplicativo exibe datas e horas. O <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A> valor da propriedade é o <xref:System.Globalization.DateTimeFormatInfo> objeto associado com o calendário gregoriano localizado primeiro retornado pelo <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Uma propriedade do valor em uma operação de conjuntos retornou um valor da propriedade inválido.</exception>
        <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual é uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um nome de cultura formatado de acordo com a norma RFC 4646, “Marcas para identificação de idiomas”.</summary>
        <value>Um nome de cultura formatado de acordo com RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> propriedade obtém ou define um nome de cultura formatado de acordo com RFC 4646, que pode ser diferente do nome de cultura retornado pelo <xref:System.Globalization.CultureInfo.Name%2A> propriedade. Por exemplo, no .NET Framework versão 1.0, o nome de cultura neutra para chinês tradicional era "zh-CHT". Em contraste, o RFC 4646 define esse nome de cultura como "zh-HANT". (Observe que o .NET Framework versão 4, o nome de exibição para "zh-CHT" é "Chinês (tradicional) herdado").  
  
 Um nome de cultura RFC 4646 consiste em vários componentes. Um nome de cultura típico consiste em um identificador de idioma obrigatório, um identificador de script opcional e um identificador de país/região opcional. Por exemplo, um nome de cultura de RFC 4646 válido para a região da Sérvia, cirílico script e Sérvio idioma é "sr-Cyrl-RS".  
  
 Observe que duas ou mais culturas podem ter a mesma marca de idioma da IETF.  
  
 Para obter mais informações, consulte o RFC 4646, "Marcas para a identificação de idiomas," em [solicitação de comentários](http://go.microsoft.com/fwlink/?linkid=45286).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, o valor é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Em uma operação de conjuntos, o comprimento do valor não é de 1 a 84 caracteres.</exception>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos, um componente do nome especificado no valor está vazio ou maior que oito caracteres, não um caractere alfanumérico ou um hífen (-) ou o nome contém um hífen à esquerda ou à direita.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o país ou a região usa o sistema métrico para medidas.</summary>
        <value>
          <see langword="true" /> se o país ou a região usar o sistema métrico para medidas; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Esta operação não é válida para uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o símbolo de moeda de três caracteres ISO 4217 associado ao país/região.</summary>
        <value>O símbolo de moeda de três caracteres ISO 4217 associado ao país/região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> propriedade.  
  
 Uma lista de símbolos de moeda de três caracteres ISO 4217 é fornecida a <xref:System.Globalization.RegionInfo> tópico da classe. Por exemplo, o símbolo de moeda ISO 4217 para o dólar americano é "US".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Isso é uma cultura neutra.</exception>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, o valor é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Em uma operação de conjuntos, o valor não tem de 0 a 8 caracteres de comprimento.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a direção predominante de linhas de texto no sistema de escrita associado ao objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>
          <see langword="true" /> Se a direção predominante de linhas de texto no sistema de escrita atual é da direita para esquerda; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O aplicativo usa o <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> barras de propriedade para determinar a posição relativa dos controles como botões e rolagem em uma interface gráfica do usuário.  
  
 Para acessar a direção predominante de texto em uma cultura personalizada criada a partir do atual <xref:System.Globalization.CultureAndRegionInfoBuilder> do objeto, o aplicativo deve usar o <xref:System.Globalization.TextInfo.IsRightToLeft%2A> propriedade do objeto retornado pelo <xref:System.Globalization.CultureInfo.TextInfo%2A> propriedade da cultura personalizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o identificador de localidade de entrada ativo.</summary>
        <value>Um número com sinal de 32 bits que especifica um identificador de localidade de entrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> propriedade.  
  
 O identificador de localidade de entrada foi denominado o layout do teclado. O identificador pode ser usado para um conversor de fala em texto, um Editor de método de entrada (IME) ou qualquer outro formulário de entrada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Em uma operação de conjuntos, o valor é zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o identificador de cultura para o objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>O identificador de cultura atual <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> propriedade corresponde à <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> propriedade.  
  
 Para culturas substituta o identificador de cultura é mapeado para o identificador de localidade de suporte ao idioma nacional (NLS) correspondente. Culturas personalizadas definidas pelo usuário, o valor dessa propriedade é sempre 0x1000 hexadecimal.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromCultureInfo : System.Globalization.CultureInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">O objeto cujas propriedades serão usadas.</param>
        <summary>Define as propriedades do objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual com as propriedades correspondentes do objeto <see cref="T:System.Globalization.CultureInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromRegionInfo : System.Globalization.RegionInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromRegionInfo region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">O objeto cujas propriedades serão usadas.</param>
        <summary>Define as propriedades do objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual com as propriedades correspondentes do objeto <see cref="T:System.Globalization.RegionInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">As informações de país/região não podem ser definidas porque o objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual especifica uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define o formato culturalmente apropriado de exibição de números, moeda e percentual.</summary>
        <value>Um <see cref="T:System.Globalization.NumberFormatInfo" /> objeto que define o formato culturalmente apropriado de exibição de números, moeda e percentual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.NumberFormat%2A> propriedade.  
  
 Seu aplicativo deve chamar essa propriedade apenas para culturas específicas.  
  
 O <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, e <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> as propriedades de <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> são ignorados. O formulário salvo de uma cultura não salva valores explícitos para essas propriedades. Em vez disso, quando a cultura é carregada, eles sempre padrão <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, e <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, respectivamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Esta operação não é válida para uma cultura neutra.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">A especificação de uma propriedade de número, moeda ou porcentagem para essa cultura contém muitos dígitos ou está fora do intervalo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Globalization.CultureInfo" /> que representa a cultura pai da cultura personalizada atual.</summary>
        <value>O <see cref="T:System.Globalization.CultureInfo" /> objeto que representa a cultura pai da cultura personalizada atual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As culturas têm uma hierarquia. Culturas predefinidas, o pai de uma cultura específica é uma cultura neutra e o pai de uma cultura neutra é o <xref:System.Globalization.CultureInfo.InvariantCulture%2A>. A cultura pai abrange apenas o conjunto de informações que são comuns entre os seus filhos.  
  
 Geralmente, é recomendável que culturas personalizadas estão em conformidade com essa hierarquia. No entanto, por padrão, o <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> de uma cultura personalizada é a <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> da cultura na qual ele se baseia. Se o aplicativo cria uma cultura com <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> "en-US-MyCulture" com base em "en-US", seu pai é "en", porque esse é o <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> de "en-US". Se o aplicativo usa "en-US" como o <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> da nova cultura personalizada, ele deve definir esse valor explicitamente.  
  
 Se os recursos para a cultura específica não estão disponíveis no sistema, os recursos para a cultura neutra são usados. Se os recursos para a cultura neutra não estiverem disponíveis, os recursos incorporados no assembly principal são usados. Para obter mais informações sobre o processo de fallback de recurso, consulte [Empacotando e implantando recursos](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 A lista de culturas na API do Windows é ligeiramente diferente na lista de culturas do .NET Framework. Se a interoperabilidade com o Windows é necessária, por exemplo, por meio da plataforma invocar mecanismo, o aplicativo deve usar uma cultura específica que é definida no .NET Framework. Isso assegura a consistência com a localidade do Windows equivalente, que é identificada com o mesmo <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Em uma operação de conjuntos, o valor de cultura não foi encontrado. Possivelmente, o valor atribuído é uma cultura personalizada não registrada.</exception>
        <exception cref="T:System.ArgumentNullException">Em uma operação de conjuntos, o valor é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Em uma operação de conjuntos que atravessa os ancestrais da cultura atual, a cultura invariável não foi encontrada dentro de 10 gerações de ancestrais.  
  
- ou - 
Em uma operação de conjuntos, uma referência circular foi descoberta: o valor atribuído é um ancestral da cultura personalizada atual.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome completo do país/região em inglês.</summary>
        <value>O nome completo do país/região em inglês.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.EnglishName%2A> propriedade.  
  
 Por exemplo, o valor de retorno <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> para Estados Unidos é "Estados Unidos".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Esta operação não é válida para uma cultura neutra.</exception>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 0 a 79 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do país/região do objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual.</summary>
        <value>O nome do país/região atual <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de retorno é o nome da cultura especificada no <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> construtor. Se o nome da cultura especificado é o mesmo que uma cultura existente, exceto para os casos, o valor de retorno é o nome da cultura existente, não o nome da cultura especificada.  
  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.Name%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Esta operação não é válida para uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome completo do país/região como conhecido pelas pessoas dessa cultura personalizada.</summary>
        <value>O nome local do país/região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.NativeName%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Esta operação não é válida para uma cultura neutra.</exception>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 79 caracteres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="member this.Register : unit -&gt; unit" Usage="cultureAndRegionInfoBuilder.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Persiste o objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual como uma cultura personalizada no computador local e disponibiliza essa cultura para os aplicativos. Requer privilégios administrativos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> método armazena uma cultura personalizada como um arquivo no computador local, no subdiretório do diretório retornado por Win32 globalização [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) função. Esse processo é chamado para registrar a cultura personalizada. Depois que a cultura personalizada for registrada, uma nova cultura personalizada pode ser criada, especificando o nome de cultura em um <xref:System.Globalization.CultureInfo.%23ctor%2A> construtor ou ao chamar o <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> método.  
  
 A cultura personalizada pode ser removida, chamando o <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir demonstra o <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> método.  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A cultura personalizada já está registrada.  
  
- ou - 
O objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual tem uma propriedade que deve ser definida antes de ser possível registrar a cultura. Todas as culturas, neutras ou específicas, devem ter <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> e <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" /> definidos. As culturas específicas também devem ter <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" /> e <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" /> definidos.  
  
Esse método também lançará <see cref="T:System.InvalidOperationException" /> se as seguintes propriedades não forem definidas: 
 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Um valor da propriedade do objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> excede seu valor ou comprimento máximo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O usuário não tem privilégios administrativos.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="cultureAndRegionInfoBuilder.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">O nome de um arquivo para conter a representação XML desta cultura personalizada.</param>
        <summary>Grava uma representação XML do objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual no arquivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> método grava atual <xref:System.Globalization.CultureAndRegionInfoBuilder> objeto para o arquivo especificado pelo `filename` parâmetro em um formato XML chamado localidade dados Markup Language (LDML) versão 1.1. O <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> método executa a operação inversa do <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> método.  
  
 Para obter informações sobre o formato de um arquivo LDML, consulte o <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> método. Para obter informações sobre o padrão LDML, consulte [Unicode Technical Standard #35, "localidade dados Markup Language (LDML)"](http://go.microsoft.com/fwlink/p/?LinkId=252840) no site da Unicode Consortium.  
  
   
  
## Examples  
 O exemplo a seguir demonstra a <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> e <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> métodos.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> é uma cadeia de caracteres vazia ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor de uma propriedade de um objeto <see cref="T:System.Globalization.DateTimeFormatInfo" />, <see cref="T:System.Globalization.TextInfo" /> ou <see cref="T:System.Globalization.NumberFormatInfo" /> contido no objeto <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> atual é inválido.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Globalization.TextInfo" /> que define o sistema de escrita associado a essa cultura personalizada.</summary>
        <value>O objeto que define o sistema de escrita associado a essa cultura personalizada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> propriedade fornece informações de uso de maiusculas específicas da cultura para cadeias de caracteres. Ele corresponde a <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> propriedade.  
  
 O <xref:System.Globalization.TextInfo> e <xref:System.Globalization.CompareInfo> objetos que são atribuídos para o <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> e <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> ambas as propriedades dão suporte a comparação de cadeia de caracteres sensíveis à cultura e maiusculas de minúsculas. O <xref:System.Globalization.CompareInfo> objeto também tem métodos que incluem um <xref:System.Globalization.CompareOptions> parâmetro que dá suporte à comparação sensível à cultura, diferencia maiusculas de minúsculas. Essas duas propriedades devem ser atribuídas <xref:System.Globalization.TextInfo> e <xref:System.Globalization.CompareInfo> objetos que representam a mesma localidade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Esta operação não tem suporte para culturas substituta.</exception>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres em um separador de lista não varia de 0 a 3.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de três letras ISO 639-2 para o idioma dessa cultura personalizada.</summary>
        <value>O código de três letras ISO 639-2 para o idioma atual <see cref="T:System.Globalization.CultureInfo" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> propriedade.  
  
 Por exemplo, a abreviação de três letras para o inglês é "eng".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de três letras definido na ISO 3166 para o país/região.</summary>
        <value>O código de três letras definido na ISO 3166 para o país/região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propriedade.  
  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriedade contém um dos códigos de três letras definidos na ISO 3166 de país/região. Por exemplo, o código de três letras para Estados Unidos é "EUA".  
  
 Caso não é significativo. No entanto, o <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>e o <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> propriedades contêm o código apropriado em letras maiusculas.  
  
 Os nomes de país/região predefinidas são listados no <xref:System.Globalization.RegionInfo> tópico da classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de três letras do idioma, conforme definido na API do Windows.</summary>
        <value>O código de três letras do idioma, conforme definido na API do Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> propriedade.  
  
 Essa propriedade retorna o mesmo valor que o método da API do Windows `GetLocaleInfo` com o valor LOCALE_SABBREVLANGNAME. Por exemplo, o código de três letras para inglês (EUA) conforme definido na API do Windows é "enu".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
        <exception cref="T:System.NotSupportedException">Em uma operação de conjuntos, a cultura personalizada atual é uma cultura substituta.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de três letras atribuído pelo Windows para o país/região representado pela cultura personalizada atual.</summary>
        <value>O código de três letras atribuído pelo Windows para o país/região representado por este <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> propriedade.  
  
 Por exemplo, o código de três letras para Estados Unidos é "EUA".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
        <exception cref="T:System.NotSupportedException">Em uma operação de conjuntos, a cultura personalizada atual é uma cultura substituta ou uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de duas letras ISO 639-1 para o idioma do objeto <see cref="T:System.Globalization.CultureInfo" /> atual.</summary>
        <value>O código de duas letras ISO 639-1 para o idioma atual <see cref="T:System.Globalization.CultureInfo" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> propriedade corresponde à <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> propriedade.  
  
 Por exemplo, a abreviação de duas letras para o inglês é "en".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o código de duas letras definido na ISO 3166 para o país/região.</summary>
        <value>O código de duas letras definido na ISO 3166 para o país/região.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> propriedade corresponde à <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> propriedade.  
  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> valor da propriedade é um dos códigos de duas letras definidos na ISO 3166 de país/região. Por exemplo, o código de duas letras para Estados Unidos é "EUA". Predefinido <xref:System.Globalization.RegionInfo> nomes são listados no <xref:System.Globalization.RegionInfo> tópico da classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O valor em uma operação de definição é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O comprimento do valor em uma operação de conjuntos não varia de 1 a 8 caracteres.</exception>
        <exception cref="T:System.ArgumentException">O valor em uma operação de conjuntos contém um caractere que não está no intervalo de "a" a "z", "A" a "Z" ou "0" a "9".</exception>
        <exception cref="T:System.NotSupportedException">Em uma operação de conjuntos, a cultura personalizada atual é uma cultura neutra.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Globalization.CultureAndRegionInfoBuilder.Unregister cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">O nome da cultura personalizada a ser excluída.</param>
        <summary>Exclui uma cultura personalizada do computador local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> método faz o inverso do <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> método. O <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> método armazena uma cultura personalizada como um arquivo no computador local, no subdiretório do diretório retornado pela API do Win32 de globalização [GetWindowsDirectory](http://go.microsoft.com/fwlink/?LinkId=191561) função. O <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> método exclui o arquivo persistente cultura personalizada do computador. Depois que o arquivo é excluído, as instâncias existentes da cultura personalizada na memória do computador continuam a funcionar, mas não não possível criar novas instâncias da cultura personalizada.  
  
   
  
## Examples  
 O exemplo a seguir demonstra o <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> método.  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="cultureName" /> é uma cultura pai ou cultura de interface do usuário de fallback de console de uma cultura dependente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O usuário não tem privilégios administrativos.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> especifica uma cultura que não foi encontrada.</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>